#
#
#
#
MIB: HH3C-3GMODEM-MIB (file:./hh3c-3gmodem.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWirelessCardInserted .1.3.6.1.4.1.25506.2.98.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cWirelessCardInserted notification is generated when a wireless $*
SDESC
A hh3cWirelessCardInserted notification is generated when a wireless
card is inserted.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cWirelessCardPulledOut .1.3.6.1.4.1.25506.2.98.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cWirelessCardPulledOut notification is generated when a wireless $*
SDESC
A hh3cWirelessCardPulledOut notification is generated when a wireless
card is pulled out.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cUIMPinInvalid .1.3.6.1.4.1.25506.2.98.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cUIMPinInvalid notification is generated when UIM PIN is invalid. $*
SDESC
A hh3cUIMPinInvalid notification is generated when UIM PIN is invalid.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cUIMPinChanged .1.3.6.1.4.1.25506.2.98.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cUIMPinInvalid notification is generated when UIM PIN is changed. $*
SDESC
A hh3cUIMPinInvalid notification is generated when UIM PIN is changed.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
  5: hh3cUIMOldPin
     Syntax="OCTETSTR"
     Descr="The old PIN for this UIM."
  6: hh3cUIMPin
     Syntax="OCTETSTR"
     Descr="The PIN about this UIM.  If this information is unknown to the agent,
        then this object will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cAccessMediaChanged .1.3.6.1.4.1.25506.2.98.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cAccessMediaChanged notification is generated when access media $*
SDESC
A hh3cAccessMediaChanged notification is generated when access media
is changed.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
  5: hh3cAccessMedia
     Syntax="INTEGER"
       1: unknown
       2: air
       3: cable
     Descr="The current access media."
EDESC
#
#
#
EVENT hh3c3GRssiStrongSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3c3GRssiStrongSignalTrap notification is generated when current RSSI $*
SDESC
A hh3c3GRssiStrongSignalTrap notification is generated when current RSSI
exceeds the medium signal threshold.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3c3GRssiMediumSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3c3GRssiMediumSignalTrap notification is generated when the current RSSI $*
SDESC
A hh3c3GRssiMediumSignalTrap notification is generated when the current RSSI
falls or rises to a value between the medium and weak signal thresholds.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3c3GRssiWeakSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3c3GRssiWeakSignalTrap notification is generated when current RSSI $*
SDESC
A hh3c3GRssiWeakSignalTrap notification is generated when current RSSI
falls below the weak signal threshold.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3cSmsTxNotification .1.3.6.1.4.1.25506.2.98.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSmsTxNotification notification is generated $*
SDESC
A hh3cSmsTxNotification notification is generated
when a short message is sent.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cSmsSendStatus
     Syntax="INTEGER"
       1: set2Send
       10: busy
       11: notPresent
       12: notSupport
       13: initializing
       14: noCenterNum
       15: noSim
       16: simNotReady
       17: sendAtFailed
       18: sendDisable
       2: ready2Send
       3: sending
       4: sentAlready
       5: telnumberInvalid
       6: paramInvalid
       7: contentTooLong
       8: codeError
       9: unknown
     Descr="Status of the short message sent."
EDESC
#
#
#
EVENT hh3cSmsRxNotification .1.3.6.1.4.1.25506.2.98.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSmsRxNotification notification is generated $*
SDESC
A hh3cSmsRxNotification notification is generated
when a short message is received.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cSmsSrcNumberBind
     Syntax="OCTETSTR"
     Descr="The source number that is bound in the notifications."
  3: hh3cSmsTimeBind
     Syntax="OCTETSTR"
     Descr="The sending time that is bound in the notifications."
  4: hh3cSmsEncodeBind
     Syntax="INTEGER"
       1: ascii
       2: ucs2
     Descr="The encoded type that is bound in the notifications."
  5: hh3cSmsContentBind
     Syntax="OCTETSTR"
     Descr="The content of short message that is bound in the notifications."
EDESC
#
#
#
#
MIB: HH3C-8021X-EXT2-MIB (file:./hh3c-8021x-ext2.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-8021PAE-MIB (file:./hh3c-8021x-ext.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3csupplicantproxycheck .1.3.6.1.4.1.25506.8.6.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Variables:
  1: hh3cproxycheckVlanId
     Syntax="INTEGER"
     Descr="."
  2: hh3cproxycheckPortName
     Syntax="OCTETSTR"
     Descr="."
  3: hh3cproxycheckMacAddr
     Syntax="OCTETSTR"
     Descr="."
  4: hh3cproxycheckIpaddr
     Syntax="IPADDR"
     Descr="."
  5: hh3cproxycheckUsrName
     Syntax="OCTETSTR"
     Descr="."
EDESC
#
#
#
#
MIB: HH3C-AAA-MIB (file:./hh3c-aaa.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAAAUserSlotMaxNum .1.3.6.1.4.1.25506.2.181.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of online users on the slot $*
SDESC
This trap is generated when the number of online users on the slot
reaches the maximum user threshold.  Subsequent users are recommended
to access the device through another slot.
Variables:
  1: hh3cAAAUserChassis
     Syntax="INTEGER32"
     Descr="Chassis that online users access."
  2: hh3cAAAUserSlot
     Syntax="INTEGER32"
     Descr="Slot that online users access."
  3: hh3cAAAUserSlotMaxNumThreshold
     Syntax="INTEGER32"
     Descr="Threshold about the maximum number of online users on this slot."
EDESC
#
#
#
EVENT hh3cAAAUserSlotMaxNumResume .1.3.6.1.4.1.25506.2.181.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of online users on the slot $*
SDESC
This trap is generated when the number of online users on the slot
falls below 90% of the maximum user threshold.
Variables:
  1: hh3cAAAUserChassis
     Syntax="INTEGER32"
     Descr="Chassis that online users access."
  2: hh3cAAAUserSlot
     Syntax="INTEGER32"
     Descr="Slot that online users access."
  3: hh3cAAAUserSlotMaxNumThreshold
     Syntax="INTEGER32"
     Descr="Threshold about the maximum number of online users on this slot."
EDESC
#
#
#
#
MIB: HH3C-AAA-NASID-MIB (file:./hh3c-aaa-nasid.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-AAL5-MIB (file:./hh3c-aal5.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAal5VccStateChange .1.3.6.1.4.1.25506.2.21.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The status of AAL5 VCC. $*
SDESC
The status of AAL5 VCC.
Variables:
  1: hh3cAal5VccState
     Syntax="INTEGER"
       1: invalid
       2: active
       3: inactive
     Descr="Indicates whether the particular virtual circuit is
        operational. 'Active' indicates the particular virtual
        circuit is operational.  'Inactive' indicates the circuit
        is temporarily disabled.  'Invalid' indicates the circuit
        is deleted"
EDESC
#
#
#
#
MIB: HH3C-ACFP-MIB (file:./hh3c-acfp.mib) converted on Fri Mar 18 21:59:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAcfpCurContextChanged .1.3.6.1.4.1.25506.2.74.1.1.5.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when router or switch changed $*
SDESC
This notification is sent when router or switch changed
hh3cAcfpServerCurContextType.
Variables:
  1: hh3cAcfpServerCurContextType
     Syntax="INTEGER"
       1: no-context
       2: context-VLANID
       3: context-HG
       4: context-FlowID
       5: context-HGPlus
     Descr="In some circumstances, it's necessary that packets go to
        ACFP client with context from ACFP server.  However, the context
        perhaps is different.  hh3cAcfpServerCurContextType is
        used to distinguish this difference, ACFP client may
        process distinctively."
EDESC
#
#
#
EVENT hh3cAcfpClientRegister .1.3.6.1.4.1.25506.2.74.1.1.5.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when the ACFP client is registered. $*
SDESC
This notification is sent when the ACFP client is registered.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpClientUnRegister .1.3.6.1.4.1.25506.2.74.1.1.5.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when the ACFP client is unregistered. $*
SDESC
This notification is sent when the ACFP client is unregistered.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpClientDead .1.3.6.1.4.1.25506.2.74.1.1.5.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when the ACFP client is not responding. $*
SDESC
This notification is sent when the ACFP client is not responding.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpNotSupportedOAPMode .1.3.6.1.4.1.25506.2.74.1.1.5.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when router or switch cannot support OAP $*
SDESC
This notification is sent when router or switch cannot support OAP
mode that ACFP client wants to operate on.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
  2: hh3cAcfpClientMode
     Syntax="BITS"
     Descr="ACFP client informs Router or switch which mode it is operating.
        Router or switch checks hh3cAcfpServerInfo to see whether it is
        capable of fulfilling this function.  If not, router or switch
        generates a trap informing ACFP client such OAP mode is not
        supported."
  3: hh3cAcfpServerInfo
     Syntax="BITS"
     Descr="When retrieved, this object returns a set of bits
        indicating the capabilities (or configuration) of the
        switch or router.  The set bit is indication that a
        router or switch can support the action for
        security rule."
EDESC
#
#
#
EVENT hh3cAcfpLifetimeChangeEvent .1.3.6.1.4.1.25506.2.74.1.1.5.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification can be generated for indicating that $*
SDESC
This notification can be generated for indicating that
The lifetime of all member rules of the was
changed by successfully writing to object
hh3cAcfpPolicyLifetime.  Note that this notification
is only sent if the lifetime of a policy was changed by
successfully writing to object hh3cAcfpPolicyLifetime.
Variables:
  1: hh3cAcfpPolicyLifetime
     Syntax="INTEGER32"
     Descr="When retrieved, this object delivers the maximum lifetime (seconds)
        of all the rules of this, i.e., of all the rows in hh3cAcfpRuleTable
        that have the same values of hh3cAcfpRulePolicyIndex and
        hh3cAcfpClientID.  Successfully writing to this object modifies the
        lifetime of all the rules of this.  Successfully writing a value
        of 0 terminates all the rules and implicitly deletes this as soon as
        all member entries are removed from the hh3cAcfpRuleTable. Note that
        after a lifetime expired, all the corresponding entry in the
        hh3cAcfpRuleTable will be removed and this will be deleted
        implicitly.  Writing to this object is processed by the ACFP MIB
        implementation by choosing a lifetime value that is greater than
        or equal to zero and less than or equal to the minimum of the requested
        value and the value specified by object hh3cAcfpServerMaxLifetime:

            0 <= lt_granted <= MINIMUM(lt_requested, lt_maximum)

        whereas:
        lt_granted is the actually granted lifetime by the ACFP MIB
        implementation.
        lt_requested is the requested lifetime of the ACFP client.
        lt_maximum is the value of object hh3cAcfpServerMaxLifetime.
        SNMP set requests to this object may be rejected or the value of
        the object after an accepted set operation may be less than the
        value that was contained in the SNMP set request."
EDESC
#
#
#
EVENT hh3cAcfpRuleCreatedEvent .1.3.6.1.4.1.25506.2.74.1.1.5.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when a new rule is created. $*
SDESC
This notification is sent when a new rule is created.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpRuleDeletedEvent .1.3.6.1.4.1.25506.2.74.1.1.5.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when a rule is deleted. $*
SDESC
This notification is sent when a rule is deleted.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpRuleErrorEvent .1.3.6.1.4.1.25506.2.74.1.1.5.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when rule cannot be applied. $*
SDESC
This notification is sent when rule cannot be applied.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpLifetimeExpireEvent .1.3.6.1.4.1.25506.2.74.1.1.5.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent $*
SDESC
This notification is sent
when the time of the policy existed exceeds its lifetime.
Variables:
  1: hh3cAcfpPolicyLifetime
     Syntax="INTEGER32"
     Descr="When retrieved, this object delivers the maximum lifetime (seconds)
        of all the rules of this, i.e., of all the rows in hh3cAcfpRuleTable
        that have the same values of hh3cAcfpRulePolicyIndex and
        hh3cAcfpClientID.  Successfully writing to this object modifies the
        lifetime of all the rules of this.  Successfully writing a value
        of 0 terminates all the rules and implicitly deletes this as soon as
        all member entries are removed from the hh3cAcfpRuleTable. Note that
        after a lifetime expired, all the corresponding entry in the
        hh3cAcfpRuleTable will be removed and this will be deleted
        implicitly.  Writing to this object is processed by the ACFP MIB
        implementation by choosing a lifetime value that is greater than
        or equal to zero and less than or equal to the minimum of the requested
        value and the value specified by object hh3cAcfpServerMaxLifetime:

            0 <= lt_granted <= MINIMUM(lt_requested, lt_maximum)

        whereas:
        lt_granted is the actually granted lifetime by the ACFP MIB
        implementation.
        lt_requested is the requested lifetime of the ACFP client.
        lt_maximum is the value of object hh3cAcfpServerMaxLifetime.
        SNMP set requests to this object may be rejected or the value of
        the object after an accepted set operation may be less than the
        value that was contained in the SNMP set request."
EDESC
#
#
#
#
MIB: HH3C-ACL-MIB (file:./hh3c-acl.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMACfilterTrap .1.3.6.1.4.1.25506.2.8.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a packet was processed $*
SDESC
This notification is generated when a packet was processed
by MAC address filter, but not every packet will generate one
notification, the same notification only generate once in 30
seconds.

Variables:
  1: hh3cPfilterInterface
     Syntax="OCTETSTR"
     Descr="The interface which policy apply."
  2: hh3cPfilterDirection
     Syntax="OCTETSTR"
     Descr="Inbound or outbound."
  3: hh3cPfilterACLNumber
     Syntax="INTEGER32"
     Descr="ACL number."
  4: hh3cPfilterAction
     Syntax="OCTETSTR"
     Descr="Permit or deny."
  5: hh3cMACfilterSourceMac
     Syntax="OCTETSTR"
     Descr="Source MAC address."
  6: hh3cMACfilterDestinationMac
     Syntax="OCTETSTR"
     Descr="Destination MAC address."
  7: hh3cPfilterPacketNumber
     Syntax="INTEGER32"
     Descr="The number of packets permitted or denied by ACL."
  8: hh3cPfilterReceiveInterface
     Syntax="OCTETSTR"
     Descr="The interface where packet come from."
EDESC
#
#
#
EVENT hh3cAclRuleMatchCount .1.3.6.1.4.1.25506.2.8.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated periodically due to a timer. $*
SDESC
This notification is generated periodically due to a timer.
The interval of the timer is configured in hh3cAclIntervalTable.
The notification details the entries about the packet-filter
object, the matched ACL rule and the number of matching packets.

Variables:
  1: hh3cPfilter2ApplyObjType
     Syntax="INTEGER"
       1: interface
       2: vlan
       3: global
     Descr="The object type of packet filter application.
                interface: Apply an ACL to the interface to filter packets.
                vlan: Apply an ACL to the VLAN to filter packets.
                global: Apply an ACL globally to filter packets.
                "
  2: hh3cPfilter2ApplyObjIndex
     Syntax="INTEGER32"
     Descr="The object ID of packet filter application.
                Interface: interface index, equal to ifIndex
                VLAN: VLAN ID, 1..4094
                Global: 0
                "
  3: hh3cPfilter2ApplyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction of packet filter application."
  4: hh3cPfilter2ApplyAclType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
       3: default
       4: mac
       5: user
     Descr="ACL Type: IPv4, IPv6, default action, MAC, and user.
                Take default action as a special ACL group.
                "
  5: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  6: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  7: hh3cPfilter2AclRuleMatchPackets
     Syntax="COUNTER64"
     Descr="The number of packets matched."
EDESC
#
#
#
EVENT hh3cAclFirstIPv4PktCaptured .1.3.6.1.4.1.25506.2.8.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched IPv4 flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcIP
     Syntax="OCTETSTR"
     Descr="Source IP address of IPv4/IPv6 packet."
  8: hh3cAclPacketDstIP
     Syntax="OCTETSTR"
     Descr="Destination IP address of IPv4/IPv6 packet."
  9: hh3cAclPacketProtocol
     Syntax="INTEGER32"
     Descr="The protocol of IPv4/IPv6 packet.
                icmp(1),
                tcp(6),
                udp(17),
                igmp(2),
                gre(47),
                ospf(89),
                ipinip(4),
                icmp6(58),
                ipv6_ah(51),
                ipv6_esp(50)
                "
 10: hh3cAclPacketDscp
     Syntax="INTEGER32"
     Descr="DSCP of IPv4/IPv6 packet."
 11: hh3cAclPacketIcmpIgmpType
     Syntax="INTEGER32"
     Descr="The type of ICMP or IGMP packet."
 12: hh3cAclPacketIcmpIgmpCode
     Syntax="INTEGER32"
     Descr="The code of ICMP or IGMP packet."
 13: hh3cAclPacketTcpFlags
     Syntax="INTEGER"
       1: tcpack
       2: tcpfin
       255: invalid
       3: tcppsh
       4: tcprst
       5: tcpsyn
       6: tcpurg
     Descr="The flags of TCP packet.
                tcpack(1),
                tcpfin(2),
                tcppsh(3),
                tcprst(4),
                tcpsyn(5),
                tcpurg(6),
                invalid(255)
                "
 14: hh3cAclPacketSrcPort
     Syntax="INTEGER32"
     Descr="Source port of TCP or UDP packet."
 15: hh3cAclPacketDstPort
     Syntax="INTEGER32"
     Descr="Destination port of TCP or UDP packet."
EDESC
#
#
#
EVENT hh3cAclFirstIPv6PktCaptured .1.3.6.1.4.1.25506.2.8.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched IPv6 flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcIP
     Syntax="OCTETSTR"
     Descr="Source IP address of IPv4/IPv6 packet."
  8: hh3cAclPacketDstIP
     Syntax="OCTETSTR"
     Descr="Destination IP address of IPv4/IPv6 packet."
  9: hh3cAclPacketProtocol
     Syntax="INTEGER32"
     Descr="The protocol of IPv4/IPv6 packet.
                icmp(1),
                tcp(6),
                udp(17),
                igmp(2),
                gre(47),
                ospf(89),
                ipinip(4),
                icmp6(58),
                ipv6_ah(51),
                ipv6_esp(50)
                "
 10: hh3cAclPacketDscp
     Syntax="INTEGER32"
     Descr="DSCP of IPv4/IPv6 packet."
 11: hh3cAclPacketFlowLabel
     Syntax="UNSIGNED32"
     Descr="Flow label value of IPv6 packet."
 12: hh3cAclPacketIcmpIgmpType
     Syntax="INTEGER32"
     Descr="The type of ICMP or IGMP packet."
 13: hh3cAclPacketIcmpIgmpCode
     Syntax="INTEGER32"
     Descr="The code of ICMP or IGMP packet."
 14: hh3cAclPacketTcpFlags
     Syntax="INTEGER"
       1: tcpack
       2: tcpfin
       255: invalid
       3: tcppsh
       4: tcprst
       5: tcpsyn
       6: tcpurg
     Descr="The flags of TCP packet.
                tcpack(1),
                tcpfin(2),
                tcppsh(3),
                tcprst(4),
                tcpsyn(5),
                tcpurg(6),
                invalid(255)
                "
 15: hh3cAclPacketSrcPort
     Syntax="INTEGER32"
     Descr="Source port of TCP or UDP packet."
 16: hh3cAclPacketDstPort
     Syntax="INTEGER32"
     Descr="Destination port of TCP or UDP packet."
EDESC
#
#
#
EVENT hh3cAclFirstEthernetPktCaptured .1.3.6.1.4.1.25506.2.8.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched Ethernet flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcMacAddr
     Syntax="OCTETSTR"
     Descr="Source MAC address of Ethernet packet."
  8: hh3cAclPacketDstMacAddr
     Syntax="OCTETSTR"
     Descr="Destination MAC address of Ethernet packet."
  9: hh3cAclPacketMacTypeLen
     Syntax="INTEGER32"
     Descr="The Ethertype or 802.3 length of Ethernet packet."
 10: hh3cAclPacketVlanPCP
     Syntax="INTEGER32"
     Descr="802.1p priority code point of Ethernet packet."
EDESC
#
#
#
EVENT hh3cAclResourceTrap .1.3.6.1.4.1.25506.2.8.7.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of entries on TCAM $*
SDESC
This notification is generated when the number of entries on TCAM
becomes equal to or greater than a preset threshold level
Variables:
  1: hh3cAclResourceTypeName
     Syntax="OCTETSTR"
     Descr="The name of TCAM resources."
  2: hh3cAclResourceUsage
     Syntax="INTEGER32"
     Descr="The current usage of TCAM resources."
  3: hh3cAclResourceUsedEntries
     Syntax="INTEGER32"
     Descr="The used number of entries on TCAM."
  4: hh3cAclResourceTotalEntries
     Syntax="INTEGER32"
     Descr="The total number of entries on TCAM."
  5: hh3cAclMib2ResourceThreshold
     Syntax="INTEGER32"
     Descr="The threshold of TCAM resources.
                 The value 0 indicates that cancelling the TCAM resource notification function."
  6: hh3cAclResourceChassisID
     Syntax="INTEGER32"
     Descr="The chassis number.  On a centralized or distributed device,
                 the value for this node is always zero."
  7: hh3cAclResourceSlotID
     Syntax="INTEGER32"
     Descr="The slot number.  On a centralized device, the value for
                 this node is always zero."
EDESC
#
#
#
#
MIB: HH3C-AFC-MIB (file:./hh3c-afc.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDDosAttackStart .1.3.6.1.4.1.25506.2.85.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a DDos attack on specific IP is detected. $*
SDESC
This trap is sent when a DDos attack on specific IP is detected.
The IP address of the victim is the first object.
The exact type of the attack is the second object.
The policy name which detects the attack is the third object.
The threshold of the attack is the 4th object.
The speed of the attack is the 5th object.
Variables:
  1: hh3cDDosAttackTargetIP
     Syntax="IPADDR"
     Descr="This shows the victim of a DDos attack.  The IP Address is in the list
        of protected IP address."
  2: hh3cDDosAttackType
     Syntax="INTEGER"
       1: land
       1024: otherabnormal
       11: tracert
       12: tcpflag
       13: pingofdeath
       14: teardrop
       15: ipfragment
       18: largeicmp
       19: sourceroute
       2: smurf
       20: routerecord
       24: fragflood
       27: scan
       29: appstreamalarm
       3: fraggle
       30: sessionstreamalarm
       32: tcpabnormal
       33: ipfragabnormal
       34: tftpabnormal
       35: dnsabnormal
       36: httpabnormal
       37: telnetabnormal
       38: ftpabnormal
       39: smtpabnormal
       4: winnuke
       40: pop3abnormal
       41: snmpabnormal
       42: ackabnormal
       43: cc
       5: synflood
       6: icmpflood
       7: udpflood
       8: icmpredirect
       9: icmpunreachable
     Descr="This shows the attack type which the victim is sufferd."
  3: hh3cDDosAttackPolicy
     Syntax="OCTETSTR"
     Descr="This shows the policy name which detects the DDos Attack."
  4: hh3cDDosAttackThreshold
     Syntax="INTEGER32"
     Descr="This shows the policy threshold in the DDos Attack."
  5: hh3cDDosAttackSpeed
     Syntax="INTEGER32"
     Descr="This shows the rate of policy in the DDos Attack."
EDESC
#
#
#
EVENT hh3cDDosAttackEnd .1.3.6.1.4.1.25506.2.85.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a DDos Attack end.  The IP address of the $*
SDESC
This trap is sent when a DDos Attack end.  The IP address of the
victim is the very object.
Variables:
  1: hh3cDDosAttackTargetIP
     Syntax="IPADDR"
     Descr="This shows the victim of a DDos attack.  The IP Address is in the list
        of protected IP address."
EDESC
#
#
#
#
MIB: HH3C-ARP-ENTRY-MIB (file:./hh3c-arp-entry.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ARP-RATELIMIT-MIB (file:./hh3c-arp-ratelimit.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cARPRatelimitOverspeedTrap .1.3.6.1.4.1.25506.2.110.1.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA If the rate of ARP packets delivered to the CPU on a device $*
SDESC
If the rate of ARP packets delivered to the CPU on a device
exceeds the threshold, a trap message is generated and sent
to the remote monitoring device.
Variables:
  1: hh3cARPRatelimitTrapVer
     Syntax="UNSIGNED32"
     Descr="The version of trap information."
  2: hh3cARPRatelimitTrapCount
     Syntax="UNSIGNED32"
     Descr="Number of cells in the trap message.  A trap message may contain
        multiple cells, each of which indicates that the rate information of
        ARP packets exceeds the threshold."
  3: hh3cARPRatelimitTrapMsg
     Syntax="OCTETSTR"
     Descr="This object is the cell section in a trap message sent from a
        monitored device.  This object can contain multiple cells.
        This object is in the format of '<cell1><cell2>...'.  Each cell
        consists of 17 octets in the format of
        '<TrapOrigin><IfIndex><OverSpeedValue><Threshold><Interval>'.

        <TrapOrigin> indicates the source of the trap message and has
        size of 1 octet.  It only supports the following values.
        1 - Global.
        2 - Interface.

        <IfIndex> is the index of the interface where the rate of ARP packet
        exceeds the threshold and has size of 4 octets.  It is 0xFFFFFFFF
        when <TrapOrigin> is 1(Global).

        <OverSpeedValue> indicates the rate that ARP packets are actually
        delivered and has size of 4 octets.

        <Threshold> indicates the threshold that ARP packets can be delivered
        to CPU and has size of 4 octets.

        <Interval> indicates the interval that a trap message is sent out
        and has size of 4 octets."
EDESC
#
#
#
#
MIB: HH3C-ARP-SOURCE-SUPPRESSION-MIB (file:./hh3c-arp-source-suppression.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ATM-DXI-MIB (file:./hh3c-atm-dxi.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BFD-STD-MIB (file:./hh3c-bfd-std.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBfdSessStateChange .1.3.6.1.4.1.25506.2.72.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when a session changes $*
SDESC
A notification sent when a session changes
state, entering state up or entering state down.
The session will enter state up finishing three times handshakes
, and will enter state down when the communication path is out
of work.
When the hh3cBfdSessState's value is state up, the session enters
state up, and the session enters state down when the
hh3cBfdSessState's value is state down.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
EDESC
#
#
#
EVENT hh3cBfdSessAuthFail .1.3.6.1.4.1.25506.2.72.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when receiving a session $*
SDESC
A notification sent when receiving a session
with an authentication fail.
The hh3cBfdIfIndex is an index which represents a unique BFD
interface on this device.

Variables:
  1: hh3cBfdIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an index that represents a
         unique BFD interface on this device."
EDESC
#
#
#
EVENT hh3cBfdSessStateUp .1.3.6.1.4.1.25506.2.72.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when a session changes state to up. $*
SDESC
A notification sent when a session changes state to up.
The session will enter state up finishing three times handshakes.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.
The hh3cBfdSessName is the name of the running BFD session.
The hh3cBfdVpnInstanceName contains a VPN's name under which
the BFD session runs.
The hh3cBfdLocalAddr contains an IP address of the local interface
from which the BFD packets is transmitted.
The hh3cBfdRemoteAddr contains an IP address of the remote interface
from which the BFD packets is transmitted.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
  4: hh3cBfdSessName
     Syntax="OCTETSTR"
     Descr="A name used to uniquely identify BFD sessions."
  5: hh3cBfdVpnInstanceName
     Syntax="OCTETSTR"
     Descr="The human-readable name of this VPN.  This MAY
         be equivalent to the [RFC2685] VPN-ID, but may
         also vary.  If it is set to the VPN ID, it MUST
         be equivalent to the value of mplsL3VpnVrfVpnId.
         It is strongly recommended that all sites supporting
         VRFs that are part of the same VPN use the same
         naming convention for VRFs as well as the same VPN
         ID."
  6: hh3cBfdLocalAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
  7: hh3cBfdRemoteAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
EDESC
#
#
#
EVENT hh3cBfdSessStateDown .1.3.6.1.4.1.25506.2.72.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when a session changes state to down. $*
SDESC
A notification sent when a session changes state to down.
The session will enter state down when the communication path is out
of work.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.
The hh3cBfdSessName is the name of the running BFD session.
The hh3cBfdVpnInstanceName contains a VPN's name under which
the BFD session runs.
The hh3cBfdLocalAddr contains an IP address of the local interface
from which the BFD packets is transmitted.
The hh3cBfdRemoteAddr contains an IP address of the remote interface
from which the BFD packets is transmitted.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
  4: hh3cBfdSessName
     Syntax="OCTETSTR"
     Descr="A name used to uniquely identify BFD sessions."
  5: hh3cBfdVpnInstanceName
     Syntax="OCTETSTR"
     Descr="The human-readable name of this VPN.  This MAY
         be equivalent to the [RFC2685] VPN-ID, but may
         also vary.  If it is set to the VPN ID, it MUST
         be equivalent to the value of mplsL3VpnVrfVpnId.
         It is strongly recommended that all sites supporting
         VRFs that are part of the same VPN use the same
         naming convention for VRFs as well as the same VPN
         ID."
  6: hh3cBfdLocalAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
  7: hh3cBfdRemoteAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
EDESC
#
#
#
EVENT hh3cBfdSessReachLimit .1.3.6.1.4.1.25506.2.72.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification would be sent when the number of active BFD sessions $*
SDESC
A notification would be sent when the number of active BFD sessions
reached this device's upper limit and no more session could be
activated.
The hh3cBfdSessNumberLimit is the active session limit of this device.
Variables:
  1: hh3cBfdSessNumberLimit
     Syntax="UNSIGNED32"
     Descr="This variable is the active session limit of this device."
EDESC
#
#
#
#
MIB: HH3C-BGP4V2-MIB (file:./hh3c-bgp4v2.mib) converted on Fri Mar 18 21:59:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBgp4v2Established .1.3.6.1.4.1.25506.2.183.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cBgp4v2Established event is generated when the BGP4+ $*
SDESC
The hh3cBgp4v2Established event is generated when the BGP4+
FSM enters the ESTABLISHED state.
Variables:
  1: hh3cBgp4v2PeerRemoteAddr
     Syntax="OCTETSTR"
     Descr="The remote IPv6 address of this entry's BGP
        peer."
  2: hh3cBgp4v2PeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
        peer on this connection.  If no error has
        occurred, this field is zero.  Otherwise, the
        first byte of this two byte OCTET STRING
        contains the error code, and the second byte
        contains the subcode."
  3: hh3cBgp4v2PeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: opensent
       5: openconfirm
       6: established
     Descr="The BGP peer connection state."
EDESC
#
#
#
EVENT hh3cBgp4v2BackwardTransition .1.3.6.1.4.1.25506.2.183.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cBgp4v2BackwardTransition event is generated when $*
SDESC
The hh3cBgp4v2BackwardTransition event is generated when
the BGP4+ FSM moves from a higher numbered state to a lower
numbered state.
Due to the nature of the BGP state machine, an
implementation MAY rate limit the generation of this event.
An implementation MAY also generate this notification ONLY
when the state machine moves out of the established state.
An implementation should document its specific behavior.
Variables:
  1: hh3cBgp4v2PeerRemoteAddr
     Syntax="OCTETSTR"
     Descr="The remote IPv6 address of this entry's BGP
        peer."
  2: hh3cBgp4v2PeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
        peer on this connection.  If no error has
        occurred, this field is zero.  Otherwise, the
        first byte of this two byte OCTET STRING
        contains the error code, and the second byte
        contains the subcode."
  3: hh3cBgp4v2PeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: opensent
       5: openconfirm
       6: established
     Descr="The BGP peer connection state."
EDESC
#
#
#
#
MIB: HH3C-BGP-EVPN-MIB (file:./hh3c-bgp-evpn.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BGP-VPN-MIB (file:./hh3c-bgp-vpn.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBgpVpnRpkiSessionRoaExceed .1.3.6.1.4.1.25506.2.202.3.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The RPKI SessionRoaExceed event will be generated when the number of rpki session ROA exceeds. $*
SDESC
The RPKI SessionRoaExceed event will be generated when the number of rpki session ROA exceeds.
Variables:
  1: hh3cBgpVpnRpkiSessionRoaLimitNum
     Syntax="UNSIGNED32"
     Descr="Restriction number of rpki session ROA."
EDESC
#
#
#
EVENT hh3cBgpVpnRpkiSessionRoaExceedClear .1.3.6.1.4.1.25506.2.202.3.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Generate rpki sessionroaedeclear event when the number of rpki session ROAs exceeds clear. $*
SDESC
Generate rpki sessionroaedeclear event when the number of rpki session ROAs exceeds clear.
Variables:
  1: hh3cBgpVpnRpkiSessionRoaLimitNum
     Syntax="UNSIGNED32"
     Descr="Restriction number of rpki session ROA."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteNumThresholdExceed .1.3.6.1.4.1.25506.2.202.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of routes received from the BGP peer exceeds the alarm threshold. $*
SDESC
This notification is generated when the number of routes received from the BGP peer exceeds the alarm threshold.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteNumThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of routes received from the BGP peer decreases below the alarm threshold. $*
SDESC
This notification is generated when the number of routes received from the BGP peer decreases below the alarm threshold.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteExceed .1.3.6.1.4.1.25506.2.202.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when bgp peer session route number exceed. $*
SDESC
This notification is generated when bgp peer session route number exceed.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteExceedClear .1.3.6.1.4.1.25506.2.202.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when bgp peer session route number exceed clear. $*
SDESC
This notification is generated when bgp peer session route number exceed clear.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerEstablished .1.3.6.1.4.1.25506.2.202.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA When the BGP FSM enters the established state, the BGP established event is generated. $*
SDESC
When the BGP FSM enters the established state, the BGP established event is generated.
Variables:
  1: hh3cBgpPeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
          peer on this connection.  If no error has
          occurred, this field is zero.  Otherwise, the
          first byte of this two byte OCTET STRING
          contains the error code, and the second byte
          contains the subcode."
  2: hh3cBgpPeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: openSent
       5: openConfirm
       6: established
     Descr="The status of the remote BGP peer, including:
            1: Idle(1)
            2: Connect(2)
            3: Active(3)
            4: OpenSent(4)
            5: OpenConfirm(5)
            6: Established(6)"
EDESC
#
#
#
EVENT hh3cBgpPeerBackwardTransition .1.3.6.1.4.1.25506.2.202.4.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The BGPBackwardTransition Event is generated $*
SDESC
The BGPBackwardTransition Event is generated
when the BGP FSM number moves from a higher
state to a lower state.
Variables:
  1: hh3cBgpPeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
          peer on this connection.  If no error has
          occurred, this field is zero.  Otherwise, the
          first byte of this two byte OCTET STRING
          contains the error code, and the second byte
          contains the subcode."
  2: hh3cBgpPeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: openSent
       5: openConfirm
       6: established
     Descr="The status of the remote BGP peer, including:
            1: Idle(1)
            2: Connect(2)
            3: Active(3)
            4: OpenSent(4)
            5: OpenConfirm(5)
            6: Established(6)"
  3: hh3cBgpPeerUnAvaiReason
     Syntax="INTEGER"
       1: otherErrCode
       10: unsupportedOptionalParameter
       11: authenticationFailure
       12: unacceptableHoldTime
       13: unsupportedCapability
       14: malformedAttributeList
       15: unrecognizedWellknownAttr
       16: missingWellknownAttribute
       17: attributeFlagsError
       18: attributeLengthError
       19: invalidORIGINAttribute
       2: errSubCodeUnspecified
       20: asRoutingLoop
       21: invalidNEXTHOPAttribute
       22: optionalAttributeError
       23: invalidNetworkField
       24: malformedASPATH
       25: receiveUnexpectedMessageinOpenSent
       26: receiveUnexpectedMessageinOpenConfirm
       27: receiveUnexpectedMessageinEstablished
       28: maximumNumberofPrefixesReached
       29: administrativeShutdown
       3: unknownErrSubcode
       30: peerDeconfigured
       31: administrativeReset
       32: connectionRejected
       33: otherConfigurationChange
       34: connectionCollisionResolution
       35: outofResources
       4: connectionNoSynchronized
       5: badMessageLength
       6: badMessageType
       7: unsupportedVersionNumber
       8: badPeerAS
       9: badBGPIdentifier
     Descr="The reason of BGP states change."
EDESC
#
#
#
EVENT hh3cBgpVrfRouteNumReachThreshold .1.3.6.1.4.1.25506.2.202.4.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The VPN instance routes reached the alarm threshould. $*
SDESC
The VPN instance routes reached the alarm threshould.
Variables:
  1: hh3cBgpVpnRouteType
     Syntax="UNSIGNED32"
     Descr="Route type."
  2: hh3cBgpVpnInstName
     Syntax="OCTETSTR"
     Descr="VPN instance name."
  3: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  4: hh3cBgpVpnCurrRouteNum
     Syntax="UNSIGNED32"
     Descr="Current number of BGP peer routes."
  5: hh3cBgpVpnThresholdValue
     Syntax="UNSIGNED32"
     Descr="Total threshold value."
EDESC
#
#
#
EVENT hh3cBgpVrfRouteNumReachThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The VPN instance routes fell below the clear alarm threshold. $*
SDESC
The VPN instance routes fell below the clear alarm threshold.
Variables:
  1: hh3cBgpVpnRouteType
     Syntax="UNSIGNED32"
     Descr="Route type."
  2: hh3cBgpVpnInstName
     Syntax="OCTETSTR"
     Descr="VPN instance name."
  3: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  4: hh3cBgpVpnCurrRouteNum
     Syntax="UNSIGNED32"
     Descr="Current number of BGP peer routes."
  5: hh3cBgpVpnThresholdValue
     Syntax="UNSIGNED32"
     Descr="Total threshold value."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteThresholdExceed .1.3.6.1.4.1.25506.2.202.4.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when when the number of $*
SDESC
This notification is generated when when the number of
routes received by the neighbor under the BGP address family
reaches an alarm threshold state.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
  4: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbor below the BGP address
family drops below the alert threshold.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
  4: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteExceed .1.3.6.1.4.1.25506.2.202.4.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbor under the BGP address
family reaches a maximum state.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteExceedClear .1.3.6.1.4.1.25506.2.202.4.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbors below the BGP address
family drops below a maximum.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
#
MIB: HH3C-BLG-MIB (file:./hh3c-blg.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BPA-MIB (file:./hh3c-bpa.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BRAS-ACCESS-MIB (file:./hh3c-bras-access.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBrasAccCUUPWarning .1.3.6.1.4.1.25506.2.200.6.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of online users on the UP $*
SDESC
This trap is generated when the number of online users on the UP
reaches the maximum user threshold. Subsequent users are recommended
to access the device through another UP.
Variables:
  1: hh3cBrasAccCUTrapUPID
     Syntax="INTEGER32"
     Descr="The involved UP of trap information."
  2: hh3cBrasAccCUTrapThreshold
     Syntax="INTEGER32"
     Descr="The involved threshold (percentage of online users) of
         trap information."
EDESC
#
#
#
EVENT hh3cBrasAccCUUPWarningResume .1.3.6.1.4.1.25506.2.200.6.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of online users on the UP $*
SDESC
This trap is generated when the number of online users on the UP
falls below the maximum user threshold.
Variables:
  1: hh3cBrasAccCUTrapUPID
     Syntax="INTEGER32"
     Descr="The involved UP of trap information."
  2: hh3cBrasAccCUTrapThreshold
     Syntax="INTEGER32"
     Descr="The involved threshold (percentage of online users) of
         trap information."
EDESC
#
#
#
EVENT hh3cBrasAccCUSlotWarning .1.3.6.1.4.1.25506.2.200.6.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of online users on the slot of $*
SDESC
This trap is generated when the number of online users on the slot of
the specified UP reaches the maximum user threshold. Subsequent users
are recommended to access the device through another slot of
the specified UP.
Variables:
  1: hh3cBrasAccCUTrapUPID
     Syntax="INTEGER32"
     Descr="The involved UP of trap information."
  2: hh3cBrasAccCUTrapSlotID
     Syntax="INTEGER32"
     Descr="The involved slot of trap information."
  3: hh3cBrasAccCUTrapThreshold
     Syntax="INTEGER32"
     Descr="The involved threshold (percentage of online users) of
         trap information."
EDESC
#
#
#
EVENT hh3cBrasAccCUSlotWarningResume .1.3.6.1.4.1.25506.2.200.6.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of online users on the slot $*
SDESC
This trap is generated when the number of online users on the slot
of the specified UP falls below the maximum user threshold.
Variables:
  1: hh3cBrasAccCUTrapUPID
     Syntax="INTEGER32"
     Descr="The involved UP of trap information."
  2: hh3cBrasAccCUTrapSlotID
     Syntax="INTEGER32"
     Descr="The involved slot of trap information."
  3: hh3cBrasAccCUTrapThreshold
     Syntax="INTEGER32"
     Descr="The involved threshold (percentage of online users) of
         trap information."
EDESC
#
#
#
#
MIB: HH3C-CATV-TRANSCEIVER-MIB (file:./hh3c-catv-transceiver.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCATVTransInputPwrTrap .1.3.6.1.4.1.25506.2.94.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cCATVTransInputPwrTrap notification is sent when the
input power of CATV transceiver is lower than the threshold.

Variables:
  1: hh3cCATVTransInputPwr
     Syntax="INTEGER32"
     Descr="
         The input power of CATV transceiver.
         If transceiver is not on site,
         the value should be zero.
         "
EDESC
#
#
#
EVENT hh3cCATVTransInputPwrReTrap .1.3.6.1.4.1.25506.2.94.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cCATVTransInputPwrReTrap notification is sent when the
input power of CATV transceiver recovered from the last trap.

Variables:
  1: hh3cCATVTransInputPwr
     Syntax="INTEGER32"
     Descr="
         The input power of CATV transceiver.
         If transceiver is not on site,
         the value should be zero.
         "
EDESC
#
#
#
EVENT hh3cCATVTransOutputLvlTrap .1.3.6.1.4.1.25506.2.94.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cCATVTransOutputLvlTrap notification is sent when the
output level of CATV transceiver is lower than the threshold.

Variables:
  1: hh3cCATVTransOutputLevel
     Syntax="INTEGER32"
     Descr="
         The output level of CATV transceiver.
         If transceiver is not on site,
         the value should be zero.
         "
EDESC
#
#
#
EVENT hh3cCATVTransOutputLvlReTrap .1.3.6.1.4.1.25506.2.94.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cCATVTransOutputLvlReTrap notification is sent when the
output level of CATV transceiver recovered from the last trap.

Variables:
  1: hh3cCATVTransOutputLevel
     Syntax="INTEGER32"
     Descr="
         The output level of CATV transceiver.
         If transceiver is not on site,
         the value should be zero.
         "
EDESC
#
#
#
EVENT hh3cCATVTransTemperatureTrap .1.3.6.1.4.1.25506.2.94.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cCATVTransTemperatureTrap notification is sent when the
temperature of CATV transceiver is higher than the threshold.

Variables:
  1: hh3cCATVTransTemperature
     Syntax="INTEGER32"
     Descr="
         The temperature of CATV transceiver.
         If transceiver is not on site,
         the value should be zero.
         "
EDESC
#
#
#
EVENT hh3cCATVTransTemperatureReTrap .1.3.6.1.4.1.25506.2.94.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cCATVTransTemperatureReTrap notification is sent when the
temperature of CATV transceiver recovered from the last trap.

Variables:
  1: hh3cCATVTransTemperature
     Syntax="INTEGER32"
     Descr="
         The temperature of CATV transceiver.
         If transceiver is not on site,
         the value should be zero.
         "
EDESC
#
#
#
#
MIB: HH3C-CBQOS2-MIB (file:./hh3c-cbqos2.mib) converted on Fri Mar 18 21:59:04 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCBQoSIfPolicyChanged .1.3.6.1.4.1.25506.2.65.2.1.7.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the applying status $*
SDESC
This notification will be sent when the applying status
of the policy on the interface is changed.
Variables:
  1: hh3cCBQoSIfApplyPolicyIfIndex
     Syntax="INTEGER32"
     Descr="Interface Index, equal to ifIndex."
  2: hh3cCBQoSIfApplyPolicyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)
        "
EDESC
#
#
#
EVENT hh3cCBQoSVlanPolicyChanged .1.3.6.1.4.1.25506.2.65.2.1.7.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the applying status $*
SDESC
This notification will be sent when the applying status
of the policy on the VLAN is changed.
Variables:
  1: hh3cCBQoSVlanApplyPolicyVlanid
     Syntax="INTEGER32"
     Descr="Vlan of Ethernet Interface."
  2: hh3cCBQoSVlanApplyPolicyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
EVENT hh3cCBQoSGlobalAclNotSupport .1.3.6.1.4.1.25506.2.65.2.1.7.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The global ACL configuration cannot work. $*
SDESC
The global ACL configuration cannot work.
Variables:
  1: hh3cCBQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cCBQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cCBQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cCBQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
EVENT hh3cCBQoSGlobalQPPBNotSupport .1.3.6.1.4.1.25506.2.65.2.1.7.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The global QPPB will not be effective. $*
SDESC
The global QPPB will not be effective.
Variables:
  1: hh3cCBQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cCBQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cCBQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cCBQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
#
MIB: HH3C-CFCARD-MIB (file:./hh3c-cfcard.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCfCardHotSwapOn .1.3.6.1.4.1.25506.2.41.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when a CF Card is hot swapped in. $*
SDESC
This notification is sent when a CF Card is hot swapped in.
Variables:
  1: hh3cCfCardContainedIn
     Syntax="INTEGER"
     Descr="The number of the slot which containes this CF Card "
  2: hh3cCfCardParentRelPos
     Syntax="INTEGER"
     Descr="An indication of the relative position of this CF Card
                among all the CF Card contained in the same slot."
  3: hh3cCfCardDescription
     Syntax="OCTETSTR"
     Descr="The Description of CF Card."
EDESC
#
#
#
EVENT hh3cCfCardHotSwapOff .1.3.6.1.4.1.25506.2.41.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when a CF Card is hot swapped out. $*
SDESC
This notification is sent when a CF Card is hot swapped out.
Variables:
  1: hh3cCfCardContainedIn
     Syntax="INTEGER"
     Descr="The number of the slot which containes this CF Card "
  2: hh3cCfCardParentRelPos
     Syntax="INTEGER"
     Descr="An indication of the relative position of this CF Card
                among all the CF Card contained in the same slot."
  3: hh3cCfCardDescription
     Syntax="OCTETSTR"
     Descr="The Description of CF Card."
EDESC
#
#
#
#
MIB: HH3C-CFD-MIB (file:./hh3c-cfd.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCfdTwowayDelay .1.3.6.1.4.1.25506.2.207.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The result of two-way delay-measurement exceeded the threshold. $*
SDESC
The result of two-way delay-measurement exceeded the threshold.
Variables:
  1: hh3cCfdMepId
     Syntax="INTEGER32"
     Descr="The MEP ID."
  2: hh3cCfdSrvId
     Syntax="INTEGER32"
     Descr="The service instance ID."
  3: hh3cCfdTimeThreshold
     Syntax="INTEGER32"
     Descr="The delay time threshold."
EDESC
#
#
#
EVENT hh3cCfdTwowayDelayRecovery .1.3.6.1.4.1.25506.2.207.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The result of two-way delay-measurement is under the threshold. $*
SDESC
The result of two-way delay-measurement is under the threshold.
Variables:
  1: hh3cCfdMepId
     Syntax="INTEGER32"
     Descr="The MEP ID."
  2: hh3cCfdSrvId
     Syntax="INTEGER32"
     Descr="The service instance ID."
  3: hh3cCfdTimeThreshold
     Syntax="INTEGER32"
     Descr="The delay time threshold."
EDESC
#
#
#
EVENT hh3cCfdSlmStatistic .1.3.6.1.4.1.25506.2.207.1.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The result of one-way LM is exceeded the threshold. $*
SDESC
The result of one-way LM is exceeded the threshold.
Variables:
  1: hh3cCfdFrameEnd
     Syntax="INTEGER"
       1: nearEnd
       2: farEnd
     Descr="The loose frame end of MEP.
        nearEnd: loose frame on source MEP.
        farEnd: loose frame on target MEP."
  2: hh3cCfdMepId
     Syntax="INTEGER32"
     Descr="The MEP ID."
  3: hh3cCfdSrvId
     Syntax="INTEGER32"
     Descr="The service instance ID."
  4: hh3cCfdStatisticThreshold
     Syntax="OCTETSTR"
     Descr="The packet frame threshold in percentage, in the range of 0 to 100.
        It can contain a maximum of 8 digits, including the dot (.),
        for example, 1.000001."
EDESC
#
#
#
#
MIB: HH3C-COMMON-SYSTEM-MIB (file:./hh3c-common-system.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWriteSuccessTrap .1.3.6.1.4.1.25506.6.8.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about write success. $*
SDESC
Send a trap about write success.
EDESC
#
#
#
EVENT hh3cWriteFailureTrap .1.3.6.1.4.1.25506.6.8.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about write failure. $*
SDESC
Send a trap about write failure.
EDESC
#
#
#
EVENT hh3cRebootSendTrap .1.3.6.1.4.1.25506.6.8.3 "Status Events" Normal
FORMAT ZBXTRAP $aA If a user restarts the device with command $*
SDESC
If a user restarts the device with command
'reboot', this trap will be sent two seconds
before the device reboots.
EDESC
#
#
#
EVENT hh3cSysColdStartTrap .1.3.6.1.4.1.25506.6.8.4 "Status Events" Normal
FORMAT ZBXTRAP $aA System cold start trap. $*
SDESC
System cold start trap.
Variables:
  1: hh3cSysFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
EVENT hh3cSysWarmStartTrap .1.3.6.1.4.1.25506.6.8.5 "Status Events" Normal
FORMAT ZBXTRAP $aA System warm start trap. $*
SDESC
System warm start trap.
Variables:
  1: hh3cSysFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
EVENT hh3cSysLoghostUnreachableTrap .1.3.6.1.4.1.25506.6.8.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when a loghost becomes unreachable. $*
SDESC
This notification will be sent when a loghost becomes unreachable.
Variables:
  1: hh3cSysLoghostIndex
     Syntax="INTEGER32"
     Descr="Index of loghost."
  2: hh3cSysLoghostIpaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP address type of the loghost."
  3: hh3cSysLoghostIpaddress
     Syntax="OCTETSTR"
     Descr="IP address of the loghost."
  4: hh3cSysLoghostTrapVpnName
     Syntax="OCTETSTR"
     Descr="VPN name of the loghost."
EDESC
#
#
#
EVENT hh3cSysDyingGaspTrap .1.3.6.1.4.1.25506.6.8.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent upon loss of power. $*
SDESC
This notification will be sent upon loss of power.
EDESC
#
#
#
#
MIB: HH3C-CONFIG-MAN-MIB (file:./hh3c-config-man.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCfgManEventlog .1.3.6.1.4.1.25506.2.4.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The object calculates the checksum on the current config per 10 minutes and $*
SDESC
The object calculates the checksum on the current config per 10 minutes and
even if it is different from the saved config but if a trap has been sent
with the same checksum then don't send again until the checksum is different.
Variables:
  1: hh3cCfgLogSrcCmd
     Syntax="INTEGER"
       1: cmdLine
       2: snmp
       3: other
     Descr="Specify the source command which brought the log.
        Currently, we provide the following types of sources:
        1.cmdLine(1):configure log instigated by command line.
        2.snmp(2):configure log instigated by SNMPS.
        3.other(3):configure log instigated by other source unknown."
  2: hh3cCfgLogSrcData
     Syntax="INTEGER"
       1: erase
       2: runningData
       3: commandSource
       4: startupData
       5: local
       6: netFtp
       7: hotPlugging
     Descr="The source of the configuration data event.
        erase           erasing destination
        runningData     operational data alive
        commandSource   the command source itself
        startupData     what the system will use next reboot
        local           local NVRAM or flash
        netFtp          FTP network transfer
        hotPlugging     board is inserted or pulled out on line
        "
  3: hh3cCfgLogDesData
     Syntax="INTEGER"
       1: unknown
       2: runningData
       3: commandSource
       4: startupData
       5: local
       6: netFtp
       7: hotPlugging
     Descr="The destination for the configuration data event.
        unknown          unknown
        runningData     operational data alive
        commandSource   the command source itself
        startupData     what the system will use next reboot
        local           local NVRAM or flash
        netFtp          FTP network transfer
        hotPlugging     board is inserted or pulled out on line"
EDESC
#
#
#
EVENT hh3cCfgOperateCompletion .1.3.6.1.4.1.25506.2.4.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When create hh3cCfgOperateTable successfully, a $*
SDESC
When create hh3cCfgOperateTable successfully, a
notification may be generated.
Variables:
  1: hh3cCfgOperateType
     Syntax="INTEGER"
       1: running2Startup
       2: startup2Running
       3: running2Net
       4: net2Running
       5: net2Startup
       6: startup2Net
       7: running2File
       8: file2Running
     Descr="Specify the type of operation on configuration."
  2: hh3cCfgOperateTime
     Syntax="TICKS"
     Descr="Record the time taken for the operation.  This object will
        be like a stopwatch, starting when the operation
        starts, and stopping when the operation completes."
  3: hh3cCfgOperateState
     Syntax="INTEGER"
       1: opInProgress
       10: opDeviceError
       11: opDeviceNotProgrammable
       12: opDeviceFull
       13: opFileOpenError
       14: opFileTransferError
       15: opFileChecksumError
       16: opNoMemory
       17: opAuthFail
       18: opTimeOut
       19: opUnknownFailure
       2: opSuccess
       20: opInvalidConfigFile
       21: opSlaveFull
       22: opCopyToSlaveFailure
       3: opInvalidOperation
       4: opInvalidProtocol
       5: opInvalidSourceName
       6: opInvalidDestName
       7: opInvalidServerAddress
       8: opDeviceBusy
       9: opDeviceOpenError
     Descr="The operation state type in the hh3cCfgOperateTable."
  4: hh3cCfgOperateEndTime
     Syntax="TICKS"
     Descr="The value of sysUpTime when the configuration operation is finished."
  5: hh3cCfgOperFailReason
     Syntax="OCTETSTR"
     Descr="The failure reasons of configuration operation."
EDESC
#
#
#
EVENT hh3cCfgInvalidConfigFile .1.3.6.1.4.1.25506.2.4.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA When the configuration file is invalid, this $*
SDESC
When the configuration file is invalid, this
notification will be generated.
Variables:
  1: hh3cCfgOperateType
     Syntax="INTEGER"
       1: running2Startup
       2: startup2Running
       3: running2Net
       4: net2Running
       5: net2Startup
       6: startup2Net
       7: running2File
       8: file2Running
     Descr="Specify the type of operation on configuration."
  2: hh3cCfgOperateFileName
     Syntax="OCTETSTR"
     Descr="When the object of hh3cCfgOperateType has the value of net2Startup, net2running,
        running2Net, running2File or file2Running, the value must be specified.

        The file name may include the path if applicable.

        If the value of hh3cCfgOperateType is net2Startup or net2running, this node specify the
        source file name of transfers.

        If the value of hh3cCfgOperateType is running2Net,
        this node specify the destination file name of transfers.

        When hh3cCfgOperateType has the value of startup2net, the object may not be
        created instead of using the file name of startup configuration file.

        If the value of hh3cCfgOperateType is running2File or file2Running,
        this node specifies the file name to be written or loaded."
  3: hh3cCfgFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
#
MIB: HH3C-CONTEXT-MIB (file:./hh3c-context.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cContextStateChangeToActive .1.3.6.1.4.1.25506.2.154.8.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cContextStateChangeToActive trap indicates $*
SDESC
The hh3cContextStateChangeToActive trap indicates
that the context status has changed to active.
Variables:
  1: hh3cContextIndex
     Syntax="INTEGER32"
     Descr="The value range of Context ID depends on the device model."
  2: hh3cContextName
     Syntax="OCTETSTR"
     Descr="Specifies the context name,
         a case-sensitive string of 1 to 15 characters.
         The context name cannot be modified once created."
EDESC
#
#
#
EVENT hh3cContextStateChangeToInactive .1.3.6.1.4.1.25506.2.154.8.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cContextStateChangeToInactive trap indicates $*
SDESC
The hh3cContextStateChangeToInactive trap indicates
that the context status has changed to inactive.
Variables:
  1: hh3cContextIndex
     Syntax="INTEGER32"
     Descr="The value range of Context ID depends on the device model."
  2: hh3cContextName
     Syntax="OCTETSTR"
     Descr="Specifies the context name,
         a case-sensitive string of 1 to 15 characters.
         The context name cannot be modified once created."
EDESC
#
#
#
#
MIB: HH3C-CPDR-MIB (file:./hh3c-cpdr.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCpdrTrapRoleChange .1.3.6.1.4.1.25506.2.199.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the role of control plane disaster recovery group changes. $*
SDESC
This trap is generated when the role of control plane disaster recovery group changes.
Variables:
  1: hh3cCpdrGroupName
     Syntax="OCTETSTR"
     Descr="The control plane disaster recovery group name."
  2: hh3cCpdrGroupRole
     Syntax="INTEGER"
       1: invalid
       2: master
       3: standBy
     Descr="The control plane disaster recovery group role."
EDESC
#
#
#
#
MIB: HH3C-CUPM-CP-MIB (file:./hh3c-cupm-cp.mib) converted on Fri Mar 18 21:59:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCupmCpProtoTnlUp .1.3.6.1.4.1.25506.2.194.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
CP device connects to VXLAN tunnel.
Variables:
  1: hh3cCupmCpVbUpID
     Syntax="INTEGER32"
     Descr="The number of UP device."
  2: hh3cCupmCpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  3: hh3cCupmCpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  4: hh3cCupmCpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  5: hh3cCupmCpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmCpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  7: hh3cCupmCpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
  8: hh3cCupmCpVbVxlanState
     Syntax="INTEGER"
       0: unknown
       1: up
       2: down
     Descr="The state of VXLAN protocol tunnel.
         0 (unknown) The VXLAN protocol tunnel is in unknown state.
         1 (up) The VXLAN protocol tunnel is in connected state.
         2 (down) The VXLAN protocol tunnel is in disconnected state."
EDESC
#
#
#
EVENT hh3cCupmCpProtoTnlDown .1.3.6.1.4.1.25506.2.194.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
CP device disconnects to VXLAN tunnel.
Variables:
  1: hh3cCupmCpVbUpID
     Syntax="INTEGER32"
     Descr="The number of UP device."
  2: hh3cCupmCpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  3: hh3cCupmCpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  4: hh3cCupmCpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  5: hh3cCupmCpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmCpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  7: hh3cCupmCpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
  8: hh3cCupmCpVbVxlanState
     Syntax="INTEGER"
       0: unknown
       1: up
       2: down
     Descr="The state of VXLAN protocol tunnel.
         0 (unknown) The VXLAN protocol tunnel is in unknown state.
         1 (up) The VXLAN protocol tunnel is in connected state.
         2 (down) The VXLAN protocol tunnel is in disconnected state."
EDESC
#
#
#
#
MIB: HH3C-CUPM-UP-MIB (file:./hh3c-cupm-up.mib) converted on Fri Mar 18 21:59:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCupmUpProtoTnlUp .1.3.6.1.4.1.25506.2.195.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
UP device connects to VXLAN tunnel.
Variables:
  1: hh3cCupmUpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  2: hh3cCupmUpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  3: hh3cCupmUpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  4: hh3cCupmUpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  5: hh3cCupmUpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmUpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
EDESC
#
#
#
EVENT hh3cCupmUpProtoTnlDown .1.3.6.1.4.1.25506.2.195.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
UP device disconnects to VXLAN tunnel.
Variables:
  1: hh3cCupmUpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  2: hh3cCupmUpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  3: hh3cCupmUpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  4: hh3cCupmUpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  5: hh3cCupmUpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmUpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
EDESC
#
#
#
#
MIB: HH3C-CUSP-MIB (file:./hh3c-cusp.mib) converted on Fri Mar 18 21:59:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCuspServerDisconnect .1.3.6.1.4.1.25506.2.190.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the controller is disconnected $*
SDESC
This trap is generated when the controller is disconnected
from the agent. The disconnection reason is
hh3cCuspServerDisconnectReason.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
  6: hh3cCuspServerDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Connection became abnormal.
             1: An SSL connection became abnormal.
             2: BFD timed out.
             3: Version negotiation failed.
             4: Protocol disabled.
             5: Connection became abnormal when messages were being sent.
             6: Connection recovery failed.
             7: Received invalid packets or incorrectly processed received packets.
             8: Connection became abnormal when messages were being received.
             9: VPN instance deleted.
             10: A TCP connection became abnormal.
             11: Heartbeat packets sending failed.
             12: Heartbeat packets timed out.
             13: Configuration changes.
             14: Not enough memory."
EDESC
#
#
#
EVENT hh3cCuspServerConnect .1.3.6.1.4.1.25506.2.190.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the controller is connected $*
SDESC
This trap is generated when the controller is connected
to the agent.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
EDESC
#
#
#
EVENT hh3cCuspClientDisconnect .1.3.6.1.4.1.25506.2.190.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the agent is disconnected $*
SDESC
This trap is generated when the agent is disconnected
from the controller. The disconnection reason is
hh3cCuspClientDisconnectReason.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
  6: hh3cCuspClientDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Connection became abnormal.
             1: Configuration changes.
             2: Heartbeat packets timed out.
             3: Version negotiation failed.
             4: Receiving Hello packets timed out.
             5: A TCP connection became abnormal.
             6: VPN instance deleted.
             7: VRF service disabled.
             8: Resource request failed.
             9: BFD timed out.
             10: Not enough memory."
EDESC
#
#
#
EVENT hh3cCuspClientConnect .1.3.6.1.4.1.25506.2.190.1.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the agent is connected $*
SDESC
This trap is generated when the agent is connected
to the controller.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
EDESC
#
#
#
#
MIB: HH3C-DAR-MIB (file:./hh3c-dar.mib) converted on Fri Mar 18 21:59:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP4-MIB (file:./hh3c-dhcp4.mib) converted on Fri Mar 18 21:59:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcpServer2AddrExhaust .1.3.6.1.4.1.25506.2.122.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when addresses are exhausted $*
SDESC
This trap is generated when addresses are exhausted
in the DHCP pool.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2AddrExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCP pool recovers from $*
SDESC
This trap is generated when the DHCP pool recovers from
address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2IpUsageOverflow .1.3.6.1.4.1.25506.2.122.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IP address usage of DHCP $*
SDESC
This trap is generated when the IP address usage of DHCP
server pool above the threshold.  The value of the IP address
usage is sampled for every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2AllocOverflow .1.3.6.1.4.1.25506.2.122.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the success rate of allocation $*
SDESC
This trap is generated when the success rate of allocation
of DHCP server IP address in 5 minutes below the threshold.
EDESC
#
#
#
EVENT hh3cDhcpServer2IpUsageOverflowRecov .1.3.6.1.4.1.25506.2.122.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IP address usage of DHCP $*
SDESC
This trap is generated when the IP address usage of DHCP
server pool reduced to 90% of the threshold.
The value of the IP address usage is sampled for every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetUsageOverflow .1.3.6.1.4.1.25506.2.122.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the subnet usage of DHCP $*
SDESC
This trap is generated when the subnet usage of DHCP
server pool has reached or exceeded the threshold. The IP address usage
data is polled every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetUsageOverflowRecov .1.3.6.1.4.1.25506.2.122.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the subnet usage in the DHCP $*
SDESC
This trap is generated when the subnet usage in the DHCP
server pool has dropped to or below 90% of the threshold.
The IP address usage data is polled every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetExhaust .1.3.6.1.4.1.25506.2.122.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all IP addresses $*
SDESC
This trap is generated when all IP addresses
in the DHCP pool are exhausted.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCP pool recovers from $*
SDESC
This trap is generated when the DHCP pool recovers from
IP address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2GpNetExhaust .1.3.6.1.4.1.25506.2.122.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all IP addresses $*
SDESC
This trap is generated when all IP addresses
in the DHCP pool group are exhausted.
Variables:
  1: hh3cDhcpServer2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCP server pool group name."
EDESC
#
#
#
EVENT hh3cDhcpServer2GpNetExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCP pool group recovers from $*
SDESC
This trap is generated when the DHCP pool group recovers from
IP address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCP server pool group name."
EDESC
#
#
#
#
MIB: HH3C-DHCP6-MIB (file:./hh3c-dhcp6.mib) converted on Fri Mar 18 21:59:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcp6Server2AddrExhaust .1.3.6.1.4.1.25506.2.179.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when IPv6 addresses are exhausted $*
SDESC
This trap is generated when IPv6 addresses are exhausted
in the DHCPv6 address pool.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2AddrExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 address pool recovers from $*
SDESC
This trap is generated when the DHCPv6 address pool recovers from
IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool is above the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool drops down to 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdExhaust .1.3.6.1.4.1.25506.2.179.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when IPv6 prefixes are exhausted $*
SDESC
This trap is generated when IPv6 prefixes are exhausted
in the DHCPv6 address pool.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 prefixes pool recovers from $*
SDESC
This trap is generated when the DHCPv6 prefixes pool recovers from
IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefixes usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 prefixes usage of DHCPv6
address pool is above the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefixes usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 prefixes usage of DHCPv6
address pool drops down to 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage in the DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage in the DHCPv6
address pool has reached or exceeded the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage in the DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage in the DHCPv6
address pool has dropped to or below 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all addresses $*
SDESC
This trap is generated when all addresses
in the DHCPv6 address pool are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 address pool has recovered $*
SDESC
This trap is generated when the DHCPv6 address pool has recovered
from IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool has reached or exceeded the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the prefix usage in the DHCPv6 $*
SDESC
This trap is generated when the prefix usage in the DHCPv6
address pool has dropped to or below 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all prefixes $*
SDESC
This trap is generated when all prefixes
in the DHCPv6 address pool are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefix pool recovers from $*
SDESC
This trap is generated when the IPv6 prefix pool recovers from
prefix exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpIpNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all addresses $*
SDESC
This trap is generated when all addresses
in the DHCPv6 address pool group are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpIpNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 address pool group has recovered $*
SDESC
This trap is generated when the DHCPv6 address pool group has recovered
from IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpPdNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all prefixes $*
SDESC
This trap is generated when all prefixes
in the DHCPv6 address pool group are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpPdNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefix pool group recovers from $*
SDESC
This trap is generated when the IPv6 prefix pool group recovers from
prefix exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
#
MIB: HH3C-DHCP6-SERVER-MIB (file:./hh3c-dhcp6-server.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPRELAY-MIB (file:./hh3c-dhcprelay.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPR-MIB (file:./hh3c-dhcpr.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP-SERVER-MIB (file:./hh3c-dhcp-server.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDHCPServerAddrExhaust .1.3.6.1.4.1.25506.2.101.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device DHCP server address $*
SDESC
This trap is generated when the device DHCP server address
exhaust.
Variables:
  1: hh3cDHCPServerPoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name."
  2: hh3cDHCPServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cDHCPServerAddrExhaustRecover .1.3.6.1.4.1.25506.2.101.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device DHCP server address $*
SDESC
This trap is generated when the device DHCP server address
exhaust recover.
Variables:
  1: hh3cDHCPServerPoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name."
  2: hh3cDHCPServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cDHCPServerAvgIpUsageOverflow .1.3.6.1.4.1.25506.2.101.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the average IP address usage $*
SDESC
This trap is generated when the average IP address usage
of DHCP server pool in 5 minutes overflows.
Variables:
  1: hh3cDHCPServerPoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name."
EDESC
#
#
#
EVENT hh3cDHCPServerMaxIpUsageOverflow .1.3.6.1.4.1.25506.2.101.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the maximum IP address usage $*
SDESC
This trap is generated when the maximum IP address usage
of DHCP server pool in 5 minutes overflows.
Variables:
  1: hh3cDHCPServerPoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name."
EDESC
#
#
#
EVENT hh3cDHCPServerAllocateOverflow .1.3.6.1.4.1.25506.2.101.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the number of DHCP server $*
SDESC
This trap is generated when the number of DHCP server
allocated IP address in 5 minutes overflows.
EDESC
#
#
#
#
MIB: HH3C-DHCPS-MIB (file:./hh3c-dhcps.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP-SNOOP2-MIB (file:./hh3c-dhcp-snoop2.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPSNOOP-MIB (file:./hh3c-dhcpsnoop.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcpSnoopSpoofServerDetected .1.3.6.1.4.1.25506.2.36.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA To detect unauthorized DHCP servers on a network, the DHCP snooping $*
SDESC
To detect unauthorized DHCP servers on a network, the DHCP snooping
device sends DHCP-DISCOVER messages through its downstream port
(which is connected to the DHCP clients).
If any response (DHCP-OFFER message) is received from the downstream port,
an unauthorized DHCP server is considered present, and then the device
sends a trap.
With unauthorized DHCP server detection enabled, the interface sends a
DHCP-DISCOVER message to detect unauthorized DHCP servers on the network.
If this interface receives a DHCP-OFFER  message,  the DHCP server which
sent it is considered unauthorized. 
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cdot1qVlanIndex
     Syntax=""
  3: hh3cDhcpSnoopSpoofServerMac
     Syntax="OCTETSTR"
     Descr="MAC address of the spoofing server and it is derived from
          link-layer header of offer packet. If the offer packet is relayed
          by dhcp relay entity, it may be the MAC address of relay entity.
          "
  4: hh3cDhcpSnoopSpoofServerIP
     Syntax="IPADDR"
     Descr="IP address of the spoofing server and it is derived from
          IP header of offer packet. A tricksy host may send offer packet use
          other host's address, so this address can not always be  trust.
          "
EDESC
#
#
#
EVENT hh3cDhcpSnoopNewBinding .1.3.6.1.4.1.25506.2.36.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The device sends a trap when adding a new binding. $*
SDESC
The device sends a trap when adding a new binding.
Variables:
  1: hh3cDhcpSnoopBindingIP
     Syntax="IPADDR"
     Descr="IP address of a new binding. "
  2: hh3cDhcpSnoopBindingMac
     Syntax="OCTETSTR"
     Descr="MAC address of a new binding. "
EDESC
#
#
#
#
MIB: HH3C-DISK-MIB (file:./hh3c-disk.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DLDP2-MIB (file:./hh3c-dldp2.mib) converted on Fri Mar 18 21:59:07 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDldp2TrapUniLink .1.3.6.1.4.1.25506.2.117.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when DLDP detects a unidirectional link, $*
SDESC
This trap is generated when DLDP detects a unidirectional link,
ifIndex and ifDescr identify the port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cDldp2TrapBidLink .1.3.6.1.4.1.25506.2.117.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when DLDP detects a bidirectional link, $*
SDESC
This trap is generated when DLDP detects a bidirectional link,
ifIndex and ifDescr identify the port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-DLDP-MIB (file:./hh3c-dldp.mib) converted on Fri Mar 18 21:59:08 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDLDPUnidirectionalPort .1.3.6.1.4.1.25506.2.43.2.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA It will send a SNMP trap when the state of a port $*
SDESC
It will send a SNMP trap when the state of a port
has changed to unidirectional-link.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
#
MIB: HH3C-DNS-MIB (file:./hh3c-dns.mib) converted on Fri Mar 18 21:59:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOMAIN-MIB (file:./hh3c-domain.mib) converted on Fri Mar 18 21:59:08 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cUserIPAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IP address allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IP pool
Add new IP pool to this domain.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated IP address recovery
2 Notice/Trap generation cause:  Recover from a state where IP address allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPLowerlimitWarningAlarm .1.3.6.1.4.1.25506.2.46.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IP address allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set in domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPLowerlimitWarningResume .1.3.6.1.4.1.25506.2.46.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated IP address recovery
2 Notice/Trap generation cause:  Recover from a state where IP address allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPv6AllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 address allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 address pool
Add new IPv6 address pool to this domain .

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6AllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated IPv6 address recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 address allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6LowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 address allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6LowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated IPv6 address recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 address allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 NDRA prefix allocable threshold
2 Notice/Trap generation cause: Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 NDRA prefix pool
Add new IPv6 NDRA prefix pool to this domain .

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated NDRA prefix recovery
2 Notice/Trap generation cause:  Recover from a state where NDRA prefix allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfLowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach NDRA prefix allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfLowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated NDRA prefix recovery
2 Notice/Trap generation cause:  Recover from a state where NDRA Prefix allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 DHCPv6-PD prefix allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 DHCPv6-PD prefix pool
Add new IPv6 DHCPv6-PD prefix pool to this domain .

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated IPv6 DHCPv6-PD prefix recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 DHCPv6-PD Prefix allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfLowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 DHCPv6-PD prefix allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfLowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated IPv6 DHCPv6-PD prefix recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 DHCPv6-PD Prefix allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserWebServerDownAlarm .1.3.6.1.4.1.25506.2.46.5.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the Web server is not reachable.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserWebServerUpAlarm .1.3.6.1.4.1.25506.2.46.5.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the Web server becomes reachable.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserWebServerChangeAlarm .1.3.6.1.4.1.25506.2.46.5.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the valid URL of the Web Server changes.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerDownAlarm .1.3.6.1.4.1.25506.2.46.5.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the IPv6 Web server is not reachable.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerUpAlarm .1.3.6.1.4.1.25506.2.46.5.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the IPv6 Web server becomes reachable.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerChangeAlarm .1.3.6.1.4.1.25506.2.46.5.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the valid IPv6 URL of the Web Server changes.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
#
MIB: HH3C-DOT11-ACMT-MIB (file:./hh3c-dot11-acmt.mib) converted on Fri Mar 18 21:59:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-APMT-MIB (file:./hh3c-dot11-apmt.mib) converted on Fri Mar 18 21:59:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-CFGEXT-MIB (file:./hh3c-dot11-cfgext.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-CFG-MIB (file:./hh3c-dot11-cfg.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-LIC-MIB (file:./hh3c-dot11-lic.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-PROBE-MIB (file:./hh3c-dot11-probe.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-QOS-MIB (file:./hh3c-dot11-qos.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-REF-MIB (file:./hh3c-dot11-ref.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-ROAM-MIB (file:./hh3c-dot11-roam.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-RRM-MIB (file:./hh3c-dot11-rrm.mib) converted on Fri Mar 18 21:59:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-SA-MIB (file:./hh3c-dot11-sa.mib) converted on Fri Mar 18 21:59:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-SAVI-MIB (file:./hh3c-dot11-savi.mib) converted on Fri Mar 18 21:59:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11S-MESH-MIB (file:./hh3c-dot11s-mesh.mib) converted on Fri Mar 18 21:59:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-STATION-MIB (file:./hh3c-dot11-station.mib) converted on Fri Mar 18 21:59:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WIDS-MIB (file:./hh3c-dot11-wids.mib) converted on Fri Mar 18 21:59:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WIPS-MIB (file:./hh3c-dot11-wips.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WLANEXT-MIB (file:./hh3c-dot11-wlanext.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WM2U-MIB (file:./hh3c-dot11-wm2u.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT3-EFM-EPON-MIB (file:./hh3c-dot3-efm-epon.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DRNI-MIB (file:./hh3c-drni.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DSP-MIB (file:./hh3c-dsp.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVPMStateChange .1.3.6.1.4.1.25506.2.89.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when VPM state changes. $*
SDESC
This trap is sent when VPM state changes.
Variables:
  1: hh3cVPMIndex
     Syntax="INTEGER32"
     Descr="The index for this entry. The sequence of VPM card in the chassis is
        from the top to bottom."
  2: hh3cVPMEnPhysicalIndex
     Syntax=""
     Descr="The object corresponds to PhysicalIndex in the chassis."
  3: hh3cVPMState
     Syntax="INTEGER"
       1: normal
       2: warning
       3: fatal
       4: offLine
     Descr="The object indicates the current state of VPM card being monitored.
        normal(1)  - VPM card in normal condition.
        warning(2) - VPM card has some problem and need attention.
        fatal(3)   - VPM card is not functional.
        offLine(4) - VPM card is in off-line maintenance state."
EDESC
#
#
#
EVENT hh3cDSPStateChange .1.3.6.1.4.1.25506.2.89.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when DSP state changes. $*
SDESC
This trap is sent when DSP state changes.
Variables:
  1: hh3cDSPIndex
     Syntax="INTEGER32"
     Descr="The index for this entry. DSP is fixed on VPM card or chassis card.
        The sequence of DSP in the VPM card or chassis card is from right to left."
  2: hh3cDSPVPMIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to VPMIndex in the chassis.
        If value of this object is non-zero, it is the index of VPM card.(DSP is in
        this VPM card.) If value of this object is 0, then the DSP is fixed in the
        chassis card."
  3: hh3cDSPEnPhysicalIndex
     Syntax=""
     Descr="The object corresponds to PhysicalIndex in the chassis."
  4: hh3cDSPState
     Syntax="INTEGER"
       1: normal
       3: fatal
       4: offLine
     Descr="The object indicates the current state of DSP being monitored.
        normal(1)  - DSP in normal condition.
        fatal(3)   - DSP is not functional.
        offLine(4) - DSP is in off-line maintenance state."
EDESC
#
#
#
#
MIB: HH3C-DVPN-MIB (file:./hh3c-dvpn.mib) converted on Fri Mar 18 21:59:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDvpnSessionBuildNotification .1.3.6.1.4.1.25506.2.57.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn session build notification.

Variables:
  1: hh3cDvpnSessionDvpnId
     Syntax="INTEGER32"
     Descr="
                The ID of the dvpn domain which the session belongs to.
            "
  2: hh3cDvpnSessionPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session peer device.
            "
  3: hh3cDvpnSessionPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of the session peer device.
            "
  4: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  5: hh3cDvpnSessionLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session local device.
            "
  6: hh3cDvpnSessionLocalPriIp
     Syntax="OCTETSTR"
     Descr="
               The private ip of session local device.
            "
  7: hh3cDvpnSessionLocalPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The public ip type (ipv4, ipv6) of session local device.
            "
  8: hh3cDvpnSessionLocalPubIp
     Syntax="OCTETSTR"
     Descr="
               The public ip of session local device.
            "
  9: hh3cDvpnSessionPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID of session peer device.
                It is a string.
            "
 10: hh3cDvpnSessionPeerPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of session peer device.
            "
 11: hh3cDvpnSessionPeerPubIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of session peer device.
            "
 12: hh3cDvpnSessionPeerUdpPort
     Syntax="INTEGER32"
     Descr="
               The udp port used by session peer device .
            "
 13: hh3cDvpnSessionPeerType
     Syntax="INTEGER"
       1: router
       2: pcClient
     Descr="
                The type of the session peer device.
                It may be client software or a router.
            "
 14: hh3cDvpnSessionUserName
     Syntax="OCTETSTR"
     Descr="
                The user's name.
                If the session type is client to client,
                the value of this object is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnSessionDelNotification .1.3.6.1.4.1.25506.2.57.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn session deleted notification.

Variables:
  1: hh3cDvpnSessionDvpnId
     Syntax="INTEGER32"
     Descr="
                The ID of the dvpn domain which the session belongs to.
            "
  2: hh3cDvpnSessionPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session peer device.
            "
  3: hh3cDvpnSessionPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of the session peer device.
            "
  4: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  5: hh3cDvpnSessionLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session local device.
            "
  6: hh3cDvpnSessionLocalPriIp
     Syntax="OCTETSTR"
     Descr="
               The private ip of session local device.
            "
  7: hh3cDvpnSessionLocalPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The public ip type (ipv4, ipv6) of session local device.
            "
  8: hh3cDvpnSessionLocalPubIp
     Syntax="OCTETSTR"
     Descr="
               The public ip of session local device.
            "
  9: hh3cDvpnSessionPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID of session peer device.
                It is a string.
            "
 10: hh3cDvpnSessionPeerPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of session peer device.
            "
 11: hh3cDvpnSessionPeerPubIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of session peer device.
            "
 12: hh3cDvpnSessionPeerUdpPort
     Syntax="INTEGER32"
     Descr="
               The udp port used by session peer device .
            "
 13: hh3cDvpnSessionPeerType
     Syntax="INTEGER"
       1: router
       2: pcClient
     Descr="
                The type of the session peer device.
                It may be client software or a router.
            "
 14: hh3cDvpnSessionUserName
     Syntax="OCTETSTR"
     Descr="
                The user's name.
                If the session type is client to client,
                the value of this object is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnMapBuildNotification .1.3.6.1.4.1.25506.2.57.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn map build notification.

Variables:
  1: hh3cDvpnMapIndex
     Syntax="UNSIGNED32"
     Descr="
                The index of hh3cDvpnMapTable.
            "
  2: hh3cDvpnMapDvpnId
     Syntax="UNSIGNED32"
     Descr="
                The ID of the dvpn domain which the map belongs to.
                The dvpn ID is 0 means that the map has not been built.
                It has not gotten the dvpn ID at that time.
            "
  3: hh3cDvpnMapPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The identifier of peer device.
                It is a string.
            "
  4: hh3cDvpnMapPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map peer device.
            "
  5: hh3cDvpnMapPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map peer device.
            "
  6: hh3cDvpnMapPeerPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map peer device.
            "
  7: hh3cDvpnMapPeerPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map peer device.
            "
  8: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  9: hh3cDvpnMapLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map local device.
            "
 10: hh3cDvpnMapLocalPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map local device.
            "
 11: hh3cDvpnMapLocalPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map local device.
            "
 12: hh3cDvpnMapLocalPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map local device.
            "
 13: hh3cDvpnMapUserName
     Syntax="OCTETSTR"
     Descr="
                The user name used by the client registering to server.
                If the client is not been authenticated, this is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnMapDelNotification .1.3.6.1.4.1.25506.2.57.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn map deleted notification.

Variables:
  1: hh3cDvpnMapIndex
     Syntax="UNSIGNED32"
     Descr="
                The index of hh3cDvpnMapTable.
            "
  2: hh3cDvpnMapDvpnId
     Syntax="UNSIGNED32"
     Descr="
                The ID of the dvpn domain which the map belongs to.
                The dvpn ID is 0 means that the map has not been built.
                It has not gotten the dvpn ID at that time.
            "
  3: hh3cDvpnMapPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The identifier of peer device.
                It is a string.
            "
  4: hh3cDvpnMapPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map peer device.
            "
  5: hh3cDvpnMapPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map peer device.
            "
  6: hh3cDvpnMapPeerPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map peer device.
            "
  7: hh3cDvpnMapPeerPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map peer device.
            "
  8: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  9: hh3cDvpnMapLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map local device.
            "
 10: hh3cDvpnMapLocalPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map local device.
            "
 11: hh3cDvpnMapLocalPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map local device.
            "
 12: hh3cDvpnMapLocalPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map local device.
            "
 13: hh3cDvpnMapUserName
     Syntax="OCTETSTR"
     Descr="
                The user name used by the client registering to server.
                If the client is not been authenticated, this is a null string.
            "
EDESC
#
#
#
#
MIB: HH3C-E1-MIB (file:./hh3c-e1.mib) converted on Fri Mar 18 21:59:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-E1T1VI-MIB (file:./hh3c-e1t1vi.mib) converted on Fri Mar 18 21:59:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cE1T1VITrapTimeSlot .1.3.6.1.4.1.25506.2.76.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent to the manager under the following $*
SDESC
This trap is sent to the manager under the following
condition: The number of used time slots of an E1/T1
interface reaches the threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-EFM-COMMON-MIB (file:./hh3c-efm-common.mib) converted on Fri Mar 18 21:59:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot3OamThresholdEvent .1.3.6.1.4.1.25506.2.42.3.1.7.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cDot3OamThresholdEvent notification is sent when a local or $*
SDESC
A hh3cDot3OamThresholdEvent notification is sent when a local or
remote threshold crossing event is detected.  A local
threshold crossing event is detected by the local entity,
while a remote threshold crossing event is detected by the
reception of an Ethernet OAM Event Notification OAMPDU
indicating a threshold event.
This notification should not be sent more than once per
second.
The management entity should periodically check
hh3cDot3OamEventLogTable to detect any missed events.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cDot3OamEventLogTimestamp
     Syntax="OCTETSTR"
     Descr="The date and time that this event instance occurred."
  3: hh3cDot3OamEventLogOui
     Syntax="OCTETSTR"
     Descr="The OUI of the entity defining the object type.  All IEEE
          802.3 defined events (as appearing in [802.3ah] except for the
          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of
          0x0180C2.  Organizations defining their own Event Notification
          TLVs include their OUI in the Event Notification TLV which
          gets reflected here."
  4: hh3cDot3OamEventLogType
     Syntax="UNSIGNED32"
     Descr="The type of event that generated this entry in the event log.

          When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following
          event types are defined:
              erroredSymbolEvent(1),
              erroredFramePeriodEvent (2),
              erroredFrameEvent(3),
              erroredFrameSecondsEvent(4),
              linkFault(256),
              dyingGaspEvent(257),
              criticalLinkEvent(258)
          The first four are considered threshold crossing events as
          they are generated when a metric exceeds a given value within
          a specified window.  The other three are not threshold
          crossing events.

          When the OUI is not 0x0180C2, then some other organization has
          defined the event space.  If event subtyping is known to the
          implementation, it may be reflected here.  Otherwise, this
          value should return all Fs (0xFFFFFFFF).
          "
  5: hh3cDot3OamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="Whether this event occurred locally, or was received from the
          OAM peer via Ethernet OAM."
  6: hh3cDot3OamEventLogWindowHi
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventWindowHi and hh3cDot3OamEventWindowLo form an
          unsigned 64-bit integer yielding the window over which the
          value was measured for the threshold crossing event (e.g. 5,
          when 11 occurrences happened in 5 seconds while the threshold
          was 10).   The two objects are combined as:

          hh3cDot3OamEventLogWindow = ((2^32) * hh3cDot3OamEventLogWindowHi)
                                          + hh3cDot3OamEventLogWindowLo


          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  7: hh3cDot3OamEventLogWindowLo
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventWindowHi and hh3cDot3OamEventWindowLo form an
          unsigned 64-bit integer yielding the window over which the
          value was measured for the threshold crossing event (e.g. 5,
          when 11 occurrences happened in 5 seconds while the threshold
          was 10).   The two objects are combined as:
          hh3cDot3OamEventLogWindow = ((2^32) * hh3cDot3OamEventLogWindowHi)
                                          + hh3cDot3OamEventLogWindowLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  8: hh3cDot3OamEventLogThresholdHi
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventThresholdHi and hh3cDot3OamEventThresholdLo
          form an unsigned 64-bit integer yielding the value that was
          crossed for the threshold crossing event (e.g. 10, when 11
          occurrences happened in 5 seconds while the threshold was 10).
          The two objects are combined as:

        hh3cDot3OamEventLogThreshold = ((2^32) * hh3cDot3OamEventLogThresholdHi)
                                           + hh3cDot3OamEventLogThresholdLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  9: hh3cDot3OamEventLogThresholdLo
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventThresholdHi and hh3cDot3OamEventThresholdLo
          form an unsigned 64-bit integer yielding the value that was
          crossed for the threshold crossing event (e.g. 10, when 11
          occurrences happened in 5 seconds while the threshold was 10).
          The two objects are combined as:

        hh3cDot3OamEventLogThreshold = ((2^32) * hh3cDot3OamEventLogThresholdHi)
                                           + hh3cDot3OamEventLogThresholdLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
 10: hh3cDot3OamEventLogValue
     Syntax="COUNTER64"
     Descr="If the event represents a threshold crossing event, this
          value indicates the value of the parameter within the given
          window that generated this event (e.g. 11, when 11 occurrences
          happened in 5 seconds while the threshold was 10).

          Otherwise, this value is returned as all F's
          (0xFFFFFFFFFFFFFFFF) and adds no useful information.
          "
 11: hh3cDot3OamEventLogRunningTotal
     Syntax="COUNTER64"
     Descr="This value respresents the total number of times this
          occurence has happened since the last reset (e.g. 3253, when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
 12: hh3cDot3OamEventLogEventTotal
     Syntax="UNSIGNED32"
     Descr="This value respresents the total number of times one or more
          of these occurences have resulted in an event (e.g. 51 when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
EDESC
#
#
#
EVENT hh3cDot3OamNonThresholdEvent .1.3.6.1.4.1.25506.2.42.3.1.7.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cDot3OamNonThresholdEvent notification is sent when a local $*
SDESC
A hh3cDot3OamNonThresholdEvent notification is sent when a local
or remote non-threshold crossing event is detected.  A local
event is detected by the local entity, while a remote event is
detected by the reception of an Ethernet OAM Event
Notification OAMPDU indicating a non-threshold crossing event.
This notification should not be sent more than once per
second.
The management entity should periodically check
hh3cDot3OamEventLogTable to detect any missed events.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cDot3OamEventLogTimestamp
     Syntax="OCTETSTR"
     Descr="The date and time that this event instance occurred."
  3: hh3cDot3OamEventLogOui
     Syntax="OCTETSTR"
     Descr="The OUI of the entity defining the object type.  All IEEE
          802.3 defined events (as appearing in [802.3ah] except for the
          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of
          0x0180C2.  Organizations defining their own Event Notification
          TLVs include their OUI in the Event Notification TLV which
          gets reflected here."
  4: hh3cDot3OamEventLogType
     Syntax="UNSIGNED32"
     Descr="The type of event that generated this entry in the event log.

          When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following
          event types are defined:
              erroredSymbolEvent(1),
              erroredFramePeriodEvent (2),
              erroredFrameEvent(3),
              erroredFrameSecondsEvent(4),
              linkFault(256),
              dyingGaspEvent(257),
              criticalLinkEvent(258)
          The first four are considered threshold crossing events as
          they are generated when a metric exceeds a given value within
          a specified window.  The other three are not threshold
          crossing events.

          When the OUI is not 0x0180C2, then some other organization has
          defined the event space.  If event subtyping is known to the
          implementation, it may be reflected here.  Otherwise, this
          value should return all Fs (0xFFFFFFFF).
          "
  5: hh3cDot3OamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="Whether this event occurred locally, or was received from the
          OAM peer via Ethernet OAM."
  6: hh3cDot3OamEventLogEventTotal
     Syntax="UNSIGNED32"
     Descr="This value respresents the total number of times one or more
          of these occurences have resulted in an event (e.g. 51 when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
EDESC
#
#
#
#
MIB: HH3C-ENTITY-EXT-MIB (file:./hh3c-entity-ext.mib) converted on Fri Mar 18 21:59:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEntityExtTemperatureThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtTemperatureThresholdNotification $*
SDESC
The hh3cEntityExtTemperatureThresholdNotification
indicates the temperature exceeded the threshold.
In this condition, user should check the status and the
environment of the entity, sometimes it happens because
of the failure of air-condition.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  3: hh3cEntityExtTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageLowThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtVoltageLowThresholdNotification indicates $*
SDESC
The hh3cEntityExtVoltageLowThresholdNotification indicates
the voltage is lower than the threshold.
If the voltage is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  3: hh3cEntityExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageHighThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtVoltageHighThresholdNotification indicates $*
SDESC
The hh3cEntityExtVoltageHighThresholdNotification indicates
the voltage is higher than the threshold.
If the voltage is higher too much than the entity needs,
The entity may be damaged by the high voltage.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  3: hh3cEntityExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage greater than high-threshold, a notification will be
            sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtCpuUsageThresholdNotfication .1.3.6.1.4.1.25506.2.6.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtCpuUsageThresholdNotfication indicates $*
SDESC
The hh3cEntityExtCpuUsageThresholdNotfication indicates
the entity is overloaded.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCpuUsage
     Syntax="INTEGER32"
     Descr="The CPU usage for this entity. Generally, the overall
            CPU usage on the entity is calculated, independent of
            the number of CPUs on the entity."
  3: hh3cEntityExtCpuUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
            the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  6: hh3cEntityExtCpuUsageRecoverThreshold
     Syntax="INTEGER32"
     Descr="The recover threshold for the CPU usage.  When the CPU usage falls down to
            the threshold, a notification is sent.  The hh3cEntityExtCpuUsageRecoverThreshold
            must be less than or equal to the hh3cEntityExtCpuUsageThreshold."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtMemUsageThresholdNotification indicates $*
SDESC
The hh3cEntityExtMemUsageThresholdNotification indicates
the entity is overloaded.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSize
     Syntax="UNSIGNED32"
     Descr="The size of memory for the entity.

            If the amount of memory exceeds 4,294,967,295 bytes,
            the value remains 4,294,967,295 bytes."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtOperEnabled .1.3.6.1.4.1.25506.2.6.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is operable at present. $*
SDESC
The trap indicates the entity is operable at present.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtOperDisabled .1.3.6.1.4.1.25506.2.6.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is not operable at present. $*
SDESC
The trap indicates the entity is not operable at present.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtCriticalTemperatureThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtCriticalTemperatureThresholdNotification $*
SDESC
The hh3cEntityExtCriticalTemperatureThresholdNotification
indicates the temperature exceeds the critical temperature.
In this condition, user should check the status and the
environment of the entity, sometimes it happens because
of the failure of air-condition.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  3: hh3cEntityExtCriticalTemperatureThreshold
     Syntax="INTEGER32"
     Descr=" The threshold for the critical Temperature. When temperature
            exceeds the critical temperature, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOn .1.3.6.1.4.1.25506.2.6.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module fails $*
SDESC
The trap is generated when the SFP module fails
or runs abnormally for some particular reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOff .1.3.6.1.4.1.25506.2.6.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module restores to $*
SDESC
The trap is generated when the SFP module restores to
normal status.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPPhony .1.3.6.1.4.1.25506.2.6.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This module is NOT sold by authorized manufacturer. $*
SDESC
This module is NOT sold by authorized manufacturer.
The normal function of the device or assume the maintenance
responsibility thereof will NOT be guaranteed.
The trap is generated periodically after a phony module has been
found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityInsert .1.3.6.1.4.1.25506.2.6.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a removable entity inserting to $*
SDESC
The trap is generated when a removable entity inserting to
device.
Variables:
  1: entPhysicalDescr
     Syntax=""
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cEntityRemove .1.3.6.1.4.1.25506.2.6.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a removable entity removing from $*
SDESC
The trap is generated when a removable entity removing from
device.
Variables:
  1: entPhysicalDescr
     Syntax=""
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtForcedPowerOff .1.3.6.1.4.1.25506.2.6.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is forced to power off. $*
SDESC
The trap indicates the entity is forced to power off.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtForcedPowerOn .1.3.6.1.4.1.25506.2.6.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is forced to power on. $*
SDESC
The trap indicates the entity is forced to power on.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtFaultAlarmOn .1.3.6.1.4.1.25506.2.6.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates a fault occurs on the specified entity. $*
SDESC
The trap indicates a fault occurs on the specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtFaultAlarmOff .1.3.6.1.4.1.25506.2.6.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates a fault disappears on the specified entity. $*
SDESC
The trap indicates a fault disappears on the specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtResourceLack .1.3.6.1.4.1.25506.2.6.2.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that a kind of resource is not enough on the $*
SDESC
The trap indicates that a kind of resource is not enough on the
specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExtResourceEnough .1.3.6.1.4.1.25506.2.6.2.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the entity recovers from the status of no $*
SDESC
The trap indicates that the entity recovers from the status of no
enough resource.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureLower .1.3.6.1.4.1.25506.2.6.2.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the temperature of a specified entity is under $*
SDESC
The trap indicates the temperature of a specified entity is under
the lower threshold. In this condition, user should check the
status and the environment of the entity, sometimes it goes wrong
for some reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the lower Temperature. When temperature runs
            under the threshold, a notification will be sent."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureTooUp .1.3.6.1.4.1.25506.2.6.2.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the temperature of a specified entity exceeded $*
SDESC
The trap indicates the temperature of a specified entity exceeded
the shutdown threshold. In this condition, user should check the
status and the environment of the entity, sometimes it goes wrong
for some reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature. When temperature
            exceeds the threshold, a notification will be sent and the entity
            will be shutdown."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureNormal .1.3.6.1.4.1.25506.2.6.2.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the temperature of a specified entity recover $*
SDESC
The trap indicates the temperature of a specified entity recover
from abnormal status.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the lower Temperature. When temperature runs
            under the threshold, a notification will be sent."
  5: hh3cEntityExtTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
            exceeds the threshold, a notification will be sent."
  6: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExternalAlarmOccur .1.3.6.1.4.1.25506.2.6.2.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the monitored device connected to the $*
SDESC
The trap is generated when the monitored device connected to the
specified entity fails.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExternalAlarmRecover .1.3.6.1.4.1.25506.2.6.2.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the failed device connected to the $*
SDESC
The trap is generated when the failed device connected to the
specified entity returns to normal.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExtCpuUsageThresholdRecover .1.3.6.1.4.1.25506.2.6.2.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the CPU usage descends the threshold. $*
SDESC
The trap indicates the CPU usage descends the threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCpuUsage
     Syntax="INTEGER32"
     Descr="The CPU usage for this entity. Generally, the overall
            CPU usage on the entity is calculated, independent of
            the number of CPUs on the entity."
  3: hh3cEntityExtCpuUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
            the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  6: hh3cEntityExtCpuUsageRecoverThreshold
     Syntax="INTEGER32"
     Descr="The recover threshold for the CPU usage.  When the CPU usage falls down to
            the threshold, a notification is sent.  The hh3cEntityExtCpuUsageRecoverThreshold
            must be less than or equal to the hh3cEntityExtCpuUsageThreshold."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdRecover .1.3.6.1.4.1.25506.2.6.2.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the memory usage descends the threshold. $*
SDESC
The trap indicates the memory usage descends the threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSize
     Syntax="UNSIGNED32"
     Descr="The size of memory for the entity.

            If the amount of memory exceeds 4,294,967,295 bytes,
            the value remains 4,294,967,295 bytes."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemAllocatedFailed .1.3.6.1.4.1.25506.2.6.2.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the memory allocated failed. $*
SDESC
The trap indicates the memory allocated failed.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTrapDescription
     Syntax="OCTETSTR"
     Descr="The information of trap."
EDESC
#
#
#
EVENT hh3cEntityExtECCParityAlarm .1.3.6.1.4.1.25506.2.6.2.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the ECC(Error Correction Code) parity error alarm. $*
SDESC
The trap indicates the ECC(Error Correction Code) parity error alarm.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtECCParityAlarmStatus
     Syntax="INTEGER"
       1: other
       10: controlmemory
       2: l1cache
       3: l2cache
       4: sdram
       5: mac
       6: tcam
       7: ingressbuffer
       8: egressbuffer
       9: lpm
     Descr="ECC parity error."
  3: hh3cEntityExtTrapDescription
     Syntax="OCTETSTR"
     Descr="The information of trap."
EDESC
#
#
#
EVENT hh3cEntityExtCritLowerTempThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.29 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtCritLowerTempThresholdNotification $*
SDESC
The hh3cEntityExtCritLowerTempThresholdNotification
indicates the temperature is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtCriticalLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the critical Temperature.  When temperature
            exceeds the critical lower temperature, a notification will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureTooLow .1.3.6.1.4.1.25506.2.6.2.0.30 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtTemperatureTooLow indicates the temperature $*
SDESC
The hh3cEntityExtTemperatureTooLow indicates the temperature
is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity halts now.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature.  When temperature
            exceeds the lower threshold, a notification will be sent and the entity
            will be shutdown."
EDESC
#
#
#
EVENT hh3cEntityExtFanDirectionNotPreferred .1.3.6.1.4.1.25506.2.6.2.0.31 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates the specified fan's direction does not $*
SDESC
This trap indicates the specified fan's direction does not
accord with preferred. The two parameters indicate the entity
index and physical name of fan.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExtFanDirectionNotAccord .1.3.6.1.4.1.25506.2.6.2.0.32 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates the direction of fans does not accord $*
SDESC
This trap indicates the direction of fans does not accord
with each other. The two parameters indicate the parent
entity of the fans.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExtSFPInvalid .1.3.6.1.4.1.25506.2.6.2.0.33 "Status Events" Normal
FORMAT ZBXTRAP $aA The transceiver module is not compatible with the interface card. $*
SDESC
The transceiver module is not compatible with the interface card.
The authorized manufacturer therefore shall NOT guarantee
the normal function of the transceiver.
The transceiver module will be invalidated in days.
Please replace it with a compatible one as soon as possible.
The trap is generated periodically after a phony transceiver module
has been found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtSFPInvalidInDays
     Syntax="INTEGER32"
     Descr="The days when the transceiver module is still valid,
            but after those days, it will be invalidated."
EDESC
#
#
#
EVENT hh3cEntityExtSFPInvalidNow .1.3.6.1.4.1.25506.2.6.2.0.34 "Status Events" Normal
FORMAT ZBXTRAP $aA This transceiver module is not compatible with the interface card. $*
SDESC
This transceiver module is not compatible with the interface card.
The authorized manufacturer therefore shall NOT guarantee
the normal function of the transceiver.
The trap is generated after a phony transceiver module
has been found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdOverTrap .1.3.6.1.4.1.25506.2.6.2.0.35 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the memory usage of the entity is $*
SDESC
This trap indicates that the memory usage of the entity is
overloaded.
This trap is used to replace
hh3cEntityExtMemUsageThresholdNotification.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSizeRev
     Syntax="COUNTER64"
     Descr="Size of memory space for the entity.

            This node is used to replace hh3cEntityExtMemSize."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdRecoverTrap .1.3.6.1.4.1.25506.2.6.2.0.36 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the memory usage decreased below $*
SDESC
This trap indicates that the memory usage decreased below
the threshold.
This trap is used to replace
hh3cEntityExtMemUsageThresholdRecover.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSizeRev
     Syntax="COUNTER64"
     Descr="Size of memory space for the entity.

            This node is used to replace hh3cEntityExtMemSize."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageNormal .1.3.6.1.4.1.25506.2.6.2.0.37 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage recovers to normal. $*
SDESC
This trap indicates that the voltage recovers to normal.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorLowThreshold
     Syntax="INTEGER32"
     Descr="The low threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
  5: hh3cEntityExtVoltageMajorHighThreshold
     Syntax="INTEGER32"
     Descr="The high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageLower .1.3.6.1.4.1.25506.2.6.2.0.38 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is lower than the $*
SDESC
This trap indicates that the voltage is lower than the
low threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorLowThreshold
     Syntax="INTEGER32"
     Descr="The low threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageTooLow .1.3.6.1.4.1.25506.2.6.2.0.39 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is lower than the $*
SDESC
This trap indicates that the voltage is lower than the
fatal low threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageFatalLowThreshold
     Syntax="INTEGER32"
     Descr="The fatal low voltage threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageHigher .1.3.6.1.4.1.25506.2.6.2.0.40 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is higher than the $*
SDESC
This trap indicates that the voltage is higher than the
high threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorHighThreshold
     Syntax="INTEGER32"
     Descr="The high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageTooHigh .1.3.6.1.4.1.25506.2.6.2.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is higher than the $*
SDESC
This trap indicates that the voltage is higher than the
fatal high threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageFatalHighThreshold
     Syntax="INTEGER32"
     Descr="The fatal high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOnEx .1.3.6.1.4.1.25506.2.6.2.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module fails $*
SDESC
The trap is generated when the SFP module fails
or runs abnormally for some particular reason.
This trap is used to replace hh3cEntityExtSFPAlarmOn.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  5: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOffEx .1.3.6.1.4.1.25506.2.6.2.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module is restored to $*
SDESC
The trap is generated when the SFP module is restored to
normal status.
This trap is used to replace hh3cEntityExtSFPAlarmOff.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  5: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
EDESC
#
#
#
EVENT hh3cEntityExtSystemFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system fatal alarm occurred. $*
SDESC
The trap is generated when a system fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system fatal alarm cleared. $*
SDESC
The trap is generated when a system fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system alarm occurred. $*
SDESC
The trap is generated when a system alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system alarm cleared. $*
SDESC
The trap is generated when a system alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system warning occurred. $*
SDESC
The trap is generated when a system warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemWarningClear .1.3.6.1.4.1.25506.2.6.4.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system warning cleared. $*
SDESC
The trap is generated when a system warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board fatal alarm occurred. $*
SDESC
The trap is generated when a board fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board fatal alarm cleared. $*
SDESC
The trap is generated when a board fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board alarm occurred. $*
SDESC
The trap is generated when a board alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board alarm cleared. $*
SDESC
The trap is generated when a board alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board warning occurred. $*
SDESC
The trap is generated when a board warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardWarningClear .1.3.6.1.4.1.25506.2.6.4.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board warning cleared. $*
SDESC
The trap is generated when a board warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power fatal alarm occurred. $*
SDESC
The trap is generated when a power fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power fatal alarm cleared. $*
SDESC
The trap is generated when a power fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power alarm occurred. $*
SDESC
The trap is generated when a power alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power alarm cleared. $*
SDESC
The trap is generated when a power alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power warning occurred. $*
SDESC
The trap is generated when a power warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerWarningClear .1.3.6.1.4.1.25506.2.6.4.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power warning cleared. $*
SDESC
The trap is generated when a power warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan fatal alarm occurred. $*
SDESC
The trap is generated when a fan fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan fatal alarm cleared. $*
SDESC
The trap is generated when a fan fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan alarm occurred. $*
SDESC
The trap is generated when a fan alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan alarm cleared. $*
SDESC
The trap is generated when a fan alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan warning occurred. $*
SDESC
The trap is generated when a fan warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanWarningClear .1.3.6.1.4.1.25506.2.6.4.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan warning cleared. $*
SDESC
The trap is generated when a fan warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage fatal alarm occurred. $*
SDESC
The trap is generated when a voltage fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage fatal alarm cleared. $*
SDESC
The trap is generated when a voltage fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage alarm occurred. $*
SDESC
The trap is generated when a voltage alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage alarm cleared. $*
SDESC
The trap is generated when a voltage alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.29 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage warning occurred. $*
SDESC
The trap is generated when a voltage warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageWarningClear .1.3.6.1.4.1.25506.2.6.4.0.30 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage warning cleared. $*
SDESC
The trap is generated when a voltage warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.31 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature fatal alarm occurred. $*
SDESC
The trap is generated when a temperature fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.32 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature fatal alarm cleared. $*
SDESC
The trap is generated when a temperature fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.33 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature alarm occurred. $*
SDESC
The trap is generated when a temperature alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.34 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature alarm cleared. $*
SDESC
The trap is generated when a temperature alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.35 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature warning occurred. $*
SDESC
The trap is generated when a temperature warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureWarningClear .1.3.6.1.4.1.25506.2.6.4.0.36 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature warning cleared. $*
SDESC
The trap is generated when a temperature warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.37 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock fatal alarm occurred. $*
SDESC
The trap is generated when a clock fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.38 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock fatal alarm cleared. $*
SDESC
The trap is generated when a clock fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.39 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock alarm occurred. $*
SDESC
The trap is generated when a clock alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.40 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock alarm cleared. $*
SDESC
The trap is generated when a clock alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock warning occurred. $*
SDESC
The trap is generated when a clock warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockWarningClear .1.3.6.1.4.1.25506.2.6.4.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock warning cleared. $*
SDESC
The trap is generated when a clock warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk fatal alarm occurred. $*
SDESC
The trap is generated when a disk fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.44 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk fatal alarm cleared. $*
SDESC
The trap is generated when a disk fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.45 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk alarm occurred. $*
SDESC
The trap is generated when a disk alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.46 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk alarm cleared. $*
SDESC
The trap is generated when a disk alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.47 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk warning occurred. $*
SDESC
The trap is generated when a disk warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskWarningClear .1.3.6.1.4.1.25506.2.6.4.0.48 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk warning cleared. $*
SDESC
The trap is generated when a disk warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.49 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical fatal alarm occurred. $*
SDESC
The trap is generated when an optical fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.50 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical fatal alarm cleared. $*
SDESC
The trap is generated when an optical fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.51 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical alarm occurred. $*
SDESC
The trap is generated when an optical alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.52 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical alarm cleared. $*
SDESC
The trap is generated when an optical alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.53 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical warning occurred. $*
SDESC
The trap is generated when an optical warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalWarningClear .1.3.6.1.4.1.25506.2.6.4.0.54 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical warning cleared. $*
SDESC
The trap is generated when an optical warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.55 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link fatal alarm occurred. $*
SDESC
The trap is generated when an internal link fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.56 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link fatal alarm cleared. $*
SDESC
The trap is generated when an internal link fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.57 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link alarm occurred. $*
SDESC
The trap is generated when an internal link alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.58 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link alarm cleared. $*
SDESC
The trap is generated when an internal link alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.59 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link warning occurred. $*
SDESC
The trap is generated when an internal link warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkWarningClear .1.3.6.1.4.1.25506.2.6.4.0.60 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link warning cleared. $*
SDESC
The trap is generated when an internal link warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax=""
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
#
MIB: HH3C-ENTITY-VENDORTYPE-OID-MIB (file:./hh3c-entity-vendortype-oid.mib) converted on Fri Mar 18 21:59:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ENTRELATION-MIB (file:./hh3c-entrelation.mib) converted on Fri Mar 18 21:59:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EOC-COMMON-MIB (file:./hh3c-eoc-common.mib) converted on Fri Mar 18 21:59:18 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEOCCnuRegExcessTrap .1.3.6.1.4.1.25506.2.83.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegExcessTrap notification is sent when the
number of registered CNUs exceeds the limit.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuRegExcessRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegExcessRecoverTrap notification is sent when
hh3cEOCCnuRegExcessTrap is detected and then recoverd.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuRegSuccTrap .1.3.6.1.4.1.25506.2.83.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegSuccTrap notification is sent when a
CNU registers successful.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuOffLineTrap .1.3.6.1.4.1.25506.2.83.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuOffLineTrap notification is sent when a
CNU offline.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuLinkupTrap .1.3.6.1.4.1.25506.2.83.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuLinkupTrap notification is sent when a
CNU linkup.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCOamDisconnectTrap .1.3.6.1.4.1.25506.2.83.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCOamDisconnectionTrap notification is sent when
LLID's OAM link is disconnected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCOamDisconnectRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCOamDisconnectionRecoverTrap notification is sent when
LLID's OAM link is disconnected and then connected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCBandwidthNotEnoughTrap .1.3.6.1.4.1.25506.2.83.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Bandwidth is not enough, cnu can not bind now.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuAttenuationTrap .1.3.6.1.4.1.25506.2.83.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cHPEOCCnuAttenuationTrap notification is sent when a
CNU's attenuation is changing.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuAttenuation
     Syntax="INTEGER32"
     Descr="
        The cnu's average attenuation.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRegFailTrap .1.3.6.1.4.1.25506.2.83.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegFailTrap notification is sent when a
CNU registers fail.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCLTCablePortErrorTrap .1.3.6.1.4.1.25506.2.83.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCLTCablePortErrorTrap notification is sent when the
hardware of cable port occurs error or CLT's vlan is configged
error.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCLTCablePortErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCLTCablePortErrReTrap notification is sent when cable port
error and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuTxRateDropTrap .1.3.6.1.4.1.25506.2.83.5.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuTxRateDropTrap notification is sent when cable port
rate of TX capability drop exceeded threshold.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuTxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of tx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuTxRateDropRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuTxRateDropRecoverTrap notification is sent when cable port
rate of TX capability recover from the recent rate-drop trap.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuTxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of tx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRxRateDropTrap .1.3.6.1.4.1.25506.2.83.5.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRxRateDropTrap notification is sent when cable port
rate of RX capability drop exceeded threshold.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuRxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of rx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRxRateDropRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRxRateDropRecoverTrap notification is sent when cable port
rate of RX capability recover from the recent rate-drop trap.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuRxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of rx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuFWDownLoadErrTrap .1.3.6.1.4.1.25506.2.83.5.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuFWDownLoadErrTrap notification is sent when CLT can't
download CNU firmware from the server successfully.

Variables:
  1: hh3cHPEOCDownLoadCNUFWResult
     Syntax=""
EDESC
#
#
#
EVENT hh3cEOCCnuFWDownLoadErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuFWDownLoadErrReTrap notification is sent when CLT recover
from the download CNU firmware error.

EDESC
#
#
#
EVENT hh3cEOCCnuDeviceTypeErrTrap .1.3.6.1.4.1.25506.2.83.5.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuDeviceTypeErrTrap notification is sent when the online CNU
doesn't match the type which user defined earlier.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuDeviceType
     Syntax="OCTETSTR"
     Descr="
        The type of the EOC CNU(Coax Network Unit).
        "
EDESC
#
#
#
EVENT hh3cEOCCnuDeviceTypeErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuDeviceTypeErrReTrap notification is sent when the online CNU
doesn't match the type which user defined earlier and then recover.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuAutoUpdateErrTrap .1.3.6.1.4.1.25506.2.83.5.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuAutoUpdateErrTrap notification is sent when the online CNU
doesn't auto update successfully.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuAutoUpdateSuccTrap .1.3.6.1.4.1.25506.2.83.5.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuAutoUpdateSuccTrap notification is sent when the online CNU
auto update successfully.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCLoopbackDetectTrap .1.3.6.1.4.1.25506.2.83.5.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCLoopbackDetectTrap notification is sent when the loopback between
the ethernet ports of CNU or CLT is found.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCLoopbackRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCLoopbackRecoverTrap notification is sent when the loopback between
the ethernet ports of CNU or CLT is recover.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
#
MIB: HH3C-EPON-DEVICE-MIB (file:./hh3c-epon-device.mib) converted on Fri Mar 18 21:59:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EPON-FB-MIB (file:./hh3c-epon-fb.mib) converted on Fri Mar 18 21:59:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EPON-MIB (file:./hh3c-epon.mib) converted on Fri Mar 18 21:59:18 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEponPortAlarmBerTrap .1.3.6.1.4.1.25506.2.42.1.8.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmBerTrap notification is sent when
a BER threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmBerDirect
     Syntax="INTEGER"
       1: berUplink
       2: berDownlink
       3: berAll
     Descr="
        Traffic direction to monitor for BER alarm.
        "
  4: hh3cOltPortAlarmBer
     Syntax="UNSIGNED32"
     Descr="
        error bit rate.
        "
  5: hh3cOltPortAlarmBerThreshold
     Syntax="INTEGER32"
     Descr="
        BER threshold exceed which the alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmFerTrap .1.3.6.1.4.1.25506.2.42.1.8.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmFerTrap notification is sent when
a frame error rate threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmFerDirect
     Syntax="INTEGER"
       1: ferUplink
       2: ferDownlink
       3: ferAll
     Descr="
        Traffic direction to monitor for FER alarm.
        "
  4: hh3cOltPortAlarmFer
     Syntax="UNSIGNED32"
     Descr="
        error frames rate.
        "
  5: hh3cOltPortAlarmFerThreshold
     Syntax="INTEGER32"
     Descr="
        Frame error rate exceed threshold then the alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponErrorLLIDFrameTrap .1.3.6.1.4.1.25506.2.42.1.8.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponErrorLLIDFrameTrap notification is sent when a
LLID mismatched frames rate threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmLlidMisFrames
     Syntax="UNSIGNED32"
     Descr="
        the amount of mismatched frames about the LLID mismatch alarm.
        "
  4: hh3cOltPortAlarmLlidMismatchThreshold
     Syntax="INTEGER32"
     Descr="
        The minimal number of mismatched frames exceed threshold then
        LLID mismatch alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponLoopBackEnableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLoopBackEnableTrap notification is sent when
the loop back command is committed.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponLoopbackPortIndex
     Syntax="INTEGER32"
     Descr="
        The index of port which generate loop back event.
        "
  4: hh3cEponLoopbackPortDescr
     Syntax="OCTETSTR"
     Descr="
        A textual string containing information about the
        port generated loop back event.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegistrationErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegistrationErrTrap notification is sent when a
ONU register failed.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorMacAddr
     Syntax="OCTETSTR"
     Descr="
        The MAC of ONU registered error.
        "
EDESC
#
#
#
EVENT hh3cEponOamDisconnectionTrap .1.3.6.1.4.1.25506.2.42.1.8.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamDisconnectionTrap notification is sent when
LLID's OAM link is disconnected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponEncryptionKeyErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponEncryptionKeyErrTrap notification is sent when
LLID's encryption key is bad.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponRemoteStableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponRemoteStableTrap notification is sent when
remote Data Terminal Equipment(DTE) has not seen or
is unsatisfied with local state information.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLocalStableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLocalStableTrap notification is sent when
DTE has not seen or is unsatisfied with remote state
information.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOamVendorSpecificTrap .1.3.6.1.4.1.25506.2.42.1.8.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamVendorSpecificTrap notification is sent when
system vendor specific OAM alarm raised.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOamVendorSpecificAlarmCode
     Syntax="INTEGER32"
     Descr="
        Alarm code of the vendor.
        "
EDESC
#
#
#
EVENT hh3cEponSoftwareErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponSoftwareErrTrap notification is sent when
a PAS-SOFT internal error occurs.

Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cEponSoftwareErrorCode
     Syntax="INTEGER32"
     Descr="
        OLT software error code.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmBerRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmBerRecoverTrap notification is sent when
a BER threshold crossing event is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmBerDirect
     Syntax="INTEGER"
       1: berUplink
       2: berDownlink
       3: berAll
     Descr="
        Traffic direction to monitor for BER alarm.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmFerRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmFerRecoverTrap notification is sent when
a frame error rate threshold crossing event is detected and then
recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmFerDirect
     Syntax="INTEGER"
       1: ferUplink
       2: ferDownlink
       3: ferAll
     Descr="
        Traffic direction to monitor for FER alarm.
        "
EDESC
#
#
#
EVENT hh3cEponErrorLLIDFrameRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponErrorLLIDFrameRecoverTrap notification is sent when a
LLID mismatched frames rate threshold crossing event is detected
and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLoopBackEnableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLoopBackEnableRecoverTrap notification is sent when
the loop back is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuRegistrationErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegistrationErrRecoverTrap notification is sent when an
ONU register failed and then register successful again.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorMacAddr
     Syntax="OCTETSTR"
     Descr="
        The MAC of ONU registered error.
        "
EDESC
#
#
#
EVENT hh3cEponOamDisconnectionRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamDisconnectionRecoverTrap notification is sent when
LLID's OAM link is disconnected and then connected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponEncryptionKeyErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponEncryptionKeyErrRecoverTrap notification is sent when
LLID's encryption key is bad and then right.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponRemoteStableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponRemoteStableRecoverTrap notification is sent when
remote DTE has not seen or is unsatisfied with local
state information and then is realized.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLocalStableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLocalStableRecoverTrap notification is sent when
DTE has not seen or is unsatisfied with remote state
information and then is realized.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOamVendorSpecificRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamVendorSpecificRecoverTrap notification is sent when
system vendor specific OAM alarm is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOamVendorSpecificAlarmCode
     Syntax="INTEGER32"
     Descr="
        Alarm code of the vendor.
        "
EDESC
#
#
#
EVENT hh3cEponSoftwareErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponSoftwareErrRecoverTrap notification is sent when
a PAS-SOFT internal error is detected and then recovered.

Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cEponSoftwareErrorCode
     Syntax="INTEGER32"
     Descr="
        OLT software error code.
        "
EDESC
#
#
#
EVENT hh3cDot3OamThresholdRecoverEvent .1.3.6.1.4.1.25506.2.42.1.8.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cDot3OamThresholdRecoverEvent notification is sent when
hh3cDot3OamThresholdEvent is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cOamEventLogType
     Syntax="UNSIGNED32"
     Descr="
        The type of event that generated this entry in the event log.
        "
  3: hh3cOamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="
        Whether this event occurred locally, or was received from the
        OAM peer via Ethernet OAM.
        "
EDESC
#
#
#
EVENT hh3cDot3OamNonThresholdRecoverEvent .1.3.6.1.4.1.25506.2.42.1.8.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cDot3OamNonThresholdRecoverEvent notification is sent when
hh3cDot3OamNonThresholdEvent is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cOamEventLogType
     Syntax="UNSIGNED32"
     Descr="
        The type of event that generated this entry in the event log.
        "
  3: hh3cOamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="
        Whether this event occurred locally, or was received from the
        OAM peer via Ethernet OAM.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegExcessTrap .1.3.6.1.4.1.25506.2.42.1.8.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegExcessTrap notification is sent when the
number of registered ONUs exceeds the limit.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuRegExcessRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegExcessRecoverTrap notification is sent when
hh3cEponOnuRegExcessTrap is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuPowerOffTrap .1.3.6.1.4.1.25506.2.42.1.8.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when ONU is power off.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltSwitchoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOltSwithoverTrap notification is sent when OLT switchover
is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltDFETrap .1.3.6.1.4.1.25506.2.42.1.8.0.29 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOltDFETrap notification is sent when there was
a serious problem(device fatal error) on OLT.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltDFERecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.30 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOltDFERecoverTrap notification is sent when
device fatal error is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuSilenceTrap .1.3.6.1.4.1.25506.2.42.1.8.0.31 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceTrap notification is sent when an
unbound ONU try to register to an OLT.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.32 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceRecoverTrap notification is sent when
a silent ONU is bound in the OLT or the aging onu mac
address is timeout.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
EDESC
#
#
#
EVENT hh3cEponOnuUpdateResultTrap .1.3.6.1.4.1.25506.2.42.1.8.0.33 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUpdateResultTrap notification is sent when
an ONU reported its firmware update result.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindMacAddress
     Syntax="OCTETSTR"
     Descr="
        Bind the MAC of ONU.
        While the MAC is not bound, the ONU can not go into
        effect and configurations can not be set.
        Set 0-0-0 (MAC address) to the EPON device port will
        unbind the relationship with the original MAC and
        configurations will be set to default values.
        "
  4: hh3cOnuUpdateResult
     Syntax="INTEGER"
       1: updating
       2: ok
       3: fail
       4: fileNotExist
       5: notSetFilename
       6: fileNotMatchONU
       7: timeout
       8: otherError
     Descr="
        The ONU firmware update result.
        updating  - The ONU is updating firmware right now.
        ok     - The ONU update result is OK.
        fail   - The ONU update result is fail.
        fileNotExist - The ONU update failed because the file does not exist.
        notSetFilename - The ONU firmware filename is not set.
        fileNotMatchONU - The ONU firmware does not match the ONU.
        timeout - The ONU responses timeout.
        otherError - The ONU update result is unknown.
        "
  5: hh3cOnuRegType
     Syntax="OCTETSTR"
     Descr="
        ONU registered type.
        "
  6: hh3cOnuUpdateFileName
     Syntax="OCTETSTR"
     Descr="
        The filename of the ONU firmware to be updated.
        Note that the filename must contain the file path.
        "
EDESC
#
#
#
EVENT hh3cEponOnuAutoBindTrap .1.3.6.1.4.1.25506.2.42.1.8.0.34 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuAutoBindTrap notification is sent
when a silent ONU is bound automatically.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindMacAddress
     Syntax="OCTETSTR"
     Descr="
        Bind the MAC of ONU.
        While the MAC is not bound, the ONU can not go into
        effect and configurations can not be set.
        Set 0-0-0 (MAC address) to the EPON device port will
        unbind the relationship with the original MAC and
        configurations will be set to default values.
        "
  4: hh3cEponOperationResult
     Syntax="OCTETSTR"
     Descr="
        The result of EPON operation.
        "
EDESC
#
#
#
EVENT hh3cEponOnuPortStpStateTrap .1.3.6.1.4.1.25506.2.42.1.8.0.35 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPortStpStateTrap notification is sent when
a port turns into another state in STP environment.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponStpPortIndex
     Syntax="INTEGER32"
     Descr="The index of the STP ports."
  4: hh3cEponStpPortDescr
     Syntax="OCTETSTR"
     Descr="The description of the STP ports."
  5: hh3cEponStpPortState
     Syntax="INTEGER"
       1: disabled
       2: discarding
       3: learning
       4: forwarding
     Descr="The current state of the port (i.e. disabled, discarding,
         learning and forwarding)."
EDESC
#
#
#
EVENT hh3cEponOnuLaserFailedTrap .1.3.6.1.4.1.25506.2.42.1.8.0.36 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuLaserFailedTrap notification is sent when
an ONU has trouble with laser, such as laser constantly turned on,
signal degradation or optics EOL (End of Life).

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuLaserState
     Syntax="INTEGER"
       1: normal
       2: laserAlwaysOn
       3: signalDegradation
       4: endOfLife
     Descr="
        The state of ONU laser.
        "
EDESC
#
#
#
EVENT hh3cOnuSmlkSwitchoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.37 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cOnuSmlkSwitchoverTrap notification is sent when
an ONU SMLK switchover is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuSmlkGroupID
     Syntax="INTEGER32"
     Descr="
        The SMLK group ID of ONU.
        "
  4: hh3cOnuSmlkFirstPonStatus
     Syntax="INTEGER"
       1: active
       2: standby
       3: down
       4: null
     Descr="
        The transmitting status of ONU first PON port in a SMLK group.
        "
  5: hh3cOnuSmlkSecondPonStatus
     Syntax="INTEGER"
       1: active
       2: standby
       3: down
       4: null
     Descr="
        The transmitting status of ONU second PON port in a SMLK group.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegLoidErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.38 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegLoidErrTrap notification is sent when an
ONU failed to register identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of an ONU with registration error.
        "
  4: hh3cEponOnuRegErrorLoidCode
     Syntax="INTEGER"
       1: loidNotExist
       2: wrongPassword
       3: conflictLoid
       4: notSupport
       5: mismatch
     Descr="
        The reason of ONU registration failure.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegLoidErrRecTrap .1.3.6.1.4.1.25506.2.42.1.8.0.39 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegLoidErrRecTrap notification is sent when an
ONU failed to register and then registered successful again identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of an ONU with registration error.
        "
  4: hh3cEponOnuRegErrorLoidCode
     Syntax="INTEGER"
       1: loidNotExist
       2: wrongPassword
       3: conflictLoid
       4: notSupport
       5: mismatch
     Descr="
        The reason of ONU registration failure.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceLoidTrap .1.3.6.1.4.1.25506.2.42.1.8.0.40 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceLoidTrap notification is sent when an
unbound ONU try to register to an OLT identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentBindType
     Syntax="BITS"
     Descr="
        The binding type of a silent ONU.
        "
  4: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
  5: hh3cEponOnuRegSilentLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of a silent ONU.
        "
  6: hh3cEponOnuRegSilentLoidPwd
     Syntax="OCTETSTR"
     Descr="
        The LOID's password of a silent ONU.
        A zero-length string will be returned when reading.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceLoidRecTrap .1.3.6.1.4.1.25506.2.42.1.8.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceLoidRecTrap notification is sent when
a silent ONU is bound in the OLT or the aging ONU MAC
address times out identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentBindType
     Syntax="BITS"
     Descr="
        The binding type of a silent ONU.
        "
  4: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
  5: hh3cEponOnuRegSilentLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of a silent ONU.
        "
  6: hh3cEponOnuRegSilentLoidPwd
     Syntax="OCTETSTR"
     Descr="
        The LOID's password of a silent ONU.
        A zero-length string will be returned when reading.
        "
EDESC
#
#
#
EVENT hh3cEponOnuUpdateLoidRetTrap .1.3.6.1.4.1.25506.2.42.1.8.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuUpdateLoidRetTrap notification is sent when
an ONU reported its firmware update result identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindLoid
     Syntax="OCTETSTR"
     Descr="
        Bind the LOID of ONU.
        While the LOID is not bound, the ONU can not go into
        effect and configurations can not be set.
        "
  4: hh3cOnuUpdateResult
     Syntax="INTEGER"
       1: updating
       2: ok
       3: fail
       4: fileNotExist
       5: notSetFilename
       6: fileNotMatchONU
       7: timeout
       8: otherError
     Descr="
        The ONU firmware update result.
        updating  - The ONU is updating firmware right now.
        ok     - The ONU update result is OK.
        fail   - The ONU update result is fail.
        fileNotExist - The ONU update failed because the file does not exist.
        notSetFilename - The ONU firmware filename is not set.
        fileNotMatchONU - The ONU firmware does not match the ONU.
        timeout - The ONU responses timeout.
        otherError - The ONU update result is unknown.
        "
  5: hh3cOnuRegType
     Syntax="OCTETSTR"
     Descr="
        ONU registered type.
        "
  6: hh3cOnuUpdateFileName
     Syntax="OCTETSTR"
     Descr="
        The filename of the ONU firmware to be updated.
        Note that the filename must contain the file path.
        "
EDESC
#
#
#
EVENT hh3cEponOnuAutoBindLoidTrap .1.3.6.1.4.1.25506.2.42.1.8.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuAutoBindLoidTrap notification is sent
when a silent ONU is bound automatically identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindLoid
     Syntax="OCTETSTR"
     Descr="
        Bind the LOID of ONU.
        While the LOID is not bound, the ONU can not go into
        effect and configurations can not be set.
        "
  4: hh3cEponOperationResult
     Syntax="OCTETSTR"
     Descr="
        The result of EPON operation.
        "
EDESC
#
#
#
EVENT hh3cEponOnuPowerOnTrap .1.3.6.1.4.1.25506.2.42.1.8.0.44 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when ONU is powered on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOpticalSignalLosTrap .1.3.6.1.4.1.25506.2.42.1.8.0.45 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOpticalSignalLosTrap notification is sent when optical signals are lost.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOpticalSignalLosRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.46 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOpticalSignalLosTrap notification is sent when optical signal loss recovers.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuFiberFailTrap .1.3.6.1.4.1.25506.2.42.1.8.0.47 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when the ONU fiber fails.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuFiberFailRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.48 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when the ONU fiber failure recovers.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-EPON-UNI-MIB (file:./hh3c-epon-uni.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEponUniLinkUpTrap .1.3.6.1.4.1.25506.2.42.5.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLinkUpTrap notification is sent
when the UNI up event is detected
and the transmitting switch is turned on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the user network interface. When a managed
        system initializes, all user network interfaces start with down(2)
        state. The testing(3)state indicates that no operational packets
        can be passed. As a result of either explicit management action or
        per configuration information retained by the managed system,
        hh3cEponUniAdminStatus is then changed to either the up(1) or
        testing(3) states (or remains in the down(2) state)."
EDESC
#
#
#
EVENT hh3cEponUniLinkDownTrap .1.3.6.1.4.1.25506.2.42.5.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLinkDownTrap notification is sent
when the UNI down event is detected
and the transmitting switch is turned on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the user network interface. When a managed
        system initializes, all user network interfaces start with down(2)
        state. The testing(3)state indicates that no operational packets
        can be passed. As a result of either explicit management action or
        per configuration information retained by the managed system,
        hh3cEponUniAdminStatus is then changed to either the up(1) or
        testing(3) states (or remains in the down(2) state)."
EDESC
#
#
#
EVENT hh3cEponUniLoopBackDetectedTrap .1.3.6.1.4.1.25506.2.42.5.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLoopBackDetectedTrap notification is sent
when the UNI loopback event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniVlan
     Syntax="INTEGER32"
     Descr="
        If the function is not supported,
        the default value 0 will be returned.
        Unit:decibel(db).
        "
EDESC
#
#
#
EVENT hh3cEponUniLoopBackRecoveredTrap .1.3.6.1.4.1.25506.2.42.5.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLoopBackRecoveredTrap notification is sent
when the UNI loopback is recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniVlan
     Syntax="INTEGER32"
     Descr="
        If the function is not supported,
        the default value 0 will be returned.
        Unit:decibel(db).
        "
EDESC
#
#
#
EVENT hh3cEponCTCAlarmTrap .1.3.6.1.4.1.25506.2.42.5.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponCTCAlarmTrap notification is sent
when an ONU CTC alarm is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponCTCAlarmID
     Syntax="INTEGER"
       1: onuEquipmentAlarm
       10: onuONUTempLowAlarm
       1025: uniPOTSPortFailure
       11: onuIADConnectionFailure
       12: onuPonIFSwitch
       1281: uniE1PortFailure
       1282: uniE1TimingUnlock
       1283: uniE1LOS
       13: onuSleepStatusUpdate
       2: onuPowerAlarm
       257: ponRXPowerHighAlarm
       258: ponRXPowerLowAlarm
       259: ponTXPowerHighAlarm
       260: ponTXPowerLowAlarm
       261: ponTXBiasHighAlarm
       262: ponTXBiasLowAlarm
       263: ponVccHighAlarm
       264: ponVccLowAlarm
       265: ponTempHighAlarm
       266: ponTempLowAlarm
       267: ponRXPowerHighWarning
       268: ponRXPowerLowWarning
       269: ponTXPowerHighWarning
       270: ponTXPowerLowWarning
       271: ponTXBiasHighWarning
       272: ponTXBiasLowWarning
       273: ponVccHighWarning
       274: ponVccLowWarning
       275: ponTempHighWarning
       276: ponTempLowWarning
       277: ponDownstreamDropEventsAlarm
       278: ponUpstreamDropEventsAlarm
       279: ponDownstreamCRCErrorFramesAlarm
       280: ponUpstreamCRCErrorFramesAlarm
       281: ponDownstreamUndersizeFramesAlarm
       282: ponUpstreamUndersizeFramesAlarm
       283: ponDownstreamOversizeFramesAlarm
       284: ponUpstreamOversizeFramesAlarm
       285: ponDownstreamFragmentsAlarm
       286: ponUpstreamFragmentsAlarm
       287: ponDownstreamJabbersAlarm
       288: ponUpstreamJabbersAlarm
       289: ponDownstreamDiscardsAlarm
       290: ponUpstreamDiscardsAlarm
       291: ponDownstreamErrorsAlarm
       292: ponUpstreamErrorsAlarm
       293: ponDownstreamDropEventsWarning
       294: ponUpstreamDropEventsWarning
       295: ponDownstreamCRCErrorFramesWarning
       296: ponUpstreamCRCErrorFramesWarning
       297: ponDownstreamUndersizeFramesWarning
       298: ponUpstreamUndersizeFramesWarning
       299: ponDownstreamOversizeFramesWarning
       3: onuBatteryMissing
       300: ponUpstreamOversizeFramesWarning
       301: ponDownstreamFragmentsWarning
       302: ponUpstreamFragmentsWarning
       303: ponDownstreamJabbersWarning
       304: ponUpstreamJabbersWarning
       305: ponDownstreamDiscardsWarning
       306: ponUpstreamDiscardsWarning
       307: ponDownstreamErrorsWarning
       308: ponUpstreamErrorsWarning
       4: onuBatteryFailure
       5: onuBatteryVoltLow
       6: onuPhysicalIntrusionAlarm
       7: onuONUSelfTestFailure
       769: uniEthPortAutoNegFailure
       770: uniEthPortLOS
       771: uniEthPortFailure
       772: uniEthPortLoopback
       773: uniEthPortCongestion
       774: uniDownstreamDropEventsAlarm
       775: uniUpstreamDropEventsAlarm
       776: uniDownstreamCRCErrorFramesAlarm
       777: uniUpstreamCRCErrorFramesAlarm
       778: uniDownstreamUndersizeFramesAlarm
       779: uniUpstreamUndersizeFramesAlarm
       780: uniDownstreamOversizeFramesAlarm
       781: uniUpstreamOversizeFramesAlarm
       782: uniDownstreamFragmentsAlarm
       783: uniUpstreamFragmentsAlarm
       784: uniDownstreamJabbersAlarm
       785: uniUpstreamJabbersAlarm
       786: uniDownstreamDiscardsAlarm
       787: uniUpstreamDiscardsAlarm
       788: uniDownstreamErrorsAlarm
       789: uniUpstreamErrorsAlarm
       790: uniStatusChangeTimesAlarm
       791: uniDownstreamDropEventsWarning
       792: uniUpstreamDropEventsWarning
       793: uniDownstreamCRCErrorFramesWarning
       794: uniUpstreamCRCErrorFramesWarning
       795: uniDownstreamUndersizeFramesWarning
       796: uniUpstreamUndersizeFramesWarning
       797: uniDownstreamOversizeFramesWarning
       798: uniUpstreamOversizeFramesWarning
       799: uniDownstreamFragmentsWarning
       800: uniUpstreamFragmentsWarning
       801: uniDownstreamJabbersWarning
       802: uniUpstreamJabbersWarning
       803: uniDownstreamDiscardsWarning
       804: uniUpstreamDiscardsWarning
       805: uniDownstreamErrorsWarning
       806: uniUpstreamErrorsWarning
       807: uniStatusChangeTimesWarning
       9: onuONUTempHighAlarm
     Descr="
        The CTC alarm ID. There are 3 types of CTC alarms.
        ONU alarm:   0x0001~0x00ff
        PON alarm:   0x0101~0x01ff
        UNI alarm:   0x0301~0x05ff
        "
  4: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  5: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  6: hh3cEponCTCAlarmInfo
     Syntax="OCTETSTR"
     Descr="
        The information of an ONU CTC alarm.
        "
EDESC
#
#
#
EVENT hh3cEponCTCAlarmRecoverTrap .1.3.6.1.4.1.25506.2.42.5.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponCTCAlarmRecoverTrap notification is sent
when an ONU CTC alarm is cleared.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponCTCAlarmID
     Syntax="INTEGER"
       1: onuEquipmentAlarm
       10: onuONUTempLowAlarm
       1025: uniPOTSPortFailure
       11: onuIADConnectionFailure
       12: onuPonIFSwitch
       1281: uniE1PortFailure
       1282: uniE1TimingUnlock
       1283: uniE1LOS
       13: onuSleepStatusUpdate
       2: onuPowerAlarm
       257: ponRXPowerHighAlarm
       258: ponRXPowerLowAlarm
       259: ponTXPowerHighAlarm
       260: ponTXPowerLowAlarm
       261: ponTXBiasHighAlarm
       262: ponTXBiasLowAlarm
       263: ponVccHighAlarm
       264: ponVccLowAlarm
       265: ponTempHighAlarm
       266: ponTempLowAlarm
       267: ponRXPowerHighWarning
       268: ponRXPowerLowWarning
       269: ponTXPowerHighWarning
       270: ponTXPowerLowWarning
       271: ponTXBiasHighWarning
       272: ponTXBiasLowWarning
       273: ponVccHighWarning
       274: ponVccLowWarning
       275: ponTempHighWarning
       276: ponTempLowWarning
       277: ponDownstreamDropEventsAlarm
       278: ponUpstreamDropEventsAlarm
       279: ponDownstreamCRCErrorFramesAlarm
       280: ponUpstreamCRCErrorFramesAlarm
       281: ponDownstreamUndersizeFramesAlarm
       282: ponUpstreamUndersizeFramesAlarm
       283: ponDownstreamOversizeFramesAlarm
       284: ponUpstreamOversizeFramesAlarm
       285: ponDownstreamFragmentsAlarm
       286: ponUpstreamFragmentsAlarm
       287: ponDownstreamJabbersAlarm
       288: ponUpstreamJabbersAlarm
       289: ponDownstreamDiscardsAlarm
       290: ponUpstreamDiscardsAlarm
       291: ponDownstreamErrorsAlarm
       292: ponUpstreamErrorsAlarm
       293: ponDownstreamDropEventsWarning
       294: ponUpstreamDropEventsWarning
       295: ponDownstreamCRCErrorFramesWarning
       296: ponUpstreamCRCErrorFramesWarning
       297: ponDownstreamUndersizeFramesWarning
       298: ponUpstreamUndersizeFramesWarning
       299: ponDownstreamOversizeFramesWarning
       3: onuBatteryMissing
       300: ponUpstreamOversizeFramesWarning
       301: ponDownstreamFragmentsWarning
       302: ponUpstreamFragmentsWarning
       303: ponDownstreamJabbersWarning
       304: ponUpstreamJabbersWarning
       305: ponDownstreamDiscardsWarning
       306: ponUpstreamDiscardsWarning
       307: ponDownstreamErrorsWarning
       308: ponUpstreamErrorsWarning
       4: onuBatteryFailure
       5: onuBatteryVoltLow
       6: onuPhysicalIntrusionAlarm
       7: onuONUSelfTestFailure
       769: uniEthPortAutoNegFailure
       770: uniEthPortLOS
       771: uniEthPortFailure
       772: uniEthPortLoopback
       773: uniEthPortCongestion
       774: uniDownstreamDropEventsAlarm
       775: uniUpstreamDropEventsAlarm
       776: uniDownstreamCRCErrorFramesAlarm
       777: uniUpstreamCRCErrorFramesAlarm
       778: uniDownstreamUndersizeFramesAlarm
       779: uniUpstreamUndersizeFramesAlarm
       780: uniDownstreamOversizeFramesAlarm
       781: uniUpstreamOversizeFramesAlarm
       782: uniDownstreamFragmentsAlarm
       783: uniUpstreamFragmentsAlarm
       784: uniDownstreamJabbersAlarm
       785: uniUpstreamJabbersAlarm
       786: uniDownstreamDiscardsAlarm
       787: uniUpstreamDiscardsAlarm
       788: uniDownstreamErrorsAlarm
       789: uniUpstreamErrorsAlarm
       790: uniStatusChangeTimesAlarm
       791: uniDownstreamDropEventsWarning
       792: uniUpstreamDropEventsWarning
       793: uniDownstreamCRCErrorFramesWarning
       794: uniUpstreamCRCErrorFramesWarning
       795: uniDownstreamUndersizeFramesWarning
       796: uniUpstreamUndersizeFramesWarning
       797: uniDownstreamOversizeFramesWarning
       798: uniUpstreamOversizeFramesWarning
       799: uniDownstreamFragmentsWarning
       800: uniUpstreamFragmentsWarning
       801: uniDownstreamJabbersWarning
       802: uniUpstreamJabbersWarning
       803: uniDownstreamDiscardsWarning
       804: uniUpstreamDiscardsWarning
       805: uniDownstreamErrorsWarning
       806: uniUpstreamErrorsWarning
       807: uniStatusChangeTimesWarning
       9: onuONUTempHighAlarm
     Descr="
        The CTC alarm ID. There are 3 types of CTC alarms.
        ONU alarm:   0x0001~0x00ff
        PON alarm:   0x0101~0x01ff
        UNI alarm:   0x0301~0x05ff
        "
  4: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  5: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  6: hh3cEponCTCAlarmInfo
     Syntax="OCTETSTR"
     Descr="
        The information of an ONU CTC alarm.
        "
EDESC
#
#
#
#
MIB: HH3C-EVB-MIB (file:./hh3c-evb.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EVC-MIB (file:./hh3c-evc.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EVI-MIB (file:./hh3c-evi.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEviNewDed .1.3.6.1.4.1.25506.2.132.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that a new DED has been elected. $*
SDESC
Notifies that a new DED has been elected.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
  3: hh3cEviISISNbrSysId
     Syntax=""
     Descr="System ID of the neighbor."
EDESC
#
#
#
EVENT hh3cEviSiteEDTopoChange .1.3.6.1.4.1.25506.2.132.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that the EVI network topology has changed. $*
SDESC
Notifies that the EVI network topology has changed.
Variables:
  1: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
  2: hh3cEviISISNbrSiteNbrs
     Syntax="UNSIGNED32"
     Descr="The count of neighbors that belong to the same site."
EDESC
#
#
#
EVENT hh3cEviEDLinkDisconnect .1.3.6.1.4.1.25506.2.132.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that all the EVI links on a tunnel are down. $*
SDESC
Notifies that all the EVI links on a tunnel are down.
Variables:
  1: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
EDESC
#
#
#
#
MIB: HH3C-EVPN-MIB (file:./hh3c-evpn.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FAILOVER-MIB (file:./hh3c-failover.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFailoverCreate .1.3.6.1.4.1.25506.2.164.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cFailoverCreate trap indicates that the failover group has created. $*
SDESC
The hh3cFailoverCreate trap indicates that the failover group has created.
Variables:
  1: hh3cFailoverIndex
     Syntax="UNSIGNED32"
     Descr="Failover group ID is used as group index, the value range of failover group ID
        depends on the device model.
        The failover GroupIndex cannot be modified after creation."
  2: hh3cFailoverName
     Syntax="OCTETSTR"
     Descr="Specifies the backup group name, a case-sensitive string of 1 to 63 characters.
        The failover group name cannot be modified after creation.
        The name can not include '?', and can not begin or end with ' '."
EDESC
#
#
#
EVENT hh3cFailoverDelete .1.3.6.1.4.1.25506.2.164.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cFailoverDelete trap indicates that the failover group has deleted. $*
SDESC
The hh3cFailoverDelete trap indicates that the failover group has deleted.
Variables:
  1: hh3cFailoverIndex
     Syntax="UNSIGNED32"
     Descr="Failover group ID is used as group index, the value range of failover group ID
        depends on the device model.
        The failover GroupIndex cannot be modified after creation."
  2: hh3cFailoverName
     Syntax="OCTETSTR"
     Descr="Specifies the backup group name, a case-sensitive string of 1 to 63 characters.
        The failover group name cannot be modified after creation.
        The name can not include '?', and can not begin or end with ' '."
EDESC
#
#
#
EVENT hh3cFailoverPrimaryNodeAdd .1.3.6.1.4.1.25506.2.164.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cFailoverPrimaryNodeAdd trap indicates that the failover group has $*
SDESC
The hh3cFailoverPrimaryNodeAdd trap indicates that the failover group has
added the primary node.
Variables:
  1: hh3cFailoverIndex
     Syntax="UNSIGNED32"
     Descr="Failover group ID is used as group index, the value range of failover group ID
        depends on the device model.
        The failover GroupIndex cannot be modified after creation."
  2: hh3cFailoverName
     Syntax="OCTETSTR"
     Descr="Specifies the backup group name, a case-sensitive string of 1 to 63 characters.
        The failover group name cannot be modified after creation.
        The name can not include '?', and can not begin or end with ' '."
  3: hh3cFailoverPrimaryChassisID
     Syntax="INTEGER32"
     Descr="Specifies a card on an IRF member device.  The chassis-number argument represents
        the member ID of the IRF member device.  (Distributed devices In IRF mode.)
        On a centralized or distributed device, the value for this node is always zero.
        Note:The -1 for delete the node."
  4: hh3cFailoverPrimarySlotID
     Syntax="INTEGER32"
     Descr="Specifies a card by its slot number.  (Distributed devices In standalone mode.)
        Note:The -1 for delete the node."
  5: hh3cFailoverPrimaryCpuID
     Syntax="INTEGER32"
     Descr="Specifies a CPU by its number.  This option is available only if multiple CPUs
        are available on the specified slot.
        Note:The -1 for delete the node."
EDESC
#
#
#
EVENT hh3cFailoverPrimaryNodeRemove .1.3.6.1.4.1.25506.2.164.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cFailoverPrimaryNodeRemove trap indicates that the failover group has $*
SDESC
The hh3cFailoverPrimaryNodeRemove trap indicates that the failover group has
removed the primary node.
Variables:
  1: hh3cFailoverIndex
     Syntax="UNSIGNED32"
     Descr="Failover group ID is used as group index, the value range of failover group ID
        depends on the device model.
        The failover GroupIndex cannot be modified after creation."
  2: hh3cFailoverName
     Syntax="OCTETSTR"
     Descr="Specifies the backup group name, a case-sensitive string of 1 to 63 characters.
        The failover group name cannot be modified after creation.
        The name can not include '?', and can not begin or end with ' '."
  3: hh3cFailoverPrimaryChassisID
     Syntax="INTEGER32"
     Descr="Specifies a card on an IRF member device.  The chassis-number argument represents
        the member ID of the IRF member device.  (Distributed devices In IRF mode.)
        On a centralized or distributed device, the value for this node is always zero.
        Note:The -1 for delete the node."
  4: hh3cFailoverPrimarySlotID
     Syntax="INTEGER32"
     Descr="Specifies a card by its slot number.  (Distributed devices In standalone mode.)
        Note:The -1 for delete the node."
  5: hh3cFailoverPrimaryCpuID
     Syntax="INTEGER32"
     Descr="Specifies a CPU by its number.  This option is available only if multiple CPUs
        are available on the specified slot.
        Note:The -1 for delete the node."
EDESC
#
#
#
EVENT hh3cFailoverSecondaryNodeAdd .1.3.6.1.4.1.25506.2.164.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cFailoverSecondaryNodeAdd trap indicates that the failover group has $*
SDESC
The hh3cFailoverSecondaryNodeAdd trap indicates that the failover group has
added the secondary node.
Variables:
  1: hh3cFailoverIndex
     Syntax="UNSIGNED32"
     Descr="Failover group ID is used as group index, the value range of failover group ID
        depends on the device model.
        The failover GroupIndex cannot be modified after creation."
  2: hh3cFailoverName
     Syntax="OCTETSTR"
     Descr="Specifies the backup group name, a case-sensitive string of 1 to 63 characters.
        The failover group name cannot be modified after creation.
        The name can not include '?', and can not begin or end with ' '."
  3: hh3cFailoverSecondaryChassisID
     Syntax="INTEGER32"
     Descr="Specifies a card on an IRF member device.  The chassis-number argument represents
        the member ID of the IRF member device.  (Distributed devices In IRF mode.)
        On a centralized or distributed device, the value for this node is always zero.
        Note:The -1 for delete the node."
  4: hh3cFailoverSecondarySlotID
     Syntax="INTEGER32"
     Descr="Specifies a card by its slot number.  (Distributed devices In standalone mode.)
        Note:The -1 for delete the node."
  5: hh3cFailoverSecondaryCpuID
     Syntax="INTEGER32"
     Descr="Specifies a CPU by its number.  This option is available only if multiple CPUs
        are available on the specified slot.
        Note:The -1 for delete the node."
EDESC
#
#
#
EVENT hh3cFailoverSecondaryNodeRemove .1.3.6.1.4.1.25506.2.164.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cFailoverSecondaryNodeRemove trap indicates that the failover group has $*
SDESC
The hh3cFailoverSecondaryNodeRemove trap indicates that the failover group has
removed the secondary node.
Variables:
  1: hh3cFailoverIndex
     Syntax="UNSIGNED32"
     Descr="Failover group ID is used as group index, the value range of failover group ID
        depends on the device model.
        The failover GroupIndex cannot be modified after creation."
  2: hh3cFailoverName
     Syntax="OCTETSTR"
     Descr="Specifies the backup group name, a case-sensitive string of 1 to 63 characters.
        The failover group name cannot be modified after creation.
        The name can not include '?', and can not begin or end with ' '."
  3: hh3cFailoverSecondaryChassisID
     Syntax="INTEGER32"
     Descr="Specifies a card on an IRF member device.  The chassis-number argument represents
        the member ID of the IRF member device.  (Distributed devices In IRF mode.)
        On a centralized or distributed device, the value for this node is always zero.
        Note:The -1 for delete the node."
  4: hh3cFailoverSecondarySlotID
     Syntax="INTEGER32"
     Descr="Specifies a card by its slot number.  (Distributed devices In standalone mode.)
        Note:The -1 for delete the node."
  5: hh3cFailoverSecondaryCpuID
     Syntax="INTEGER32"
     Descr="Specifies a CPU by its number.  This option is available only if multiple CPUs
        are available on the specified slot.
        Note:The -1 for delete the node."
EDESC
#
#
#
#
MIB: HH3C-FC-FLOGIN-MIB (file:./hh3c-fc-flogin.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-NAME-SERVER-MIB (file:./hh3c-fc-name-server.mib) converted on Fri Mar 18 21:59:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FCOE-MIB (file:./hh3c-fcoe.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FCOE-MODE-MIB (file:./hh3c-fcoe-mode.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-PING-MIB (file:./hh3c-fc-ping.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-PSM-MIB (file:./hh3c-fc-psm.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-TC-MIB (file:./hh3c-fc-tc.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-TRACE-ROUTE-MIB (file:./hh3c-fc-trace-route.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-ZONE-SERVER-MIB (file:./hh3c-fc-zone-server.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FDMI-MIB (file:./hh3c-fdmi.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FIREWALL-MIB (file:./hh3c-firewall.mib) converted on Fri Mar 18 21:59:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FLASH-MAN-MIB (file:./hh3c-flash-man.mib) converted on Fri Mar 18 21:59:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFlhOperNotification .1.3.6.1.4.1.25506.2.5.1.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cFlhOperNotification is sent at the completion of a flash
copy operation if hh3cFlhOperEndNotification is true.

Variables:
  1: hh3cFlhOperStatus
     Syntax="INTEGER"
       1: opInProgress
       10: opDeviceError
       11: opDeviceNotProgrammable
       12: opDeviceFull
       13: opFileOpenError
       14: opFileTransferError
       15: opFileChecksumError
       16: opNoMemory
       17: opAuthFail
       18: opTimeout
       19: opUnknownFailure
       2: opSuccess
       20: opDeleteFileOpenError
       21: opDeleteInvalidDevice
       22: opDeleteInvalidFunction
       23: opDeleteOperationError
       24: opDeleteInvalidFileName
       25: opDeleteDeviceBusy
       26: opDeleteParaError
       27: opDeleteInvalidPath
       28: opDeleteFileNotExistInSlave
       29: opDeleteFileFailedInSlave
       3: opInvalid
       30: opSlaveFull
       31: opCopyToSlaveFailure
       4: opInvalidProtocol
       5: opInvalidSourceName
       6: opInvalidDestName
       7: opInvalidServerAddress
       8: opDeviceBusy
       9: opDeviceOpenError
     Descr="The status of operation."
EDESC
#
#
#
#
MIB: HH3C-FLEXE-MIB (file:./hh3c-flexe.mib) converted on Fri Mar 18 21:59:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFlexEPhyNumberMismatch .1.3.6.1.4.1.25506.2.177.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the physical number of the FlexE interface doesn't $*
SDESC
The notification is generated when the physical number of the FlexE interface doesn't
match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyNumber
     Syntax="INTEGER32"
     Descr="Specify the physical number of the FlexE physical interface."
  4: hh3cFlexERemotePhyNumber
     Syntax="INTEGER32"
     Descr="The physical number of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyNumberMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the physical number of the FlexE interface $*
SDESC
The notification is generated when the physical number of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyNumber
     Syntax="INTEGER32"
     Descr="Specify the physical number of the FlexE physical interface."
  4: hh3cFlexERemotePhyNumber
     Syntax="INTEGER32"
     Descr="The physical number of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyGroupMismatch .1.3.6.1.4.1.25506.2.177.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the group ID of the FlexE interface doesn't $*
SDESC
The notification is generated when the group ID of the FlexE interface doesn't
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE physical interface."
  4: hh3cFlexERemotePhyGroupID
     Syntax="INTEGER32"
     Descr="The physical group ID of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyGroupMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the group ID of the FlexE interface $*
SDESC
The notification is generated when the group ID of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE physical interface."
  4: hh3cFlexERemotePhyGroupID
     Syntax="INTEGER32"
     Descr="The physical group ID of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEClientIDMismatch .1.3.6.1.4.1.25506.2.177.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the client ID of the FlexE interface doesn't $*
SDESC
The notification is generated when the client ID of the FlexE interface doesn't
match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEClientIDMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the client ID of the FlexE interface $*
SDESC
The notification is generated when the client ID of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthReduce .1.3.6.1.4.1.25506.2.177.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface becomes $*
SDESC
The notification is generated when the bandwidth of the FlexE interface becomes
smaller.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEBandwidth
     Syntax="INTEGER32"
     Descr="Specify the bandwidth of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthReduceRecover .1.3.6.1.4.1.25506.2.177.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface recovers. $*
SDESC
The notification is generated when the bandwidth of the FlexE interface recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEBandwidth
     Syntax="INTEGER32"
     Descr="Specify the bandwidth of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEPhyFcsSdAlarm .1.3.6.1.4.1.25506.2.177.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the error code fault happens. $*
SDESC
The notification is generated when the error code fault happens.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyFcsSdAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the error code fault recovers. $*
SDESC
The notification is generated when the error code fault recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyLocalFault .1.3.6.1.4.1.25506.2.177.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens in the near_end. $*
SDESC
The notification is generated when the fault happens in the near_end.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyLocalFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault in the near_end recovers. $*
SDESC
The notification is generated when the fault in the near_end recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyRemoteFault .1.3.6.1.4.1.25506.2.177.5.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens in the far_end $*
SDESC
The notification is generated when the fault happens in the far_end
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyRemoteFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault in the far_end recovers. $*
SDESC
The notification is generated when the fault in the far_end recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthMismatch .1.3.6.1.4.1.25506.2.177.5.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface $*
SDESC
The notification is generated when the bandwidth of the FlexE interface
doesn't match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface $*
SDESC
The notification is generated when the bandwidth of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyDelayOverAlarm .1.3.6.1.4.1.25506.2.177.5.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the TimeDelay is oversize. $*
SDESC
The notification is generated when the TimeDelay is oversize.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPortList
     Syntax="OCTETSTR"
     Descr="The interface list."
EDESC
#
#
#
EVENT hh3cFlexEPhyDelayOverAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the TimeDelay becomes normal. $*
SDESC
The notification is generated when the TimeDelay becomes normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPortList
     Syntax="OCTETSTR"
     Descr="The interface list."
EDESC
#
#
#
EVENT hh3cFlexESTSGMismatch .1.3.6.1.4.1.25506.2.177.5.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the granularity of the FlexE interface $*
SDESC
The notification is generated when the granularity of the FlexE interface
doesn't match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexESubTimeSlotGranular
     Syntax="INTEGER32"
     Descr="Specify the sub-time-slot granularity of the FlexE subslot."
EDESC
#
#
#
EVENT hh3cFlexESTSGMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the granularity of the FlexE interface $*
SDESC
The notification is generated when the granularity of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexESubTimeSlotGranular
     Syntax="INTEGER32"
     Descr="Specify the sub-time-slot granularity of the FlexE subslot."
EDESC
#
#
#
EVENT hh3cFlexEGroupMemberFault .1.3.6.1.4.1.25506.2.177.5.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens on group members. $*
SDESC
The notification is generated when the fault happens on group members.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
  5: hh3cFlexEGroupMemberCount
     Syntax="INTEGER32"
     Descr="The number of group members."
  6: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  7: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEGroupMemberFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault on group members recovers. $*
SDESC
The notification is generated when the fault on group members recovers.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
  5: hh3cFlexEGroupMemberCount
     Syntax="INTEGER32"
     Descr="The number of group members."
  6: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  7: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEGroupFaultAlarm .1.3.6.1.4.1.25506.2.177.5.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens on the last group member. $*
SDESC
The notification is generated when the fault happens on the last group member.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEGroupFaultAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault on the first group member recovers. $*
SDESC
The notification is generated when the fault on the first group member recovers.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
EDESC
#
#
#
#
MIB: HH3C-FLOWTEMPLATE-MIB (file:./hh3c-flowtemplate.mib) converted on Fri Mar 18 21:59:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FR-QOS-MIB (file:./hh3c-fr-qos.mib) converted on Fri Mar 18 21:59:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FTM-MIB (file:./hh3c-ftm.mib) converted on Fri Mar 18 21:59:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFtmUnitIDChange .1.3.6.1.4.1.25506.2.1.1.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When unit id changes in fabric, this trap is sent with unit index and its new id . $*
SDESC
When unit id changes in fabric, this trap is sent with unit index and its new id .
Variables:
  1: hh3cFtmIndex
     Syntax="INTEGER32"
     Descr="The unique index of a unit."
  2: hh3cFtmUnitID
     Syntax="INTEGER"
     Descr="Identifer of unit in fabric. Its value should be between 1 and the maximum which defines
                in product specification.
                An exception is described in description of hh3cFtmNumberMode. In that case, the value
                of this object remains its original value after set to zero.
                "
EDESC
#
#
#
EVENT hh3cFtmUnitNameChange .1.3.6.1.4.1.25506.2.1.1.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When unit name changes in fabric, this trap is sent with unit index and its new name. $*
SDESC
When unit name changes in fabric, this trap is sent with unit index and its new name.
Variables:
  1: hh3cFtmIndex
     Syntax="INTEGER32"
     Descr="The unique index of a unit."
  2: hh3cFtmUnitName
     Syntax="OCTETSTR"
     Descr="Name of unit in XRN-Fabric. It consists of no more than 64 characters."
EDESC
#
#
#
#
MIB: HH3C-GIR-MIB (file:./hh3c-gir.mib) converted on Fri Mar 18 21:59:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GOLD-MIB (file:./hh3c-gold.mib) converted on Fri Mar 18 21:59:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cGoldLipcLinkFail .1.3.6.1.4.1.25506.2.203.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA the hh3cGoldLipcLinkFail trap indicates that the GOLD function $*
SDESC
the hh3cGoldLipcLinkFail trap indicates that the GOLD function
changed to the fail state.
Variables:
  1: hh3cGoldLipcLinkSourceChassisID
     Syntax="INTEGER32"
     Descr="The source chassis id of lipc node."
  2: hh3cGoldLipcLinkSourceSlotID
     Syntax="INTEGER32"
     Descr="The source slot id of lipc node."
  3: hh3cGoldLipcLinkSourceCpuID
     Syntax="INTEGER32"
     Descr="The source cpu id of lipc node."
  4: hh3cGoldLipcLinkDestChassisID
     Syntax="INTEGER32"
     Descr="The destination chassis id of lipc node."
  5: hh3cGoldLipcLinkDestSlotID
     Syntax="INTEGER32"
     Descr="The destination slot id of lipc node."
  6: hh3cGoldLipcLinkDestCpuID
     Syntax="INTEGER32"
     Descr="The destination cpu id of lipc node."
EDESC
#
#
#
EVENT hh3cGoldLipcLinkRecover .1.3.6.1.4.1.25506.2.203.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA the hh3cGoldLipcLinkRecover trap indicates that the GOLD function $*
SDESC
the hh3cGoldLipcLinkRecover trap indicates that the GOLD function
changed to the recover state.
Variables:
  1: hh3cGoldLipcLinkSourceChassisID
     Syntax="INTEGER32"
     Descr="The source chassis id of lipc node."
  2: hh3cGoldLipcLinkSourceSlotID
     Syntax="INTEGER32"
     Descr="The source slot id of lipc node."
  3: hh3cGoldLipcLinkSourceCpuID
     Syntax="INTEGER32"
     Descr="The source cpu id of lipc node."
  4: hh3cGoldLipcLinkDestChassisID
     Syntax="INTEGER32"
     Descr="The destination chassis id of lipc node."
  5: hh3cGoldLipcLinkDestSlotID
     Syntax="INTEGER32"
     Descr="The destination slot id of lipc node."
  6: hh3cGoldLipcLinkDestCpuID
     Syntax="INTEGER32"
     Descr="The destination cpu id of lipc node."
EDESC
#
#
#
#
MIB: HH3C-GRE-MIB (file:./hh3c-gre.mib) converted on Fri Mar 18 21:59:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-HGMP-MIB (file:./hh3c-hgmp.mib) converted on Fri Mar 18 21:59:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3chgmpMemberfailure .1.3.6.1.4.1.25506.8.7.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When a cluster member failure, send a snmp trap to the network $*
SDESC
When a cluster member failure, send a snmp trap to the network
management.
Variables:
  1: hh3chgmpGrpMemberDeviceId
     Syntax="OCTETSTR"
     Descr="4 bytes reserved as 0x0 + 6 bytes of MAC address, expressed as 
            a character string of the hexadecimal number."
EDESC
#
#
#
EVENT hh3chgmpMemberRecover .1.3.6.1.4.1.25506.8.7.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When a cluster member recover, send a snmp trap to the network $*
SDESC
When a cluster member recover, send a snmp trap to the network
management.
Variables:
  1: hh3chgmpGrpMemberDeviceId
     Syntax="OCTETSTR"
     Descr="4 bytes reserved as 0x0 + 6 bytes of MAC address, expressed as 
            a character string of the hexadecimal number."
EDESC
#
#
#
EVENT hh3chgmpMemberStatusChange .1.3.6.1.4.1.25506.8.7.1.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA When a cluster member status change, send a snmp trap to the $*
SDESC
When a cluster member status change, send a snmp trap to the
network management.
Variables:
  1: hh3chgmpGrpMemberDeviceId
     Syntax="OCTETSTR"
     Descr="4 bytes reserved as 0x0 + 6 bytes of MAC address, expressed as 
            a character string of the hexadecimal number."
  2: hh3chgmpNTDPCacheClusterRole
     Syntax="INTEGER"
       1: roleCOSW
       16: roleCASW
       17: roleUNISW
       2: roleMSW
       3: roleBKSW
     Descr="Cluster role of the current device, which can be a
            administrator switch (0x01), member switch(0x02), backup
            switch(0x03), candidate switch(0x10) or an independent
            switch (incapable of cluster member) (0x11)."
EDESC
#
#
#
EVENT hh3chgmpNetTopChange .1.3.6.1.4.1.25506.8.7.1.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA When net topology of this cluster change, send a snmp trap $*
SDESC
When net topology of this cluster change, send a snmp trap
to the network management.
EDESC
#
#
#
EVENT hh3chgmpStackMemberfailure .1.3.6.1.4.1.25506.8.7.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When a stack member failure, send a snmp trap to the network $*
SDESC
When a stack member failure, send a snmp trap to the network
management.
Variables:
  1: hh3chgmpStackMemberDeviceId
     Syntax="OCTETSTR"
     Descr="2 bytes address type of the switch + 2 bytes zero + MAC address,
            expressed as a hexadecimal number string."
EDESC
#
#
#
EVENT hh3chgmpStackMemberRecover .1.3.6.1.4.1.25506.8.7.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When a stack member Recover, send a snmp trap to the network $*
SDESC
When a stack member Recover, send a snmp trap to the network
management.
Variables:
  1: hh3chgmpStackMemberDeviceId
     Syntax="OCTETSTR"
     Descr="2 bytes address type of the switch + 2 bytes zero + MAC address,
            expressed as a hexadecimal number string."
EDESC
#
#
#
EVENT hh3chgmpStackMemberStatusChange .1.3.6.1.4.1.25506.8.7.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA When a stack member status change, send a snmp trap to the network $*
SDESC
When a stack member status change, send a snmp trap to the network
management.
Variables:
  1: hh3chgmpStackMemberDeviceId
     Syntax="OCTETSTR"
     Descr="2 bytes address type of the switch + 2 bytes zero + MAC address,
            expressed as a hexadecimal number string."
  2: hh3chgmpNTDPCacheClusterRole
     Syntax="INTEGER"
       1: roleCOSW
       16: roleCASW
       17: roleUNISW
       2: roleMSW
       3: roleBKSW
     Descr="Cluster role of the current device, which can be a
            administrator switch (0x01), member switch(0x02), backup
            switch(0x03), candidate switch(0x10) or an independent
            switch (incapable of cluster member) (0x11)."
EDESC
#
#
#
#
MIB: HH3C-HPEOC-MIB (file:./hh3c-hpeoc.mib) converted on Fri Mar 18 21:59:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IDS-MIB (file:./hh3c-ids.mib) converted on Fri Mar 18 21:59:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIDSTrapIPFragQueueFull .1.3.6.1.4.1.25506.2.47.1.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the IP fragment $*
SDESC
This notification will be generated when the IP fragment
queue is full.  The hh3cIDSTrapIPFragmentQueueLen describes
the length of current fragment queue.
The hh3cIDSTrapReasonForError describes reason for error.
Variables:
  1: hh3cIDSTrapIPFragmentQueueLen
     Syntax="UNSIGNED32"
     Descr="The length of IP fragment queue."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapStatSessTabFull .1.3.6.1.4.1.25506.2.47.1.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the status session $*
SDESC
This notification will be generated when the status session
table is full.  The hh3cIDSTrapStatSessionTabLen describes the
length of current status session table.
The hh3cIDSTrapReasonForError describes reason for error.
Variables:
  1: hh3cIDSTrapStatSessionTabLen
     Syntax="UNSIGNED32"
     Descr="The length of status session table."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapDetectRuleParseFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when failing to parse $*
SDESC
This notification will be generated when failing to parse
the rules for detecting.  The hh3cIDSTrapDetectRuleID object describes
rule ID. The hh3cIDSTrapEngineID object identifies an interface
the rule applies to. The hh3cIDSTrapReasonForError object
describes reason for error.
Variables:
  1: hh3cIDSTrapDetectRuleID
     Syntax="UNSIGNED32"
     Descr="The rule ID which is a unique identifier for a specified
                detect rule."
  2: hh3cIDSTrapEngineID
     Syntax="INTEGER32"
     Descr="A unique number used to identify an interface."
  3: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapDBConnLost .1.3.6.1.4.1.25506.2.47.1.1.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when connecting with $*
SDESC
This notification will be generated when connecting with
database server fails. The hh3cIDSTrapIPAddressType object describes
the IP address type of database server.  The hh3cIDSTrapIPAddress
object describes the IP address of database server. The
hh3cIDSTrapReasonForError describes reason of connecting failure.
Variables:
  1: hh3cIDSTrapIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of IP Address."
  2: hh3cIDSTrapIPAddress
     Syntax="OCTETSTR"
     Descr="IP Address."
  3: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCRLNeedUpdate .1.3.6.1.4.1.25506.2.47.1.1.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when IDS device detects $*
SDESC
This notification will be generated when IDS device detects
that CRL is out of date.  The hh3cIDSTrapCRLName object
describes the CRL(Certificate Revoke List) name.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapCRLName
     Syntax="OCTETSTR"
     Descr="CRL(Certificate Revoke List) name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCertOverdue .1.3.6.1.4.1.25506.2.47.1.1.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when IDS device detects $*
SDESC
This notification will be generated when IDS device detects
that certificate is overdue.  The hh3cIDSTrapCertName object
describes the certificate name.  The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapCertName
     Syntax="OCTETSTR"
     Descr="Certificate name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapTooManyLoginFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the login $*
SDESC
This notification will be generated when the login
failure times of a user over a certain number.
The hh3cIDSTrapUserName object describes the user name
when logging in.  The hh3cIDSTrapIPAddressType object
describes the IP address type of client. The
hh3cIDSTrapIPAddress object describes the IP address of
client.  The hh3cIDSTrapLoginType object describes
login type, including: telnet, ssh, web.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapUserName
     Syntax="OCTETSTR"
     Descr="User name."
  2: hh3cIDSTrapIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of IP Address."
  3: hh3cIDSTrapIPAddress
     Syntax="OCTETSTR"
     Descr="IP Address."
  4: hh3cIDSTrapLoginType
     Syntax="INTEGER"
       1: telnet
       2: ssh
       3: web
     Descr="Login type, including telnet, ssh and web."
  5: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapUpgradeError .1.3.6.1.4.1.25506.2.47.1.1.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when upgrading fails. $*
SDESC
This notification will be generated when upgrading fails.
The hh3cIDSTrapUpgradeType object describes upgrade type,
including: programme, vrb. The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapUpgradeType
     Syntax="INTEGER"
       1: programme
       2: crb
       3: vrb
     Descr="Upgrade type, including programme(system image),
                crb(custom rule base, one kind of configuration file),
                vrb(vendor rule base, one kind of configuration file)."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapFileAccessError .1.3.6.1.4.1.25506.2.47.1.1.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when accessing file $*
SDESC
This notification will be generated when accessing file
fails.  The hh3cIDSTrapFileName object describes the name
of file accessed. The hh3cIDSTrapReasonForError object describes
reason for error.
Variables:
  1: hh3cIDSTrapFileName
     Syntax="OCTETSTR"
     Descr="The file name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapConsArithMemLow .1.3.6.1.4.1.25506.2.47.1.1.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when memory used by $*
SDESC
This notification will be generated when memory used by
constructing the arithmetic to seek content is lacking.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapSSRAMOperFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when reading or $*
SDESC
This notification will be generated when reading or
writing SSRAM of CIE card fails. The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapPacketProcessDisorder .1.3.6.1.4.1.25506.2.47.1.1.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when packets processed $*
SDESC
This notification will be generated when packets processed
is in disorder. The hh3cIDSTrapReasonForError object describes
reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCfgFileFormatError .1.3.6.1.4.1.25506.2.47.1.1.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA When devices startup and load the configuration file, $*
SDESC
When devices startup and load the configuration file,
if format error is found, this notification will be generated.
The hh3cIDSTrapFileName object describes the name of
configuration file. The hh3cIDSTrapCfgLineInFile object
describes the line number in the file.
Variables:
  1: hh3cIDSTrapFileName
     Syntax="OCTETSTR"
     Descr="The file name."
  2: hh3cIDSTrapCfgLineInFile
     Syntax="UNSIGNED32"
     Descr="The line number in the configuration file."
EDESC
#
#
#
#
MIB: HH3C-IF-EXT-MIB (file:./hh3c-if-ext.mib) converted on Fri Mar 18 21:59:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIfBandwidthUsageHigh .1.3.6.1.4.1.25506.2.40.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the rate of the bandwidth for the $*
SDESC
The notification is generated when the rate of the bandwidth for the
interface exceeds the upper limit.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cIfBandwidthRate
     Syntax="INTEGER32"
     Descr="The rate of the bandwidth for an interface."
  3: hh3cIfBandwidthUpperLimit
     Syntax="INTEGER32"
     Descr="The rate of the bandwidth upper limit for an interface."
EDESC
#
#
#
EVENT hh3cIfDiscardPktRateHigh .1.3.6.1.4.1.25506.2.40.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the rate of the discarded packets $*
SDESC
The notification is generated when the rate of the discarded packets
for the interface exceeds the upper limit.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cIfDiscardPktRate
     Syntax="INTEGER32"
     Descr="The rate of the discarded packets for an interface."
  3: hh3cIfDiscardPktRateUpperLimit
     Syntax="INTEGER32"
     Descr="The rate of the discarded packets upper limit for an interface."
EDESC
#
#
#
EVENT hh3cIfDampeningSuppressed .1.3.6.1.4.1.25506.2.40.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the interface is suppressed $*
SDESC
The notification is generated when the interface is suppressed
via dampening.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfDampeningNotSuppressed .1.3.6.1.4.1.25506.2.40.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the interface is resumed to $*
SDESC
The notification is generated when the interface is resumed to
not suppressed via dampening.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPortUp .1.3.6.1.4.1.25506.2.40.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when physical state of the interface changes to up. $*
SDESC
The notification is generated when physical state of the interface changes to up.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPortDown .1.3.6.1.4.1.25506.2.40.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when physical state of the interface changes to down. $*
SDESC
The notification is generated when physical state of the interface changes to down.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPfcOutRising .1.3.6.1.4.1.25506.2.40.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the outbound rate exceeds the threshold for the dot1p value. $*
SDESC
The notification is generated when the outbound rate exceeds the threshold for the dot1p value.
If the hh3cIfPfcDot1pOutPpsThreshold is set to 0, no hh3cIfPfcOutRising will be generated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfPfcDot1pValue
     Syntax="INTEGER"
       1: pri0
       2: pri1
       3: pri2
       4: pri3
       5: pri4
       6: pri5
       7: pri6
       8: pri7
     Descr="The PFC dot1p value list."
  4: hh3cIfPfcDot1pOutPps
     Syntax="UNSIGNED32"
     Descr="The current outbound rate for the PFC dot1p. "
  5: hh3cIfPfcDot1pOutPpsThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the outbound rate.
         If the hh3cIfPfcDot1pOutPpsThreshold is set to 0, no hh3cIfPfcOutRising will be generated."
EDESC
#
#
#
EVENT hh3cIfPfcInRising .1.3.6.1.4.1.25506.2.40.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the inbound rate exceeds the threshold for the dot1p value. $*
SDESC
The notification is generated when the inbound rate exceeds the threshold for the dot1p value.
If the hh3cIfPfcDot1pInPpsThreshold is set to 0, no hh3cIfPfcInRising will be generated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfPfcDot1pValue
     Syntax="INTEGER"
       1: pri0
       2: pri1
       3: pri2
       4: pri3
       5: pri4
       6: pri5
       7: pri6
       8: pri7
     Descr="The PFC dot1p value list."
  4: hh3cIfPfcDot1pInPps
     Syntax="UNSIGNED32"
     Descr="The current inbound rate for the PFC dot1p."
  5: hh3cIfPfcDot1pInPpsThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the inbound rate.
         If the hh3cIfPfcDot1pInPpsThreshold is set to 0, no hh3cIfPfcInRising will be generated."
EDESC
#
#
#
EVENT hh3cIfMappingIfStatusBackup .1.3.6.1.4.1.25506.2.40.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the mapping status of the interface changes to backup. $*
SDESC
The notification is generated when the mapping status of the interface changes to backup.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfMappingIfStatusNormal .1.3.6.1.4.1.25506.2.40.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the mapping status of the interface changes to normal. $*
SDESC
The notification is generated when the mapping status of the interface changes to normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfMonInputUsageRising .1.3.6.1.4.1.25506.2.40.6.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the inbound bandwidth usage exceeds the $*
SDESC
The notification is generated when the inbound bandwidth usage exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the inbound bandwidth usage."
  4: hh3cIfMonInputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the inbound bandwidth usage."
  5: hh3cIfMonInputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the inbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonInputUsageResume .1.3.6.1.4.1.25506.2.40.6.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the inbound bandwidth usage drops from $*
SDESC
The notification is generated when the inbound bandwidth usage drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the inbound bandwidth usage."
  4: hh3cIfMonInputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the inbound bandwidth usage."
  5: hh3cIfMonInputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the inbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonOutputUsageRising .1.3.6.1.4.1.25506.2.40.6.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the outbound bandwidth usage exceeds the $*
SDESC
The notification is generated when the outbound bandwidth usage exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the outbound bandwidth usage."
  4: hh3cIfMonOutputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the outbound bandwidth usage."
  5: hh3cIfMonOutputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the outbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonOutputUsageResume .1.3.6.1.4.1.25506.2.40.6.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the outbound bandwidth usage drops from $*
SDESC
The notification is generated when the outbound bandwidth usage drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the outbound bandwidth usage."
  4: hh3cIfMonOutputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the outbound bandwidth usage."
  5: hh3cIfMonOutputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the outbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonInputErrorAlarmRising .1.3.6.1.4.1.25506.2.40.6.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of inbound error packets exceeds the $*
SDESC
The notification is generated when the number of inbound error packets exceeds the
upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of inbound error packets."
  4: hh3cIfMonInputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of inbound error packets."
  5: hh3cIfMonInputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of inbound error packets."
  6: hh3cIfMonInputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of inbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonInputErrorAlarmResume .1.3.6.1.4.1.25506.2.40.6.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of inbound error packets drops from $*
SDESC
The notification is generated when the number of inbound error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of inbound error packets."
  4: hh3cIfMonInputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of inbound error packets."
  5: hh3cIfMonInputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of inbound error packets."
  6: hh3cIfMonInputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of inbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonOutputErrorAlarmRising .1.3.6.1.4.1.25506.2.40.6.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of outbound error packets exceeds the $*
SDESC
The notification is generated when the number of outbound error packets exceeds the
upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of outbound error packets."
  4: hh3cIfMonOutputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of outbound error packets."
  5: hh3cIfMonOutputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics  about the number of outbound error packets."
  6: hh3cIfMonOutputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of outbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonOutputErrorAlarmResume .1.3.6.1.4.1.25506.2.40.6.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of outbound error packets drops from $*
SDESC
The notification is generated when the number of outbound error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of outbound error packets."
  4: hh3cIfMonOutputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of outbound error packets."
  5: hh3cIfMonOutputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics  about the number of outbound error packets."
  6: hh3cIfMonOutputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of outbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhErrorRising .1.3.6.1.4.1.25506.2.40.6.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH error packets exceeds $*
SDESC
The notification is generated when the number of SDH error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH error packets."
  4: hh3cIfMonSdhErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH error packets."
  5: hh3cIfMonSdhErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH error packets."
  6: hh3cIfMonSdhErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhErrorResume .1.3.6.1.4.1.25506.2.40.6.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH error packets drops from $*
SDESC
The notification is generated when the number of SDH error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH error packets."
  4: hh3cIfMonSdhErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH error packets."
  5: hh3cIfMonSdhErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH error packets."
  6: hh3cIfMonSdhErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhB1ErrorRising .1.3.6.1.4.1.25506.2.40.6.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B1 error packets exceeds $*
SDESC
The notification is generated when the number of SDH B1 error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB1ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B1 error packets."
  4: hh3cIfMonSdhB1ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B1 error packets."
  5: hh3cIfMonSdhB1ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B1 error packets."
  6: hh3cIfMonSdhB1ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B1 error packets. "
EDESC
#
#
#
EVENT hh3cIfMonSdhB1ErrorResume .1.3.6.1.4.1.25506.2.40.6.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B1 error packets drops from $*
SDESC
The notification is generated when the number of SDH B1 error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB1ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B1 error packets."
  4: hh3cIfMonSdhB1ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B1 error packets."
  5: hh3cIfMonSdhB1ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B1 error packets."
  6: hh3cIfMonSdhB1ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B1 error packets. "
EDESC
#
#
#
EVENT hh3cIfMonSdhB2ErrorRising .1.3.6.1.4.1.25506.2.40.6.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B2 error packets exceeds $*
SDESC
The notification is generated when the number of SDH B2 error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB2ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B2 error packets."
  4: hh3cIfMonSdhB2ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B2 error packets."
  5: hh3cIfMonSdhB2ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B2 error packets."
  6: hh3cIfMonSdhB2ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B2 error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhB2ErrorResume .1.3.6.1.4.1.25506.2.40.6.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B2 error packets drops from $*
SDESC
The notification is generated when the number of SDH B2 error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB2ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B2 error packets."
  4: hh3cIfMonSdhB2ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B2 error packets."
  5: hh3cIfMonSdhB2ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B2 error packets."
  6: hh3cIfMonSdhB2ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B2 error packets."
EDESC
#
#
#
EVENT hh3cIfMonCRCErrorRising .1.3.6.1.4.1.25506.2.40.6.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of CRC error packets exceeds $*
SDESC
The notification is generated when the number of CRC error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonCRCErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of CRC error packets."
  4: hh3cIfMonCRCErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of CRC error packets."
  5: hh3cIfMonCRCErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of CRC error packets. "
  6: hh3cIfMonCRCErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of CRC error packets."
  7: hh3cIfMonCRCErrType
     Syntax="INTEGER"
       1: absolute
       2: ratio
       65535: invalid
     Descr=" Inspection type for the CRC error packets."
EDESC
#
#
#
EVENT hh3cIfMonCRCErrorResume .1.3.6.1.4.1.25506.2.40.6.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of CRC error packets drops from $*
SDESC
The notification is generated when the number of CRC error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonCRCErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of CRC error packets."
  4: hh3cIfMonCRCErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of CRC error packets."
  5: hh3cIfMonCRCErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of CRC error packets. "
  6: hh3cIfMonCRCErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of CRC error packets."
  7: hh3cIfMonCRCErrType
     Syntax="INTEGER"
       1: absolute
       2: ratio
       65535: invalid
     Descr=" Inspection type for the CRC error packets."
EDESC
#
#
#
EVENT hh3cIfMonRxPauseFrameRising .1.3.6.1.4.1.25506.2.40.6.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of received pause frames exceeds the $*
SDESC
The notification is generated when the number of received pause frames exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of received pause frames."
  4: hh3cIfMonRxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of received pause frames."
  5: hh3cIfMonRxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of received pause frames."
  6: hh3cIfMonRxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of received pause frames."
EDESC
#
#
#
EVENT hh3cIfMonRxPauseFrameResume .1.3.6.1.4.1.25506.2.40.6.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of received pause frames drops from $*
SDESC
The notification is generated when the number of received pause frames drops from
above the upper threshold to below the lower-threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of received pause frames."
  4: hh3cIfMonRxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of received pause frames."
  5: hh3cIfMonRxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of received pause frames."
  6: hh3cIfMonRxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of received pause frames."
EDESC
#
#
#
EVENT hh3cIfMonTxPauseFrameRising .1.3.6.1.4.1.25506.2.40.6.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of transmitted pause frames exceeds $*
SDESC
The notification is generated when the number of transmitted pause frames exceeds
the upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonTxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of transmitted pause frames."
  4: hh3cIfMonTxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of transmitted pause frames."
  5: hh3cIfMonTxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of transmitted pause frames."
  6: hh3cIfMonTxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of transmitted pause frames."
EDESC
#
#
#
EVENT hh3cIfMonTxPauseFrameResume .1.3.6.1.4.1.25506.2.40.6.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of transmitted pause frames  drops from $*
SDESC
The notification is generated when the number of transmitted pause frames  drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonTxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of transmitted pause frames."
  4: hh3cIfMonTxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of transmitted pause frames."
  5: hh3cIfMonTxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of transmitted pause frames."
  6: hh3cIfMonTxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of transmitted pause frames."
EDESC
#
#
#
EVENT hh3cIfMonGiantRising .1.3.6.1.4.1.25506.2.40.6.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Giant error packets exceeds $*
SDESC
The notification is generated when the number of Giant error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonGiantLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Giant error packets."
  4: hh3cIfMonGiantHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Giant error packets."
  5: hh3cIfMonGiantStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Giant packets."
  6: hh3cIfMonGiantInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Giant error packets."
EDESC
#
#
#
EVENT hh3cIfMonGiantResume .1.3.6.1.4.1.25506.2.40.6.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Giant error packets drops from $*
SDESC
The notification is generated when the number of Giant error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonGiantLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Giant error packets."
  4: hh3cIfMonGiantHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Giant error packets."
  5: hh3cIfMonGiantStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Giant packets."
  6: hh3cIfMonGiantInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Giant error packets."
EDESC
#
#
#
EVENT hh3cIfMonRuntRising .1.3.6.1.4.1.25506.2.40.6.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Runt error packets exceeds $*
SDESC
The notification is generated when the number of Runt error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRuntLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Runt error packets."
  4: hh3cIfMonRuntHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Runt error packets."
  5: hh3cIfMonRuntStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Runt packets."
  6: hh3cIfMonRuntInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Runt packets."
EDESC
#
#
#
EVENT hh3cIfMonRuntResume .1.3.6.1.4.1.25506.2.40.6.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Runt error packets drops from $*
SDESC
The notification is generated when the number of Runt error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRuntLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Runt error packets."
  4: hh3cIfMonRuntHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Runt error packets."
  5: hh3cIfMonRuntStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Runt packets."
  6: hh3cIfMonRuntInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Runt packets."
EDESC
#
#
#
#
MIB: HH3C-IFQOS2-MIB (file:./hh3c-ifqos2.mib) converted on Fri Mar 18 21:59:24 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIfQoS8QueueResouceOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues exceeded the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues exceeded the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResouceOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues dropped below the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues dropped below the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResoucePreAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues exceeded 90 percent of the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues exceeded 90 percent of the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResoucePreRecover .1.3.6.1.4.1.25506.2.65.1.16.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues dropped below 90 percent of the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues dropped below 90 percent of the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSBufferOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The buffer size has been reached. $*
SDESC
The buffer size has been reached.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSBufferOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The queue buffer alarm is cleared. $*
SDESC
The queue buffer alarm is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSModeChannelOverPortShapAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The channelization bandwidth configured on the interface exceeds the port shaping value. $*
SDESC
The channelization bandwidth configured on the interface exceeds the port shaping value.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSModeChannelOverPortShapRecover .1.3.6.1.4.1.25506.2.65.1.16.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The alarm generated when the channelization bandwidth configured on the interface exceeds the port shaping value is cleared. $*
SDESC
The alarm generated when the channelization bandwidth configured on the interface exceeds the port shaping value is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandApplyFailAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The exclusive bandwidth configured on the interface does not take effect. $*
SDESC
The exclusive bandwidth configured on the interface does not take effect.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandApplyFailRecover .1.3.6.1.4.1.25506.2.65.1.16.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The exclusive bandwidth service alarm on interface has cleared. $*
SDESC
The exclusive bandwidth service alarm on interface has cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value. $*
SDESC
The exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The alarm generated when the exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value is cleared. $*
SDESC
The alarm generated when the exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
#
MIB: HH3C-IKE-MONITOR-MIB (file:./hh3c-ike-monitor.mib) converted on Fri Mar 18 21:59:24 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIKETunnelStart .1.3.6.1.4.1.25506.2.30.1.6.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-1 $*
SDESC
This notification is generated when an IPsec Phase-1
IKE Tunnel is created.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunLifeTime
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPsec Phase-1
                 IKE Tunnel in seconds."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKETunnelStop .1.3.6.1.4.1.25506.2.30.1.6.1.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-1 $*
SDESC
This notification is generated when an IPsec Phase-1
IKE Tunnel is deleted.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunActiveTime
     Syntax="INTEGER32"
     Descr="The duration the IPsec Phase-1 IKE tunnel
                 has been active in seconds."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKENoSaFailure .1.3.6.1.4.1.25506.2.30.1.6.1.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has a non-existent SA error.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEEncryFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has an encrypting failure.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEDecryFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has a decrypting failure.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidProposalFailure .1.3.6.1.4.1.25506.2.30.1.6.1.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid proposal occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEAuthFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
authentication failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidCookieFailure .1.3.6.1.4.1.25506.2.30.1.6.1.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid cookie failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEAttrNotSuppFailure .1.3.6.1.4.1.25506.2.30.1.6.1.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 unsupported $*
SDESC
This notification is generated when the IPsec phase-1 unsupported
attribute failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEUnsportExchTypeFailure .1.3.6.1.4.1.25506.2.30.1.6.1.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
unsupported exchange type failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidIdFailure .1.3.6.1.4.1.25506.2.30.1.6.1.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid id failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKEIdInformation
     Syntax="OCTETSTR"
     Descr="The id information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidProtocolFailure .1.3.6.1.4.1.25506.2.30.1.6.1.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the processing for $*
SDESC
This notification is generated when the processing for
an IPsec Phase-1 IKE Tunnel has a protocol related errors.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKEProtocolNum
     Syntax="INTEGER32"
     Descr="The protocol number with a trap"
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKECertTypeUnsuppFailure .1.3.6.1.4.1.25506.2.30.1.6.1.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
unsupported certificate type failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidCertAuthFailure .1.3.6.1.4.1.25506.2.30.1.6.1.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid certificate authorization failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKElInvalidSignFailure .1.3.6.1.4.1.25506.2.30.1.6.1.15 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid signature failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKECertUnavailableFailure .1.3.6.1.4.1.25506.2.30.1.6.1.16 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
certificate unavailable failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEProposalAdd .1.3.6.1.4.1.25506.2.30.1.6.1.17 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IKE proposal is added. $*
SDESC
This notification is generated when an IKE proposal is added.
Variables:
  1: hh3cIKEProposalNumber
     Syntax="INTEGER32"
     Descr="The IKE proposal's number with a trap."
  2: hh3cIKEProposalSize
     Syntax="INTEGER32"
     Descr="The number of IKE proposals with a trap."
EDESC
#
#
#
EVENT hh3cIKEProposalDel .1.3.6.1.4.1.25506.2.30.1.6.1.18 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IKE proposal is deleted. $*
SDESC
This notification is generated when an IKE proposal is deleted.
Variables:
  1: hh3cIKEProposalNumber
     Syntax="INTEGER32"
     Descr="The IKE proposal's number with a trap."
  2: hh3cIKEProposalSize
     Syntax="INTEGER32"
     Descr="The number of IKE proposals with a trap."
EDESC
#
#
#
#
MIB: HH3C-INFOCENTER-MIB (file:./hh3c-infocenter.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IP-ADDRESS-MIB (file:./hh3c-ip-address.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpAddressChangeNotify .1.3.6.1.4.1.25506.2.67.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the IP address of interface $*
SDESC
This notification will be generated when the IP address of interface
is changed.  The change maybe originate from NMS, DHCP server or
administrator.
This notification announces useful IP address change.  So it
is triggered by significative IP address change.
Variables:
  1: hh3cIpAddrNotifyIfIndex
     Syntax="INTEGER32"
     Descr="The IP address IfIndex of specified interface on the device."
  2: hh3cIpAddrOldIpAddress
     Syntax="OCTETSTR"
     Descr="The Old IP address of specified interface on the device."
  3: hh3cIpAddrNewIpAddress
     Syntax="OCTETSTR"
     Descr="The New IP address of specified interface on the device."
  4: hh3cIpAddrFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
#
MIB: HH3C-IPA-MIB (file:./hh3c-ipa.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IP-BROADCAST-MIB (file:./hh3c-ip-broadcast.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPRAN-DCN-MIB (file:./hh3c-ipran-dcn.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpRanDcnNeOnline .1.3.6.1.4.1.25506.2.152.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a new network element is online. $*
SDESC
The trap is generated when a new network element is online.
Variables:
  1: hh3cIpRanDcnNeInfoNeId
     Syntax="OCTETSTR"
     Descr="This is the network element ID uniquely identifying
        one network element in the routing domain."
  2: hh3cIpRanDcnNeInfoNeIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="This is the IP address type of the network element."
  3: hh3cIpRanDcnNeInfoNeIp
     Syntax="OCTETSTR"
     Descr="This is the IP address of the network element."
  4: hh3cIpRanDcnCompanyName
     Syntax="OCTETSTR"
     Descr="Company name."
  5: hh3cIpRanDcnDeviceType
     Syntax="OCTETSTR"
     Descr="Device type."
  6: hh3cIpRanDcnDeviceMac
     Syntax="OCTETSTR"
     Descr="The bridge MAC address of the network element."
EDESC
#
#
#
EVENT hh3cIpRanDcnNeOffline .1.3.6.1.4.1.25506.2.152.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a network element is offline. $*
SDESC
The trap is generated when a network element is offline.
Variables:
  1: hh3cIpRanDcnNeInfoNeId
     Syntax="OCTETSTR"
     Descr="This is the network element ID uniquely identifying
        one network element in the routing domain."
  2: hh3cIpRanDcnNeInfoNeIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="This is the IP address type of the network element."
  3: hh3cIpRanDcnNeInfoNeIp
     Syntax="OCTETSTR"
     Descr="This is the IP address of the network element."
EDESC
#
#
#
#
MIB: HH3C-IPSEC-MONITOR-MIB (file:./hh3c-ipsec-monitor.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIPSecTunnelStart .1.3.6.1.4.1.25506.2.7.1.8.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec Phase-2 $*
SDESC
This notification is generated when an IPSec Phase-2
Tunnel is created.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  3: hh3cIPSecTunLifeTime
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPSec Phase-2 Tunnel in seconds.
             2147483647 is defined as invalid value."
  4: hh3cIPSecTunLifeSize
     Syntax="GAUGE"
     Descr="The negotiated LifeSize of the IPSec Phase-2 Tunnel in kilobytes.
             0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPSecTunnelStop .1.3.6.1.4.1.25506.2.7.1.8.1.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec Phase-2 $*
SDESC
This notification is generated when an IPSec Phase-2
Tunnel is deleted.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  3: hh3cIPSecTunActiveTime
     Syntax="INTEGER32"
     Descr="The duration the IPSec Phase-2 Tunnel has been active in
             hundredths of seconds. 2147483647 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPSecNoSaFailure .1.3.6.1.4.1.25506.2.7.1.8.1.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec Phase-2 $*
SDESC
This notification is generated when an IPSec Phase-2
non-existent SA error occurs.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPSecAuthFailFailure .1.3.6.1.4.1.25506.2.7.1.8.1.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPSec phase-2 $*
SDESC
This notification is generated when the IPSec phase-2
authentication failure occurs.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPSecEncryFailFailure .1.3.6.1.4.1.25506.2.7.1.8.1.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPSec phase-2 $*
SDESC
This notification is generated when the IPSec phase-2
tunnel has an encrypting failure.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPSecDecryFailFailure .1.3.6.1.4.1.25506.2.7.1.8.1.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPSec phase-2 $*
SDESC
This notification is generated when the IPSec phase-2
tunnel has a decrypting failure.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPSecInvalidSaFailure .1.3.6.1.4.1.25506.2.7.1.8.1.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPSec phase-2 $*
SDESC
This notification is generated when the IPSec phase-2
invalid SA failure occurs.
Variables:
  1: hh3cIPSecTunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  2: hh3cIPSecTunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPSec Phase-2
             Tunnel. 0.0.0.0 is defined as invalid value."
  3: hh3cIPSecSpiValue
     Syntax="INTEGER32"
     Descr="The SPI value associated with a trap."
EDESC
#
#
#
EVENT hh3cIPSecPolicyAdd .1.3.6.1.4.1.25506.2.7.1.8.1.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec policy is added. $*
SDESC
This notification is generated when an IPSec policy is added.
Variables:
  1: hh3cIPSecPolicyName
     Syntax="OCTETSTR"
     Descr="The IPSec policy name with a trap."
  2: hh3cIPSecPolicySeqNum
     Syntax="INTEGER32"
     Descr="The IPSec policy sequence number with a trap."
  3: hh3cIPSecPolicySize
     Syntax="INTEGER32"
     Descr="The number of IPSec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPSecPolicyDel .1.3.6.1.4.1.25506.2.7.1.8.1.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec policy is deleted. $*
SDESC
This notification is generated when an IPSec policy is deleted.
Variables:
  1: hh3cIPSecPolicyName
     Syntax="OCTETSTR"
     Descr="The IPSec policy name with a trap."
  2: hh3cIPSecPolicySeqNum
     Syntax="INTEGER32"
     Descr="The IPSec policy sequence number with a trap."
  3: hh3cIPSecPolicySize
     Syntax="INTEGER32"
     Descr="The number of IPSec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPSecPolicyAttach .1.3.6.1.4.1.25506.2.7.1.8.1.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec policy is attached $*
SDESC
This notification is generated when an IPSec policy is attached
with one interface.
Variables:
  1: hh3cIPSecPolicyName
     Syntax="OCTETSTR"
     Descr="The IPSec policy name with a trap."
  2: hh3cIPSecPolicySize
     Syntax="INTEGER32"
     Descr="The number of IPSec policies with a trap."
  3: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPSecPolicyDetach .1.3.6.1.4.1.25506.2.7.1.8.1.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPSec policy is detached $*
SDESC
This notification is generated when an IPSec policy is detached
with one interface.
Variables:
  1: hh3cIPSecPolicyName
     Syntax="OCTETSTR"
     Descr="The IPSec policy name with a trap."
  2: hh3cIPSecPolicySize
     Syntax="INTEGER32"
     Descr="The number of IPSec policies with a trap."
  3: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
EDESC
#
#
#
#
MIB: HH3C-IPSEC-MONITOR-V2-MIB (file:./hh3c-ipsec-monitor-v2.mib) converted on Fri Mar 18 21:59:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIPsecTunnelStartV2 .1.3.6.1.4.1.25506.2.126.1.9.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
Tunnel is created.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  6: hh3cIPsecTunLifeTimeV2
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPsec Phase-2 Tunnel in seconds.
             2147483647 is defined as invalid value."
  7: hh3cIPsecTunLifeSizeV2
     Syntax="GAUGE"
     Descr="The negotiated LifeSize of the IPsec Phase-2 Tunnel in kilobytes.
             0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPsecTunnelStopV2 .1.3.6.1.4.1.25506.2.126.1.9.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
Tunnel is deleted.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  6: hh3cIPsecTunActiveTimeV2
     Syntax="INTEGER32"
     Descr="The duration the IPsec Phase-2 Tunnel has been active in
             hundredths of seconds.  2147483647 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPsecNoSaFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
non-existent SA error occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecAuthFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
authentication failure occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecEncryFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
tunnel has an encrypting failure.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecDecryFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
tunnel has a decrypting failure.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecInvalidSaFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
invalid SA failure occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecSaIndexV2
     Syntax="INTEGER32"
     Descr="The number of the Sa associated with the Phase-2 Tunnel
             Table.  The value of this index is a number which begins
             at one and is incremented with each Sa associated with
             an IPsec Phase-2 Tunnel.  The value of this object will
             wrap at 2,147,483,647."
  3: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  4: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  5: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  6: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  7: hh3cIPsecSaSpiValueV2
     Syntax="UNSIGNED32"
     Descr="The value of the SPI."
EDESC
#
#
#
EVENT hh3cIPsecPolicyAddV2 .1.3.6.1.4.1.25506.2.126.1.9.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is added. $*
SDESC
This notification is generated when an IPsec policy is added.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySeqNumV2
     Syntax="INTEGER32"
     Descr="The IPsec policy sequence number with a trap."
  3: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPsecPolicyDelV2 .1.3.6.1.4.1.25506.2.126.1.9.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is deleted. $*
SDESC
This notification is generated when an IPsec policy is deleted.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySeqNumV2
     Syntax="INTEGER32"
     Descr="The IPsec policy sequence number with a trap."
  3: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPsecPolicyAttachV2 .1.3.6.1.4.1.25506.2.126.1.9.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is attached $*
SDESC
This notification is generated when an IPsec policy is attached
with one interface.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
  3: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPsecPolicyDetachV2 .1.3.6.1.4.1.25506.2.126.1.9.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is detached $*
SDESC
This notification is generated when an IPsec policy is detached
with one interface.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
  3: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPsecConnectionStartV2 .1.3.6.1.4.1.25506.2.126.1.9.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec connection $*
SDESC
This notification is generated when an IPsec connection
is created.
Variables:
  1: hh3cIPsecPolicyDescripV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy's description."
EDESC
#
#
#
EVENT hh3cIPsecConnectionStopV2 .1.3.6.1.4.1.25506.2.126.1.9.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec connection $*
SDESC
This notification is generated when an IPsec connection
is terminated.
Variables:
  1: hh3cIPsecPolicyDescripV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy's description."
EDESC
#
#
#
#
MIB: HH3C-IPV6-ADDRESS-MIB (file:./hh3c-ipv6-address.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPX-MIB (file:./hh3c-ipx.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ISDN-MIB (file:./hh3c-isdn.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cChanbIsdnCall .1.3.6.1.4.1.25506.8.36.9.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When one call is setup ,cleard or determined , the trap $*
SDESC
When one call is setup ,cleard or determined , the trap
is sent to NMS
Variables:
  1: hh3cChanbIsdnIf
     Syntax="INTEGER"
     Descr=" this object is used to describe the virtual
                interface value associated with one neighbor.   "
  2: hh3cChanbIsdnAddr
     Syntax="OCTETSTR"
     Descr="this object is used to descirbe the call address
                by which we call one nieghbor."
  3: hh3cChanbIsdnCallType
     Syntax="INTEGER"
       0: nocall
       1: call
       2: answer
     Descr="this object is used to describe that whether it is an
                incoming call or an outging call."
  4: hh3cChanbIsdnCallerAddr
     Syntax="OCTETSTR"
     Descr="this object is used to describe the callser address
                which will be known by B channels."
  5: hh3cChanbIsdnInfoType
     Syntax="INTEGER"
       1: unknown
       2: speech
       3: unrestrDigit
       4: unrestrDigit56
       5: restrictDigit
       6: audio31
       7: audio7
       8: video
       9: swithchedPacket
     Descr="this object is used to describe the information type
                on the call"
  6: hh3cChanbIsdnLastKeepTime
     Syntax="INTEGER32"
     Descr="this object is used to describe the last call duration
                 time in milliseconds"
  7: hh3cChanbIsdnCallFreeReason
     Syntax="OCTETSTR"
     Descr="this object is used to describe the reason why last
                call is cleard"
  8: hh3cChanbIsdnCallFreeCode
     Syntax="INTEGER"
     Descr="this object is used to describe the reason code for
                the last call down."
EDESC
#
#
#
EVENT hh3cQ931IsdnCallSetup .1.3.6.1.4.1.25506.8.36.9.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap/inform is sent to the manager whenever a call $*
SDESC
This trap/inform is sent to the manager whenever a call
is established successfully.
Variables:
  1: hh3cQ931IsdnOpIndex
     Syntax="INTEGER32"
     Descr="Index of the B ISDN channel interface managed by Q93"
  2: hh3cQ931IsdnLastCalled
     Syntax="OCTETSTR"
     Descr="This object describes the called ISDN number.
                When an outgoing call is established successfully, the
                value of this node is the call number of this device,
                otherwise the value is null string"
  3: hh3cQ931IsdnLastCalling
     Syntax="OCTETSTR"
     Descr="This object describes the calling ISDN number.
                When an incoming call is established successfully, the
                value of this node is the call number of peer device,
                otherwise the value is null string."
  4: hh3cQ931IsdnCallDirection
     Syntax="INTEGER"
       1: incoming
       2: outgoing
     Descr="This object describes the direction of the current call."
  5: hh3cQ931IsdnCallTimeOpen
     Syntax="OCTETSTR"
     Descr="This object describes the start time of this call.
                start time is the time of an existent call that
                has just been established."
EDESC
#
#
#
EVENT hh3cQ931IsdnCallClear .1.3.6.1.4.1.25506.8.36.9.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap/inform is sent to the manager under the following $*
SDESC
This trap/inform is sent to the manager under the following
conditions:
- an existent call is normally cleared.
- an existent call is determined to have ultimately
failed, and has been cleared.
- the existent call is cleared when the BRI/PRI port is
down.
- the existent call is cleared when the dialer rule is
down.
Variables:
  1: hh3cQ931IsdnOpIndex
     Syntax="INTEGER32"
     Descr="Index of the B ISDN channel interface managed by Q93"
  2: hh3cQ931IsdnLastCalled
     Syntax="OCTETSTR"
     Descr="This object describes the called ISDN number.
                When an outgoing call is established successfully, the
                value of this node is the call number of this device,
                otherwise the value is null string"
  3: hh3cQ931IsdnLastCalling
     Syntax="OCTETSTR"
     Descr="This object describes the calling ISDN number.
                When an incoming call is established successfully, the
                value of this node is the call number of peer device,
                otherwise the value is null string."
  4: hh3cQ931IsdnLastCauseDisc
     Syntax="INTEGER"
       1: unknown
       2: normCallClr
       3: noRouteToTransNet
       4: noRouteToDest
       5: switchEquCongest
       6: netOutofOrder
     Descr="This object describes last cause of disconnection.
                In hh3cQ931IsdnCallClear trap, the value of this node is
                the reason of disconnection, this node is only valid
                for hh3cQ931IsdnCallClear trap, the value of this node
                is unknown in other situation.
                unknown:            unknown error.
                normCallClr:        normal call clearing.
                noRouteToTransNet:  no route to specified transit network.
                noRouteToDest:      no route to destination.
                switchEquCongest:   switching equipment congestion.
                netOutofOrder:      network out of order."
  5: hh3cQ931IsdnCallDirection
     Syntax="INTEGER"
       1: incoming
       2: outgoing
     Descr="This object describes the direction of the current call."
  6: hh3cQ931IsdnCallTimeOpen
     Syntax="OCTETSTR"
     Descr="This object describes the start time of this call.
                start time is the time of an existent call that
                has just been established."
  7: hh3cQ931IsdnCallTimeClose
     Syntax="OCTETSTR"
     Descr="This object describes the close time of this call.
                This node is only vaild for hh3cQ931IsdnCallClear trap.
                In other situation the value of this node is zero.
                In hh3cQ931IsdnCallClear trap, this node provides the
                time of an existent call that the call has just been
                cleared."
EDESC
#
#
#
EVENT hh3cLapdIsdnStatusChange .1.3.6.1.4.1.25506.8.36.9.2.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap/inform is sent to the manager whenever the $*
SDESC
This trap/inform is sent to the manager whenever the
D-channel of an interface changes state.
Variables:
  1: hh3cLapdIsdnIf
     Syntax="INTEGER32"
     Descr="This object is used to describe the D channel
                interface value associated with one neighbor."
  2: hh3cLapdIsdnLinkStatus
     Syntax="INTEGER"
       1: inactive
       2: l1Active
       3: l2Active
     Descr="The operational status of this interface:
                 inactive  all layers are inactive.
                 l1Active  layer 1 is activated,
                           layer 2 datalink not established.
                 l2Active  layer 1 is activated,
                           layer 2 datalink established.
               "
EDESC
#
#
#
#
MIB: HH3C-ISIS-MIB (file:./hh3c-isis.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIsisAdjacencyProtocolChange .1.3.6.1.4.1.25506.2.59.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when the IPv4 or IPv6 protocol $*
SDESC
A notification sent when the IPv4 or IPv6 protocol
of an adjacency changes.
The first 6 bytes of the isisPduLspId are the
SystemID of the adjacent IS.
The hh3cIsisAdjProtoType is the type of adjacency protocol.
The hh3cIsisAdjProtoState is the state of adjacency protocol.
Variables:
  1: isisNotificationSysLevelIndex
     Syntax=""
  2: isisNotificationCircIfIndex
     Syntax=""
  3: isisPduLspId
     Syntax=""
  4: hh3cIsisAdjProtoType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
     Descr="The adjacency protocol type for this notification."
  5: hh3cIsisAdjProtoState
     Syntax="INTEGER"
       1: down
       2: initializing
       3: up
     Descr="The state of the adjacency protocol."
  6: ifName
     Syntax="OCTETSTR"
     Descr="The textual name of the interface.  The value of this
            object should be the name of the interface as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name, such as `le0' or a simple port number, such as `1',
            depending on the interface naming syntax of the device.  If
            several entries in the ifTable together represent a single
            interface as named by the device, then each will have the
            same value of ifName.  Note that for an agent which responds
            to SNMP queries concerning an interface on some other
            (proxied) device, then the value of ifName for such an
            interface is the proxied device's local name for it.

            If there is no local name, or this object is otherwise not
            applicable, then this object contains a zero-length string."
EDESC
#
#
#
#
MIB: HH3C-ISSU-MIB (file:./hh3c-issu.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIssuUpgradeOpCompletionNotify .1.3.6.1.4.1.25506.2.133.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cIssuUpgradeOpCompletionNotify is sent at the $*
SDESC
An hh3cIssuUpgradeOpCompletionNotify is sent at the
completion of upgrade operation denoted by
hh3cIssuOp object, if such a notification
was requested when the operation was initiated.
hh3cIssuOpType indicates the type of the
operation.  hh3cIssuOpStatus indicates the
result of the operation.  hh3cIssuFailedReason
indicates the operation failure reason.
hh3cIssuOpTimeCompleted indicates the time
when the operation was completed.
Variables:
  1: hh3cIssuOpType
     Syntax="INTEGER"
       1: none
       2: done
       3: test
       4: install
       5: rollback
     Descr="Command to be executed.
        The 'test' command must be performed before the 'install'
        command can be executed.  The 'install'
        command is allowed only if a read of
        this object returns 'test' and the value of object
        hh3cIssuOpStatus is 'success'.

        Command                 Remarks

        none      If the user sets this object to 'none', the agent will return a success
                  without performing an upgrade operation.
        done      If this object returns any value other than
                  'none', setting this to 'done' will do
                  the required cleanup of the previous upgrade
                  operation and get the system ready for a new
                  upgrade operation.
        test      Check the version compatibility and upgrade method
                  for the given set of image files.
        install   For all the image entities listed in the
                  hh3cIssuUpgradeImageTable, perform the required
                  upgrade operation listed in that table.
        rollback  Abort the current 'install' operation and roll back
                  to the previous version.
          "
  2: hh3cIssuOpStatus
     Syntax="INTEGER"
       1: none
       2: failure
       3: inProgress
       4: success
       5: rollbackInProgress
       6: rollbackSuccess
     Descr="Status of the specified operation.
        none                - No operation was performed.
        failure             - Specified operation has failed.
        inProgress          - Specified operation is in progress.
        success             - Specified operation completed successfully.
        rollbackInProgress     - Rollback operation is in progress.
        rollbackSuccess        - Rollback operation completed successfully.
          "
  3: hh3cIssuFailedReason
     Syntax="OCTETSTR"
     Descr="Indicates the the cause of 'failure' state
        of the object 'hh3cIssuOpStatus'.
        This object would be a null string if the value of
        'hh3cIssuOpStatus' is not 'failure'."
  4: hh3cIssuOpTimeCompleted
     Syntax="OCTETSTR"
     Descr="Indicates the time when the upgrade operation was completed.
        This object would be a null string if hh3cIssuOpType is
        'none'. "
EDESC
#
#
#
#
MIB: HH3C-L2ISOLATE-MIB (file:./hh3c-l2isolate.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2TP-MIB (file:./hh3c-l2tp.mib) converted on Fri Mar 18 21:59:26 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2VPN-MIB (file:./hh3c-l2vpn.mib) converted on Fri Mar 18 21:59:27 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cL2vpnPwSwitchPtoB .1.3.6.1.4.1.25506.2.162.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a primary-to-backup PW switching $*
SDESC
This notification is generated when a primary-to-backup PW switching
happens.  The first three elements show the primary PW,
and the second three elements show the backup PW.
Variables:
  1: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  2: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  3: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
  4: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  5: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  6: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
EDESC
#
#
#
EVENT hh3cL2vpnPwSwitchBtoP .1.3.6.1.4.1.25506.2.162.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a backup-to-primary PW switching $*
SDESC
This notification is generated when a backup-to-primary PW switching
happens.  The first three elements show the backup PW,
and the second three elements show the primary PW.
Variables:
  1: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  2: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  3: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
  4: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  5: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  6: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
EDESC
#
#
#
#
MIB: HH3C-L2VPN-PWE3-MIB (file:./hh3c-l2vpn-pwe3.mib) converted on Fri Mar 18 21:59:27 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPwVcSwitchWtoP .1.3.6.1.4.1.25506.2.78.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when switch from working $*
SDESC
This notification is generated when switch from working
pw to protect pw happens. The first group of
hh3cPwVcID/hh3cPwVcType/hh3cPwVcPeerAddr is parameter of the work PW , and
the second group of hh3cPwVcID/hh3cPwVcType/hh3cPwVcPeerAddr is parameter
of the protect PW.
Variables:
  1: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  2: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  3: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
  4: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  5: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  6: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
EDESC
#
#
#
EVENT hh3cPwVcSwitchPtoW .1.3.6.1.4.1.25506.2.78.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when switch from protect $*
SDESC
This notification is generated when switch from protect
pw to working pw happens. The first group of
hh3cPwVcID/hh3cPwVcTypehh3cPwVcPeerAddr is parameter of the protect PW , and
the second group of hh3cPwVcID/hh3cPwVcType/hh3cPwVcPeerAddr is parameter
of the work PW.
Variables:
  1: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  2: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  3: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
  4: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  5: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  6: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
EDESC
#
#
#
EVENT hh3cPwVcDown .1.3.6.1.4.1.25506.2.78.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the VC's state changes to down. $*
SDESC
This notification indicates the VC's state changes to down.
Variables:
  1: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  2: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  3: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
EDESC
#
#
#
EVENT hh3cPwVcUp .1.3.6.1.4.1.25506.2.78.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the VC's state changes to up. $*
SDESC
This notification indicates the VC's state changes to up.
Variables:
  1: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  2: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  3: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
EDESC
#
#
#
EVENT hh3cPwVcDeleted .1.3.6.1.4.1.25506.2.78.3.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the VC is deleted. $*
SDESC
This notification indicates the VC is deleted.
Variables:
  1: hh3cPwVcID
     Syntax="UNSIGNED32"
     Descr="Used in the outgoing PW ID field within the 'Virtual
        Circuit FEC Element'."
  2: hh3cPwVcType
     Syntax="INTEGER"
       1: frameRelayDlciMartini
       10: atmN2OneVpcCellTransport
       11: ipLayer2Transport
       12: atmOne2OneVccCellMode
       13: atmOne2OneVpcCellMode
       14: atmAal5PduVccTransport
       15: frameRelayPortMode
       16: cep
       17: saE1oP
       18: saT1oP
       19: saE3oP
       2: atmAal5SduVccTransport
       20: saT3oP
       21: cESoPsnBasicMode
       22: tDMoIPbasicMode
       23: l2VpnCESoPSNTDMwithCAS
       24: l2VpnTDMoIPTDMwithCAS
       25: frameRelayDlci
       255: unknown
       3: atmTransparentCellTransport
       4: ethernetTagged
       5: ethernet
       6: hdlc
       64: ipInterworking
       7: ppp
       8: cem
       9: atmN2OneVccCellTransport
     Descr="Indication of the L2Vpn's VC encapsulation type."
  3: hh3cPwVcPeerAddr
     Syntax="IPADDR"
     Descr="This object contain the value of the peer ip address
        of the Martini VLL PW."
EDESC
#
#
#
#
MIB: HH3C-L4RDT-MIB (file:./hh3c-l4rdt.mib) converted on Fri Mar 18 21:59:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LAG-MIB (file:./hh3c-lag.mib) converted on Fri Mar 18 21:59:27 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAggSpeedChangedNotification .1.3.6.1.4.1.25506.8.25.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever an $*
SDESC
This event will be triggered whenever an
aggregation changes its speed.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
EDESC
#
#
#
EVENT hh3cAggPortInactiveNotification .1.3.6.1.4.1.25506.8.25.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever any port $*
SDESC
This event will be triggered whenever any port
in aggregator is made inactive.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
EDESC
#
#
#
EVENT hh3cAggPortInactiveNotification2 .1.3.6.1.4.1.25506.8.25.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the port $*
SDESC
This event will be triggered whenever the port
in aggregator is made inactive.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPortActiveNotification .1.3.6.1.4.1.25506.8.25.2.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the port $*
SDESC
This event will be triggered whenever the port
in aggregator is made active.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPartnerMisconnect .1.3.6.1.4.1.25506.8.25.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the peer link of the LACP $*
SDESC
This event will be triggered whenever the peer link of the LACP
member interface might be incorrectly connected.

Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPartnerMisconnectResume .1.3.6.1.4.1.25506.8.25.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the peer link of the LACP $*
SDESC
This event will be triggered whenever the peer link of the LACP
member interface was correctly connected.

Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
#
MIB: HH3C-LB-MIB (file:./hh3c-lb.mib) converted on Fri Mar 18 21:59:27 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLBRealServerOverLoad .1.3.6.1.4.1.25506.2.116.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when the real server is overloaded. $*
SDESC
This trap is sent when the real server is overloaded.
Variables:
  1: hh3cLBRealServerGroupName
     Syntax="OCTETSTR"
     Descr="Real server group name."
  2: hh3cLBRealServerName
     Syntax="OCTETSTR"
     Descr="Real server name."
  3: hh3cLBRealServerConnectNumber
     Syntax="INTEGER32"
     Descr="The connection number of real server."
EDESC
#
#
#
#
MIB: HH3C-LBV2-MIB (file:./hh3c-lbv2.mib) converted on Fri Mar 18 21:59:27 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLBv2VSConnOverloadTrap .1.3.6.1.4.1.25506.2.148.6.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSConnOverloadTrap notification is sent when $*
SDESC
A hh3cLBv2VSConnOverloadTrap notification is sent when
the number of active connections of the virtual server
has reached the upper limit. 
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
  2: hh3cLBv2VSConnectionsLimit
     Syntax="UNSIGNED32"
     Descr="Max connections limit of the virtual server.  0 means there is
         no limit."
  3: hh3cLBv2VSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2VSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2VSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2VSStatActiveConnections
     Syntax="UNSIGNED32"
     Descr="Active connections that the virtual server received."
EDESC
#
#
#
EVENT hh3cLBv2VSConnRecoveryTrap .1.3.6.1.4.1.25506.2.148.6.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSConnRecoveryTrap notification is sent when $*
SDESC
A hh3cLBv2VSConnRecoveryTrap notification is sent when
the number of active connections of the virtual server
is less than the upper limit.
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
  2: hh3cLBv2VSConnectionsLimit
     Syntax="UNSIGNED32"
     Descr="Max connections limit of the virtual server.  0 means there is
         no limit."
  3: hh3cLBv2VSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2VSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2VSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2VSStatActiveConnections
     Syntax="UNSIGNED32"
     Descr="Active connections that the virtual server received."
EDESC
#
#
#
EVENT hh3cLBv2VSConnsRateOverloadTrap .1.3.6.1.4.1.25506.2.148.6.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSConnsRateOverloadTrap notification is sent $*
SDESC
A hh3cLBv2VSConnsRateOverloadTrap notification is sent
when the connection rate of the virtual server has
reached the upper limit.
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
  2: hh3cLBv2VSConnectionsRateLimit
     Syntax="UNSIGNED32"
     Descr="Max connections rate limit of the virtual server.  0 means there is
         no limit."
  3: hh3cLBv2VSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2VSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2VSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2VSStatConnectionsRate
     Syntax="UNSIGNED32"
     Descr="Connections rate of the virtual server."
EDESC
#
#
#
EVENT hh3cLBv2VSConnsRateRecoveryTrap .1.3.6.1.4.1.25506.2.148.6.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSConnsRateRecoveryTrap notification is sent $*
SDESC
A hh3cLBv2VSConnsRateRecoveryTrap notification is sent
when the connection rate of the virtual server is smaller than
the upper limit.
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
  2: hh3cLBv2VSConnectionsRateLimit
     Syntax="UNSIGNED32"
     Descr="Max connections rate limit of the virtual server.  0 means there is
         no limit."
  3: hh3cLBv2VSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2VSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2VSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2VSStatConnectionsRate
     Syntax="UNSIGNED32"
     Descr="Connections rate of the virtual server."
EDESC
#
#
#
EVENT hh3cLBv2VSActiveTrap .1.3.6.1.4.1.25506.2.148.6.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSActiveTrap notification is sent when virtual $*
SDESC
A hh3cLBv2VSActiveTrap notification is sent when virtual
server status changes to active.
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
EDESC
#
#
#
EVENT hh3cLBv2VSInactiveTrap .1.3.6.1.4.1.25506.2.148.6.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSInactiveTrap notification is sent when virtual $*
SDESC
A hh3cLBv2VSInactiveTrap notification is sent when virtual
server status changes to inactive.
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
EDESC
#
#
#
EVENT hh3cLBv2RSAvailableTrap .1.3.6.1.4.1.25506.2.148.6.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2RSAvailableTrap notification is sent when the status of $*
SDESC
A hh3cLBv2RSAvailableTrap notification is sent when the status of
the real server changes to available.
Variables:
  1: hh3cLBv2RSName
     Syntax="OCTETSTR"
     Descr="Name of the real server."
EDESC
#
#
#
EVENT hh3cLBv2RSUnavailableTrap .1.3.6.1.4.1.25506.2.148.6.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2RSUnavailableTrap notification is sent when the status of $*
SDESC
A hh3cLBv2RSUnavailableTrap notification is sent when the status of
the real server changes to unavailable.
Variables:
  1: hh3cLBv2RSName
     Syntax="OCTETSTR"
     Descr="Name of the real server."
EDESC
#
#
#
EVENT hh3cLBv2SFActiveTrap .1.3.6.1.4.1.25506.2.148.6.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2SFActiveTrap notification is sent when the status of $*
SDESC
A hh3cLBv2SFActiveTrap notification is sent when the status of
the server farm changes to active.
Variables:
  1: hh3cLBv2SFName
     Syntax="OCTETSTR"
     Descr="Name of the server farm."
EDESC
#
#
#
EVENT hh3cLBv2SFInactiveTrap .1.3.6.1.4.1.25506.2.148.6.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2SFInactiveTrap notification is sent when the status of $*
SDESC
A hh3cLBv2SFInactiveTrap notification is sent when the status of
the server farm changes to inactive.
Variables:
  1: hh3cLBv2SFName
     Syntax="OCTETSTR"
     Descr="Name of the server farm."
EDESC
#
#
#
EVENT hh3cLBv2ActionInUseSFChangeTrap .1.3.6.1.4.1.25506.2.148.6.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2ActionInUseSFChangeTrap notification is sent when the $*
SDESC
A hh3cLBv2ActionInUseSFChangeTrap notification is sent when the
server farm which is in use quoted by action changes.
Variables:
  1: hh3cLBv2ActionName
     Syntax="OCTETSTR"
     Descr="Name of the action."
  2: hh3cLBv2ActionDefaultSF
     Syntax="OCTETSTR"
     Descr="Default server farm quoted by the action.  A zero length
         string indicates no default server farm has been assigned."
  3: hh3cLBv2ActionBackupSF
     Syntax="OCTETSTR"
     Descr="Backup server farm quoted by the action.  A zero length
         string indicates no backup server farm has been assigned."
  4: hh3cLBv2ActionInUseSF
     Syntax="OCTETSTR"
     Descr="Server farm in use quoted by the action."
EDESC
#
#
#
EVENT hh3cLBv2VSInUseSFChangeTrap .1.3.6.1.4.1.25506.2.148.6.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2VSInUseSFChangeTrap notification is sent when $*
SDESC
A hh3cLBv2VSInUseSFChangeTrap notification is sent when
the server farm which is in use quoted by virtual server
changes.
Variables:
  1: hh3cLBv2VSName
     Syntax="OCTETSTR"
     Descr="Name of the virtual server."
  2: hh3cLBv2VSDefaultSF
     Syntax="OCTETSTR"
     Descr="Default server farm quoted by the virtual server.  A zero length
         string indicates no default server farm has been assigned."
  3: hh3cLBv2VSBackupSF
     Syntax="OCTETSTR"
     Descr="Backup server farm quoted by the virtual server.  A zero length
         string indicates no backup server farm has been assigned."
  4: hh3cLBv2VSInUseSF
     Syntax="OCTETSTR"
     Descr="Server farm in use quoted by the virtual server."
EDESC
#
#
#
EVENT hh3cLBv2RSConnOverloadTrap .1.3.6.1.4.1.25506.2.148.6.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2RSConnOverloadTrap notification is sent when $*
SDESC
A hh3cLBv2RSConnOverloadTrap notification is sent when
the number of active connections of the real server
has reached the upper limit. 
Variables:
  1: hh3cLBv2RSName
     Syntax="OCTETSTR"
     Descr="Name of the real server."
  2: hh3cLBv2RSConnectionsLimit
     Syntax="UNSIGNED32"
     Descr="Max connections limit of the real server.  0 means there is
         no limit."
  3: hh3cLBv2RSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2RSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2RSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2RSStatActiveConnections
     Syntax="UNSIGNED32"
     Descr="Active connections that the real server received."
EDESC
#
#
#
EVENT hh3cLBv2RSConnRecoveryTrap .1.3.6.1.4.1.25506.2.148.6.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2RSConnRecoveryTrap notification is sent when $*
SDESC
A hh3cLBv2RSConnRecoveryTrap notification is sent when
the number of active connections of the real server
is less than the upper limit.
Variables:
  1: hh3cLBv2RSName
     Syntax="OCTETSTR"
     Descr="Name of the real server."
  2: hh3cLBv2RSConnectionsLimit
     Syntax="UNSIGNED32"
     Descr="Max connections limit of the real server.  0 means there is
         no limit."
  3: hh3cLBv2RSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2RSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2RSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2RSStatActiveConnections
     Syntax="UNSIGNED32"
     Descr="Active connections that the real server received."
EDESC
#
#
#
EVENT hh3cLBv2RSConnsRateOverloadTrap .1.3.6.1.4.1.25506.2.148.6.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2RSConnsRateOverloadTrap notification is sent $*
SDESC
A hh3cLBv2RSConnsRateOverloadTrap notification is sent
when the connection rate of the real server has
reached the upper limit.
Variables:
  1: hh3cLBv2RSName
     Syntax="OCTETSTR"
     Descr="Name of the real server."
  2: hh3cLBv2RSConnectionsRateLimit
     Syntax="UNSIGNED32"
     Descr="Max connections rate limit of the real server.  0 means there is
         no limit."
  3: hh3cLBv2RSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2RSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2RSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2RSStatConnectionsRate
     Syntax="UNSIGNED32"
     Descr="Connections rate of the real server."
EDESC
#
#
#
EVENT hh3cLBv2RSConnsRateRecoveryTrap .1.3.6.1.4.1.25506.2.148.6.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cLBv2RSConnsRateRecoveryTrap notification is sent $*
SDESC
A hh3cLBv2RSConnsRateRecoveryTrap notification is sent
when the connection rate of the real server is smaller than
the upper limit.
Variables:
  1: hh3cLBv2RSName
     Syntax="OCTETSTR"
     Descr="Name of the real server."
  2: hh3cLBv2RSConnectionsRateLimit
     Syntax="UNSIGNED32"
     Descr="Max connections rate limit of the real server.  0 means there is
         no limit."
  3: hh3cLBv2RSStatChassis
     Syntax="UNSIGNED32"
     Descr="ID of the device that holds the card."
  4: hh3cLBv2RSStatSlot
     Syntax="UNSIGNED32"
     Descr="Member ID of the card on device."
  5: hh3cLBv2RSStatCpuid
     Syntax="UNSIGNED32"
     Descr="ID of the CPU on the card."
  6: hh3cLBv2RSStatConnectionsRate
     Syntax="UNSIGNED32"
     Descr="Connections rate of the real server."
EDESC
#
#
#
#
MIB: HH3C-LICENSE-MIB (file:./hh3c-license.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLicenseOpCompletion .1.3.6.1.4.1.25506.2.145.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a license operation completed. $*
SDESC
This notification is generated when a license operation completed.
Variables:
  1: hh3cLicenseOpIndex
     Syntax="UNSIGNED32"
     Descr="ID that can be used to uniquely identify an operation."
  2: hh3cLicenseOpPhysicalIndex
     Syntax=""
     Descr="This object indicates that the entPhysicalIndex of the device
        where the operation is being executed.

        The meaning of this object is associated with the management state
        from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of chassis local master.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of CPUs.

        This object must be set and can not be set to zero when
        executing an operation.
        "
  3: hh3cLicenseOpType
     Syntax="INTEGER"
       1: compress
       2: delete
       3: installActivationFile
       4: installActivationKey
       5: installLicenseKey
       6: uninstallActivationFile
       7: uninstallActivationKey
       8: uninstallLicenseKey
     Descr="The type of this operation.

        compress - Compress the license storage if the free license storage
                   is not sufficient.
        Note that:
        1) After compressing, the expired licenses and uninstalled licenses
           in the storage area will be cleared.
        2) The DID changes each time the license storage is compressed.
        3) Before performing a compression, make sure all activation files
           generated based on the old DID have been installed.
           They cannot be installed after the compression.

        delete - Compress one license storage only.

        installActivationFile   -  Install an activation file.

        installActivationKey    -  Install an activation key.

        installLicenseKey       -  Install a license key.

        uninstallActivationFile -  Uninstall an activation file.

        uninstallActivationKey  -  Uninstall an activation key.

        uninstallLicenseKey     -  Uninstall a license key."
  4: hh3cLicenseOpString
     Syntax="OCTETSTR"
     Descr="This object might be an activation file name, an activation key or
        a license key that is to be installed, uninstalled or deleted.

        The operation type is specified in hh3cLicenseOpType.

        For compressing, this object must not be bound when creating a row.

        For deletion, this object could be an activation file, an activation
        key or a license key.

        For installActivationFile and uninstallActivationFile,
        this object must be a name of an activation file, with full path.
        Such as: flash:/license/210231A1V0A1290000012013032718261184345.ak

        For installActivationKey and uninstallActivationKey,
        this object must be an activation key.

        For installLicenseKey and uninstallLicenseKey,
        this object must be a license key."
  5: hh3cLicenseOpState
     Syntax="INTEGER"
       1: opInProgress
       2: opSuccessful
       3: opFailed
     Descr="The state of this operation.

        opInProgress - This operation is in progress.
        opSuccessful - Successful to execute this operation.
        opFailed - Failed to execute this operation,
                   and 'hh3cLicenseOpFailedReason' will indicate the detailed
                   cause of the failure."
  6: hh3cLicenseOpFailedReason
     Syntax="OCTETSTR"
     Descr="This object indicates the detailed cause of the failure when this
        operation failed."
EDESC
#
#
#
EVENT hh3cLicenseActivationFileLost .1.3.6.1.4.1.25506.2.145.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the activation file $*
SDESC
This notification is generated when the activation file
has been lost.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax=""
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseActivationFile
     Syntax="OCTETSTR"
     Descr="The name of an installed activation file, with device name and
        file name.

        For example:
        flash:/license/210231A1V0A1290000012013032718261184345.ak
        "
EDESC
#
#
#
EVENT hh3cLicenseActivationFileRestored .1.3.6.1.4.1.25506.2.145.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the activation file $*
SDESC
This notification is generated when the activation file
restored successfully.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax=""
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseActivationFile
     Syntax="OCTETSTR"
     Descr="The name of an installed activation file, with device name and
        file name.

        For example:
        flash:/license/210231A1V0A1290000012013032718261184345.ak
        "
EDESC
#
#
#
EVENT hh3cLicenseExpired .1.3.6.1.4.1.25506.2.145.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license expires. $*
SDESC
This notification is generated when the license expires.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseFeatureState
     Syntax="INTEGER"
       1: notLicensed
       2: trialLicense
       3: formalLicense
       4: serverLicense
       5: preLicense
     Descr="License type by purchasing state.

        notLicensed - The feature is not licensed.
        trialLicense - The feature is using trial license.
        formalLicense - The feature is using purchased license.
        serverLicense - The feature is using license authorized by license server.
        preLicense - The feature is using pre-installed license."
EDESC
#
#
#
EVENT hh3cLicenseExpireWarning .1.3.6.1.4.1.25506.2.145.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when is about to expire. $*
SDESC
This notification is generated when is about to expire.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseFeatureState
     Syntax="INTEGER"
       1: notLicensed
       2: trialLicense
       3: formalLicense
       4: serverLicense
       5: preLicense
     Descr="License type by purchasing state.

        notLicensed - The feature is not licensed.
        trialLicense - The feature is using trial license.
        formalLicense - The feature is using purchased license.
        serverLicense - The feature is using license authorized by license server.
        preLicense - The feature is using pre-installed license."
  3: hh3cLicenseBindValidityPeriodRemaining
     Syntax="UNSIGNED32"
     Descr="This object indicates the remaining days before
        the feature's license expires."
EDESC
#
#
#
EVENT hh3cLicenseReconnectWithServer .1.3.6.1.4.1.25506.2.145.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license client is reconnected to the license server. $*
SDESC
This notification is generated when the license client is reconnected to the license server.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax=""
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseServerIp
     Syntax="IPADDR"
     Descr="The IP address of the license server."
  3: hh3cLicenseServerPort
     Syntax="UNSIGNED32"
     Descr="The port number of the license server."
EDESC
#
#
#
EVENT hh3cLicenseDisconnectWithServer .1.3.6.1.4.1.25506.2.145.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA  This notification is generated when the license client is disconnected from the license server. $*
SDESC
 This notification is generated when the license client is disconnected from the license server.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax=""
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseServerIp
     Syntax="IPADDR"
     Descr="The IP address of the license server."
  3: hh3cLicenseServerPort
     Syntax="UNSIGNED32"
     Descr="The port number of the license server."
EDESC
#
#
#
EVENT hh3cLicenseBelowUsageThreshold .1.3.6.1.4.1.25506.2.145.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license usage drops below warning threshold. $*
SDESC
This notification is generated when the license usage drops below warning threshold.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseLowerUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the lower warning threshold of usage."
  3: hh3cLicenseUpperUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the upper warning threshold of usage."
  4: hh3cLicenseCurrentUsageRate
     Syntax="UNSIGNED32"
     Descr="This object indicates the license current usage rate."
EDESC
#
#
#
EVENT hh3cLicenseOverUsageThreshold .1.3.6.1.4.1.25506.2.145.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license usage is over warning threshold. $*
SDESC
This notification is generated when the license usage is over warning threshold.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseLowerUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the lower warning threshold of usage."
  3: hh3cLicenseUpperUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the upper warning threshold of usage."
  4: hh3cLicenseCurrentUsageRate
     Syntax="UNSIGNED32"
     Descr="This object indicates the license current usage rate."
EDESC
#
#
#
#
MIB: HH3C-LI-MIB (file:./hh3c-li.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLIActive .1.3.6.1.4.1.25506.2.111.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This Notification is sent when a type of intercepting configuration $*
SDESC
This Notification is sent when a type of intercepting configuration
is changed from inactive to active.
The value of the hh3cLIStreamtype which identify the actual intercept
stream is included in this notification.
Variables:
  1: hh3cLIStreamtype
     Syntax="INTEGER"
       1: ip
       2: mac
       3: userConnection
     Descr="Identifies the type of stream, and according to it uses filter table.
        It can not be changed after a filter table is attached to it.
        The following types of streams are supported:
         ip:             IP filter.  The exact definition is a row in
                         hh3cLIIPStreamTable.
         mac:            MAC filter.  The exact definition is a row in
                         hh3cLIMACStreamTable.
         userConnecton:  User connection filter.  The exact definition
                         is a row in hh3cLIUserStreamTable."
EDESC
#
#
#
EVENT hh3cLITimeOut .1.3.6.1.4.1.25506.2.111.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When the time specified in hh3cLIMediationTimeout arrives, $*
SDESC
When the time specified in hh3cLIMediationTimeout arrives,
the device notifies the manager corresponding intercept is removed.
Variables:
  1: hh3cLIMediationRowStatus
     Syntax="INTEGER"
       1: active
       2: notInService
       3: notReady
       4: createAndGo
       5: createAndWait
       6: destroy
     Descr="Operation status of this table entry."
EDESC
#
#
#
EVENT hh3cLIFailureInformation .1.3.6.1.4.1.25506.2.111.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA When interception is configured on distributed device, $*
SDESC
When interception is configured on distributed device,
the configuration perhaps failed on some board.
If this happened, this notification will occur.
Variables:
  1: hh3cLIStreamtype
     Syntax="INTEGER"
       1: ip
       2: mac
       3: userConnection
     Descr="Identifies the type of stream, and according to it uses filter table.
        It can not be changed after a filter table is attached to it.
        The following types of streams are supported:
         ip:             IP filter.  The exact definition is a row in
                         hh3cLIIPStreamTable.
         mac:            MAC filter.  The exact definition is a row in
                         hh3cLIMACStreamTable.
         userConnecton:  User connection filter.  The exact definition
                         is a row in hh3cLIUserStreamTable."
  2: hh3cLIBoardInformation
     Syntax="UNSIGNED32"
     Descr="It is a slot number."
EDESC
#
#
#
#
MIB: HH3C-LLDP-EXT-MIB (file:./hh3c-lldp-ext.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3clldpValidationStatusChange .1.3.6.1.4.1.25506.2.100.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the neighbor validation $*
SDESC
This notification will be sent when the neighbor validation
protection status of a port is changed.
Variables:
  1: hh3clldpPortStatusPortNum
     Syntax=""
     Descr="Port number."
  2: hh3clldpPortValidationStatus
     Syntax="INTEGER32"
     Descr="Neighbor validation protection status of the port.  The default value
         is 0."
EDESC
#
#
#
EVENT hh3clldpAgingStatusChange .1.3.6.1.4.1.25506.2.100.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the neighbor aging protection $*
SDESC
This notification will be sent when the neighbor aging protection
status of a port is changed.
Variables:
  1: hh3clldpPortStatusPortNum
     Syntax=""
     Descr="Port number."
  2: hh3clldpPortAgingStatus
     Syntax="INTEGER32"
     Descr="Neighbor aging protection status of the port.  The default value is
         0."
EDESC
#
#
#
#
MIB: HH3C-LOCAL-AAA-SERVER-MIB (file:./hh3c-local-aaa-server.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLocAAASvrBillExportFailed .1.3.6.1.4.1.25506.2.141.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when local AAA bills $*
SDESC
This trap is generated when local AAA bills
cannot be exported to a bill server.
EDESC
#
#
#
#
MIB: HH3C-LOGIC-VOLUME-MIB (file:./hh3c-logic-volume.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LPBKDT-MIB (file:./hh3c-lpbkdt.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLpbkdtTrapLoopbacked .1.3.6.1.4.1.25506.2.95.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the interface is looped. $*
SDESC
Trap message is generated when the interface is looped.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapRecovered .1.3.6.1.4.1.25506.2.95.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the loops on the interface $*
SDESC
Trap message is generated when the loops on the interface
are eliminated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapPerVlanLoopbacked .1.3.6.1.4.1.25506.2.95.1.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the interface is looped in the VLAN. $*
SDESC
Trap message is generated when the interface is looped in the VLAN.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cLpbkdtVlanID
     Syntax=""
     Descr="The ID of VLAN."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapPerVlanRecovered .1.3.6.1.4.1.25506.2.95.1.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the loop on the interface $*
SDESC
Trap message is generated when the loop on the interface
is eliminated in the VLAN.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cLpbkdtVlanID
     Syntax=""
     Descr="The ID of VLAN."
EDESC
#
#
#
#
MIB: HH3C-LSW-DEV-ADM-MIB (file:./hh3c-lsw-dev-adm.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LTE-MEC-MIB (file:./hh3c-lte-mec.mib) converted on Fri Mar 18 21:59:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMecTunnelCacheFullTrap .1.3.6.1.4.1.25506.2.185.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MEC tunnel table is full. $*
SDESC
Send this trap when the MEC tunnel table is full.
Variables:
  1: hh3cMecTunnelCacheNumber
     Syntax="INTEGER32"
     Descr="The number of MEC tunnel tables."
EDESC
#
#
#
EVENT hh3cMecTunnelCacheRecoverTrap .1.3.6.1.4.1.25506.2.185.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MEC tunnel table entry falls below the normal value. $*
SDESC
Send this trap when the MEC tunnel table entry falls below the normal value.
Variables:
  1: hh3cMecTunnelCacheNumber
     Syntax="INTEGER32"
     Descr="The number of MEC tunnel tables."
EDESC
#
#
#
#
MIB: HH3C-MAC-INFORMAT ZBXTRAP $aAION-MIB (file:./hh3c-mac-information.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMACInformationChangedTrap .1.3.6.1.4.1.25506.2.87.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When the cached number of MAC address information is reached the $*
SDESC
When the cached number of MAC address information is reached the
value specified by hh3cMACInformationCacheLen, trap is generated
and is sent to the remote monitoring device.  The trap is also
generated when the amount of time elapsed since the previous
notification is greater than the interval value specified by
hh3cMACInformationcSendInterval and there is at least one cached
MAC address information learnt or removed. The object is valid
only when hh3cMACInfomationWorkMode is set to trap(1).  When the
hh3cMACInfomationWorkMode is set to syslog(2), No trap will be
generated even hh3cMACInformationEnabled is set to enabled(1) and
the feature is enabled on interface.
Variables:
  1: hh3cMACInfoTrapIndex
     Syntax="UNSIGNED32"
     Descr="The sequence number of trap information. When it reaches the
        maximum value, it should be set to 1."
  2: hh3cMACInfoTrapCount
     Syntax="UNSIGNED32"
     Descr="The cell number of the current trap information.  The trap
        message may consists of more than one MAC address information.
        Each of the one MAC address information in one trap is called cell."
  3: hh3cMACInfoTrapMsg
     Syntax="OCTETSTR"
     Descr="This object is the MAC information that learnt or removed
        in the monitored device. It can consists of more than
        one MAC information in the object.
        This object is in the format of '<cell1><cell2>...'. Each
        cell consists of 12 octets in the format of
        '<operationType><VLAN><MAC><MACtype><ifIndex>'.

        <operationType> is the reason type of MAC address changed and have
        size of 1 octet. It only supports the following values.
        1 - MAC learnt.
        2 - MAC removed.

        <VLAN> is the vlan number that correspond to the MAC address in
        MAC address table and has size of 2 octet.

        <MAC> is the MAC address and has size of 6 octets.

        <MACtype> is the MAC address type and has size of 1 octet. It only
        supports the following values.
        0 - Unknown
        1 - Learnt
        2 - Config dynamic
        3 - Config static
        4 - Blackhole
        5 - Security
        6 - 802.1x
        7 - MAC authentication
        8 - Voice VLAN
        9 - Reserved

        <ifIndex> is the index of the interface where the MAC
        address is learnt or removed and has size of 2 octets."
EDESC
#
#
#
EVENT hh3cMACInformationChangedTrapExt .1.3.6.1.4.1.25506.2.87.1.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When the cached number of MAC address information is reached the $*
SDESC
When the cached number of MAC address information is reached the
value specified by hh3cMACInformationCacheLen, trap is generated
and is sent to the remote monitoring device.  The trap is also
generated when the amount of time elapsed since the previous
notification is greater than the interval value specified by
hh3cMACInformationcSendInterval and there is at least one cached
MAC address information learnt or removed.  The object is valid
only when hh3cMACInfomationWorkMode is set to trap(1).  When the
hh3cMACInfomationWorkMode is set to syslog(2), No trap will be
generated even hh3cMACInformationEnabled is set to enabled(1) and
the feature is enabled on interface.
Variables:
  1: hh3cMACInfoTrapVerExt
     Syntax="UNSIGNED32"
     Descr="The version of trap information."
  2: hh3cMACInfoTrapIndexExt
     Syntax="UNSIGNED32"
     Descr="The sequence number of trap information.  When it reaches the
        maximum value, it should be set to 1."
  3: hh3cMACInfoTrapCountExt
     Syntax="UNSIGNED32"
     Descr="The cell number of the current trap information.  The trap
        message may consists of more than one MAC address information.
        Each of the one MAC address information in one trap is called cell."
  4: hh3cMACInfoTrapMsgExt
     Syntax="OCTETSTR"
     Descr="This object is the MAC information that learnt or removed
        in the monitored device.  It can consists of more than
        one MAC information in the object.
        This object is in the format of '<cell1><cell2>...'.  Each
        cell consists of 14 octets in the format of
        '<operationType><VLAN><MAC><MACtype><ifIndex>'.

        <operationType> is the reason type of MAC address changed and have
        size of 1 octet.  It only supports the following values.
        1 - MAC learnt.
        2 - MAC removed.

        <VLAN> is the vlan number that correspond to the MAC address in
        MAC address table and has size of 2 octet.

        <MAC> is the MAC address and has size of 6 octets.

        <MACtype> is the MAC address type and has size of 1 octet.  It only
        supports the following values.
        0 - Unknown
        1 - Learnt
        2 - Config dynamic
        3 - Config static
        4 - Blackhole
        5 - Security
        6 - 802.1x
        7 - MAC authentication
        8 - Voice VLAN
        9 - Reserved

        <ifIndex> is the index of the interface where the MAC
        address is learnt or removed and has size of 4 octets."
EDESC
#
#
#
EVENT hh3cMACInformationMovedTrap .1.3.6.1.4.1.25506.2.87.1.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When the MAC address has been moved to another interface, trap $*
SDESC
When the MAC address has been moved to another interface, trap
is generated and is sent to the remote monitoring device.
Variables:
  1: hh3cMACInfoTrapMsgMovedAddress
     Syntax="OCTETSTR"
     Descr="The MAC address that is moved between interfaces."
  2: hh3cMACInfoTrapMsgMovedVlan
     Syntax="INTEGER32"
     Descr="The VLAN number in which the MAC address is moved."
  3: hh3cMACInfoTrapMsgMovedFromIf
     Syntax="INTEGER32"
     Descr="The index of the interface from which the MAC address is moved."
  4: hh3cMACInfoTrapMsgMovedToIf
     Syntax="INTEGER32"
     Descr="The index of the interface to which the MAC address is moved."
  5: hh3cMACInfoTrapMsgMovedCount
     Syntax="COUNTER"
     Descr="The times for which the MAC address has been moved between the
        interfaces."
EDESC
#
#
#
#
MIB: HH3C-MACSEC-MIB (file:./hh3c-macsec.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MCDR-MIB (file:./hh3c-mcdr.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MDC-MIB (file:./hh3c-mdc.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMDCStateChangeToActive .1.3.6.1.4.1.25506.2.136.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cMDCStateChangeToActive trap indicates that the MDC status has changed to active. $*
SDESC
The hh3cMDCStateChangeToActive trap indicates that the MDC status has changed to active.
Variables:
  1: hh3cMDCIndex
     Syntax="INTEGER32"
     Descr="MDC ID is used as MDCIndex, the value range of MDC ID depends on the device model.
         MDCIndex cannot be modified after creation."
  2: hh3cMDCName
     Syntax="OCTETSTR"
     Descr="Specifies the MDC name, a case-sensitive string of 1 to 15 characters.
        The MDC name cannot be modified after creation."
EDESC
#
#
#
EVENT hh3cMDCStateChangeToInactive .1.3.6.1.4.1.25506.2.136.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cMDCStateChangeToInactive trap indicates that the MDC status has changed to inactive. $*
SDESC
The hh3cMDCStateChangeToInactive trap indicates that the MDC status has changed to inactive.
Variables:
  1: hh3cMDCIndex
     Syntax="INTEGER32"
     Descr="MDC ID is used as MDCIndex, the value range of MDC ID depends on the device model.
         MDCIndex cannot be modified after creation."
  2: hh3cMDCName
     Syntax="OCTETSTR"
     Descr="Specifies the MDC name, a case-sensitive string of 1 to 15 characters.
        The MDC name cannot be modified after creation."
EDESC
#
#
#
#
MIB: HH3C-MINM-MIB (file:./hh3c-minm.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MIRRORGROUP-MIB (file:./hh3c-mirrorgroup.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSEXT-MIB (file:./hh3c-mplsext.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-LDP-MIB (file:./hh3c-mpls-ldp.mib) converted on Fri Mar 18 21:59:29 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMplsLdpFailedInitSessionThresholdExceeded .1.3.6.1.4.1.25506.8.12.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated whenever the value $*
SDESC
This notification is generated whenever the value
of hh3cMplsLdpEntityFailedInitSessionThreshold is
exceeded.
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
  2: hh3cMplsLdpEntityID
     Syntax="OCTETSTR"
     Descr="The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
  3: hh3cMplsLdpEntityFailedInitSessionThreshold
     Syntax="INTEGER"
     Descr="When attempting to establish a session with a
             given Peer, the given LDP Entity should
             send out a notification when exceeding this threshold.
             A value of 0 (zero) for this object
             indicates that the threshold is infinity.
             In other words, a notification will not
             be sent if the value of this object is 0 (zero)."
EDESC
#
#
#
EVENT hh3cMplsLdpCrlspTunnelUp .1.3.6.1.4.1.25506.8.12.2.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated by the Ingress LSR of the CRLSP tunnel $*
SDESC
This notification is generated by the Ingress LSR of the CRLSP tunnel
on the receipt of Label mapping message from the downstream LSR for
the LAbel request sent for the CRLSP tunnel.
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
  2: hh3cMplsLdpEntityID
     Syntax="OCTETSTR"
     Descr="The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
  3: hh3cMplsLdpCrlspTnlIndex
     Syntax="INTEGER"
     Descr="Uniquely identifies this row."
EDESC
#
#
#
EVENT hh3cMplsLdpCrlspTunnelDown .1.3.6.1.4.1.25506.8.12.2.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a CRLSP Row status is modified $*
SDESC
This notification is generated when a CRLSP Row status is modified
to destroy the CRLSP tunnel.  - due to pre-emption etc.,
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
  2: hh3cMplsLdpEntityID
     Syntax="OCTETSTR"
     Descr="The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
  3: hh3cMplsLdpCrlspTnlIndex
     Syntax="INTEGER"
     Descr="Uniquely identifies this row."
EDESC
#
#
#
EVENT hh3cMplsLdpCrlspTunnelSetupFailure .1.3.6.1.4.1.25506.8.12.2.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated by the Ingress LSR of the CRLSP tunnel $*
SDESC
This notification is generated by the Ingress LSR of the CRLSP tunnel
on the receipt of Nak message from the downstream LSR for
the Label request sent for the CRLSP tunnel. This can occur due to
improper ER hop values being set, or Traffic resources not available
etc.,
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
  2: hh3cMplsLdpEntityID
     Syntax="OCTETSTR"
     Descr="The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
  3: hh3cMplsLdpCrlspTnlIndex
     Syntax="INTEGER"
     Descr="Uniquely identifies this row."
EDESC
#
#
#
EVENT hh3cMplsLdpIncarnUpEventFailure .1.3.6.1.4.1.25506.8.12.2.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated by LDP to notify  $*
SDESC
This notification is generated by LDP to notify 
the Incarnation UP Event failure
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
EDESC
#
#
#
EVENT hh3cMplsLdpIncarnDownEventFailure .1.3.6.1.4.1.25506.8.12.2.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated by LDP to notify  $*
SDESC
This notification is generated by LDP to notify 
the Incarnation DOWN Event failure
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
EDESC
#
#
#
EVENT hh3cMplsLdpEntityUpEventFailure .1.3.6.1.4.1.25506.8.12.2.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated by LDP to notify  $*
SDESC
This notification is generated by LDP to notify 
the ENTITY UP Event failure
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
  2: hh3cMplsLdpEntityID
     Syntax="OCTETSTR"
     Descr="The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
EDESC
#
#
#
EVENT hh3cMplsLdpEntityDownEventFailure .1.3.6.1.4.1.25506.8.12.2.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated by LDP to notify  $*
SDESC
This notification is generated by LDP to notify 
the ENTITY  DOWN Event failure
Variables:
  1: hh3cMplsLdpLsrIncarnID
     Syntax="INTEGER"
     Descr="The incarnation acts as index to all the elements in this
              table."
  2: hh3cMplsLdpEntityID
     Syntax="OCTETSTR"
     Descr="The LDP identifier which uniquely identifies
             the LDP Entity.  This is s six octet quantity
             which is used to identify an Label Switch Router
             (LSR) label space.

             The first four octets encode an IP address
             assigned to the LSR, and the last two octets
             identify a specific label space within the
             LSR."
EDESC
#
#
#
EVENT hh3cMplsLdpSessionUpEventFailure .1.3.6.1.4.1.25506.8.12.2.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Generation of this trap occurs when the  $*
SDESC
Generation of this trap occurs when the 
value of 'hh3cMplsLdpSessionState' enters
the 'operational(5)' state.
Variables:
  1: hh3cMplsLdpSessionID
     Syntax="OCTETSTR"
     Descr="The LDP Session identifier."
  2: hh3cMplsLdpSessionState
     Syntax="INTEGER"
       1: nonexistent
       2: initialized
       3: openrec
       4: opensent
       5: operational
     Descr="The current state of the session, all of the
             states 1 - 5 are based on the state machine for
             session negotiation behavior."
EDESC
#
#
#
EVENT hh3cMplsLdpSessionDownEventFailure .1.3.6.1.4.1.25506.8.12.2.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Generation of this trap occurs when the  $*
SDESC
Generation of this trap occurs when the 
value of 'hh3cMplsLdpSessionState' leaves 
the 'operational(5)' state.
Variables:
  1: hh3cMplsLdpSessionID
     Syntax="OCTETSTR"
     Descr="The LDP Session identifier."
  2: hh3cMplsLdpSessionState
     Syntax="INTEGER"
       1: nonexistent
       2: initialized
       3: openrec
       4: opensent
       5: operational
     Descr="The current state of the session, all of the
             states 1 - 5 are based on the state machine for
             session negotiation behavior."
EDESC
#
#
#
#
MIB: HH3C-MPLS-LSR-MIB (file:./hh3c-mpls-lsr.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cmplsXCUp .1.3.6.1.4.1.25506.8.12.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a $*
SDESC
This notification is generated when a
hh3cmplsXCOperStatus object for one of the configured
cross-connect entries is about to leave the down
state and transition into some other state (but not
into the notPresent state).  This other state is
indicated by the included value of
hh3cmplsXCOperStatus.
Variables:
  1: hh3cmplsXCIndex
     Syntax="INTEGER32"
     Descr="Primary index for the conceptual row identifying 
        a group of cross-connect segments."
  2: hh3cmplsInSegmentIfIndex
     Syntax="INTEGER32"
     Descr="This is a unique index for an entry in the
        hh3cmplsInSegmentTable.  This value represents the
        interface index for the incoming MPLS interface.  A
        value of zero represents an incoming label from the
        per-platform label space.  In this case, the
        hh3cmplsInSegmentLabel is interpreted to be an MPLS-type
        label."
  3: hh3cmplsInSegmentLabel
     Syntax="UNSIGNED32"
     Descr="The incoming label for this segment."
  4: hh3cmplsOutSegmentIndex
     Syntax="INTEGER32"
     Descr="This value contains a unique index for this row.
        While a value of 0 is not valid as an index for this
        row it can be supplied as a valid value to index
        hh3cmplsXCTable to access entries for which no out-
        segment has been configured."
  5: hh3cmplsXCAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired operational status of this segment."
  6: hh3cmplsXCOperStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
       4: unknown
       5: dormant
       6: notPresent
       7: lowerLayerDown
     Descr="The actual operational status of this cross-
        connect."
EDESC
#
#
#
EVENT hh3cmplsXCDown .1.3.6.1.4.1.25506.8.12.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a $*
SDESC
This notification is generated when a
hh3cmplsXCOperStatus object for one of the configured
cross-connect entries is about to enter the down
state from some other state (but not from the
notPresent state).  This other state is indicated by
the included value of hh3cmplsXCOperStatus.
Variables:
  1: hh3cmplsXCIndex
     Syntax="INTEGER32"
     Descr="Primary index for the conceptual row identifying 
        a group of cross-connect segments."
  2: hh3cmplsInSegmentIfIndex
     Syntax="INTEGER32"
     Descr="This is a unique index for an entry in the
        hh3cmplsInSegmentTable.  This value represents the
        interface index for the incoming MPLS interface.  A
        value of zero represents an incoming label from the
        per-platform label space.  In this case, the
        hh3cmplsInSegmentLabel is interpreted to be an MPLS-type
        label."
  3: hh3cmplsInSegmentLabel
     Syntax="UNSIGNED32"
     Descr="The incoming label for this segment."
  4: hh3cmplsOutSegmentIndex
     Syntax="INTEGER32"
     Descr="This value contains a unique index for this row.
        While a value of 0 is not valid as an index for this
        row it can be supplied as a valid value to index
        hh3cmplsXCTable to access entries for which no out-
        segment has been configured."
  5: hh3cmplsXCAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired operational status of this segment."
  6: hh3cmplsXCOperStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
       4: unknown
       5: dormant
       6: notPresent
       7: lowerLayerDown
     Descr="The actual operational status of this cross-
        connect."
EDESC
#
#
#
#
MIB: HH3C-MPLSOAM-MIB (file:./hh3c-mplsoam.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMplsOamIgrLSPOutDefect .1.3.6.1.4.1.25506.2.79.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the LSP is found $*
SDESC
This notification is generated when the LSP is found
out of the defect state at the LSP ingress.
Variables:
  1: hh3cMplsOamIgrLspName
     Syntax="OCTETSTR"
     Descr="The name of an LSP.
        It means the LSP name of the detected LSP."
  2: hh3cMplsOamIgrDefectType
     Syntax="INTEGER"
       1: dServer
       10: dME
       11: noDefect
       2: dPeerMe
       3: dLOCV
       4: dTTSIMismatch
       5: dTTSIMismerge
       6: dExcess
       7: dUnknown
       8: dRlsnDown
       9: dLspDown
     Descr="Indication of the OAM's defect type."
EDESC
#
#
#
EVENT hh3cMplsOamIgrLSPInDefect .1.3.6.1.4.1.25506.2.79.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the LSP is found $*
SDESC
This notification is generated when the LSP is found
in the defect state at the LSP ingress.
Variables:
  1: hh3cMplsOamIgrLspName
     Syntax="OCTETSTR"
     Descr="The name of an LSP.
        It means the LSP name of the detected LSP."
  2: hh3cMplsOamIgrDefectType
     Syntax="INTEGER"
       1: dServer
       10: dME
       11: noDefect
       2: dPeerMe
       3: dLOCV
       4: dTTSIMismatch
       5: dTTSIMismerge
       6: dExcess
       7: dUnknown
       8: dRlsnDown
       9: dLspDown
     Descr="Indication of the OAM's defect type."
EDESC
#
#
#
EVENT hh3cMplsOamEgrLSPOutDefect .1.3.6.1.4.1.25506.2.79.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the LSP is found $*
SDESC
This notification is generated when the LSP is found
out of the defect state at the LSP egress.
Variables:
  1: hh3cMplsOamEgrLspName
     Syntax="OCTETSTR"
     Descr="The object indicates the name of static LSP at egress."
  2: hh3cMplsOamEgrDefectType
     Syntax="INTEGER"
       1: dServer
       10: dME
       11: noDefect
       2: dPeerMe
       3: dLOCV
       4: dTTSIMismatch
       5: dTTSIMismerge
       6: dExcess
       7: dUnknown
       8: dRlsnDown
       9: dLspDown
     Descr="Indication of the OAM's defect type."
EDESC
#
#
#
EVENT hh3cMplsOamEgrLSPInDefect .1.3.6.1.4.1.25506.2.79.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the LSP is found $*
SDESC
This notification is generated when the LSP is found
in the defect state at the LSP egress.
Variables:
  1: hh3cMplsOamEgrLspName
     Syntax="OCTETSTR"
     Descr="The object indicates the name of static LSP at egress."
  2: hh3cMplsOamEgrDefectType
     Syntax="INTEGER"
       1: dServer
       10: dME
       11: noDefect
       2: dPeerMe
       3: dLOCV
       4: dTTSIMismatch
       5: dTTSIMismerge
       6: dExcess
       7: dUnknown
       8: dRlsnDown
       9: dLspDown
     Descr="Indication of the OAM's defect type."
EDESC
#
#
#
#
MIB: HH3C-MPLSOAM-PS-MIB (file:./hh3c-mplsoam-ps.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMplsPsSwitchPtoW .1.3.6.1.4.1.25506.2.80.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when switching from $*
SDESC
This notification is generated when switching from
protection-lsp to working-lsp occured.
Variables:
  1: hh3cMplsPsWorkLspName
     Syntax="OCTETSTR"
     Descr="The name of the working static-lsp."
  2: hh3cMplsPsProtectLspName
     Syntax="OCTETSTR"
     Descr="The name of the protection static-lsp."
  3: hh3cMplsPsSwitchResult
     Syntax="INTEGER32"
     Descr="Which tunnel is used to transfer the data stream.
        1: working static-lsp;
        2: protection static-lsp."
EDESC
#
#
#
EVENT hh3cMplsPsSwitchWtoP .1.3.6.1.4.1.25506.2.80.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when switching from woking-lsp $*
SDESC
This notification is generated when switching from woking-lsp
to protection-lsp occured.
Variables:
  1: hh3cMplsPsWorkLspName
     Syntax="OCTETSTR"
     Descr="The name of the working static-lsp."
  2: hh3cMplsPsProtectLspName
     Syntax="OCTETSTR"
     Descr="The name of the protection static-lsp."
  3: hh3cMplsPsSwitchResult
     Syntax="INTEGER32"
     Descr="Which tunnel is used to transfer the data stream.
        1: working static-lsp;
        2: protection static-lsp."
EDESC
#
#
#
#
MIB: HH3C-MPLSTE-MIB (file:./hh3c-mplste.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-VPN-BGP-MIB (file:./hh3c-mpls-vpn-bgp.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-BGP-VPN-MIB (file:./hh3c-mpls-vpn.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MP-MIB (file:./hh3c-mp.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPM-MIB (file:./hh3c-mpm.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MP-V2-MIB (file:./hh3c-mp-v2.mib) converted on Fri Mar 18 21:59:30 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MS-MAN-MIB (file:./hh3c-ms-man.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMSManVODConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Current VOD connection exceeds the threshold. $*
SDESC
Current VOD connection exceeds the threshold.
Variables:
  1: hh3cMSVODIndex
     Syntax=""
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentVODConnection
     Syntax="UNSIGNED32"
     Descr="Number of VOD connections the entity provided
        in this time."
  3: hh3cMSVODConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of VOD connections."
EDESC
#
#
#
EVENT hh3cMSManVODConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Current VOD connection recovers under the threshold. $*
SDESC
Current VOD connection recovers under the threshold.
Variables:
  1: hh3cMSVODIndex
     Syntax=""
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentVODConnection
     Syntax="UNSIGNED32"
     Descr="Number of VOD connections the entity provided
        in this time."
  3: hh3cMSVODConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of VOD connections."
EDESC
#
#
#
EVENT hh3cMSManForwardConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Current forward connection exceeds the threshold. $*
SDESC
Current forward connection exceeds the threshold.
Variables:
  1: hh3cMSForwardIndex
     Syntax=""
     Descr="The value of this object is the entity index, which
         depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentForwardConnection
     Syntax="UNSIGNED32"
     Descr="Number of forward connections the entity provided
        in this time."
  3: hh3cMSForwardConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of forward connections."
EDESC
#
#
#
EVENT hh3cMSManForwardConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Current forward connection recovers under the threshold. $*
SDESC
Current forward connection recovers under the threshold.
Variables:
  1: hh3cMSForwardIndex
     Syntax=""
     Descr="The value of this object is the entity index, which
         depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentForwardConnection
     Syntax="UNSIGNED32"
     Descr="Number of forward connections the entity provided
        in this time."
  3: hh3cMSForwardConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of forward connections."
EDESC
#
#
#
EVENT hh3cMSManRecordConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Current record connection exceeds the threshold. $*
SDESC
Current record connection exceeds the threshold.
Variables:
  1: hh3cMSRecordIndex
     Syntax=""
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentRecordConnection
     Syntax="UNSIGNED32"
     Descr="Number of record connections the entity provided in
        this time."
  3: hh3cMSRecordConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of record connections ."
EDESC
#
#
#
EVENT hh3cMSManRecordConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Current record connection recovers under the threshold. $*
SDESC
Current record connection recovers under the threshold.
Variables:
  1: hh3cMSRecordIndex
     Syntax=""
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentRecordConnection
     Syntax="UNSIGNED32"
     Descr="Number of record connections the entity provided in
        this time."
  3: hh3cMSRecordConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of record connections ."
EDESC
#
#
#
#
MIB: HH3C-MULTICAST-MIB (file:./hh3c-multicast.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MULTICAST-SNOOPING-MIB (file:./hh3c-multicast-snooping.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NAT-MIB (file:./hh3c-nat.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNATBandwidthTrap .1.3.6.1.4.1.25506.2.18.2.15.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when the bandwidth usage of a CGN card has reached the hh3cNATBandwidthRatio. $*
SDESC
Send trap when the bandwidth usage of a CGN card has reached the hh3cNATBandwidthRatio.
Variables:
  1: hh3cNATBandwidthRatio
     Syntax="UNSIGNED32"
     Descr="The usage of CGN card bandwidth."
  2: hh3cNATChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  3: hh3cNATSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  4: hh3cNATCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cNATBandwidthRecoveryTrap .1.3.6.1.4.1.25506.2.18.2.15.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when the CGN card bandwidth usage has dropped below the threshold. $*
SDESC
Send trap when the CGN card bandwidth usage has dropped below the threshold.
Variables:
  1: hh3cNATChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cNATSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cNATCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cInstAddrGrpUsageTrap .1.3.6.1.4.1.25506.2.18.2.18.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when hh3cInstAddrUsgGrpUsage reached the threshold. $*
SDESC
Send trap when hh3cInstAddrUsgGrpUsage reached the threshold.
Variables:
  1: hh3cInstAddrTrapInstName
     Syntax="OCTETSTR"
     Descr="NAT instance name."
  2: hh3cInstAddrTrapGrpIndex
     Syntax="UNSIGNED32"
     Descr="NAT address group ID."
  3: hh3cInstAddrTrapInstIndex
     Syntax="UNSIGNED32"
     Descr="NAT instance index."
  4: hh3cInstAddrTrapUsgThreshold
     Syntax="UNSIGNED32"
     Descr="NAT address group usage reached the threshold."
EDESC
#
#
#
EVENT hh3cInstAddrGrpUsageRecovTrap .1.3.6.1.4.1.25506.2.18.2.18.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when dropped below the threshold. $*
SDESC
Send trap when dropped below the threshold.
Variables:
  1: hh3cInstAddrTrapInstName
     Syntax="OCTETSTR"
     Descr="NAT instance name."
  2: hh3cInstAddrTrapGrpIndex
     Syntax="UNSIGNED32"
     Descr="NAT address group ID."
  3: hh3cInstAddrTrapInstIndex
     Syntax="UNSIGNED32"
     Descr="NAT instance index."
EDESC
#
#
#
EVENT hh3cNatIPPoolAddrUsageExceedTrap .1.3.6.1.4.1.25506.2.18.2.20.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when NatIPPoolAddrUsageExceed reached the threshold. $*
SDESC
Send trap when NatIPPoolAddrUsageExceed reached the threshold.
Variables:
  1: hh3cNatTrapIPPoolName
     Syntax="OCTETSTR"
     Descr="NAT IP pool name."
  2: hh3cNatTrapIPPoolAddrUsage
     Syntax="UNSIGNED32"
     Descr="NAT IP pool address usage."
EDESC
#
#
#
EVENT hh3cNatIPPoolAddrUsageRecoveryTrap .1.3.6.1.4.1.25506.2.18.2.20.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when dropped below the threshold. $*
SDESC
Send trap when dropped below the threshold.
Variables:
  1: hh3cNatTrapIPPoolName
     Syntax="OCTETSTR"
     Descr="NAT IP pool name."
  2: hh3cNatTrapIPPoolAddrUsage
     Syntax="UNSIGNED32"
     Descr="NAT IP pool address usage."
EDESC
#
#
#
#
MIB: HH3C-NCM-MIB (file:./hh3c-ncm.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNcmCUConnDisconnected .1.3.6.1.4.1.25506.2.201.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The NETCONF connection with a peer device was torn down. $*
SDESC
The NETCONF connection with a peer device was torn down.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapConnFailedReason
     Syntax="OCTETSTR"
     Descr="The Connection Fail Reason."
EDESC
#
#
#
EVENT hh3cNcmCUConnReconnected .1.3.6.1.4.1.25506.2.201.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The NETCONF connection with a peer device is resumed. $*
SDESC
The NETCONF connection with a peer device is resumed.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
EDESC
#
#
#
EVENT hh3cNcmCUConnectFailed .1.3.6.1.4.1.25506.2.201.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to establish a NETCONF connection with a peer device. $*
SDESC
Failed to establish a NETCONF connection with a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapConnFailedReason
     Syntax="OCTETSTR"
     Descr="The Connection Fail Reason."
EDESC
#
#
#
EVENT hh3cNcmCUConnectSuccess .1.3.6.1.4.1.25506.2.201.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Successed in establishing a NETCONF connection with a peer device. $*
SDESC
Successed in establishing a NETCONF connection with a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
EDESC
#
#
#
EVENT hh3cNcmCUConfigFailed .1.3.6.1.4.1.25506.2.201.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to deliver configurations to a peer device. $*
SDESC
Failed to deliver configurations to a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapFeatureName
     Syntax="OCTETSTR"
     Descr="The name of module that sent the configuration request."
EDESC
#
#
#
#
MIB: HH3C-NDEC-MIB (file:./hh3c-ndec.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3chipsNDECNormalResetTrap .1.3.6.1.4.1.25506.8.36.2.8.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the NDEC card is reset. $*
SDESC
This trap is generated when the NDEC card is reset.
Variables:
  1: hh3chipsCardSlot
     Syntax="INTEGER"
     Descr="Slot number of NDEC ."
  2: hh3chipsCardHardVer
     Syntax="OCTETSTR"
     Descr="Hardware version of the NDEC."
  3: hh3chipsCardSoftVer
     Syntax="OCTETSTR"
     Descr="Software version of the NDEC."
  4: hh3chipsCardCPLDVer
     Syntax="OCTETSTR"
     Descr="CPLD version of the NDEC."
EDESC
#
#
#
EVENT hh3chipsNDECStateChangeTrap .1.3.6.1.4.1.25506.8.36.2.8.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the NDEC card's state changes. $*
SDESC
This trap is generated when the NDEC card's state changes.
Variables:
  1: hh3chipsCardSlot
     Syntax="INTEGER"
     Descr="Slot number of NDEC ."
  2: hh3chipsCardStatus
     Syntax="INTEGER"
       1: ecStateInvalid
       2: ecStateReady
       3: ecStateResetting
       4: ecStateProgramUpdating
       5: ecStateDisable
     Descr="State of the NDEC."
EDESC
#
#
#
EVENT hh3chipsNDECFlowTrap .1.3.6.1.4.1.25506.8.36.2.8.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when a NDEC card is overloaded. $*
SDESC
This trap is generated when a NDEC card is overloaded.
Variables:
  1: hh3chipsCardSlot
     Syntax="INTEGER"
     Descr="Slot number of NDEC ."
  2: hh3chipsDropPacInUnitTime
     Syntax="GAUGE"
     Descr="Dropped packets in unit interval."
EDESC
#
#
#
#
MIB: HH3C-NETCONF-MIB (file:./hh3c-netconf.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNetconfServerSessionStart .1.3.6.1.4.1.25506.2.206.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The NETCONF server created a session. $*
SDESC
The NETCONF server created a session.
Variables:
  1: hh3cNetconfSessionId
     Syntax="INTEGER32"
     Descr="The ID of NETCONF session ."
  2: hh3cNetconfSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of NETCONF session."
  3: hh3cNetconfSessionPeerIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The peer IP address of NETCONF session."
  4: hh3cNetconfSessionPeerIPAddress
     Syntax="OCTETSTR"
     Descr="The peer IP address of NETCONF session."
EDESC
#
#
#
EVENT hh3cNetconfServerSessionEnd .1.3.6.1.4.1.25506.2.206.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A NETCONF server session ended. $*
SDESC
A NETCONF server session ended.
Variables:
  1: hh3cNetconfSessionId
     Syntax="INTEGER32"
     Descr="The ID of NETCONF session ."
  2: hh3cNetconfSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of NETCONF session."
  3: hh3cNetconfSessionPeerIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The peer IP address of NETCONF session."
  4: hh3cNetconfSessionPeerIPAddress
     Syntax="OCTETSTR"
     Descr="The peer IP address of NETCONF session."
  5: hh3cNetconfSessionTerminationReason
     Syntax="INTEGER"
       1: other
       2: closed
       3: linkDown
       4: idleTimeout
     Descr="The termination reason of NETCONF session.
        other(1)        --Other reason
        closed(2)       --Session was closed
        linkDown(3)     --Link is down
        idleTimeout(4)  --Session time out."
EDESC
#
#
#
#
MIB: HH3C-NET-MAN-MIB (file:./hh3c-net-man.mib) converted on Fri Mar 18 21:59:31 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpAddrChangeNotify .1.3.6.1.4.1.25506.2.90.3.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the IP address of active $*
SDESC
This notification will be generated when the IP address of active
management interface is changed.  The change maybe originate from NMS,
DHCP server or administrator.
The management interfaces are the interfaces that assigned by
administrator, which can be used to manage device, but may be inactive
for link fault or IP address (IPv4 or IPv6) missing.
The active management interface means an active interface, the IP
address of which can be used for network management.
This notification announces useful management IP address change.  So it
is triggered by significative IP address change.
Suppose that two management interfaces on a device, Interface-A and
Interface-B.  Initially both interfaces are down and assigned no IP
address. Configure Interface-A as the primary monitored interface,
Interface-B as the secondary.
Significative IP address change in following cases:
1. If Interface-A is assigned an IP address primarily, and it is linking
up, then Interface-B will be ignored.  A notification will be triggered,
appending IP address of Interface-A.
2. If Interface-B is assigned an IP address primarily, and it is linking
up, then Interface-A will be ignored.  A notification will be triggered,
appending IP address of Interface-B.
3. If IP address of that interface, which had its IP address announced
to NMS, is changed since last notification triggered, then another
notification will be sent to NMS.
4. Suppore that Interface-A was linked up and assigned an IP address
primarily.  If for some unknown reason, Interface-A is down or loses IP
address, and Interface-B is assigned an IP address which is different
with that announced to NMS before, then a notification will be
triggered, appending the new IP address that Interface-B assigned.
5. A notification appending new IP address that Interface-A assigned
will be triggered, if 4 occurs to Interface-B.
Variables:
  1: hh3cNMIpAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of specified interface on the device."
  2: hh3cNMIpAddress
     Syntax="OCTETSTR"
     Descr="The IP address of specified interface on the device."
  3: hh3cNMCustomBuildInfo
     Syntax="OCTETSTR"
     Descr="The customer-required information of devices, for example,
        OUI (Organizational Unique Identifier)."
  4: hh3cNMSerialNum
     Syntax="OCTETSTR"
     Descr="The serial number used by NMS (Network Management Station) for
        mapping IP address and device."
EDESC
#
#
#
#
MIB: HH3C-NPV-MIB (file:./hh3c-npv.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NQA-MIB (file:./hh3c-nqa.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNqaProbeTimeOverThreshold .1.3.6.1.4.1.25506.8.3.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. Probe time(equals to RTT for some type of tests) is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterRTTOverThreshold .1.3.6.1.4.1.25506.8.3.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average NQA round-trip-time (RTT) of jitter packets
is not in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
2. The RTT of jitter packets is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum in one test.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaProbeFailure .1.3.6.1.4.1.25506.8.3.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the probe test accumulatively failed for a
number of times specified in hh3cNqaReactThresholdAccumNum in one
test while the value of hh3cNqaReactThresholdType is 'accumulative'.
2. When the probe test consecutively failed for
a number of times specified in hh3cNqaReactThresholdConsecNum in one
test while the value of hh3cNqaReactThresholdType is 'consecutive'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterPacketLoss .1.3.6.1.4.1.25506.8.3.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the jitter packets accumulatively lost for a
number of times specified in hh3cNqaReactThresholdAccumNum in one
test while the value of hh3cNqaReactThresholdType is 'accumulative'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterSDOverThreshold .1.3.6.1.4.1.25506.8.3.3.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The SD means the jitter values from source to destination. $*
SDESC
The SD means the jitter values from source to destination.
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average of SD in one jitter test is not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The average of SD in one jitter test is accumulatively
not in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterDSOverThreshold .1.3.6.1.4.1.25506.8.3.3.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The DS means the jitter values from destination to source. $*
SDESC
The DS means the jitter values from destination to source.
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average of DS in one jitter test is not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The average of DS in one jitter test is accumulatively not
in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaICPIFOverThreshold .1.3.6.1.4.1.25506.8.3.3.7 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the ICPIF value in one jitter test is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger', pingCtlType of the test
is hh3cNqajitter and hh3cNqaCtlCodecType is 'g711Alaw' or 'g711Ulaw'
or 'g729A'.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaMOSOverThreshold .1.3.6.1.4.1.25506.8.3.3.8 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the MOS value in one jitter test is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger', pingCtlType of the test
is hh3cNqajitter and hh3cNqaCtlCodecType is 'g711Alaw' or 'g711Ulaw'
or 'g729A'.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterOverThreshold .1.3.6.1.4.1.25506.8.3.3.9 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is above threshold
or below threshold.
1. The average jitter value is not in the range of
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The total number of times that the average jitter value is not
in the range of hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit reaches or exceeds
the value specified in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaProbeTimeAboveThreshold .1.3.6.1.4.1.25506.8.3.3.10 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'overThreshold', 'invalid' or 'overUpperThreshold'.
The change may occur when the monitored condition exceeds the
threshold (or upper threshold) or When NQA operation is stopped.
The above threshold situations are specified as below.
1. Probe time is not in the range hh3cNqaReactThresholdLowerLimit
through hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
4. When NQA operation is stopped.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeTimeBelowThreshold .1.3.6.1.4.1.25506.8.3.3.11 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'belowThreshold' or 'belowLowerThreshold' from a
threshold-crossing state.
The below threshold situations are specified as below.
1. Probe time is in the range hh3cNqaReactThresholdLowerLimit
through hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeFailAboveThreshold .1.3.6.1.4.1.25506.8.3.3.12 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'overThreshold', 'invalid' or 'overUpperThreshold'.
The change may occur when the monitored condition exceeds the
threshold (or upper threshold) or When NQA operation is stopped.
The threshold-crossing situations are specified as below.
1. When the number of accumulative failed probes reaches the specified
value in hh3cNqaReactThresholdAccumNum in one test while the value
of hh3cNqaReactThresholdType is 'accumulative'.
2. When the number of consecutive failed probes reaches the specified
value in hh3cNqaReactThresholdConsecNum in one test while the value
of hh3cNqaReactThresholdType is 'consecutive'.
3. When NQA operation is stopped.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeFailBelowThreshold .1.3.6.1.4.1.25506.8.3.3.13 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'belowThreshold' or 'belowLowerThreshold' from a
threshold-crossing state.
The below threshold situations are specified as below.
1. When the number of accumulative successful probes reaches the specified
value in hh3cNqaReactThresholdAccumNum in one test while the value
of hh3cNqaReactThresholdType is 'accumulative'.
2. When the number of consecutive successful probes reaches the specified
value in hh3cNqaReactThresholdConsecNum in one test while the value
of hh3cNqaReactThresholdType is 'consecutive'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
#
MIB: HH3C-NS-MIB (file:./hh3c-ns.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NTP-MIB (file:./hh3c-ntp.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NVGRE-MIB (file:./hh3c-nvgre.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OBJECT-INFO-MIB (file:./hh3c-object-info.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OBJP-MIB (file:./hh3c-objp.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OFP-MIB (file:./hh3c-ofp.mib) converted on Fri Mar 18 21:59:32 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cOfpControllerDisconnect .1.3.6.1.4.1.25506.2.167.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the instance is disconnected $*
SDESC
This trap is generated when the instance is disconnected
from the controller.  The disconnection reason is
hh3cOfpTrapDisconnectReason.
Variables:
  1: hh3cOfpInstanceID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow instance"
  2: hh3cOfpInstanceControllerID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow controller."
  3: hh3cOfpTrapDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Unknown reason.
             1: Undo commands executed
             2: Echo timeout.
             3: Hello failed.
             4: Receiving Hello packets timed out.
             5: Receiving messages failed.
             6: Epoll error.
             7: VRF deleted.
             8: VRF global port down.
             9: Failed to recycle the buffer.
             10: AP down."
EDESC
#
#
#
EVENT hh3cOfpControllerConnect .1.3.6.1.4.1.25506.2.167.2.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the instance is connected $*
SDESC
This trap is generated when the instance is connected
to the controller.
Variables:
  1: hh3cOfpInstanceID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow instance"
  2: hh3cOfpInstanceControllerID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow controller."
EDESC
#
#
#
#
MIB: HH3C-OID-MIB (file:./hh3c-oid.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OSPF-MIB (file:./hh3c-ospf.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PBR-MIB (file:./hh3c-pbr.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPBRNexthopFailedTrap .1.3.6.1.4.1.25506.2.113.1.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When the next hop of PBR apply clause became $*
SDESC
When the next hop of PBR apply clause became
unreachable according to routing information, trap is generated
and is sent to the remote monitoring device.
Variables:
  1: hh3cPBRNexthopAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Indicating address type of hh3cPBRNexthopAddr, which can be IPv4
        or IPv6."
  2: hh3cPBRNexthopAddr
     Syntax="OCTETSTR"
     Descr="The involved next hop IP address of trap information."
EDESC
#
#
#
#
MIB: HH3C-PEX-MIB (file:./hh3c-pex.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPexPortOnline .1.3.6.1.4.1.25506.2.129.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPortOnline trap is sent when the PEX transitions to $*
SDESC
An hh3cPexPortOnline trap is sent when the PEX transitions to
online state.
Variables:
  1: hh3cPexPortId
     Syntax="INTEGER32"
     Descr="ID that can be used to uniquely identify a PEX port.  The value range
        is hh3cPexPortMinId to hh3cPexPortMaxId."
  2: hh3cPexPortDescr
     Syntax="OCTETSTR"
     Descr="Description for the PEX port.  The default value is
        'pex-port XXXX', where 'XXXX' is hh3cPexPortId.
        Writing a zero-length string to this object resets the value to the
        default."
EDESC
#
#
#
EVENT hh3cPexPortOffline .1.3.6.1.4.1.25506.2.129.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPortOnline trap is sent when the PEX transitions to $*
SDESC
An hh3cPexPortOnline trap is sent when the PEX transitions to
offline state.
Variables:
  1: hh3cPexPortId
     Syntax="INTEGER32"
     Descr="ID that can be used to uniquely identify a PEX port.  The value range
        is hh3cPexPortMinId to hh3cPexPortMaxId."
  2: hh3cPexPortDescr
     Syntax="OCTETSTR"
     Descr="Description for the PEX port.  The default value is
        'pex-port XXXX', where 'XXXX' is hh3cPexPortId.
        Writing a zero-length string to this object resets the value to the
        default."
EDESC
#
#
#
EVENT hh3cPexPhyPortForwarding .1.3.6.1.4.1.25506.2.129.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPhyPortForwarding trap is sent when the PEX physical port $*
SDESC
An hh3cPexPhyPortForwarding trap is sent when the PEX physical port
transitions to forwarding state.
Variables:
  1: hh3cPexEntPhysicalIndexBind
     Syntax="INTEGER32"
     Descr="This index is identical to entPhysicalIndex in ENTITY-MIB."
  2: entPhysicalDescr
     Syntax=""
EDESC
#
#
#
EVENT hh3cPexPhyPortBlocked .1.3.6.1.4.1.25506.2.129.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPhyPortBlocked trap is sent when the PEX physical port $*
SDESC
An hh3cPexPhyPortBlocked trap is sent when the PEX physical port
transitions from forwarding state to blocked state.
Variables:
  1: hh3cPexEntPhysicalIndexBind
     Syntax="INTEGER32"
     Descr="This index is identical to entPhysicalIndex in ENTITY-MIB."
  2: entPhysicalDescr
     Syntax=""
EDESC
#
#
#
#
MIB: HH3C-PORTAL-MIB (file:./hh3c-portal.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPortalServerLost .1.3.6.1.4.1.25506.2.99.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the portal server $*
SDESC
This trap is generated when the device finds that the portal server
is unreachable, the portal server's name is hh3cPortalServerName, and
the portal server's IP is hh3cPortalServerIP, and the portal server's
port is hh3cPortalServerPort, and the portal server has been enabled.
Variables:
  1: hh3cPortalServerName
     Syntax="OCTETSTR"
     Descr="It is the index of the table of hh3cPortalServerTable, it shows
        the name of the portal server."
  2: hh3cPortalFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  3: hh3cPortalServerIP
     Syntax="OCTETSTR"
     Descr="The portal server's IP."
  4: hh3cPortalServerPort
     Syntax="INTEGER32"
     Descr="It shows the UDP port of the portal server.

        The port will be used when client sends packets to portal server.
        Default value is 50100.

        It is not configurable when the portal server has been enabled."
EDESC
#
#
#
EVENT hh3cPortalServerGet .1.3.6.1.4.1.25506.2.99.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of portal $*
SDESC
This trap is generated when the device finds that the state of portal
server changes from unreachable state to reachable,
the portal server's name is hh3cPortalServerName, and the portal server's
IP is hh3cPortalServerIP, and the portal server's port is hh3cPortalServerPort,
and the portal server has been enabled.
Variables:
  1: hh3cPortalServerName
     Syntax="OCTETSTR"
     Descr="It is the index of the table of hh3cPortalServerTable, it shows
        the name of the portal server."
  2: hh3cPortalFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  3: hh3cPortalServerIP
     Syntax="OCTETSTR"
     Descr="The portal server's IP."
  4: hh3cPortalServerPort
     Syntax="INTEGER32"
     Descr="It shows the UDP port of the portal server.

        The port will be used when client sends packets to portal server.
        Default value is 50100.

        It is not configurable when the portal server has been enabled."
EDESC
#
#
#
#
MIB: HH3C-PORT-SECURITY-MIB (file:./hh3c-port-security.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSecureAddressLearned .1.3.6.1.4.1.25506.2.26.1.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new station has been learned.  The $*
SDESC
This trap is sent when a new station has been learned.  The
port on which the address was received is the first object,
and the MAC address of the learned station is in the second object.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
EDESC
#
#
#
EVENT hh3cSecureViolation .1.3.6.1.4.1.25506.2.26.1.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent whenever a security violation has occurred. $*
SDESC
This trap is sent whenever a security violation has occurred.
The port on which the violation occured is the first object,
and the MAC address of the offending station is in the second object.
ifAdminStatus indicates if the port has been disabled because of the violation.
The implementation may not send violation traps from the same port
at intervals of less than 5 seconds.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: ifAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the interface.  The
            testing(3) state indicates that no operational
            packets can be passed."
EDESC
#
#
#
EVENT hh3cSecureLoginFailure .1.3.6.1.4.1.25506.2.26.1.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent whenever a user network access $*
SDESC
This trap is sent whenever a user network access
authentication has failed.  The port on which the violation occured is
the first object, and the MAC address of the offending station is in
the second object.  The dot1xAuthSessionUserName is the identity supplied
during the user authentication.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax=""
EDESC
#
#
#
EVENT hh3cSecureLogon .1.3.6.1.4.1.25506.2.26.1.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation occured is
the first object, and the MAC address of the offending station is in
the second object.
The dot1xAuthSessionUserName is the identity supplied during the user
authentication.  The dot1xAuthSessionAuthenticMethod indicates how the
user was authorised.  The hh3cSecurePortVlanMembershipList object
identifies the VLAN membership assigned to the port on session
activation.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax=""
  4: dot1xAuthSessionAuthenticMethod
     Syntax=""
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureLogoff .1.3.6.1.4.1.25506.2.26.1.3.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a user session is terminated. $*
SDESC
This trap is sent when a user session is terminated.
The port on which the violation occured is the first object,
and the MAC address of the offending station is in the second object.
The dot1xAuthSessionUserName is the identity supplied during the user
authentication.  The dot1xAuthSessionTerminateCause indicates the
reason why the session was terminated.
The hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session termination.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax=""
  4: dot1xAuthSessionTerminateCause
     Syntax=""
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureRalmLoginFailure .1.3.6.1.4.1.25506.2.26.1.3.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent whenever a user network access $*
SDESC
This trap is sent whenever a user network access
authentication has failed.  The port on which the violation
occured is the first object, and the MAC address of the
offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername
is the identity supplied during the user authentication.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
EDESC
#
#
#
EVENT hh3cSecureRalmLogon .1.3.6.1.4.1.25506.2.26.1.3.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation
occured is the first object, and the MAC address of
the offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername is
the identity supplied during the user authentication. The
hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session activation.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureRalmLogoff .1.3.6.1.4.1.25506.2.26.1.3.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation
occured is the first object, and the MAC address of the
offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername is
the identity supplied during the user authentication. The
hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session activation.
Variables:
  1: ifIndex
     Syntax="INTEGER"
     Descr="A unique value for each interface.  Its value
            ranges between 1 and the value of ifNumber.  The
            value for each interface must remain constant at
            least from one re-initialization of the entity's
            network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
#
MIB: HH3C-POSA-MIB (file:./hh3c-posa.mib) converted on Fri Mar 18 21:59:33 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPosaServerStatusChange .1.3.6.1.4.1.25506.2.92.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the POS function is started or stopped. $*
SDESC
This trap is generated when the POS function is started or stopped.
Variables:
  1: hh3cPosaServerEnable
     Syntax="INTEGER"
       1: disabled
       2: enabled
     Descr="This attribute controls the starting or stoppage of POS access function.
        The defalut value is disabled(1)."
EDESC
#
#
#
EVENT hh3cPosaAppStateChange .1.3.6.1.4.1.25506.2.92.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the availability of application server $*
SDESC
This trap is generated whenever the availability of application server
changes.
Variables:
  1: hh3cPosaAppID
     Syntax="INTEGER32"
     Descr="The identification of a POS application."
  2: hh3cPosaAppStateChangeObject
     Syntax="INTEGER"
       1: available
       2: unavailable
     Descr="This is a dummy MIB object referenced by the hh3cPosaAppStateChange trap.
        This object shows the availability changing of corresponding application
        server."
EDESC
#
#
#
EVENT hh3cPosaTerminalHangUp .1.3.6.1.4.1.25506.2.92.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the POS connection through a FCM (Fast $*
SDESC
This trap is generated whenever the POS connection through a FCM (Fast
Connection Modem) interface is hanged up by POS terminal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaFcmLinkNegoFailed .1.3.6.1.4.1.25506.2.92.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the link layer negotiation is failed $*
SDESC
This trap is generated whenever the link layer negotiation is failed
between the POS terminal and router through a FCM (Fast Connection
Modem) interface.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaFcmPhyNegoFailed .1.3.6.1.4.1.25506.2.92.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the physical layer negotiation is failed $*
SDESC
This trap is generated whenever the physical layer negotiation is failed
between the POS terminal and router through a FCM (Fast Connection
Modem) interface.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaTcpConnectionExceed .1.3.6.1.4.1.25506.2.92.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the number of connections exceeds the threshold. $*
SDESC
This trap is generated whenever the number of connections exceeds the threshold.
Variables:
  1: hh3cPosaTcpConnectionThreshold
     Syntax="INTEGER32"
     Descr="The threshold of TCP connections."
EDESC
#
#
#
EVENT hh3cPosaFcmConnectionExceed .1.3.6.1.4.1.25506.2.92.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the number of connections exceeds the threshold. $*
SDESC
This trap is generated whenever the number of connections exceeds the threshold.
Variables:
  1: hh3cPosaFcmConnectionThreshold
     Syntax="INTEGER32"
     Descr="The threshold of FCM connections."
EDESC
#
#
#
EVENT hh3cPosaTcpTradeExceed .1.3.6.1.4.1.25506.2.92.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the number of trades in any TCP connect exceeds $*
SDESC
This trap is generated whenever the number of trades in any TCP connect exceeds
the limit.
Variables:
  1: hh3cPosaTcpTradeLimit
     Syntax="INTEGER32"
     Descr="The limit of concurrent trades in one TCP connection.  The value 0
        means unlimited."
  2: hh3cPosaTerminalID
     Syntax="INTEGER32"
     Descr="The identification of a POS terminal."
EDESC
#
#
#
EVENT hh3cPosaTradeSuccessFalling .1.3.6.1.4.1.25506.2.92.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the transaction success rate of bank server is smaller than or equal to the threshold. $*
SDESC
This trap is generated whenever the transaction success rate of bank server is smaller than or equal to the threshold.
Variables:
  1: hh3cPosaNiiStatIndex
     Syntax="OCTETSTR"
     Descr="The index of entity."
  2: hh3cPosaTradeSuccessFallingThreshold
     Syntax="INTEGER32"
     Descr="The threshold of transaction success rate ."
EDESC
#
#
#
EVENT hh3cPosaE1DialFalling .1.3.6.1.4.1.25506.2.92.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the dialing success rate of E1-controller is smaller than or equal to the threshold. $*
SDESC
This trap is generated whenever the dialing success rate of E1-controller is smaller than or equal to the threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaE1DialFallingThreshold
     Syntax="INTEGER32"
     Descr="The threshold of dialing success rate ."
EDESC
#
#
#
EVENT hh3cPosaFcmTradeAbnormal .1.3.6.1.4.1.25506.2.92.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the dialing link is abnormal. $*
SDESC
This trap is generated whenever the dialing link is abnormal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
#
MIB: HH3C-POS-MIB (file:./hh3c-pos.mib) converted on Fri Mar 18 21:59:34 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cposAppNotReadyTrap .1.3.6.1.4.1.25506.8.36.8.17.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap when the application whose state is linked $*
SDESC
The agent will send a trap when the application whose state is linked
isn't ready to send or receive data.
Only used for the application whose connect mode is tcp.
Variables:
  1: hh3cposAppId
     Syntax="INTEGER"
     Descr="The ID of application."
EDESC
#
#
#
EVENT hh3cposAppConnectFailTrap .1.3.6.1.4.1.25506.8.36.8.17.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if router can not connect to the application. $*
SDESC
The agent will send a trap if router can not connect to the application.
Variables:
  1: hh3cposAppId
     Syntax="INTEGER"
     Descr="The ID of application."
EDESC
#
#
#
EVENT hh3cposAppStateChangeTrap .1.3.6.1.4.1.25506.8.36.8.17.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap when the state of the application is changed to down or kept. $*
SDESC
The agent will send a trap when the state of the application is changed to down or kept.
Variables:
  1: hh3cposAppId
     Syntax="INTEGER"
     Descr="The ID of application."
  2: hh3cposAppState
     Syntax="INTEGER"
       1: noset
       2: down
       3: up
       4: ok
       5: kept
       6: linking
       7: linked
     Descr="The state of application."
EDESC
#
#
#
EVENT hh3cposAppNotConfigedTrap .1.3.6.1.4.1.25506.8.36.8.17.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the application isn't configured. $*
SDESC
The agent will send a trap if the application isn't configured.
Variables:
  1: hh3cposAppId
     Syntax="INTEGER"
     Descr="The ID of application."
EDESC
#
#
#
EVENT hh3cposAppBuffOverFlowTrap .1.3.6.1.4.1.25506.8.36.8.17.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the application buffer is overflowed. $*
SDESC
The agent will send a trap if the application buffer is overflowed.
Variables:
  1: hh3cposAppId
     Syntax="INTEGER"
     Descr="The ID of application."
EDESC
#
#
#
EVENT hh3cposAppDebugOpenTrap .1.3.6.1.4.1.25506.8.36.8.17.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the debugging switch of application is open. $*
SDESC
The agent will send a trap if the debugging switch of application is open.
Variables:
  1: hh3cposAppId
     Syntax="INTEGER"
     Descr="The ID of application."
EDESC
#
#
#
EVENT hh3cposAppDebugAllOpenTrap .1.3.6.1.4.1.25506.8.36.8.17.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the all debugging switches of application are open. $*
SDESC
The agent will send a trap if the all debugging switches of application are open.
EDESC
#
#
#
EVENT hh3cposInterBuffOverFlowTrap .1.3.6.1.4.1.25506.8.36.8.17.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the distributing buffer is overflowed. $*
SDESC
The agent will send a trap if the distributing buffer is overflowed.
EDESC
#
#
#
EVENT hh3cposInterStateChangeTrap .1.3.6.1.4.1.25506.8.36.8.17.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the state of POS-Interface is changed to down. $*
SDESC
The agent will send a trap if the state of POS-Interface is changed to down.
Variables:
  1: hh3cposPosId
     Syntax="INTEGER"
     Descr="The ID of the POS-Interface."
  2: hh3cposPosConnectState
     Syntax="INTEGER"
       1: noset
       2: down
       3: up
       4: ok
     Descr="The state of the POS-Interface."
EDESC
#
#
#
EVENT hh3cposInterDebugOpenTrap .1.3.6.1.4.1.25506.8.36.8.17.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the debug of POS-Interface is open. $*
SDESC
The agent will send a trap if the debug of POS-Interface is open.
Variables:
  1: hh3cposPosId
     Syntax="INTEGER"
     Descr="The ID of the POS-Interface."
EDESC
#
#
#
EVENT hh3cposInterDebugAllOpenTrap .1.3.6.1.4.1.25506.8.36.8.17.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the all debugs of POS-Interface are open. $*
SDESC
The agent will send a trap if the all debugs of POS-Interface are open.
EDESC
#
#
#
EVENT hh3cposFCMTimeoutTrap .1.3.6.1.4.1.25506.8.36.8.17.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the modem is hung up for timeout. $*
SDESC
The agent will send a trap if the modem is hung up for timeout.
Variables:
  1: hh3cposFCMIfIndex
     Syntax="INTEGER"
     Descr="The index of FCM interface."
EDESC
#
#
#
EVENT hh3cposFCMConnectFailTrap .1.3.6.1.4.1.25506.8.36.8.17.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap if the handshaking of modems is not successful. $*
SDESC
The agent will send a trap if the handshaking of modems is not successful.
Variables:
  1: hh3cposFCMIfIndex
     Syntax="INTEGER"
     Descr="The index of FCM interface."
EDESC
#
#
#
EVENT hh3cposClearPacketCounter .1.3.6.1.4.1.25506.8.36.8.17.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap when the packet counter of  $*
SDESC
The agent will send a trap when the packet counter of 
the POS application and interface is cleared.
EDESC
#
#
#
EVENT hh3cposClearFcmCounter .1.3.6.1.4.1.25506.8.36.8.17.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The agent will send a trap when the FCM counter is cleared. $*
SDESC
The agent will send a trap when the FCM counter is cleared.
EDESC
#
#
#
#
MIB: HH3C-POWER-ETH-EXT-MIB (file:./hh3c-power-eth-ext.mib) converted on Fri Mar 18 21:59:34 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpsePDChangeNotification .1.3.6.1.4.1.25506.2.14.6.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates if PD has been inserted or pulled out. $*
SDESC
This notification indicates if PD has been inserted or pulled out.
Variables:
  1: pethPsePortDetectionStatus
     Syntax=""
EDESC
#
#
#
EVENT hh3cPOEDisconnectNotification .1.3.6.1.4.1.25506.2.14.6.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module does not disconnect. $*
SDESC
This notification indicates the POE power module does not disconnect.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleDisconnect
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
             The module does not link.
             The value of this node is one of the following values:
                              normal (1),
                              alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEInputErrorNotification .1.3.6.1.4.1.25506.2.14.6.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module input error. $*
SDESC
This notification indicates the POE power module input error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleInputError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 Input error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOutputErrorNotification .1.3.6.1.4.1.25506.2.14.6.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module output error. $*
SDESC
This notification indicates the POE power module output error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOutputError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 Output error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOverVoltageNotification .1.3.6.1.4.1.25506.2.14.6.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module overruns the $*
SDESC
This notification indicates the POE power module overruns the
voltage limit.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOverVoltage
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The voltage is too high.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOverTempNotification .1.3.6.1.4.1.25506.2.14.6.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module overruns the $*
SDESC
This notification indicates the POE power module overruns the
temperature limit.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOverTemp
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The temperature is too high.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEFanErrorNotification .1.3.6.1.4.1.25506.2.14.6.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module fan error. $*
SDESC
This notification indicates the POE power module fan error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleFanError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The fan error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEModuleShutdownNotification .1.3.6.1.4.1.25506.2.14.6.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module is closed. $*
SDESC
This notification indicates the POE power module is closed.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleShutdown
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The module is shutdown.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOECurRestrictedNotification .1.3.6.1.4.1.25506.2.14.6.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module current is restricted. $*
SDESC
This notification indicates the POE power module current is restricted.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleCurRestricted
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The module limit the current.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchNotification .1.3.6.1.4.1.25506.2.14.6.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input switch alarm of this POE power. $*
SDESC
This notification indicates the AC input switch alarm of this POE power.
Variables:
  1: hh3cPOEACSwitchStateIndex
     Syntax="INTEGER32"
     Descr="The index of the AC switch state on this POE power.
             The range of this node is from 1 to hh3cPOEACSwitchStateModuleNum."
  2: hh3cPOEACSwitchState
     Syntax="INTEGER"
       1: on
       2: off
       3: highVoltInput
       4: lowVoltInput
     Descr="The AC switch state on this POE power.
             The value of this node will be one of the following values:
                                 on             (1),
                                 off            (2),
                                 highVoltInput  (3),
                                 lowVoltInput   (4)"
EDESC
#
#
#
EVENT hh3cPOEACInCurANotification .1.3.6.1.4.1.25506.2.14.6.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input current A alarm state of $*
SDESC
This notification indicates the AC input current A alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurAState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current A state in the DC input on this POE power.
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACInCurBNotification .1.3.6.1.4.1.25506.2.14.6.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input current B alarm state of $*
SDESC
This notification indicates the AC input current B alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurBState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current B state in the DC input on this POE power.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACInCurCNotification .1.3.6.1.4.1.25506.2.14.6.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input current C alarm state of $*
SDESC
This notification indicates the AC input current C alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurCState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current C state in the DC input on this POE power.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolABNotification .1.3.6.1.4.1.25506.2.14.6.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input voltage AB alarm state of $*
SDESC
This notification indicates the AC input voltage AB alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolAB
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL AB alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolBCNotification .1.3.6.1.4.1.25506.2.14.6.15 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input voltage BC alarm state of $*
SDESC
This notification indicates the AC input voltage BC alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolBC
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL BC alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolCANotification .1.3.6.1.4.1.25506.2.14.6.16 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input voltage CA alarm state of $*
SDESC
This notification indicates the AC input voltage CA alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolCA
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL CA alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEDCOutVolNotification .1.3.6.1.4.1.25506.2.14.6.17 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the DC output alarm of this POE power. $*
SDESC
This notification indicates the DC output alarm of this POE power.
Variables:
  1: hh3cPOEDCOutStateIndex
     Syntax="INTEGER32"
     Descr="The index of the DC output power state on this POE power.
             The range of this node is from 1 to hh3cPOEDCOutStateModuleNum."
  2: hh3cPOEDCOutDCVolAlarm
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: fuseBroken
       5: switchOff
       6: otherError
     Descr="The DC output alarm of the DC output power state on this POE power.
             The value of this node will be the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 fuseBroken (4),
                                 switchOff  (5),
                                 otherError (6)."
EDESC
#
#
#
EVENT hh3cPOEShutdownNotification .1.3.6.1.4.1.25506.2.14.6.18 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the whole POE power has been shutdown. $*
SDESC
This notification indicates the whole POE power has been shutdown.
EDESC
#
#
#
EVENT hh3cPsePDDisableNotification .1.3.6.1.4.1.25506.2.14.11.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The PD has been powered off. $*
SDESC
The PD has been powered off.
Variables:
  1: hh3cPsePortGroupIndex
     Syntax="INTEGER32"
     Descr="This variable uniquely identifies the group
            containing the port to which a power Ethernet PSE is
            connected."
  2: hh3cPsePortIndex
     Syntax="INTEGER32"
     Descr="This variable uniquely identifies the power Ethernet PSE
            port within group pethPsePortGroupIndex to which the
            power Ethernet PSE entry is connected."
  3: hh3cPsePortDisableInfo
     Syntax="INTEGER"
       0: unknown
       1: overInrush
       2: lessMPSCurrent
       3: peakPower
       4: overVoltage
       5: underVoltage
       6: overTemperature
       7: shortCircuit
     Descr="
              Reason that caused PSE port power failure.
              The calue of this node is one of the following values:
              unknown(0),
              overInrush(1),
              lessMPSCurrent(2),
              peakPower(3),
              overVoltage(4),
              underVoltage(5),
              overTemperature(6),
              shortCircuit(7).
              "
EDESC
#
#
#
#
MIB: HH3C-REDUNDANCY-POWER-MIB (file:./hh3c-power.mib) converted on Fri Mar 18 21:59:34 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpowerStatusChangedTrap .1.3.6.1.4.1.25506.8.36.4.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the satus of a power unit is changed. $*
SDESC
This trap is generated when the satus of a power unit is changed.
Variables:
  1: hh3credundancyPowerID
     Syntax="INTEGER"
     Descr="The identify of power uinit.
        This is also the index of this table."
  2: hh3credundancyPowerStatus
     Syntax="INTEGER"
       1: space
       2: normal
       3: fail
     Descr="The status of every redundancy power unit.
        if power unit doesn't exists, take the value 'space';
        if power unit is present and normal, take the value 'narmal'
        if power unit is present but fail, take the value 'fail'"
  3: hh3credundancyPowerPreviousStatus
     Syntax="INTEGER"
       1: space
       2: normal
       3: fail
     Descr="The last status of every redundancy power unit "
EDESC
#
#
#
EVENT hh3cfanStatusChangedTrap .1.3.6.1.4.1.25506.8.36.5.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the satus of a power unit is changed. $*
SDESC
This trap is generated when the satus of a power unit is changed.
Variables:
  1: hh3credundancyFanID
     Syntax="INTEGER"
     Descr="The identify of power uinit.
        This is also the index of this table."
  2: hh3credundancyFanStatus
     Syntax="INTEGER"
       1: normal
       2: fail
     Descr="The status of every redundancy power unit.
        if power unit doesn't exists, take the value 'space';
        if power unit is present and normal, take the value 'narmal'
        if power unit is present but fail, take the value 'fail'"
EDESC
#
#
#
#
MIB: HH3C-PPP-MIB (file:./hh3c-ppp.mib) converted on Fri Mar 18 21:59:34 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPPOE-SERVER-MIB (file:./hh3c-pppoe-server.mib) converted on Fri Mar 18 21:59:35 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPPPoESAbnormOffsAlarm .1.3.6.1.4.1.25506.2.102.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the PPPoE server abnormal $*
SDESC
This trap is generated when the PPPoE server abnormal
offline counts over threshold in five minutes.
EDESC
#
#
#
EVENT hh3cPPPoESAbnormOffPerAlarm .1.3.6.1.4.1.25506.2.102.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the PPPoE server abnormal $*
SDESC
This trap is generated when the PPPoE server abnormal
offline percent over threshold in five minutes.
EDESC
#
#
#
EVENT hh3cPPPoESNormOffPerAlarm .1.3.6.1.4.1.25506.2.102.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the PPPoE server normal $*
SDESC
This trap is generated when the PPPoE server normal
offline percent under threshold in five minutes.
EDESC
#
#
#
#
MIB: HH3C-PPP-OVER-SONET-MIB (file:./hh3c-ppp-over-sonet.mib) converted on Fri Mar 18 21:59:35 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPosLOSAlarm .1.3.6.1.4.1.25506.2.19.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates loss of signal $*
SDESC
Alarm indicates loss of signal
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLOFAlarm .1.3.6.1.4.1.25506.2.19.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates loss of frame $*
SDESC
Alarm indicates loss of frame
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosOOFAlarm .1.3.6.1.4.1.25506.2.19.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates out of frame $*
SDESC
Alarm indicates out of frame
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLAISAlarm .1.3.6.1.4.1.25506.2.19.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when LAIS(Line  Alarm  Indication  Signal) arrives $*
SDESC
Alarm when LAIS(Line  Alarm  Indication  Signal) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLRDIAlarm .1.3.6.1.4.1.25506.2.19.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when LRDI(Line  Remote  Defect  Indication) arrives $*
SDESC
Alarm when LRDI(Line  Remote  Defect  Indication) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPRDIAlarm .1.3.6.1.4.1.25506.2.19.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when PRDI(Path  Remote  Defect  Indication) arrives $*
SDESC
Alarm when PRDI(Path  Remote  Defect  Indication) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPAISAlarm .1.3.6.1.4.1.25506.2.19.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when PAIS(Path  Alarm  Indication  Signal) arrives $*
SDESC
Alarm when PAIS(Path  Alarm  Indication  Signal) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLOPAlarm .1.3.6.1.4.1.25506.2.19.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates loss of pointer $*
SDESC
Alarm indicates loss of pointer
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosSTIMAlarm .1.3.6.1.4.1.25506.2.19.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates inconsistency between sent and received J0 bytes. $*
SDESC
Alarm indicates inconsistency between sent and received J0 bytes.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPTIMAlarm .1.3.6.1.4.1.25506.2.19.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates inconsistency between sent and received J1 bytes. $*
SDESC
Alarm indicates inconsistency between sent and received J1 bytes.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPSLMAlarm .1.3.6.1.4.1.25506.2.19.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates a mismatched C2 byte. $*
SDESC
Alarm indicates a mismatched C2 byte.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLSDAlarm .1.3.6.1.4.1.25506.2.19.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates that the B2 bit-error rate exceeds SD threshold. $*
SDESC
Alarm indicates that the B2 bit-error rate exceeds SD threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLSFAlarm .1.3.6.1.4.1.25506.2.19.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates that the B2 bit-error rate exceeds SF threshold. $*
SDESC
Alarm indicates that the B2 bit-error rate exceeds SF threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosNormalAlarm .1.3.6.1.4.1.25506.2.19.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates that the Pos interface state returns normal. $*
SDESC
Alarm indicates that the Pos interface state returns normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosB1TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Threshold crossing alarms for B1. $*
SDESC
Threshold crossing alarms for B1.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cPosB2TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Threshold crossing alarms for B2. $*
SDESC
Threshold crossing alarms for B2.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cPosB3TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA Threshold crossing alarms for B3. $*
SDESC
Threshold crossing alarms for B3.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-PRODUCT-ID-MIB (file:./hh3c-product-id.mib) converted on Fri Mar 18 21:59:35 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PROTOCOL-VLAN-MIB (file:./hh3c-protocol-vlan.mib) converted on Fri Mar 18 21:59:35 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PROT-PRIORITY-MIB (file:./hh3c-prot-priority.mib) converted on Fri Mar 18 21:59:35 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PU-MAN-MIB (file:./hh3c-pu-man.mib) converted on Fri Mar 18 21:59:35 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPUECManExternalSemaphoreTrap .1.3.6.1.4.1.25506.9.2.2.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about external semaphore alarm. $*
SDESC
Send a trap about external semaphore alarm.
Variables:
  1: hh3cPUExternalInputAlarmChannelID
     Syntax="UNSIGNED32"
     Descr="The ID of the external input alarm channel."
EDESC
#
#
#
EVENT hh3cPUECManVideoLossTrap .1.3.6.1.4.1.25506.9.2.2.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about video loss. Video loss is that no video $*
SDESC
Send a trap about video loss. Video loss is that no video
signal is inputted to the EC.
Variables:
  1: hh3cPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel.
        It is suggested that the name includes the channel ID
        information."
EDESC
#
#
#
EVENT hh3cPUECManVideoRecoverTrap .1.3.6.1.4.1.25506.9.2.2.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about video recovery after loss. $*
SDESC
Send a trap about video recovery after loss.
Variables:
  1: hh3cPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel.
        It is suggested that the name includes the channel ID
        information."
EDESC
#
#
#
EVENT hh3cPUECManMotionDetectTrap .1.3.6.1.4.1.25506.9.2.2.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about motion detection. $*
SDESC
Send a trap about motion detection.
Variables:
  1: hh3cPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel.
        It is suggested that the name includes the channel ID
        information."
  2: hh3cPUECRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion
        detection region."
  3: hh3cPUECRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion
        detection region."
  4: hh3cPUECRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the
        motion detection region."
  5: hh3cPUECRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the
        motion detection region."
EDESC
#
#
#
EVENT hh3cPUECManOnLineFailureTrap .1.3.6.1.4.1.25506.9.2.2.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap when EC can not register the CMS. $*
SDESC
Send a trap when EC can not register the CMS.
Variables:
  1: hh3cPUCMSAddr
     Syntax="IPADDR"
     Descr="The IP address of the CMS.
        All zero address indicates the CMS address is not configured."
EDESC
#
#
#
EVENT hh3cPUECManConnectionCMSFailureTrap .1.3.6.1.4.1.25506.9.2.2.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap when the connection with the CMS breaks down. $*
SDESC
Send a trap when the connection with the CMS breaks down.
Variables:
  1: hh3cPUCMSAddr
     Syntax="IPADDR"
     Descr="The IP address of the CMS.
        All zero address indicates the CMS address is not configured."
EDESC
#
#
#
EVENT hh3cPUECManConnectionVerSrvFailureTrap .1.3.6.1.4.1.25506.9.2.2.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap when the connection with the version server breaks $*
SDESC
Send a trap when the connection with the version server breaks
down or can not create.
Variables:
  1: hh3cPUVersionServerAddr
     Syntax="IPADDR"
     Descr="The IP address of the version server.
        All zero address indicates the version server is not configured
        or does not support remote upgrade."
EDESC
#
#
#
EVENT hh3cPUECManFlashFailureTrap .1.3.6.1.4.1.25506.9.2.2.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about flash failure. $*
SDESC
Send a trap about flash failure.
EDESC
#
#
#
EVENT hh3cPUECManCameraShelterTrap .1.3.6.1.4.1.25506.9.2.2.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap when a camera is sheltered. $*
SDESC
Send a trap when a camera is sheltered.
Variables:
  1: hh3cPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel.
        It is suggested that the name includes the channel ID
        information."
  2: hh3cPUECRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion
        detection region."
  3: hh3cPUECRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion
        detection region."
  4: hh3cPUECRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the
        motion detection region."
  5: hh3cPUECRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the
        motion detection region."
EDESC
#
#
#
#
MIB: HH3C-PVST-MIB (file:./hh3c-pvst.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPvstVlanPortDetectedTc .1.3.6.1.4.1.25506.2.131.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap is generated when a port detects $*
SDESC
The SNMP trap is generated when a port detects
a topology change in a VLAN.
Variables:
  1: hh3cPvstPortVlanID
     Syntax="INTEGER32"
     Descr="The index of the VLAN."
  2: hh3cPvstPortIndex
     Syntax="INTEGER32"
     Descr="The index of the bridge port."
EDESC
#
#
#
EVENT hh3cPvstVlanPortRcvdTc .1.3.6.1.4.1.25506.2.131.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap is generated when a port receives $*
SDESC
The SNMP trap is generated when a port receives
a topology change in a VLAN.
Variables:
  1: hh3cPvstPortVlanID
     Syntax="INTEGER32"
     Descr="The index of the VLAN."
  2: hh3cPvstPortIndex
     Syntax="INTEGER32"
     Descr="The index of the bridge port."
EDESC
#
#
#
#
MIB: HH3C-QINQ-MIB (file:./hh3c-qinq.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QINQV2-MIB (file:./hh3c-qinqv2.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QOS-CAPABILITY-MIB (file:./hh3c-qos-capability.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QOS-PROFILE-MIB (file:./hh3c-qos-profile.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cQoSProfPortMappingError .1.3.6.1.4.1.25506.2.17.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cQoSProfPortMappingError notification is generated $*
SDESC
An hh3cQoSProfPortMappingError notification is generated
when a qos profile fails to be applied on the port.
EDESC
#
#
#
#
MIB: HH3C-RADIUS-MIB (file:./hh3c-radius.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRadiusAuthServerDownTrap .1.3.6.1.4.1.25506.2.13.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the authentication RADIUS server $*
SDESC
This trap is generated when the authentication RADIUS server
does not respond to the client's requests for a period of time.
This node is replaced by hh3cRadiusAuthenticationServerDownTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax=""
  2: radiusAuthClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccServerDownTrap .1.3.6.1.4.1.25506.2.13.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the accounting RADIUS server $*
SDESC
This trap is generated when the accounting RADIUS server
does not respond to the client's requests for a period of time.
This node is replaced by hh3cRadiusAccountingServerDownTrap.
Variables:
  1: radiusAccServerAddress
     Syntax=""
  2: radiusAccClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS authentication server changes from unreachable to reachable.
This node is replaced by hh3cRadiusAuthenticationServerUpTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax=""
  2: radiusAuthClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS accounting server changes from unreachable to unreachable.
This node is replaced by hh3cRadiusAccountingServerUpTrap.
Variables:
  1: radiusAccServerAddress
     Syntax=""
  2: radiusAccClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthErrTrap .1.3.6.1.4.1.25506.2.13.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the percent of $*
SDESC
This trap is generated when the device finds that the percent of
unsuccessful authentication exceeds a threshold, and the threshold
is the value of node hh3cRadiusAuthErrThreshold.
Variables:
  1: radiusAuthServerAddress
     Syntax=""
  2: radiusAuthClientServerPortNumber
     Syntax=""
EDESC
#
#
#
EVENT hh3cRadiusAuthenticationServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS authentication server changes from unreachable to reachable.
The node replaces hh3cRadiusAuthServerUpTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax=""
  2: radiusAuthClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccountingServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS accounting server changes from unreachable to reachable.
The node replaces hh3cRadiusAccServerUpTrap.
Variables:
  1: radiusAccServerAddress
     Syntax=""
  2: radiusAccClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthenticationServerDownTrap .1.3.6.1.4.1.25506.2.13.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the authentication RADIUS server $*
SDESC
This trap is generated when the authentication RADIUS server
does not respond to the client's requests for a period of time.
The node replaces hh3cRadiusAuthServerDownTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax=""
  2: radiusAuthClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccountingServerDownTrap .1.3.6.1.4.1.25506.2.13.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the accounting RADIUS server $*
SDESC
This trap is generated when the accounting RADIUS server
does not respond to the client's requests for a period of time.
The node replaces hh3cRadiusAccServerDownTrap.
Variables:
  1: radiusAccServerAddress
     Syntax=""
  2: radiusAccClientServerPortNumber
     Syntax=""
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
#
MIB: HH3C-RAID-MIB (file:./hh3c-raid.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RBAC-MIB (file:./hh3c-rbac.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RBM-MIB (file:./hh3c-rbm.mib) converted on Fri Mar 18 21:59:36 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRbmKeepaliveNormal .1.3.6.1.4.1.25506.2.187.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when RBM keepalive channel connected. $*
SDESC
This notification is generated when RBM keepalive channel connected.
Variables:
  1: hh3cRbmTrapVar
     Syntax="INTEGER32"
     Descr="The value is RBM trap."
EDESC
#
#
#
EVENT hh3cRbmKeepaliveFailure .1.3.6.1.4.1.25506.2.187.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when RBM keepalive channel disconnected. $*
SDESC
This notification is generated when RBM keepalive channel disconnected.
Variables:
  1: hh3cRbmTrapVar
     Syntax="INTEGER32"
     Descr="The value is RBM trap."
EDESC
#
#
#
EVENT hh3cRbmStateChange .1.3.6.1.4.1.25506.2.187.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when RBM running status changes(0:new-state = Active,1:new-state = Standby). $*
SDESC
This notification is generated when RBM running status changes(0:new-state = Active,1:new-state = Standby).
Variables:
  1: hh3cRbmTrapVar
     Syntax="INTEGER32"
     Descr="The value is RBM trap."
EDESC
#
#
#
#
MIB: HH3C-RCP-MIB (file:./hh3c-rcp.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RCR-MIB (file:./hh3c-rcr.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RDDC-MIB (file:./hh3c-rddc.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRddcSwitchoverTrap .1.3.6.1.4.1.25506.2.151.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Notification to signal switchover/failover. $*
SDESC
Notification to signal switchover/failover.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: hh3cRddcNodeInfo
     Syntax="OCTETSTR"
     Descr="This object contains node identification information
        where the switchover occurred."
  4: hh3cRddcSwitchReason
     Syntax="OCTETSTR"
     Descr="This object contains the cause for switchover."
EDESC
#
#
#
EVENT hh3cRddcFailIfRecoverTrap .1.3.6.1.4.1.25506.2.151.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Notification to signal the failed interface recovered. $*
SDESC
Notification to signal the failed interface recovered.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  4: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cRddcFailIfGenerateTrap .1.3.6.1.4.1.25506.2.151.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Notification to signal the failed interface generated. $*
SDESC
Notification to signal the failed interface generated.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  4: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-RES-MON-MIB (file:./hh3c-res-mon.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cResMonMinorNotification .1.3.6.1.4.1.25506.2.169.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification indicates that the amount of the free resource $*
SDESC
The notification indicates that the amount of the free resource
decreased to or below the hhcResMonMinorThreshold
Variables:
  1: hh3cResMonChassisIndex
     Syntax="UNSIGNED32"
     Descr="Member ID of the member device where the entity resides."
  2: hh3cResMonSlotIndex
     Syntax="UNSIGNED32"
     Descr="Slot number of the device node."
  3: hh3cResMonCpuIndex
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cResMonResourceName
     Syntax="OCTETSTR"
     Descr="Resource name."
  5: hh3cResMonThresholdUnit
     Syntax="INTEGER"
       1: absolute
       2: percentage
     Descr="Unit for resource depletion thresholds."
  6: hh3cResMonMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Minor resource depletion threshold."
  7: hh3cResMonSevereThreshold
     Syntax="UNSIGNED32"
     Descr="Severe resource depletion threshold."
  8: hh3cResMonCurrent
     Syntax="UNSIGNED32"
     Descr="Amount of the used resource."
  9: hh3cResMonFree
     Syntax="UNSIGNED32"
     Descr="Amount of the free resource."
 10: hh3cResMonTotal
     Syntax="UNSIGNED32"
     Descr="The total size of resource."
 11: hh3cResMonAdditionalInfo
     Syntax="OCTETSTR"
     Descr="Additional information for a notification."
EDESC
#
#
#
EVENT hh3cResMonMinorRecoverNotification .1.3.6.1.4.1.25506.2.169.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification indicates that the amount of the free resource $*
SDESC
The notification indicates that the amount of the free resource
increased to or above the hhcResMonMinorThreshold.
Variables:
  1: hh3cResMonChassisIndex
     Syntax="UNSIGNED32"
     Descr="Member ID of the member device where the entity resides."
  2: hh3cResMonSlotIndex
     Syntax="UNSIGNED32"
     Descr="Slot number of the device node."
  3: hh3cResMonCpuIndex
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cResMonResourceName
     Syntax="OCTETSTR"
     Descr="Resource name."
  5: hh3cResMonThresholdUnit
     Syntax="INTEGER"
       1: absolute
       2: percentage
     Descr="Unit for resource depletion thresholds."
  6: hh3cResMonMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Minor resource depletion threshold."
  7: hh3cResMonSevereThreshold
     Syntax="UNSIGNED32"
     Descr="Severe resource depletion threshold."
  8: hh3cResMonCurrent
     Syntax="UNSIGNED32"
     Descr="Amount of the used resource."
  9: hh3cResMonFree
     Syntax="UNSIGNED32"
     Descr="Amount of the free resource."
 10: hh3cResMonTotal
     Syntax="UNSIGNED32"
     Descr="The total size of resource."
 11: hh3cResMonAdditionalInfo
     Syntax="OCTETSTR"
     Descr="Additional information for a notification."
EDESC
#
#
#
EVENT hh3cResMonSevereNotification .1.3.6.1.4.1.25506.2.169.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification indicates that the amount of the free resource $*
SDESC
The notification indicates that the amount of the free resource
decreased to or below the hhcResMonSevereThreshold.
Variables:
  1: hh3cResMonChassisIndex
     Syntax="UNSIGNED32"
     Descr="Member ID of the member device where the entity resides."
  2: hh3cResMonSlotIndex
     Syntax="UNSIGNED32"
     Descr="Slot number of the device node."
  3: hh3cResMonCpuIndex
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cResMonResourceName
     Syntax="OCTETSTR"
     Descr="Resource name."
  5: hh3cResMonThresholdUnit
     Syntax="INTEGER"
       1: absolute
       2: percentage
     Descr="Unit for resource depletion thresholds."
  6: hh3cResMonMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Minor resource depletion threshold."
  7: hh3cResMonSevereThreshold
     Syntax="UNSIGNED32"
     Descr="Severe resource depletion threshold."
  8: hh3cResMonCurrent
     Syntax="UNSIGNED32"
     Descr="Amount of the used resource."
  9: hh3cResMonFree
     Syntax="UNSIGNED32"
     Descr="Amount of the free resource."
 10: hh3cResMonTotal
     Syntax="UNSIGNED32"
     Descr="The total size of resource."
 11: hh3cResMonAdditionalInfo
     Syntax="OCTETSTR"
     Descr="Additional information for a notification."
EDESC
#
#
#
EVENT hh3cResMonSevereRecoverNotification .1.3.6.1.4.1.25506.2.169.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification indicates that the amount of the free resource $*
SDESC
The notification indicates that the amount of the free resource
increased to or above hhcResMonSevereThreshold.
Variables:
  1: hh3cResMonChassisIndex
     Syntax="UNSIGNED32"
     Descr="Member ID of the member device where the entity resides."
  2: hh3cResMonSlotIndex
     Syntax="UNSIGNED32"
     Descr="Slot number of the device node."
  3: hh3cResMonCpuIndex
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cResMonResourceName
     Syntax="OCTETSTR"
     Descr="Resource name."
  5: hh3cResMonThresholdUnit
     Syntax="INTEGER"
       1: absolute
       2: percentage
     Descr="Unit for resource depletion thresholds."
  6: hh3cResMonMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Minor resource depletion threshold."
  7: hh3cResMonSevereThreshold
     Syntax="UNSIGNED32"
     Descr="Severe resource depletion threshold."
  8: hh3cResMonCurrent
     Syntax="UNSIGNED32"
     Descr="Amount of the used resource."
  9: hh3cResMonFree
     Syntax="UNSIGNED32"
     Descr="Amount of the free resource."
 10: hh3cResMonTotal
     Syntax="UNSIGNED32"
     Descr="The total size of resource."
 11: hh3cResMonAdditionalInfo
     Syntax="OCTETSTR"
     Descr="Additional information for a notification."
EDESC
#
#
#
EVENT hh3cResMonUsedUpNotification .1.3.6.1.4.1.25506.2.169.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates that the resource is used up. $*
SDESC
This notification indicates that the resource is used up.
Variables:
  1: hh3cResMonChassisIndex
     Syntax="UNSIGNED32"
     Descr="Member ID of the member device where the entity resides."
  2: hh3cResMonSlotIndex
     Syntax="UNSIGNED32"
     Descr="Slot number of the device node."
  3: hh3cResMonCpuIndex
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cResMonResourceName
     Syntax="OCTETSTR"
     Descr="Resource name."
  5: hh3cResMonThresholdUnit
     Syntax="INTEGER"
       1: absolute
       2: percentage
     Descr="Unit for resource depletion thresholds."
  6: hh3cResMonMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Minor resource depletion threshold."
  7: hh3cResMonSevereThreshold
     Syntax="UNSIGNED32"
     Descr="Severe resource depletion threshold."
  8: hh3cResMonCurrent
     Syntax="UNSIGNED32"
     Descr="Amount of the used resource."
  9: hh3cResMonFree
     Syntax="UNSIGNED32"
     Descr="Amount of the free resource."
 10: hh3cResMonTotal
     Syntax="UNSIGNED32"
     Descr="The total size of resource."
 11: hh3cResMonAdditionalInfo
     Syntax="OCTETSTR"
     Descr="Additional information for a notification."
EDESC
#
#
#
EVENT hh3cResMonUsedUpRecoverNotification .1.3.6.1.4.1.25506.2.169.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates that the free resource increases from zero up. $*
SDESC
This notification indicates that the free resource increases from zero up.
Variables:
  1: hh3cResMonChassisIndex
     Syntax="UNSIGNED32"
     Descr="Member ID of the member device where the entity resides."
  2: hh3cResMonSlotIndex
     Syntax="UNSIGNED32"
     Descr="Slot number of the device node."
  3: hh3cResMonCpuIndex
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cResMonResourceName
     Syntax="OCTETSTR"
     Descr="Resource name."
  5: hh3cResMonThresholdUnit
     Syntax="INTEGER"
       1: absolute
       2: percentage
     Descr="Unit for resource depletion thresholds."
  6: hh3cResMonMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Minor resource depletion threshold."
  7: hh3cResMonSevereThreshold
     Syntax="UNSIGNED32"
     Descr="Severe resource depletion threshold."
  8: hh3cResMonCurrent
     Syntax="UNSIGNED32"
     Descr="Amount of the used resource."
  9: hh3cResMonFree
     Syntax="UNSIGNED32"
     Descr="Amount of the free resource."
 10: hh3cResMonTotal
     Syntax="UNSIGNED32"
     Descr="The total size of resource."
 11: hh3cResMonAdditionalInfo
     Syntax="OCTETSTR"
     Descr="Additional information for a notification."
EDESC
#
#
#
#
MIB: HH3C-RMON-EXT2-MIB (file:./hh3c-rmon-ext2.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRmonExtRisingAlarm .1.3.6.1.4.1.25506.2.125.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cRmonExtAlarmIndex
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the
        alarm table.  Each such entry defines a
        diagnostic sample at a particular interval
        for an object on the device."
  2: hh3cRmonExtAlarmSympol
     Syntax="OCTETSTR"
     Descr="A comment describing this alarm entry.
        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  3: hh3cRmonExtAlarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
        calculating the value to be compared against the
        thresholds.  If the value of this object is
        absoluteValue, the value of the selected variable
        will be compared directly with the thresholds at the
        end of the sampling interval.  If the value of this
        object is deltaValue, the value of the selected
        variable at the last sample will be subtracted from
        the current value, and the difference compared with
        the thresholds.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  4: hh3cRmonExtAlarmValue
     Syntax="INTEGER32"
     Descr="The value of the statistic during the last sampling
        period.  For example, if the sample type is deltaValue,
        this value will be the difference between the samples
        at the beginning and end of the period.  If the sample
        type is absoluteValue, this value will be the sampled
        value at the end of the period.
        This is the value that is compared with the rising and
        falling thresholds.

        The value during the current sampling period is not
        made available until the period is completed and will
        remain available until the next period completes."
  5: hh3cRmonExtAlarmRisingThreshold
     Syntax="INTEGER32"
     Descr="A threshold for the sampled statistic.  When the current
        sampled value is greater than or equal to this threshold,
        and the value at the last sampling interval was less than
        this threshold, a single event will be generated.
        A single event will also be generated if the first
        sample after this entry becomes valid is greater than or
        equal to this threshold and the associated
        alarmStartupAlarm is equal to risingAlarm or
        risingOrFallingAlarm.

        After a rising event is generated, another such event
        will not be generated until the sampled value
        falls below this threshold and reaches the
        alarmFallingThreshold.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
EDESC
#
#
#
EVENT hh3cRmonExtFallingAlarm .1.3.6.1.4.1.25506.2.125.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cRmonExtAlarmIndex
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the
        alarm table.  Each such entry defines a
        diagnostic sample at a particular interval
        for an object on the device."
  2: hh3cRmonExtAlarmSympol
     Syntax="OCTETSTR"
     Descr="A comment describing this alarm entry.
        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  3: hh3cRmonExtAlarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
        calculating the value to be compared against the
        thresholds.  If the value of this object is
        absoluteValue, the value of the selected variable
        will be compared directly with the thresholds at the
        end of the sampling interval.  If the value of this
        object is deltaValue, the value of the selected
        variable at the last sample will be subtracted from
        the current value, and the difference compared with
        the thresholds.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  4: hh3cRmonExtAlarmValue
     Syntax="INTEGER32"
     Descr="The value of the statistic during the last sampling
        period.  For example, if the sample type is deltaValue,
        this value will be the difference between the samples
        at the beginning and end of the period.  If the sample
        type is absoluteValue, this value will be the sampled
        value at the end of the period.
        This is the value that is compared with the rising and
        falling thresholds.

        The value during the current sampling period is not
        made available until the period is completed and will
        remain available until the next period completes."
  5: hh3cRmonExtAlarmFallingThreshold
     Syntax="INTEGER32"
     Descr="A threshold for the sampled statistic.  When the current
        sampled value is less than or equal to this threshold,
        and the value at the last sampling interval was greater than
        this threshold, a single event will be generated.
        A single event will also be generated if the first
        sample after this entry becomes valid is less than or
        equal to this threshold and the associated
        alarmStartupAlarm is equal to fallingAlarm or
        risingOrFallingAlarm.

        After a falling event is generated, another such event
        will not be generated until the sampled value
        rises above this threshold and reaches the
        alarmRisingThreshold.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
EDESC
#
#
#
#
MIB: HH3C-RMON-EXT-MIB (file:./hh3c-rmon-ext.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpririsingAlarm .1.3.6.1.4.1.25506.8.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cprialarmIndex
     Syntax="INTEGER"
     Descr="An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
  2: hh3cprialarmSympol
     Syntax="OCTETSTR"
  3: hh3cprialarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
  4: hh3cprialarmValue
     Syntax="INTEGER"
     Descr="The value of the statistic during the last sampling
                  period.  For example, if the sample type is deltaValue,
                  this value will be the difference between the samples
                  at the beginning and end of the period.  If the sample
                  type is absoluteValue, this value will be the sampled
                  value at the end of the period.
                  This is the value that is compared with the rising and
                  falling thresholds.

                  The value during the current sampling period is not
                  made available until the period is completed and will
                  remain available until the next period completes."
  5: hh3cprialarmRisingThreshold
     Syntax="INTEGER"
     Descr="A threshold for the sampled statistic.  When the current
                  sampled value is greater than or equal to this threshold,
                  and the value at the last sampling interval was less than
                  this threshold, a single event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is greater than or
                  equal to this threshold and the associated
                  alarmStartupAlarm is equal to risingAlarm(1) or
                  risingOrFallingAlarm(3).

                  After a rising event is generated, another such event
                  will not be generated until the sampled value
                  falls below this threshold and reaches the
                  alarmFallingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
EDESC
#
#
#
EVENT hh3cprifallingAlarm .1.3.6.1.4.1.25506.8.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cprialarmIndex
     Syntax="INTEGER"
     Descr="An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
  2: hh3cprialarmSympol
     Syntax="OCTETSTR"
  3: hh3cprialarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
  4: hh3cprialarmValue
     Syntax="INTEGER"
     Descr="The value of the statistic during the last sampling
                  period.  For example, if the sample type is deltaValue,
                  this value will be the difference between the samples
                  at the beginning and end of the period.  If the sample
                  type is absoluteValue, this value will be the sampled
                  value at the end of the period.
                  This is the value that is compared with the rising and
                  falling thresholds.

                  The value during the current sampling period is not
                  made available until the period is completed and will
                  remain available until the next period completes."
  5: hh3cprialarmFallingThreshold
     Syntax="INTEGER"
     Descr="A threshold for the sampled statistic.  When the current
                  sampled value is less than or equal to this threshold,
                  and the value at the last sampling interval was greater than
                  this threshold, a single event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is less than or
                  equal to this threshold and the associated
                  alarmStartupAlarm is equal to fallingAlarm(2) or
                  risingOrFallingAlarm(3).

                  After a falling event is generated, another such event
                  will not be generated until the sampled value
                  rises above this threshold and reaches the
                  alarmRisingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
EDESC
#
#
#
#
MIB: HH3C-RPR-MIB (file:./hh3c-rpr.mib) converted on Fri Mar 18 21:59:37 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRprTopologyOpenRing .1.3.6.1.4.1.25506.2.60.1.10.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology openRing trap indicates that the RPR ring is opened. $*
SDESC
The topology openRing trap indicates that the RPR ring is opened.
REFERENCE
IEEE 802.17 Subclause 3.2.77 open ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyCloseRing .1.3.6.1.4.1.25506.2.60.1.10.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology openRing trap indicates that the RPR ring is closed. $*
SDESC
The topology openRing trap indicates that the RPR ring is closed.
REFERENCE
IEEE 802.17 Subclause 3.2.77 close ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyInconsistent .1.3.6.1.4.1.25506.2.60.1.10.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology inconsistent trap indicates that the topology of $*
SDESC
The topology inconsistent trap indicates that the topology of
RPR is inconsistent.
REFERENCE
IEEE 802.17 Subclause 11.6.6.1 topology consistency.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyInstability .1.3.6.1.4.1.25506.2.60.1.10.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology instability trap indicates that the topology of $*
SDESC
The topology instability trap indicates that the topology of
RPR is instability.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprDuplicateMacAddress .1.3.6.1.4.1.25506.2.60.1.10.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The duplicate MAC address trap indicates that the mac address $*
SDESC
The duplicate MAC address trap indicates that the mac address
of the station on the ring is dulplicate. That means there is the
same MAC address between two stations on the ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapTopoMacAddress
     Syntax="OCTETSTR"
     Descr="The MAC address of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprDulplicateIPAddress .1.3.6.1.4.1.25506.2.60.1.10.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The dulplicate IP address trap indicates that the IP address of $*
SDESC
The dulplicate IP address trap indicates that the IP address of
the station on the ring is dulplicate. That means there is the same
IP address between two stations on the ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapIpAddress
     Syntax="OCTETSTR"
     Descr="The IP address of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprIncompleteLRTT .1.3.6.1.4.1.25506.2.60.1.10.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The incomplete LRTT trap indicates that LRTT is not completed. $*
SDESC
The incomplete LRTT trap indicates that LRTT is not completed.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprProtecConfigInconsistent .1.3.6.1.4.1.25506.2.60.1.10.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The protection configuration inconsistent trap indicates that $*
SDESC
The protection configuration inconsistent trap indicates that
the configuration of protection mode on the ring is inconsistent.
That is one station is configured steer mode while the other is
configured wrap mode.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprJumboConfigInconsistent .1.3.6.1.4.1.25506.2.60.1.10.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The jumbo configuration inconsistent trap indicates that the $*
SDESC
The jumbo configuration inconsistent trap indicates that the
configuration of jumbo mode on the ring is inconsistent.
That is one station supports jumbo frame while the other
doesn't support jumbo frame.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprExceedMaxReservRate .1.3.6.1.4.1.25506.2.60.1.10.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The exceeded max reserved rate trap indicates that the rate $*
SDESC
The exceeded max reserved rate trap indicates that the rate
on the ringlet exceeded the max reserved rate. The operator can
configure reserved rate for every station, but the sum of all
stations' reserved rate of each RPR ringlet can't exceed maximum.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprExceedMaxStationNum .1.3.6.1.4.1.25506.2.60.1.10.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The exceeded max station number trap indicates that the number $*
SDESC
The exceeded max station number trap indicates that the number
of the stations on the ring exceeded the max station number.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprMiscabling .1.3.6.1.4.1.25506.2.60.1.10.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The miscabling trap indicates that the miscabling event occurred. $*
SDESC
The miscabling trap indicates that the miscabling event occurred.
REFERENCE
IEEE 802.17 V3.0 Subclause 11.9.2.1 miscabling defect.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprBackPressure .1.3.6.1.4.1.25506.2.60.1.10.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The back pressure trap indicates that the backpressure is generated $*
SDESC
The back pressure trap indicates that the backpressure is generated
on the ringlet. That is the data flow on the ringlet exceeded
the range of rate-limit configured.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
  3: hh3cRprPriority2ClassMap
     Syntax="INTEGER"
       1: classC
       2: classB
       3: classA1
       4: classA0
     Descr="The RPR service class."
EDESC
#
#
#
EVENT hh3cRprBackPressureOver .1.3.6.1.4.1.25506.2.60.1.10.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The back pressure over trap indicates that the backpressure is $*
SDESC
The back pressure over trap indicates that the backpressure is
disappeared on the ringlet.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
  3: hh3cRprPriority2ClassMap
     Syntax="INTEGER"
       1: classC
       2: classB
       3: classA1
       4: classA0
     Descr="The RPR service class."
EDESC
#
#
#
#
MIB: HH3C-RRPP-MIB (file:./hh3c-rrpp.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRrppRingRecover .1.3.6.1.4.1.25506.2.45.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated by master-node on $*
SDESC
Trap message is generated by master-node on
the ring when the ring recovers from fault.
Variables:
  1: hh3cRrppDomainID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP domain,
        which ranges from 1~128.
        This value can't be modified after created."
  2: hh3cRrppRingID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP Ring,
        which ranges from 1~128.
        This value can't be modified after created."
EDESC
#
#
#
EVENT hh3cRrppRingFail .1.3.6.1.4.1.25506.2.45.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated by master-node on $*
SDESC
Trap message is generated by master-node on
the ring when the ring fails.
Variables:
  1: hh3cRrppDomainID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP domain,
        which ranges from 1~128.
        This value can't be modified after created."
  2: hh3cRrppRingID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP Ring,
        which ranges from 1~128.
        This value can't be modified after created."
EDESC
#
#
#
EVENT hh3cRrppMultiMaster .1.3.6.1.4.1.25506.2.45.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated by master-node when $*
SDESC
Trap message is generated by master-node when
it detects there are more than one master-node
on the ring.
Variables:
  1: hh3cRrppDomainID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP domain,
        which ranges from 1~128.
        This value can't be modified after created."
  2: hh3cRrppRingID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP Ring,
        which ranges from 1~128.
        This value can't be modified after created."
EDESC
#
#
#
EVENT hh3cRrppMajorFault .1.3.6.1.4.1.25506.2.45.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated by edge-node or assistant-edge-node $*
SDESC
Trap message is generated by edge-node or assistant-edge-node
when it detects major fault.
Variables:
  1: hh3cRrppDomainID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP domain,
        which ranges from 1~128.
        This value can't be modified after created."
  2: hh3cRrppRingID
     Syntax="INTEGER32"
     Descr="An index uniquely identifies a RRPP Ring,
        which ranges from 1~128.
        This value can't be modified after created."
EDESC
#
#
#
#
MIB: HH3C-RS485-MIB (file:./hh3c-rs485.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RSA-MIB (file:./hh3c-rsa.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRSALocalKeyPairOpeFail .1.3.6.1.4.1.25506.2.23.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated while the RSA local key pair fails to $*
SDESC
The trap is generated while the RSA local key pair fails to
create, refresh and destory.
Variables:
  1: hh3cRSALocalKeyFailReason
     Syntax="INTEGER"
       1: rsaSuccess
       10: rsaErrHostEncKeySave
       11: rsaErrHostEncKeyGenerate
       12: rsaErrHostEncKeyDestroy
       13: rsaErrHostSigKeyBackup
       14: rsaErrHostSigKeySave
       15: rsaErrHostSigKeyGenerate
       16: rsaErrHostSigKeyDestroy
       17: rsaErrServerKeyBackup
       18: rsaErrServerKeySave
       19: rsaErrServerKeyGenerate
       2: rsaFailure
       20: rsaErrServerKeyDestroy
       21: rsaErrPeerKeyNotReplaced
       22: rsaErrPeerKeyNumArriveMax
       23: rsaErrPeerKeyNotRemoved
       24: rsaErrPeerKeyNotExist
       25: rsaStatusKeyExist
       26: rsaStatusKeyNotExist
       27: rsaStatusKeyInvalid
       28: rsaStatusHostEncKeyExist
       29: rsaStatusHostEncKeyNotExist
       3: rsaErrNoMemory
       30: rsaStatusHostEncKeyInvalid
       31: rsaStatusHostSigKeyExist
       32: rsaStatusHostSigKeyNotExist
       33: rsaStatusHostSigKeyInvalid
       34: rsaStatusServerKeyExist
       35: rsaStatusServerKeyNotExist
       36: rsaStatusServerKeyInvalid
       4: rsaErrKeyNotReplaced
       5: rsaErrKeyBackup
       6: rsaErrKeySaved
       7: rsaErrKeyGenerate
       8: rsaErrKeyDestroy
       9: rsaErrHostEncKeyBackup
     Descr="The reason that RSA local key pair fails to create, refresh
                and destroy."
EDESC
#
#
#
EVENT hh3cRSAPeerKeyConfigFail .1.3.6.1.4.1.25506.2.23.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated while the RSA peer public key fails to $*
SDESC
The trap is generated while the RSA peer public key fails to
configure.
Variables:
  1: hh3cRSAPeerKeyConfigFailReason
     Syntax="INTEGER"
       1: rsaSuccess
       10: rsaErrHostEncKeySave
       11: rsaErrHostEncKeyGenerate
       12: rsaErrHostEncKeyDestroy
       13: rsaErrHostSigKeyBackup
       14: rsaErrHostSigKeySave
       15: rsaErrHostSigKeyGenerate
       16: rsaErrHostSigKeyDestroy
       17: rsaErrServerKeyBackup
       18: rsaErrServerKeySave
       19: rsaErrServerKeyGenerate
       2: rsaFailure
       20: rsaErrServerKeyDestroy
       21: rsaErrPeerKeyNotReplaced
       22: rsaErrPeerKeyNumArriveMax
       23: rsaErrPeerKeyNotRemoved
       24: rsaErrPeerKeyNotExist
       25: rsaStatusKeyExist
       26: rsaStatusKeyNotExist
       27: rsaStatusKeyInvalid
       28: rsaStatusHostEncKeyExist
       29: rsaStatusHostEncKeyNotExist
       3: rsaErrNoMemory
       30: rsaStatusHostEncKeyInvalid
       31: rsaStatusHostSigKeyExist
       32: rsaStatusHostSigKeyNotExist
       33: rsaStatusHostSigKeyInvalid
       34: rsaStatusServerKeyExist
       35: rsaStatusServerKeyNotExist
       36: rsaStatusServerKeyInvalid
       4: rsaErrKeyNotReplaced
       5: rsaErrKeyBackup
       6: rsaErrKeySaved
       7: rsaErrKeyGenerate
       8: rsaErrKeyDestroy
       9: rsaErrHostEncKeyBackup
     Descr="The reason that RSA peer public key fails to config."
EDESC
#
#
#
#
MIB: HH3C-SAN-AGG-MIB (file:./hh3c-san-agg.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SAVA-MIB (file:./hh3c-sava.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SECHIGH-MIB (file:./hh3c-sechigh.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSecHighHgMonitorAlarmNotification .1.3.6.1.4.1.25506.2.171.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an HgMonitor alarm is generated. $*
SDESC
This notification is generated when an HgMonitor alarm is generated.
Variables:
  1: hh3cSecHighHgMonitorAlarmType
     Syntax="INTEGER32"
     Descr="Type of the alarm,0 represent recovery normal,1 represent link status error,
            2 represent Some packets were dropped on the link."
  2: hh3cSecHighHgMonitorAlarmSrcChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis where the source end of the alarmed link resides."
  3: hh3cSecHighHgMonitorAlarmSrcSlot
     Syntax="INTEGER32"
     Descr="Number of the slot where the source end of the alarmed link resides."
  4: hh3cSecHighHgMonitorAlarmSrcChip
     Syntax="INTEGER32"
     Descr="Number of the chip where the source end of the alarmed link resides."
  5: hh3cSecHighHgMonitorAlarmSrcPort
     Syntax="INTEGER32"
     Descr="Number of the port where the source end of the alarmed link resides."
  6: hh3cSecHighHgMonitorAlarmDstChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis where the destination end of the alarmed link resides."
  7: hh3cSecHighHgMonitorAlarmDstSlot
     Syntax="INTEGER32"
     Descr="Number of the slot where the destination end of the alarmed link resides."
  8: hh3cSecHighHgMonitorAlarmDstChip
     Syntax="INTEGER32"
     Descr="Number of the chip where the destination end of the alarmed link resides."
  9: hh3cSecHighHgMonitorAlarmDstPort
     Syntax="INTEGER32"
     Descr="Number of the port where the destination end of the alarmed link resides."
 10: hh3cSecHighHgMonitorAlarmReason
     Syntax="OCTETSTR"
     Descr="Cause of the alarm."
EDESC
#
#
#
EVENT hh3cSecHighFaultMonChipAlmNotifi .1.3.6.1.4.1.25506.2.171.1.3.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a chip error occurs. $*
SDESC
This notification is generated when a chip error occurs.
Variables:
  1: hh3cSecHighFaultAlmType
     Syntax="INTEGER32"
     Descr="Type of the alarm, 1 represents Hg link status error,
            2 represents Hg packet loss error, 3 represents back board E2PROM error,
            4 represents board E2PROM error, 5 represents CPLD chip error,
            101 to 200 represent FPGA errors."
  2: hh3cSecHighFaultAlmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which error occurs."
  3: hh3cSecHighFaultAlmSlot
     Syntax="INTEGER32"
     Descr="Number of the slot in which error occurs."
  4: hh3cSecHighFaultAlmChip
     Syntax="INTEGER32"
     Descr="Id of the error chip."
  5: hh3cSecHighFaultAlmInfo
     Syntax="OCTETSTR"
     Descr="Details of the alarm notification."
EDESC
#
#
#
EVENT hh3cSecHighFaultMonChipAlmResu .1.3.6.1.4.1.25506.2.171.1.3.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a chip error is recovered. $*
SDESC
This notification is generated when a chip error is recovered.
Variables:
  1: hh3cSecHighFaultAlmType
     Syntax="INTEGER32"
     Descr="Type of the alarm, 1 represents Hg link status error,
            2 represents Hg packet loss error, 3 represents back board E2PROM error,
            4 represents board E2PROM error, 5 represents CPLD chip error,
            101 to 200 represent FPGA errors."
  2: hh3cSecHighFaultAlmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which error occurs."
  3: hh3cSecHighFaultAlmSlot
     Syntax="INTEGER32"
     Descr="Number of the slot in which error occurs."
  4: hh3cSecHighFaultAlmChip
     Syntax="INTEGER32"
     Descr="Id of the error chip."
  5: hh3cSecHighFaultAlmInfo
     Syntax="OCTETSTR"
     Descr="Details of the alarm notification."
EDESC
#
#
#
EVENT hh3cSecHighFaultMonHgAlmNotifi .1.3.6.1.4.1.25506.2.171.1.3.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an Hg error occurs. $*
SDESC
This notification is generated when an Hg error occurs.
Variables:
  1: hh3cSecHighFaultAlmType
     Syntax="INTEGER32"
     Descr="Type of the alarm, 1 represents Hg link status error,
            2 represents Hg packet loss error, 3 represents back board E2PROM error,
            4 represents board E2PROM error, 5 represents CPLD chip error,
            101 to 200 represent FPGA errors."
  2: hh3cSecHighFaultAlmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which error occurs."
  3: hh3cSecHighFaultAlmSlot
     Syntax="INTEGER32"
     Descr="Number of the slot in which error occurs."
  4: hh3cSecHighFaultAlmDstChassis
     Syntax="INTEGER32"
     Descr="Number of the destination chassis in which Hg error occurs."
  5: hh3cSecHighFaultAlmDstSlot
     Syntax="INTEGER32"
     Descr="Number of the destination slot in which Hg error occurs."
  6: hh3cSecHighFaultAlmInfo
     Syntax="OCTETSTR"
     Descr="Details of the alarm notification."
EDESC
#
#
#
EVENT hh3cSecHighFaultMonHgAlmResu .1.3.6.1.4.1.25506.2.171.1.3.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an Hg error is recovered. $*
SDESC
This notification is generated when an Hg error is recovered.
Variables:
  1: hh3cSecHighFaultAlmType
     Syntax="INTEGER32"
     Descr="Type of the alarm, 1 represents Hg link status error,
            2 represents Hg packet loss error, 3 represents back board E2PROM error,
            4 represents board E2PROM error, 5 represents CPLD chip error,
            101 to 200 represent FPGA errors."
  2: hh3cSecHighFaultAlmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which error occurs."
  3: hh3cSecHighFaultAlmSlot
     Syntax="INTEGER32"
     Descr="Number of the slot in which error occurs."
  4: hh3cSecHighFaultAlmDstChassis
     Syntax="INTEGER32"
     Descr="Number of the destination chassis in which Hg error occurs."
  5: hh3cSecHighFaultAlmDstSlot
     Syntax="INTEGER32"
     Descr="Number of the destination slot in which Hg error occurs."
  6: hh3cSecHighFaultAlmInfo
     Syntax="OCTETSTR"
     Descr="Details of the alarm notification."
EDESC
#
#
#
EVENT hh3cSecHighTemperAlarmNotify .1.3.6.1.4.1.25506.2.171.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a hotspot's temperature exceeds its power down threshold. $*
SDESC
This notification is generated when a hotspot's temperature exceeds its power down threshold.
Variables:
  1: hh3cSecHighTemperAlarmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which temperature exdceeds the shutdown threshold."
  2: hh3cSecHighTemperAlarmSlot
     Syntax="INTEGER32"
     Descr="Number of the slot in which temperature exdceeds the shutdown threshold."
  3: hh3cSecHighTemperAlarmHotspotIndx
     Syntax="INTEGER32"
     Descr="Index of the hotspot of which temperature exdceeds the shutdown threshold."
  4: hh3cSecHighTemperAlarmCurTemper
     Syntax="INTEGER32"
     Descr="Current temperature of the hotspot that exceeds the high temperature shutdown threshold."
  5: hh3cSecHighTemperAlarmLimit
     Syntax="INTEGER32"
     Descr="The power down threshold of ehe equipment."
EDESC
#
#
#
EVENT hh3cSecHighParityErrorAlarmNotify .1.3.6.1.4.1.25506.2.171.3.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a severe parity error occurs. $*
SDESC
This notification is generated when a severe parity error occurs.
Variables:
  1: hh3cSecHighParityErrorAlarmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which Parity Error occurs."
  2: hh3cSecHighParityErrorAlarmSlot
     Syntax="INTEGER32"
     Descr="Number of the slot in which Parity Error occurs."
  3: hh3cSecHighParityErrorAlarmChipUnit
     Syntax="INTEGER32"
     Descr="Number of the ChipUnit of which Parity Error occurs."
EDESC
#
#
#
EVENT hh3cSecHighInputVoltageAlarmNotify .1.3.6.1.4.1.25506.2.171.4.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the value of power's input voltage register is abnormal $*
SDESC
This notification is generated when the value of power's input voltage register is abnormal
Variables:
  1: hh3cSecHighInputVoltageAlarmChassis
     Syntax="INTEGER32"
     Descr="Number of the chassis in which input voltage abnormal."
  2: hh3cSecHighInputVoltageAlarmPowerId
     Syntax="INTEGER32"
     Descr="Number of the slot in which input voltage abnormal."
  3: hh3cSecHighInputVoltageAlarmState
     Syntax="OCTETSTR"
     Descr="Index of the hotspot of which input voltage abnormal."
EDESC
#
#
#
#
MIB: HH3C-SECP-MIB (file:./hh3c-secp.mib) converted on Fri Mar 18 21:59:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SESSION-MIB (file:./hh3c-session.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSessionDrvMaxTrap .1.3.6.1.4.1.25506.2.149.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when the number of sessions supported by hardware $*
SDESC
Send trap when the number of sessions supported by hardware
already reached the hh3cSessionDrvNum.
Variables:
  1: hh3cSessionDrvNum
     Syntax="UNSIGNED32"
     Descr="The number of sessions supported by hardware."
  2: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  3: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  4: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cSessionDrvRecoveryTrap .1.3.6.1.4.1.25506.2.149.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when the Session resources supported by hardware had been released. $*
SDESC
Send trap when the Session resources supported by hardware had been released.
Variables:
  1: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cSessionThdMaxTrap .1.3.6.1.4.1.25506.2.149.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the usage of sessions reached the threshold. $*
SDESC
This notification is generated when the usage of sessions reached the threshold.
Variables:
  1: hh3cSessionUsage
     Syntax="UNSIGNED32"
     Descr="The number of rate."
  2: hh3cSessionThreshold
     Syntax="UNSIGNED32"
     Descr="The number of threshold rate."
  3: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  4: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  5: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cSessionThdRecoveryTrap .1.3.6.1.4.1.25506.2.149.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the usage of sessions dropped below the threshold. $*
SDESC
This notification is generated when the usage of sessions dropped below the threshold.
Variables:
  1: hh3cSessionUsage
     Syntax="UNSIGNED32"
     Descr="The number of rate."
  2: hh3cSessionThreshold
     Syntax="UNSIGNED32"
     Descr="The number of threshold rate."
  3: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  4: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  5: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cSessUsageAbruptAlarmTrap .1.3.6.1.4.1.25506.2.149.1.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a hh3cSessionUsageAbruptVar $*
SDESC
This notification is generated when a hh3cSessionUsageAbruptVar
alarm is generated.
Variables:
  1: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cSessionUsageAbruptVar
     Syntax="UNSIGNED32"
     Descr="The value is percentage change about session concurrency during a statistical period(10s)."
  5: hh3cSessionLastStat
     Syntax="UNSIGNED32"
     Descr="The value of last session statistics(Usage:piece  Rate/TryRate:piece/s)."
  6: hh3cSessionCurrentStat
     Syntax="UNSIGNED32"
     Descr="The value of current session statistics(Usage:piece  Rate/TryRate:piece/s)."
EDESC
#
#
#
EVENT hh3cSessRateAbruptAlarmTrap .1.3.6.1.4.1.25506.2.149.1.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a hh3cSessionRateAbruptVar $*
SDESC
This notification is generated when a hh3cSessionRateAbruptVar
alarm is generated.
Variables:
  1: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cSessionRateAbruptVar
     Syntax="UNSIGNED32"
     Descr="The value is percentage change about session creation rate during a statistical period(10s)."
  5: hh3cSessionLastStat
     Syntax="UNSIGNED32"
     Descr="The value of last session statistics(Usage:piece  Rate/TryRate:piece/s)."
  6: hh3cSessionCurrentStat
     Syntax="UNSIGNED32"
     Descr="The value of current session statistics(Usage:piece  Rate/TryRate:piece/s)."
EDESC
#
#
#
EVENT hh3cSessTryRateAbruptAlarmTrap .1.3.6.1.4.1.25506.2.149.1.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a hh3cSessionTryRateAbruptVar $*
SDESC
This notification is generated when a hh3cSessionTryRateAbruptVar
alarm is generated.
Variables:
  1: hh3cSessionChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cSessionSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cSessionCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
  4: hh3cSessionTryRateAbruptVar
     Syntax="UNSIGNED32"
     Descr="The value is percentage change about session attempt rate during a statistical period(10s)."
  5: hh3cSessionLastStat
     Syntax="UNSIGNED32"
     Descr="The value of last session statistics(Usage:piece  Rate/TryRate:piece/s)."
  6: hh3cSessionCurrentStat
     Syntax="UNSIGNED32"
     Descr="The value of current session statistics(Usage:piece  Rate/TryRate:piece/s)."
EDESC
#
#
#
#
MIB: HH3C-SLBG-MIB (file:./hh3c-slbg.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SMLK-MIB (file:./hh3c-smlk.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSmlkGroupLinkActive .1.3.6.1.4.1.25506.2.147.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A trap message is generated when the status of a port $*
SDESC
A trap message is generated when the status of a port
in a smart link group changes to active.
Variables:
  1: hh3cSmlkGroupID
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the smart link
        group table."
  2: hh3cSmlkPortIfIndex
     Syntax="INTEGER32"
     Descr="IfIndex of a port in a smart link group."
EDESC
#
#
#
#
MIB: HH3C-SNA-DLSW-EXT-MIB (file:./hh3c-sna-dlsw-ext.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SNA-DLSW-MIB (file:./hh3c-sna-dlsw.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cdlswTrapTConnPartnerReject .1.3.6.1.4.1.25506.8.37.8.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent each time a transport connection $*
SDESC
This trap is sent each time a transport connection
is rejected by a partner DLSw during Capabilities
Exchanges.  The emission of this trap is controlled
by hh3cdlswTrapCntlCircuit.
Variables:
  1: hh3cdlswRemotePeerAddr
     Syntax="IPADDR"
     Descr="The remote peer address for this transport connection. "
EDESC
#
#
#
EVENT hh3cdlswTrapTConnChangeState .1.3.6.1.4.1.25506.8.37.8.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent each time a transport connection $*
SDESC
This trap is sent each time a transport connection
changes state.  The emission of this trap
is controlled by hh3cdlswTrapCntlTConn.
Variables:
  1: hh3cdlswRemotePeerAddr
     Syntax="IPADDR"
     Descr="The remote peer address for this transport connection. "
  2: hh3cdlswRemotePeerLinkState
     Syntax="INTEGER"
       1: connecting
       2: initCapExchange
       3: connected
       4: quiescing
       5: disconnecting
       6: disconnected
     Descr="The state of this tcp transport connection. "
EDESC
#
#
#
EVENT hh3cdlswTrapCircuitChangeState .1.3.6.1.4.1.25506.8.37.8.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent each time a circuit change $*
SDESC
This trap is sent each time a circuit change
state.  The emission of this trap is controlled by
hh3cdlswTrapCntlCircuit.
Variables:
  1: hh3cdlswCircuitS1CircuitId
     Syntax="INTEGER"
     Descr="The Circuit ID assigned by this DLSw node to this circuit.
        The first four octets are the DLC port Id, and
        the second four octets are the Data Link Correlator.
        If the DLSw SSP was not used to establish this circuit,
        the value will be a string of zero length."
  2: hh3cdlswCircuitState
     Syntax="INTEGER"
       1: disconnected
       10: haltPending
       11: haltPendingNoack
       12: circuitRestart
       13: restartPending
       2: circuitStart
       3: resolvePending
       4: circuitPending
       5: circuitEstablished
       6: connectPending
       7: contactPending
       8: connected
       9: disconnectPending
     Descr="The current state of this circuit.  The agent, implementation
        specific, may choose to keep entries for some period of time
        after circuit disconnect, so the manager can gather the time
        and cause of disconnection.

        While all of the specified values may be returned from a GET
        operation, the only SETable value is `disconnectPending'.
        When this value is set, DLSw should perform the appropriate
        action given its previous state (e.g., send HALT_DL if the
        state was `connected') to bring the circuit down to the
        `disconnected' state.  Both the partner DLSw and local end
        station(s) should be notified as appropriate.

        This MIB provides no facility to re-establish a disconnected
        circuit, because in DLSw this should be an end station-driven
        function."
  3: hh3cdlswCircuitS1Mac
     Syntax="OCTETSTR"
     Descr="The MAC Address of End Station 1 (S1) used for this circuit."
  4: hh3cdlswCircuitS1Sap
     Syntax="OCTETSTR"
     Descr="The SAP at End Station 1 (S1) used for this circuit."
  5: hh3cdlswCircuitS2Mac
     Syntax="OCTETSTR"
     Descr="The MAC Address of End Station 2 (S2) used for this circuit."
  6: hh3cdlswCircuitS2Sap
     Syntax="OCTETSTR"
     Descr="The SAP at End Station 2 (S2) used for this circuit."
EDESC
#
#
#
#
MIB: HH3C-SNMP-EXT-MIB (file:./hh3c-snmp-ext.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SPB-MIB (file:./hh3c-spb.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSpbSPSourceConflictTrap .1.3.6.1.4.1.25506.2.128.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the SPSourceID is conflict $*
SDESC
This notification will be generated when the SPSourceID is conflict
with another bridge.
Variables:
  1: hh3cSpbConflictSysID
     Syntax="OCTETSTR"
     Descr="The bridge's SPSourceID is conflict with this bridge."
  2: hh3cSpbConflictSPSourceID
     Syntax=""
     Descr="The Shortest Path Source Identifier which is conflict."
EDESC
#
#
#
EVENT hh3cSpbBMacConflictTrap .1.3.6.1.4.1.25506.2.128.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the BMAC is conflict $*
SDESC
This notification will be generated when the BMAC is conflict
with another bridge.
Variables:
  1: hh3cSpbConflictSysID
     Syntax="OCTETSTR"
     Descr="The bridge's SPSourceID is conflict with this bridge."
  2: hh3cSpbConflictBMac
     Syntax="OCTETSTR"
     Descr="The BMAC which is conflict."
EDESC
#
#
#
#
MIB: HH3C-LswARP-MIB (file:./hh3c-splat-arp.mib) converted on Fri Mar 18 21:59:39 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswDEVM-MIB (file:./hh3c-splat-devm.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswDHCP-MIB (file:./hh3c-splat-dhcp.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswIGSP-MIB (file:./hh3c-splat-igsp.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswINF-MIB (file:./hh3c-splat-inf.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswMAM-MIB (file:./hh3c-splat-mam.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswMix-MIB (file:./hh3c-splat-mix.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSlaveSwitchOver .1.3.6.1.4.1.25506.8.35.17.10.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSlaveSwitchOver trap signifies that the action of $*
SDESC
An hh3cSlaveSwitchOver trap signifies that the action of
standby mpu switching to master has completed. 
EDESC
#
#
#
#
MIB: HH3C-LswMSTP-MIB (file:./hh3c-splat-mstp.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPortMstiStateForwarding .1.3.6.1.4.1.25506.8.35.14.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when a port turns into $*
SDESC
The SNMP trap that is generated when a port turns into
forwarding state form other state.
Variables:
  1: hh3cdot1sInstanceID
     Syntax="INTEGER32"
     Descr="Multiple spanning-tree instance Identifier"
  2: hh3cdot1sMstiPortIndex
     Syntax="INTEGER32"
     Descr="The index of the Bridge Port"
EDESC
#
#
#
EVENT hh3cPortMstiStateDiscarding .1.3.6.1.4.1.25506.8.35.14.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when a port turns into $*
SDESC
The SNMP trap that is generated when a port turns into
discarding state form forwarding state.
Variables:
  1: hh3cdot1sInstanceID
     Syntax="INTEGER32"
     Descr="Multiple spanning-tree instance Identifier"
  2: hh3cdot1sMstiPortIndex
     Syntax="INTEGER32"
     Descr="The index of the Bridge Port"
EDESC
#
#
#
EVENT hh3cBridgeLostRootPrimary .1.3.6.1.4.1.25506.8.35.14.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when the bridge is no longer $*
SDESC
The SNMP trap that is generated when the bridge is no longer
the root bridge of the instance.  Another switch with higher
priority has already been the root bridge of the instance.
Variables:
  1: hh3cdot1sInstanceID
     Syntax="INTEGER32"
     Descr="Multiple spanning-tree instance Identifier"
EDESC
#
#
#
EVENT hh3cPortMstiRootGuarded .1.3.6.1.4.1.25506.8.35.14.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when a root-guard port $*
SDESC
The SNMP trap that is generated when a root-guard port
receives a superior message on the relevant instance.
Variables:
  1: hh3cdot1sInstanceID
     Syntax="INTEGER32"
     Descr="Multiple spanning-tree instance Identifier"
  2: hh3cdot1sMstiPortIndex
     Syntax="INTEGER32"
     Descr="The index of the Bridge Port"
EDESC
#
#
#
EVENT hh3cPortMstiBpduGuarded .1.3.6.1.4.1.25506.8.35.14.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap is generated when an edged port of the BPDU-guard $*
SDESC
The SNMP trap is generated when an edged port of the BPDU-guard
device receives a BPDU.  If the designated bridge ID can't be obtained
from the BPDU, the designated bridge ID will be zero.
Variables:
  1: dot1dStpPort
     Syntax="INTEGER32"
     Descr="The port number of the port for which this entry
        contains Spanning Tree Protocol management information."
  2: hh3cdot1sMstiDesignatedBridge
     Syntax="OCTETSTR"
     Descr="The Bridge Identifier of the bridge which this port considers to
        be the Designated Bridge for this port's segment."
EDESC
#
#
#
EVENT hh3cPortMstiLoopGuarded .1.3.6.1.4.1.25506.8.35.14.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an Alternate-Port $*
SDESC
The SNMP trap that is generated when an Alternate-Port
or Root-Port is aged out.
Variables:
  1: hh3cdot1sInstanceID
     Syntax="INTEGER32"
     Descr="Multiple spanning-tree instance Identifier"
  2: hh3cdot1sMstiPortIndex
     Syntax="INTEGER32"
     Descr="The index of the Bridge Port"
EDESC
#
#
#
EVENT hh3cMstiNewRoot .1.3.6.1.4.1.25506.8.35.14.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap is generated when the sending device becomes the new $*
SDESC
The SNMP trap is generated when the sending device becomes the new
root of the spanning tree.  The first root bridge ID means the
old root bridge ID, and the second one means the new root bridge ID.
Variables:
  1: hh3cdot1sInstanceID
     Syntax="INTEGER32"
     Descr="Multiple spanning-tree instance Identifier"
  2: hh3cdot1sMstiDesignedRoot
     Syntax="OCTETSTR"
     Descr="The Bridge Identifier of the Root Bridge for the spanning
        tree instance identified by MSTID"
  3: hh3cdot1sMstiDesignedRoot
     Syntax="OCTETSTR"
     Descr="The Bridge Identifier of the Root Bridge for the spanning
        tree instance identified by MSTID"
EDESC
#
#
#
EVENT hh3cPortPvstBpduProtection .1.3.6.1.4.1.25506.8.35.14.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap is generated when a PVST BPDU is received on an MSTP port $*
SDESC
The SNMP trap is generated when a PVST BPDU is received on an MSTP port
that is enabled with the PVST protection feature.  If the designated
bridge ID can't be obtained from the BPDU, the designated bridge ID
will be zero.
Variables:
  1: dot1dStpPort
     Syntax="INTEGER32"
     Descr="The port number of the port for which this entry
        contains Spanning Tree Protocol management information."
  2: hh3cdot1sMstiDesignatedBridge
     Syntax="OCTETSTR"
     Descr="The Bridge Identifier of the bridge which this port considers to
        be the Designated Bridge for this port's segment."
EDESC
#
#
#
#
MIB: HH3C-LswQos-MIB (file:./hh3c-splat-qos.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswRSTP-MIB (file:./hh3c-splat-rstp.mib) converted on Fri Mar 18 21:59:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRstpBpduGuarded .1.3.6.1.4.1.25506.8.35.6.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an edged port of the BPDU-guard switch recevies BPDU packets. $*
SDESC
The SNMP trap that is generated when an edged port of the BPDU-guard switch recevies BPDU packets.
Variables:
  1: dot1dStpPort
     Syntax="INTEGER32"
     Descr="The port number of the port for which this entry
        contains Spanning Tree Protocol management information."
EDESC
#
#
#
EVENT hh3cRstpRootGuarded .1.3.6.1.4.1.25506.8.35.6.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when a root-guard port receives a superior bpdu. $*
SDESC
The SNMP trap that is generated when a root-guard port receives a superior bpdu.
Variables:
  1: dot1dStpPort
     Syntax="INTEGER32"
     Descr="The port number of the port for which this entry
        contains Spanning Tree Protocol management information."
EDESC
#
#
#
EVENT hh3cRstpBridgeLostRootPrimary .1.3.6.1.4.1.25506.8.35.6.1.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when the bridge is no longer the root bridge of the spanning tree. $*
SDESC
The SNMP trap that is generated when the bridge is no longer the root bridge of the spanning tree.
Another switch with higher priority has already been the root bridge. 
EDESC
#
#
#
EVENT hh3cRstpLoopGuarded .1.3.6.1.4.1.25506.8.35.6.1.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when a loop-guard port is aged out . $*
SDESC
The SNMP trap that is generated when a loop-guard port is aged out .
Variables:
  1: dot1dStpPort
     Syntax="INTEGER32"
     Descr="The port number of the port for which this entry
        contains Spanning Tree Protocol management information."
EDESC
#
#
#
#
MIB: HH3C-LswSMON-MIB (file:./hh3c-splat-smonext.mib) converted on Fri Mar 18 21:59:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswTRAP-MIB (file:./hh3c-splat-trap.mib) converted on Fri Mar 18 21:59:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpowerfailure .1.3.6.1.4.1.25506.8.35.12.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Power supply failure $*
SDESC
Power supply failure
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
  2: hh3cDevMFirstTrapTime
     Syntax=""
EDESC
#
#
#
EVENT hh3cPowerNormal .1.3.6.1.4.1.25506.8.35.12.1.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Power supply normal $*
SDESC
Power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
  2: hh3cDevMFirstTrapTime
     Syntax=""
EDESC
#
#
#
EVENT hh3cMasterPowerNormal .1.3.6.1.4.1.25506.8.35.12.1.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Master power supply normal $*
SDESC
Master power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cSlavePowerNormal .1.3.6.1.4.1.25506.8.35.12.1.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Slave power supply normal $*
SDESC
Slave power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cPowerRemoved .1.3.6.1.4.1.25506.8.35.12.1.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Power removed $*
SDESC
Power removed
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cfanfailure .1.3.6.1.4.1.25506.8.35.12.1.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Fan failure $*
SDESC
Fan failure
Variables:
  1: hh3cDevMFanNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cFanNormal .1.3.6.1.4.1.25506.8.35.12.1.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Fan normal $*
SDESC
Fan normal
Variables:
  1: hh3cDevMFanNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardRemoved .1.3.6.1.4.1.25506.8.35.12.1.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Board removed $*
SDESC
Board removed
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardInserted .1.3.6.1.4.1.25506.8.35.12.1.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Board inserted $*
SDESC
Board inserted
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardFailure .1.3.6.1.4.1.25506.8.35.12.1.10 "Status Events" Normal
FORMAT ZBXTRAP $aA Board failed $*
SDESC
Board failed
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardNormal .1.3.6.1.4.1.25506.8.35.12.1.11 "Status Events" Normal
FORMAT ZBXTRAP $aA Board normal $*
SDESC
Board normal
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cSubcardRemove .1.3.6.1.4.1.25506.8.35.12.1.12 "Status Events" Normal
FORMAT ZBXTRAP $aA Sub card removed $*
SDESC
Sub card removed
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswSubslotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cSubcardInsert .1.3.6.1.4.1.25506.8.35.12.1.13 "Status Events" Normal
FORMAT ZBXTRAP $aA Sub card inserted $*
SDESC
Sub card inserted
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswSubslotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardTemperatureLower .1.3.6.1.4.1.25506.8.35.12.1.14 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature low $*
SDESC
Board temperature low
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardTemperatureFromLowerToNormal .1.3.6.1.4.1.25506.8.35.12.1.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature form lower to normal $*
SDESC
Board temperature form lower to normal
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardTemperatureHigher .1.3.6.1.4.1.25506.8.35.12.1.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature high $*
SDESC
Board temperature high
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardTemperatureFormHigherToNormal .1.3.6.1.4.1.25506.8.35.12.1.17 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature from higher to normal $*
SDESC
Board temperature from higher to normal
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cRequestLoading .1.3.6.1.4.1.25506.8.35.12.1.18 "Status Events" Normal
FORMAT ZBXTRAP $aA Board request load $*
SDESC
Board request load
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cLoadFailure .1.3.6.1.4.1.25506.8.35.12.1.19 "Status Events" Normal
FORMAT ZBXTRAP $aA Board load failure $*
SDESC
Board load failure
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cLoadFinished .1.3.6.1.4.1.25506.8.35.12.1.20 "Status Events" Normal
FORMAT ZBXTRAP $aA Board load finished $*
SDESC
Board load finished
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBackBoardModeSetFuilure .1.3.6.1.4.1.25506.8.35.12.1.21 "Status Events" Normal
FORMAT ZBXTRAP $aA Back board mode set failure $*
SDESC
Back board mode set failure
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cBackBoardModeSetOK .1.3.6.1.4.1.25506.8.35.12.1.22 "Status Events" Normal
FORMAT ZBXTRAP $aA Back board mode set OK $*
SDESC
Back board mode set OK
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cPowerInserted .1.3.6.1.4.1.25506.8.35.12.1.23 "Status Events" Normal
FORMAT ZBXTRAP $aA Power inserted $*
SDESC
Power inserted
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cBootImageUpdated .1.3.6.1.4.1.25506.8.35.12.1.24 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap node indicates that the boot image of specified board $*
SDESC
This trap node indicates that the boot image of specified board
is updated.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cCpuRemoved .1.3.6.1.4.1.25506.8.35.12.1.25 "Status Events" Normal
FORMAT ZBXTRAP $aA Node removed $*
SDESC
Node removed
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cCpuFailure .1.3.6.1.4.1.25506.8.35.12.1.26 "Status Events" Normal
FORMAT ZBXTRAP $aA Node failed $*
SDESC
Node failed
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cCpuNormal .1.3.6.1.4.1.25506.8.35.12.1.27 "Status Events" Normal
FORMAT ZBXTRAP $aA Node normal $*
SDESC
Node normal
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
EDESC
#
#
#
EVENT hh3cPowerIncompatible .1.3.6.1.4.1.25506.8.35.12.1.28 "Status Events" Normal
FORMAT ZBXTRAP $aA Power module is incompatible with the device $*
SDESC
Power module is incompatible with the device
Variables:
  1: hh3cDevMPowerNum
     Syntax=""
EDESC
#
#
#
EVENT hh3cCpuUsageSevereNotification .1.3.6.1.4.1.25506.8.35.12.1.29 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the CPU usage increased to or above $*
SDESC
The trap indicates that the CPU usage increased to or above
the hh3cLswCpuUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuRatio
     Syntax=""
  5: hh3cLswCpuUsageMinorThreshold
     Syntax=""
  6: hh3cLswCpuUsageSevereThreshold
     Syntax=""
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax=""
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageSevereRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.30 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product does not support hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageSevereThreshold.
When the product supports hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageMinorThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuRatio
     Syntax=""
  5: hh3cLswCpuUsageMinorThreshold
     Syntax=""
  6: hh3cLswCpuUsageSevereThreshold
     Syntax=""
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax=""
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.1.31 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the CPU usage increased to or above $*
SDESC
The trap indicates that the CPU usage increased to or above
the hh3cLswCpuUsageMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuRatio
     Syntax=""
  5: hh3cLswCpuUsageMinorThreshold
     Syntax=""
  6: hh3cLswCpuUsageSevereThreshold
     Syntax=""
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax=""
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageMinorRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.32 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product dose not support hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageMinorThreshold.
When the product supports hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageRecoverThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuRatio
     Syntax=""
  5: hh3cLswCpuUsageMinorThreshold
     Syntax=""
  6: hh3cLswCpuUsageSevereThreshold
     Syntax=""
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax=""
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageEarlyWarningNotification .1.3.6.1.4.1.25506.8.35.12.1.33 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageEarlyWarningThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageEarlyWarningRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.34 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageSecureThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.1.35 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cLswCpuMemoryMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageMinorRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.36 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cLswCpuMemoryNormalThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageSevereNotification .1.3.6.1.4.1.25506.8.35.12.1.37 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageSevereRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.38 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageCriticalNotification .1.3.6.1.4.1.25506.8.35.12.1.39 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageCriticalThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageCriticalRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.40 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCpuMemory
     Syntax=""
  5: hh3cLswCpuMemoryFree
     Syntax=""
  6: hh3cLswCpuMemoryFreeRatio
     Syntax=""
  7: hh3cLswCpuMemoryHighTotal
     Syntax=""
  8: hh3cLswCpuMemoryHighFree
     Syntax=""
  9: hh3cLswCpuMemoryLowTotal
     Syntax=""
 10: hh3cLswCpuMemoryLowFree
     Syntax=""
 11: hh3cLswCpuMemorySecureThreshold
     Syntax=""
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax=""
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax=""
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax=""
 15: hh3cLswCpuMemorySevereThreshold
     Syntax=""
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax=""
 17: hh3cLswCpuMemoryCurrentState
     Syntax=""
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cCoreUsageNotification .1.3.6.1.4.1.25506.8.35.12.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of core usage increased to or above $*
SDESC
The trap indicates that the amount of core usage increased to or above
the hh3cLswCoreThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCoreIndex
     Syntax=""
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax=""
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax=""
 10: hh3cLswCoreRecoveryThreshold
     Syntax=""
EDESC
#
#
#
EVENT hh3cBoardPowerNotEnough .1.3.6.1.4.1.25506.8.35.12.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Not enough power for the board. $*
SDESC
Not enough power for the board.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cBoardAvailablePower
     Syntax="INTEGER32"
     Descr="Available power of power supply."
  4: hh3cBoardRequiredPower
     Syntax="INTEGER32"
     Descr="Power required for a single board."
EDESC
#
#
#
EVENT hh3cAlarmInPortIn .1.3.6.1.4.1.25506.8.35.12.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm reported on the alarm-in port. $*
SDESC
Alarm reported on the alarm-in port.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswAlarmInPortInNum
     Syntax="UNSIGNED32"
     Descr="Alarm-in port-in num."
EDESC
#
#
#
EVENT hh3cAlarmInPortRecover .1.3.6.1.4.1.25506.8.35.12.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm removed on the alarm-in port. $*
SDESC
Alarm removed on the alarm-in port.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswAlarmInPortInNum
     Syntax="UNSIGNED32"
     Descr="Alarm-in port-in num."
EDESC
#
#
#
EVENT hh3cCoreUsageSevereRecoveryNotification .1.3.6.1.4.1.25506.8.35.12.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product does not support hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreThreshold.
When the product supports hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreMinorThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCoreIndex
     Syntax=""
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax=""
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax=""
 10: hh3cLswCoreRecoveryThreshold
     Syntax=""
EDESC
#
#
#
EVENT hh3cCoreUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the core usage increased to or above $*
SDESC
The trap indicates that the core usage increased to or above
the hh3cLswCoreMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCoreIndex
     Syntax=""
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax=""
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax=""
 10: hh3cLswCoreRecoveryThreshold
     Syntax=""
EDESC
#
#
#
EVENT hh3cCoreUsageMinorRecoveryNotification .1.3.6.1.4.1.25506.8.35.12.3.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product does not support hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreMinorThreshold.
When the product supports hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreRecoveryThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cLswCoreIndex
     Syntax=""
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax=""
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax=""
 10: hh3cLswCoreRecoveryThreshold
     Syntax=""
EDESC
#
#
#
EVENT hh3cDMAMemoryUsageCriticalNotification .1.3.6.1.4.1.25506.8.35.12.3.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the free DMA-memory space decreased to or below $*
SDESC
The trap indicates that the free DMA-memory space decreased to or below
the critical alarm threshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cDMAMemoryTotal
     Syntax="COUNTER64"
     Descr="The total DMA-memory space on the node."
  5: hh3cDMAMemoryUsed
     Syntax="COUNTER64"
     Descr="The used DMA-memory space on the node."
  6: hh3cDMAMemoryFree
     Syntax="COUNTER64"
     Descr="The free memory space on the node."
  7: hh3cDMAMemoryCurrentState
     Syntax="INTEGER"
       1: normal
       2: critical
     Descr="Current status of free DMA-memory.

             Normal
             Critical"
  8: hh3cDMAMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free DMA-memory space on the node."
  9: hh3cDMAMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free DMA-memory,
             MB or percentage."
EDESC
#
#
#
EVENT hh3cDMAMemoryUsageRecoverNotification .1.3.6.1.4.1.25506.8.35.12.3.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the of free DMA-memory space increased to or above $*
SDESC
The trap indicates that the of free DMA-memory space increased to or above
the normal state threshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cLswSlotIndex
     Syntax=""
  3: hh3cLswCpuIndex
     Syntax=""
  4: hh3cDMAMemoryTotal
     Syntax="COUNTER64"
     Descr="The total DMA-memory space on the node."
  5: hh3cDMAMemoryUsed
     Syntax="COUNTER64"
     Descr="The used DMA-memory space on the node."
  6: hh3cDMAMemoryFree
     Syntax="COUNTER64"
     Descr="The free memory space on the node."
  7: hh3cDMAMemoryCurrentState
     Syntax="INTEGER"
       1: normal
       2: critical
     Descr="Current status of free DMA-memory.

             Normal
             Critical"
  8: hh3cDMAMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free DMA-memory space on the node."
  9: hh3cDMAMemoryRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free DMA-memory,
             MB or percentage.

             When the free DMA-memory space exceeds this threshold, a recovery notification will be sent.
             The normal state threshold cannot be smaller than the critical alarm threshold."
EDESC
#
#
#
EVENT hh3cRemainingPowerNotEnough .1.3.6.1.4.1.25506.8.35.12.3.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the remaining power of the chassis is not enouth. $*
SDESC
The trap indicates that the remaining power of the chassis is not enouth.
Variables:
  1: hh3cLswFrameIndex
     Syntax=""
  2: hh3cFrameRemainingPower
     Syntax="UNSIGNED32"
     Descr="Remaining power of the frame."
EDESC
#
#
#
#
MIB: HH3C-LswVLAN-MIB (file:./hh3c-splat-vlan.mib) converted on Fri Mar 18 21:59:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SRPOLICY-MIB (file:./hh3c-srpolicy.mib) converted on Fri Mar 18 21:59:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrpolicyStatusChange .1.3.6.1.4.1.25506.2.186.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrpolicyStatusChange trap signifies that there $*
SDESC
An hh3cSrpolicyStatusChange trap signifies that there
has been a change in the state of a policy.
This trap should be generated when the policy
state regresses (e.g., goes from active to Down)
or progresses to a terminal state
(i.e., down).
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyStatus
     Syntax="OCTETSTR"
     Descr="Status of the SR-TE policy."
  4: hh3cSrpolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicyBsidConflict .1.3.6.1.4.1.25506.2.186.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts. $*
SDESC
BSID conflicts.
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyBsid
     Syntax="INTEGER32"
     Descr="Bound segment ID value of the SR policy."
  4: hh3cSrpolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrpolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrpolicyBsidConflictClear .1.3.6.1.4.1.25506.2.186.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts resolved $*
SDESC
BSID conflicts resolved
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyBsid
     Syntax="INTEGER32"
     Descr="Bound segment ID value of the SR policy."
  4: hh3cSrpolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrpolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrpolicyDown .1.3.6.1.4.1.25506.2.186.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down $*
SDESC
Policy down
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicyDownClear .1.3.6.1.4.1.25506.2.186.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down cleared $*
SDESC
Policy down cleared
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
EDESC
#
#
#
EVENT hh3cSrpolicyPathDown .1.3.6.1.4.1.25506.2.186.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrpolicyPathDown trap signifies that there $*
SDESC
An hh3cSrpolicyPathDown trap signifies that there
has been a change in the state of a policy primary
or backup path.
Variables:
  1: hh3cSrpolicyPathColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE policy with certain intent."
  2: hh3cSrpolicyPathEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpolicyPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpolicyPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrpolicyPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpolicyPathPref
     Syntax="UNSIGNED32"
     Descr="The preference of the SR-TE policy candidate path."
  8: hh3cSrpolicyPathPreviousRole
     Syntax="OCTETSTR"
     Descr="The previous role of an SR-TE policy candidate path.
         The value may be primary or backup."
  9: hh3cSrpolicyPathDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy candidate path
         is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicySeglistDown .1.3.6.1.4.1.25506.2.186.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrpSeglistDown trap signifies that there $*
SDESC
An hh3cSrpSeglistDown trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrpSeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpSeglistEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpSeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpSeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpSeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or signalled
         the candidate path on the headend."
  6: hh3cSrpSeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpSeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrpSeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
  9: hh3cSrpSeglistDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why segment list is down."
EDESC
#
#
#
EVENT hh3cSrpolicySeglistDownClear .1.3.6.1.4.1.25506.2.186.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrSeglistDownClear trap signifies that there $*
SDESC
An hh3cSrSeglistDownClear trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrpSeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpSeglistEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpSeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpSeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpSeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or signalled
         the candidate path on the headend."
  6: hh3cSrpSeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpSeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrpSeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
EDESC
#
#
#
#
MIB: HH3C-SRV6-MIB (file:./hh3c-srv6.mib) converted on Fri Mar 18 21:59:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrv6SidRouteConflict .1.3.6.1.4.1.25506.2.197.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSrv6SidRouteConflict notification signifies that an $*
SDESC
A hh3cSrv6SidRouteConflict notification signifies that an
local SRv6 SID is conflicted with routes in routing table.
Variables:
  1: hh3cSrv6NotificationSid
     Syntax="OCTETSTR"
     Descr="The local SRv6 SID."
  2: hh3cSrv6NotificationSidPrefixLen
     Syntax="UNSIGNED32"
     Descr="The prefix length of the local SRv6 SID."
EDESC
#
#
#
EVENT hh3cSrv6SidRouteConflictClear .1.3.6.1.4.1.25506.2.197.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSrv6SidRouteConflictClear notification signifies that $*
SDESC
A hh3cSrv6SidRouteConflictClear notification signifies that
the conflict between the local SRv6 SID and routes in routing table
has been resolved.
Variables:
  1: hh3cSrv6NotificationSid
     Syntax="OCTETSTR"
     Descr="The local SRv6 SID."
  2: hh3cSrv6NotificationSidPrefixLen
     Syntax="UNSIGNED32"
     Descr="The prefix length of the local SRv6 SID."
EDESC
#
#
#
#
MIB: HH3C-SRV6POLICY-MIB (file:./hh3c-srv6policy.mib) converted on Fri Mar 18 21:59:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrv6PolicyStatusChange .1.3.6.1.4.1.25506.2.189.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6PolicyStatusChange trap signifies that there $*
SDESC
An hh3cSrv6PolicyStatusChange trap signifies that there
has been a change in the state of a policy.
This trap should be generated when the policy
state regresses (e.g., goes from active to Down)
or progresses to a terminal state
(i.e., down).
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyStatus
     Syntax="OCTETSTR"
     Descr="Status of the SRv6-TE policy."
  4: hh3cSrv6PolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicyBsidConflict .1.3.6.1.4.1.25506.2.189.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts. $*
SDESC
BSID conflicts.
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyBsid
     Syntax="OCTETSTR"
     Descr="Binding segment ID value of the SRv6-TE policy."
  4: hh3cSrv6PolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrv6PolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrv6PolicyBsidConflictClear .1.3.6.1.4.1.25506.2.189.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts resolved $*
SDESC
BSID conflicts resolved
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyBsid
     Syntax="OCTETSTR"
     Descr="Binding segment ID value of the SRv6-TE policy."
  4: hh3cSrv6PolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrv6PolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrv6PolicyDown .1.3.6.1.4.1.25506.2.189.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down $*
SDESC
Policy down
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicyDownClear .1.3.6.1.4.1.25506.2.189.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down cleared $*
SDESC
Policy down cleared
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
EDESC
#
#
#
EVENT hh3cSrv6PolicyResExdUppLimit .1.3.6.1.4.1.25506.2.189.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of used SRv6-TE policy resources exceeded the upper $*
SDESC
The number of used SRv6-TE policy resources exceeded the upper
threshold.
Variables:
  1: hh3cSrv6PolicyResourceType
     Syntax="INTEGER"
       1: unknown
       2: srv6Policy
       3: srv6PolicySegmentList
       4: srv6PolicyGroup
       5: srv6PolicyFwdPath
     Descr="SRv6-TE policy resource type."
  2: hh3cSrv6PolicyResCurrentCnt
     Syntax="UNSIGNED32"
     Descr="Number of used SRv6-TE policy resources."
  3: hh3cSrv6PolicyResUpperLimit
     Syntax="UNSIGNED32"
     Descr="The upper threshold of SRv6-TE policy resources."
  4: hh3cSrv6PolicyResLowerLimit
     Syntax="UNSIGNED32"
     Descr="The lower threshold of SRv6-TE policy resources."
  5: hh3cSrv6PolicyResourceTotalCnt
     Syntax="UNSIGNED32"
     Descr="The maximum number of SRv6-TE policy resources
         that can be used."
EDESC
#
#
#
EVENT hh3cSrv6PolicyResExceedClear .1.3.6.1.4.1.25506.2.189.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of used SRv6-TE policy resources fell below the lower $*
SDESC
The number of used SRv6-TE policy resources fell below the lower
threshold.
Variables:
  1: hh3cSrv6PolicyResourceType
     Syntax="INTEGER"
       1: unknown
       2: srv6Policy
       3: srv6PolicySegmentList
       4: srv6PolicyGroup
       5: srv6PolicyFwdPath
     Descr="SRv6-TE policy resource type."
  2: hh3cSrv6PolicyResCurrentCnt
     Syntax="UNSIGNED32"
     Descr="Number of used SRv6-TE policy resources."
  3: hh3cSrv6PolicyResUpperLimit
     Syntax="UNSIGNED32"
     Descr="The upper threshold of SRv6-TE policy resources."
  4: hh3cSrv6PolicyResLowerLimit
     Syntax="UNSIGNED32"
     Descr="The lower threshold of SRv6-TE policy resources."
  5: hh3cSrv6PolicyResourceTotalCnt
     Syntax="UNSIGNED32"
     Descr="The maximum number of SRv6-TE policy resources
         that can be used."
EDESC
#
#
#
EVENT hh3cSrv6PathDown .1.3.6.1.4.1.25506.2.189.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6PathDown trap signifies that there $*
SDESC
An hh3cSrv6PathDown trap signifies that there
has been a change in the state of a policy primary
or backup path.
Variables:
  1: hh3cSrv6PolicyPathColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyPathEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicyPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicyPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicyPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicyPathPref
     Syntax="UNSIGNED32"
     Descr="The preference of the SRv6-TE policy candidate path."
  8: hh3cSrv6PolicyPathPreviousRole
     Syntax="OCTETSTR"
     Descr="The previous role of an SRv6-TE policy candidate path.
         The value may be primary or backup."
  9: hh3cSrv6PolicyPathDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy candidate path
         is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicySeglistDown .1.3.6.1.4.1.25506.2.189.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6PolicySeglistDown trap signifies that there $*
SDESC
An hh3cSrv6PolicySeglistDown trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrv6PolicySeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicySeglistEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicySeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicySeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a BGP instance number when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicySeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicySeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicySeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrv6PolicySeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
  9: hh3cSrv6PolicySeglistDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why segment list is down."
EDESC
#
#
#
EVENT hh3cSrv6SeglistDownClear .1.3.6.1.4.1.25506.2.189.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6SeglistDownClear trap signifies that there $*
SDESC
An hh3cSrv6SeglistDownClear trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrv6PolicySeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicySeglistEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicySeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicySeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a BGP instance number when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicySeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicySeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicySeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrv6PolicySeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
EDESC
#
#
#
#
MIB: HH3C-SSH-MIB (file:./hh3c-ssh.mib) converted on Fri Mar 18 21:59:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSSHUserAuthFailure .1.3.6.1.4.1.25506.2.22.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user fails to authentication. $*
SDESC
The trap is generated when a user fails to authentication.
Variables:
  1: hh3cSSHAttemptUserName
     Syntax="OCTETSTR"
     Descr="The user name of the attacker who attempted to log in."
  2: hh3cSSHAttemptIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the attacker who attempted to log in."
  3: hh3cSSHAttemptIpAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the attacker who attempted to log in."
  4: hh3cSSHUserAuthFailureReason
     Syntax="INTEGER"
       1: exceedRetries
       2: authTimeout
       3: otherReason
     Descr="The reason for that a user failed to log in."
EDESC
#
#
#
EVENT hh3cSSHVersionNegotiationFailure .1.3.6.1.4.1.25506.2.22.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user fails to negotiate SSH $*
SDESC
The trap is generated when a user fails to negotiate SSH
protocol version.
Variables:
  1: hh3cSSHAttemptIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the attacker who attempted to log in."
  2: hh3cSSHAttemptIpAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the attacker who attempted to log in."
EDESC
#
#
#
EVENT hh3cSSHUserLogin .1.3.6.1.4.1.25506.2.22.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user logs in successfully. $*
SDESC
The trap is generated when a user logs in successfully.
Variables:
  1: hh3cSSHSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of SSH session."
  2: hh3cSSHSessionUserIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The user IP address type of SSH session."
  3: hh3cSSHSessionUserIpAddr
     Syntax="OCTETSTR"
     Descr="The user IP address of SSH session."
EDESC
#
#
#
EVENT hh3cSSHUserLogoff .1.3.6.1.4.1.25506.2.22.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user logs off. user $1 userIp $3 userIpType $2
SDESC
The trap is generated when a user logs off.
Variables:
  1: hh3cSSHSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of SSH session."
  2: hh3cSSHSessionUserIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The user IP address type of SSH session."
  3: hh3cSSHSessionUserIpAddr
     Syntax="OCTETSTR"
     Descr="The user IP address of SSH session."
EDESC
#
#
#
#
MIB: HH3C-SSLVPN-MIB (file:./hh3c-sslvpn.mib) converted on Fri Mar 18 21:59:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STACK-MIB (file:./hh3c-stack.mib) converted on Fri Mar 18 21:59:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStackPortLinkStatusChange .1.3.6.1.4.1.25506.2.91.6.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPortLinkStatusChange trap indicates that the link status $*
SDESC
The hh3cStackPortLinkStatusChange trap indicates that the link status
of the stack port has changed.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPortStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: silent
       4: disabled
     Descr="The link status of a stack port on the device.

        up: A physical link is present on the stack port.
        down: No physical link is present on the stack port.
        silent: The link state of the stack port is up,
                but the port can't transmit or receive traffic.
        disabled: The stack port doesn't contain physical links."
EDESC
#
#
#
EVENT hh3cStackTopologyChange .1.3.6.1.4.1.25506.2.91.6.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackTopologyChange trap indicates that the topology type of $*
SDESC
The hh3cStackTopologyChange trap indicates that the topology type of
the IRF stack has changed.
Variables:
  1: hh3cStackTopology
     Syntax="INTEGER"
       1: chainConn
       2: ringConn
     Descr="Stack topology.

        chainConn: daisy-chain connection
        ringConn: ring connection"
EDESC
#
#
#
EVENT hh3cStackMadBfdChangeNormal .1.3.6.1.4.1.25506.2.91.6.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadBfdChangeNormal trap indicates that the BFD MAD function $*
SDESC
The hh3cStackMadBfdChangeNormal trap indicates that the BFD MAD function
changed to the normal state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadBfdChangeFailure .1.3.6.1.4.1.25506.2.91.6.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadBfdChangeFailure trap indicates that the BFD MAD function $*
SDESC
The hh3cStackMadBfdChangeFailure trap indicates that the BFD MAD function
changed to the failure state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadLacpChangeNormal .1.3.6.1.4.1.25506.2.91.6.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadLacpChangeNormal trap indicates that the LACP MAD function $*
SDESC
The hh3cStackMadLacpChangeNormal trap indicates that the LACP MAD function
changed to the normal state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadLacpChangeFailure .1.3.6.1.4.1.25506.2.91.6.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadLacpChangeFailure trap indicates that the LACP MAD function $*
SDESC
The hh3cStackMadLacpChangeFailure trap indicates that the LACP MAD function
changed to the failure state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfLinkUp .1.3.6.1.4.1.25506.2.91.6.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPhysicalIntfLinkUp trap indicates that the status $*
SDESC
The hh3cStackPhysicalIntfLinkUp trap indicates that the status
of the stack physical interface has changed to the up state.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfLinkDown .1.3.6.1.4.1.25506.2.91.6.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPhysicalIntfLinkDown trap indicates that the status $*
SDESC
The hh3cStackPhysicalIntfLinkDown trap indicates that the status
of the stack physical interface has changed to the down state.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfRxTimeout .1.3.6.1.4.1.25506.2.91.6.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPhysicalIntfRxTimeout trap indicates that the timer for the stack $*
SDESC
The hh3cStackPhysicalIntfRxTimeout trap indicates that the timer for the stack
physical interface to receive packets has timed out.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
#
MIB: HH3C-STORAGE-MIB (file:./hh3c-storage.mib) converted on Fri Mar 18 21:59:43 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORAGE-REF-MIB (file:./hh3c-storage-ref.mib) converted on Fri Mar 18 21:59:43 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORAGE-SNAP-MIB (file:./hh3c-storage-snap.mib) converted on Fri Mar 18 21:59:43 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORM-CONSTRAIN-MIB (file:./hh3c-storm-constrain.mib) converted on Fri Mar 18 21:59:43 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStormRising .1.3.6.1.4.1.25506.2.66.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap message is generated when any type of the $*
SDESC
This trap message is generated when any type of the
flux exceeds its upper limit on a port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cStormTrapType
     Syntax="INTEGER"
       1: broadcast
       2: multicast
       3: unicast
       4: knownUnicast
     Descr="This value is used to identify the type of trap.
         broadcast: Trap message generated when broadcast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         multicast: Trap message generated when multicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         unicast  : Trap message generated when unknown unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         knownUnicast: Trap message generated when known unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port."
  3: hh3cStormTrapThreshold
     Syntax="INTEGER32"
     Descr="This value is used to figure the threshold of flux in
         trap message.
         For example, when the trap is generated for broadcast
         flux exceeds upper limit on a port, this value is
         equal to upper limit value configured.  And when the
         trap is generated for broadcast flux fell under lower
         limit, this value is equal to lower limit value configured."
  4: hh3cStormCtrlPortStatus
     Syntax="INTEGER"
       1: controlled
       2: normal
     Descr="Status of the port:
         controlled: indicate that the port is in controlled status.
                     Port which is in this status will not forward some type
                     of packet.
         normal    : indicate that the port is in normal status."
EDESC
#
#
#
EVENT hh3cStormFalling .1.3.6.1.4.1.25506.2.66.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap message is generated when a flux which used $*
SDESC
This trap message is generated when a flux which used
to overflow its upper limit, falls below its lower
limit on a port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cStormTrapType
     Syntax="INTEGER"
       1: broadcast
       2: multicast
       3: unicast
       4: knownUnicast
     Descr="This value is used to identify the type of trap.
         broadcast: Trap message generated when broadcast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         multicast: Trap message generated when multicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         unicast  : Trap message generated when unknown unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         knownUnicast: Trap message generated when known unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port."
  3: hh3cStormTrapThreshold
     Syntax="INTEGER32"
     Descr="This value is used to figure the threshold of flux in
         trap message.
         For example, when the trap is generated for broadcast
         flux exceeds upper limit on a port, this value is
         equal to upper limit value configured.  And when the
         trap is generated for broadcast flux fell under lower
         limit, this value is equal to lower limit value configured."
  4: hh3cStormCtrlPortStatus
     Syntax="INTEGER"
       1: controlled
       2: normal
     Descr="Status of the port:
         controlled: indicate that the port is in controlled status.
                     Port which is in this status will not forward some type
                     of packet.
         normal    : indicate that the port is in normal status."
EDESC
#
#
#
#
MIB: HH3C-STRUNK-MIB (file:./hh3c-strunk.mib) converted on Fri Mar 18 21:59:43 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStrunkMemberStatusChange .1.3.6.1.4.1.25506.2.208.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that S-Trunk member role changed. $*
SDESC
This trap indicates that S-Trunk member role changed.
Variables:
  1: hh3cStrunkMemberType
     Syntax="INTEGER"
       1: bagg
       2: ragg
     Descr="The member type of the S-Trunk.
        bagg: The bridge aggregation type.
        ragg: The route aggregation type."
  2: hh3cStrunkMemberId
     Syntax="INTEGER32"
     Descr="The member id of the S-Trunk."
  3: hh3cStrunkMemberStatus
     Syntax="INTEGER"
       1: primary
       2: secondary
     Descr="The status of the S-Trunk.
        primary: The S-Trunk member is primary role.
        secondary: The S-Trunk member is secondary role."
  4: hh3cStrunkMemberReason
     Syntax="OCTETSTR"
     Descr=" The S-Trunk member change reason."
EDESC
#
#
#
EVENT hh3cStrunkStatusChange .1.3.6.1.4.1.25506.2.208.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that S-Trunk Group role changed. $*
SDESC
This trap indicates that S-Trunk Group role changed.
Variables:
  1: hh3cStrunkGroupId
     Syntax="INTEGER32"
     Descr=" The group id of the S-Trunk."
  2: hh3cStrunkGroupStatus
     Syntax="INTEGER"
       1: init
       2: primary
       3: secondary
     Descr="The group status of the S-Trunk.
        init: The S-Trunk group is primary role.
        primary: The S-Trunk group is primary role.
        secondary: The S-Trunk group is secondary role."
  3: hh3cStrunkGroupReason
     Syntax="OCTETSTR"
     Descr=" The S-Trunk group change reason."
EDESC
#
#
#
#
MIB: HH3C-SUBNET-VLAN-MIB (file:./hh3c-subnet-vlan.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SYSLOG-MIB (file:./hh3c-syslog.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SYS-MAN-MIB (file:./hh3c-sys-man.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSysClockChangedNotification .1.3.6.1.4.1.25506.2.3.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A clock changed notification is generated when the current
local date and time for the system has been manually changed.
The value of hh3cSysLocalClock reflects new date and time.

Variables:
  1: hh3cSysLocalClock
     Syntax="OCTETSTR"
     Descr="
        This node gives the current local time of the system.
        The unit of it is DateAndTime.
        "
EDESC
#
#
#
EVENT hh3cSysReloadNotification .1.3.6.1.4.1.25506.2.3.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cSysReloadNotification will be sent before the corresponding entity is
rebooted. It will also be sent if the entity fails to reboot because the clock
has changed.

Variables:
  1: hh3cSysReloadImage
     Syntax="INTEGER32"
     Descr="
        The value indicates an entry in hh3cSysImageTable.
        It defines an image file for reload action.
        It is the value of corresponding hh3cSysImageIndex in hh3cSysImageTable.

        If dual image is supported, the main image attribute can be
        set through this object or by hh3cSysImageType of hh3cSysImageTable
        of the entity. It is strongly suggested to set this attribute by
        the latter.

        If main image attribute is set here, the hh3cSysImageType in hh3cSysImageTable
        of the corresponding entity will be updated, and vice versa.

        Before reboot, the device will check the validation of the entry. If the file does
        not exist, the device will not reboot and a trap will be send to NMS.
        "
  2: hh3cSysReloadCfgFile
     Syntax="INTEGER32"
     Descr="
        The value indicates an entry in hh3cSysCFGFileTable.
        It defines a configuration file for reload action.
        It is the value of corresponding hh3cSysCFGFileIndex in hh3cSysCFGFileTable.
        The zero value means no configuration file has been set for this entry, and
        no configuration file is used during system reloading.
        "
  3: hh3cSysReloadReason
     Syntax="OCTETSTR"
     Descr="
        The reason of system's reloading.
        It is a zero length octet string when not set.
        "
  4: hh3cSysReloadScheduleTime
     Syntax="OCTETSTR"
     Descr="
        Specify the local time at which the reload action will
        occur. we will only take octet strings
        with length 8 for this object which indicates the
        local time of the switch. The maximum scheduled
        interval between the specified time and the current
        system clock time is 24 days .

            field  octets  contents                  range
            -----  ------  --------                  -----
              1      1-2   year                      0..65536
              2       3    month                     1..12
              3       4    day                       1..31
              4       5    hour                      0..23
              5       6    minutes                   0..59
              6       7    seconds                   0..60

         For example, Tuesday May 26, 1992 at 1:30:15 PM would be
         displayed as:

                    1992-5-26,13:30:15

        If the set value is less than the value of hh3cSysLocalClock
        or beyond the maximum scheduled time limit, a bad value error
        occurred.
        The value of all-zero octet strings indicates system reload
        at once if the reload action is reloadOnSchedule(2).
        "
  5: hh3cSysReloadAction
     Syntax="INTEGER"
       1: reloadUnavailable
       2: reloadOnSchedule
       3: reloadAtOnce
       4: reloadCancel
     Descr="
        Writing reloadOnSchedule(2) to this object performs the reload operation on schedule.
        If hh3cSysReloadScheduleTime is not set, the value of hh3cSysReloadAction can't be set to
        'reloadOnSchedule(2)'.

        Writing reloadAtOnce(3)to this object performs the reload operation at once,
        regardless of the hh3cSysReloadScheduleTime.

        When reloadCancel(4)is set, the scheduled reload action will be cancelled and the value of
        hh3cSysReloadAction will be 'reloadUnavailable(1)',the value of hh3cSysReloadSchedule will be
        0, hh3cSysReloadTag will be given a value of zero length, but the content of
        hh3cSysReloadScheduleTable will remain.


        The hh3cSysReloadSchedule and hh3cSysReloadTag  determine the reload entity(ies) in mutually
        exclusive way. And the hh3cSysReloadSchedule will be handled at first. If the value of
        hh3cSysReloadSchedule is invalid, then the hh3cSysReloadTag will be handled.

        If the value of hh3cSysReloadSchedule is valid, the value of hh3cSysReloadTag is ignored and a
        reload action will be implemented to the entity specified by hh3cSysReloadEntity in the entry
        pointed by hh3cSysReloadSchedule.

        If hh3cSysReloadSchedule is valid, but the entry hh3cSysReloadSchedule pointing to is not active,
        the reload action will be ignored , and an inconsistent value will be returned.


        If multiple entities are required to be reloaded at the same time, the value of hh3cSysReloadTag
        must be specified to select the reload parameters in the hh3cSysReloadSceduelTable, and
        hh3cSysReloadSchedule must have the value of '0'.

        If the whole fabric is to be reloaded in an XRN device, all the units in the fabric must
        have at least one entry in the hh3cSysReloadSceduelTable with the same tag in hh3cSysReloadSceduelTagList.

        When a reload action is done, or there is no reload action, the value
        should be reloadUnavailable(1).
        "
EDESC
#
#
#
EVENT hh3cSysStartUpNotification .1.3.6.1.4.1.25506.2.3.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

a hh3cSysStartUpNotification trap will be sent when the system starts up with 'main' image file failed,
a trap will be sent to indicate which type the current image file (I.e backup or secure)is.

Variables:
  1: hh3cSysImageType
     Syntax="INTEGER"
       1: main
       2: backup
       3: none
       4: secure
       5: main-backup
       6: main-secure
       7: backup-secure
       8: main-backup-secure
     Descr="
        It indicates the reloading sequence attribute of the image.

        For devices which support dual image:

        If the value is 'main(1)',the image will be the first image
        in the next reloading procedure. If the value is 'backup(2)',
        the image will be used if the main image fails. If the value
        is 'secure(4)', the image will be used if the main image and
        backup image both fail. If the value is 'none(3)',the image will
        not be used in the next reloading procedure.

        At the same time,you also can specify the main image by
        hh3cSysReloadImage in hh3cSysReloadScheduleTable. If the
        image is different from previous main image, the previous main image
        will not be main image again. And the image table will update with
        this variation. Vice versa, if you have defined the reload schedule,
        and then you define a new main image through hh3cSysImageType when you
        are waiting the reload schedule to be executed, the real main image
        will be the latest one.


        It is strongly suggested to define the main image here, not by hh3cSysReloadImage
        in hh3cSysReloadScheduleTable.

        There are some rules for setting the value of hh3cSysImageType:

        a)When a new image file is defined as 'main' or 'backup' file,the hh3cSysImageType
          of old 'main' or 'backup' file will automatically be 'none'.
        b)It is forbidden to set 'none' attribute manually.
        c)It is forbidden to set 'secure' attribute manually.
        d)If 'main' image is set to 'backup', the file keeps 'main'. And vice versa.
          At this time, the file has 'main-backup' property.
        e)If the secure image is set to 'main' or 'backup', the file has 'main-secure' or 'backup-secure'property.
        f)If the secure image is set to 'main' and 'backup', the file has the 'main-backup-secure' property.
        g)If the none image is set to 'main' or 'backup', the file has the 'main' or 'backup' property.

        The following table describes whether it is ok to set to another state
        directly from original state.

                        +--------------+-----------+-------------+-------------+
                        |   set to     | set to    |  set to     |   set to    |
                        |              |           |             |             |
             original   |    'main'    | 'backup'  |  'none'     |  'secure'   |
             state      |              |           |             |             |
          --------------+--------------+-----------+-------------+-------------+
                        |              |           |             |             |
             main       |     ---      |   yes     |   no        |   no        |
                        |              |           |             |             |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------|-------------+
                        |              |           |             |             |
             backup     |     yes      |   ---     |   no        |   no        |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------|-------------+
                        |              |           |             |             |
                        |              |           |             |             |
              none      |     yes      |   yes     |   ---       |   no        |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------+-------------+
                        |              |           |             |             |
              secure    |     yes      |   yes     |   no        |   ---       |
                        |              |           |             |             |
                        |              |           |             |             |
    "
EDESC
#
#
#
#
MIB: HH3C-T1-MIB (file:./hh3c-t1.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TE-TUNNEL-MIB (file:./hh3c-te-tunnel.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cTeTunnelPsSwitchWtoP .1.3.6.1.4.1.25506.2.115.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when protect workgroup switch from $*
SDESC
This notification is generated when protect workgroup switch from
work tunnel to protect tunnel.
Variables:
  1: hh3cTeTunnelPsWorkPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates work path status.  none, noDefect, inDefect
        will be used."
  2: hh3cTeTunnelPsProtectPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates protect path status.  none, noDefect,
        inDefect(3) will be used."
EDESC
#
#
#
EVENT hh3cTeTunnelPsSwitchPtoW .1.3.6.1.4.1.25506.2.115.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when protect workgroup switch from $*
SDESC
This notification is generated when protect workgroup switch from
protect tunnel to work tunnel.
Variables:
  1: hh3cTeTunnelPsWorkPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates work path status.  none, noDefect, inDefect
        will be used."
  2: hh3cTeTunnelPsProtectPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates protect path status.  none, noDefect,
        inDefect(3) will be used."
EDESC
#
#
#
#
MIB: HH3C-TRANSCEIVER-INFO-MIB (file:./hh3c-transceiver-info.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TRAP-MIB (file:./hh3c-trap.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMacTabFullTrap .1.3.6.1.4.1.25506.2.38.1.1.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MAC table is filled.  The $*
SDESC
Send this trap when the MAC table is filled.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval.
Variables:
  1: hh3cMacTabLen
     Syntax="INTEGER32"
     Descr="The length of the MAC table."
EDESC
#
#
#
EVENT hh3cMacTabAlmostFullTrap .1.3.6.1.4.1.25506.2.38.1.1.4.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MAC table is almost full.  The $*
SDESC
Send this trap when the MAC table is almost full.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval.
EDESC
#
#
#
EVENT hh3cArpTabFullTrap .1.3.6.1.4.1.25506.2.38.1.2.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the ARP table is filled.  The $*
SDESC
Send this trap when the ARP table is filled.  The
interval between two traps generated should be longer
than hh3cArpTabTrapInterval.
Variables:
  1: hh3cArpTabLen
     Syntax="INTEGER32"
     Descr="The length of the ARP table."
EDESC
#
#
#
EVENT hh3cArpPortDynamicEntryFullTrap .1.3.6.1.4.1.25506.2.38.1.2.4.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the dynamic ARP number of the $*
SDESC
Send this trap when the dynamic ARP number of the
port exceeds the limitation. The object hh3cArpTabLen
describes the limitation of the max dynamic ARP number
of this port. The interval between two traps should be
longer than hh3cArpTabTrapInterval.
Variables:
  1: hh3cArpTabLen
     Syntax="INTEGER32"
     Descr="The length of the ARP table."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cRtTabFullTrap .1.3.6.1.4.1.25506.2.38.1.3.5.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the routing table is filled.  The $*
SDESC
Send this trap when the routing table is filled.  The
interval between two traps generated should be longer
than hh3cRtTabTrapInterval.
Variables:
  1: hh3cRtTabLen
     Syntax="INTEGER32"
     Descr="The length of the routing table.  The detail
            routing tables also use the same object."
EDESC
#
#
#
EVENT hh3cDetailRtTabFullTrap .1.3.6.1.4.1.25506.2.38.1.3.5.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the detail routing table is filled.  The $*
SDESC
Send this trap when the detail routing table is filled.  The
interval between two traps generated should be longer than
hh3cRtTabTrapInterval.
Variables:
  1: hh3cDetailRtProType
     Syntax="INTEGER"
       1: other
       2: local
       3: rip
       4: isis
       5: ospf
       6: bgp
     Descr="The index value which uniquely identifies an entry
            in the hh3cDetailRtTrapTable."
  2: hh3cRtTabLen
     Syntax="INTEGER32"
     Descr="The length of the routing table.  The detail
            routing tables also use the same object."
EDESC
#
#
#
EVENT hh3cDefaultRtDelTrap .1.3.6.1.4.1.25506.2.38.1.3.5.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the default route is deleted. $*
SDESC
Send this trap when the default route is deleted.
Variables:
  1: hh3cDetailRtProType
     Syntax="INTEGER"
       1: other
       2: local
       3: rip
       4: isis
       5: ospf
       6: bgp
     Descr="The index value which uniquely identifies an entry
            in the hh3cDetailRtTrapTable."
  2: hh3cDefaultRtNextHopType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the next hop of the default route.
            The value must be ipv4 or ipv6"
  3: hh3cDefaultRtNextHop
     Syntax="OCTETSTR"
     Descr="The IP address of the next hop of the default route."
  4: hh3cDefaultRtOutIf
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the
             local interface through which the next hop of this
             route should be reached.  The interface identified
             by a particular value of this index is the same
             interface as identified by the same value of
             ifIndex."
EDESC
#
#
#
EVENT hh3cMulticastTabFullTrap .1.3.6.1.4.1.25506.2.38.1.4.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the multicast table is filled.  The $*
SDESC
Send this trap when the multicast table is filled.  The
interval between two traps generated should be longer
than hh3cMulticastTabTrapInterval.
Variables:
  1: hh3cMulticastTabType
     Syntax="INTEGER"
       1: lay2
       2: lay3
     Descr="Defining the type of the multicast table, layer2 or layer3."
  2: hh3cMulticastTabLen
     Syntax="INTEGER32"
     Descr="The length of the multicast table."
EDESC
#
#
#
EVENT hh3cNdTabFullTrap .1.3.6.1.4.1.25506.2.38.1.5.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the ND table is filled.  The $*
SDESC
Send this trap when the ND table is filled.  The
interval between two traps generated should be longer
than hh3cNdTabTrapInterval.
Variables:
  1: hh3cNdTabLen
     Syntax="INTEGER32"
     Descr="The length of the ND table."
EDESC
#
#
#
EVENT hh3cPeriodicalTrap .1.3.6.1.4.1.25506.2.38.1.6.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA If no trap occurs during the interval spicified by hh3cPeriodicalTrapInterval
SDESC
If no trap occurs during the interval spicified by hh3cPeriodicalTrapInterval, an hh3cPeriodicalTrap will be generated. If the interval is set to 0, no hh3cPeriodicalTrap will be generated.
EDESC
#
#
#
#
MIB: HH3C-TRNG2-MIB (file:./hh3c-trng2.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TRNG-MIB (file:./hh3c-trng.mib) converted on Fri Mar 18 21:59:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TUNNEL-MIB (file:./hh3c-tunnel.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TWAMP-MIB (file:./hh3c-twamp.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UI-MAN-MIB (file:./hh3c-ui-man.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLogIn .1.3.6.1.4.1.25506.2.2.1.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This notification is generated when a user logs in.

Variables:
  1: hh3cTerminalUserName
     Syntax="OCTETSTR"
     Descr="
        It represents the name of the logging user when login with authentication,
        otherwise login mode, such as Console, AUX, TTY, VTY etc.
        "
  2: hh3cTerminalSource
     Syntax="OCTETSTR"
     Descr="
        Login mode, such as Console, AUX, TTY, VTY etc.
        "
EDESC
#
#
#
EVENT hh3cLogOut .1.3.6.1.4.1.25506.2.2.1.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This notification is generated when a user logs out.

Variables:
  1: hh3cTerminalUserName
     Syntax="OCTETSTR"
     Descr="
        It represents the name of the logging user when login with authentication,
        otherwise login mode, such as Console, AUX, TTY, VTY etc.
        "
  2: hh3cTerminalSource
     Syntax="OCTETSTR"
     Descr="
        Login mode, such as Console, AUX, TTY, VTY etc.
        "
EDESC
#
#
#
EVENT hh3cLogInAuthenFailure .1.3.6.1.4.1.25506.2.2.1.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This notification is generated when a user fails to log in
because of authentication.

Variables:
  1: hh3cTerminalUserName
     Syntax="OCTETSTR"
     Descr="
        It represents the name of the logging user when login with authentication,
        otherwise login mode, such as Console, AUX, TTY, VTY etc.
        "
  2: hh3cTerminalSource
     Syntax="OCTETSTR"
     Descr="
        Login mode, such as Console, AUX, TTY, VTY etc.
        "
  3: hh3cTerminalUserAuthFailureReason
     Syntax="INTEGER"
       1: exceedRetries
       2: authTimeout
       3: otherReason
     Descr="The reason why a user failed to log in."
EDESC
#
#
#
#
MIB: HH3C-UNICAST-MIB (file:./hh3c-unicast.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UPS-MIB (file:./hh3c-ups.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-USERLOG-MIB (file:./hh3c-userlog.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-USER-MIB (file:./hh3c-user.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VBR-MIB (file:./hh3c-vbr.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVbrPEXRemoveOrInsert .1.3.6.1.4.1.25506.2.180.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cVbrPEXRemoveOrInsert notification is sent when a PEX $*
SDESC
An hh3cVbrPEXRemoveOrInsert notification is sent when a PEX
is removed or inserted.
Variables:
  1: hh3cVbrCasPortIndex
     Syntax="INTEGER32"
     Descr="Interface index of the cascade port for a PEX."
  2: hh3cVbrCasPortAssociateId
     Syntax="INTEGER32"
     Descr="ID assigned to the PEX that is attached to the cascade port.
        The value range is hh3cVbrMinAssociateId to hh3cVbrMaxAssociateId.
        The value is 0xffff if the PEX is not assigned an ID.
        For a successful configuration, the ID must be unique among all PEXs in
        the IRF 3.1 system."
  3: hh3cVbrPEXStatus
     Syntax="INTEGER"
       1: offline
       2: online
     Descr="Status of the PEX.
        If the value is offline, the PEX is absent or its configuration
        is incomplete.
        If the value is online, the PEX is operating correctly."
EDESC
#
#
#
#
MIB: HH3C-VLANGROUP-MIB (file:./hh3c-vlangroup.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VLANTERM-MIB (file:./hh3c-vlanterm.mib) converted on Fri Mar 18 21:59:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VMAP-MIB (file:./hh3c-vmap.mib) converted on Fri Mar 18 21:59:46 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VM-MAN-MIB (file:./hh3c-vm-man.mib) converted on Fri Mar 18 21:59:46 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVMManDeviceOnlineTrap .1.3.6.1.4.1.25506.9.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the device having been registered to VM. $*
SDESC
Send a trap about the device having been registered to VM.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
EDESC
#
#
#
EVENT hh3cVMManDeviceOfflineTrap .1.3.6.1.4.1.25506.9.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the device having been unregistered to VM. $*
SDESC
Send a trap about the device having been unregistered to VM.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceExternalSemaphoreTrap .1.3.6.1.4.1.25506.9.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about external semaphore alarm, which is created $*
SDESC
Forward a trap about external semaphore alarm, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUExternalInputAlarmChannelID
     Syntax="UNSIGNED32"
     Descr="The ID of the external input alarm channel."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceVideoLossTrap .1.3.6.1.4.1.25506.9.1.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about video loss, which is created by the third $*
SDESC
Forward a trap about video loss, which is created by the third
party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceVideoRecoverTrap .1.3.6.1.4.1.25506.9.1.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about video recovery after loss, which is created $*
SDESC
Forward a trap about video recovery after loss, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceMotionDetectTrap .1.3.6.1.4.1.25506.9.1.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about motion detection, which is created by the $*
SDESC
Forward a trap about motion detection, which is created by the
third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  5: hh3cVMManRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion detection region."
  6: hh3cVMManRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion detection region."
  7: hh3cVMManRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
  8: hh3cVMManRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceCoverTrap .1.3.6.1.4.1.25506.9.1.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about video cover, which is created by the third $*
SDESC
Forward a trap about video cover, which is created by the third
party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  5: hh3cVMManRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion detection region."
  6: hh3cVMManRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion detection region."
  7: hh3cVMManRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
  8: hh3cVMManRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceCpuUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about cpu usage exceeding its threshold, which is $*
SDESC
Forward a trap about cpu usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManCpuUsage
     Syntax="UNSIGNED32"
     Descr="The CPU usage for this entity. Generally, the CPU usage
        will caculate the overall CPU usage on the entity, and it
        is not sensible with the number of CPU on the entity. "
  5: hh3cVMManCpuUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
        the threshold, a notification will be sent."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceMemUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about memory usage exceeding its threshold, which is $*
SDESC
Forward a trap about memory usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManMemUsage
     Syntax="UNSIGNED32"
     Descr="The memory usage for the entity. This object indicates what
        percent of memory are used. "
  5: hh3cVMManMemUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the Memory usage. When the memory usage
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceHardDiskUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about harddisk usage exceeding its threshold, which is $*
SDESC
Forward a trap about harddisk usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManHardDiskUsage
     Syntax="UNSIGNED32"
     Descr="The hard disk usage for the entity. This object indicates what
        percent of hard disk are used. "
  5: hh3cVMManHardDiskUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the hard disk usage. When the hard disk usage
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceTemperatureThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about temperature exceeding its threshold, which is created $*
SDESC
Forward a trap about temperature exceeding its threshold, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity. "
  5: hh3cVMManTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceStartKinescopeTrap .1.3.6.1.4.1.25506.9.1.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about starting kinescope, which is created by the third party $*
SDESC
Forward a trap about starting kinescope, which is created by the third party
device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceStopKinescopeTrap .1.3.6.1.4.1.25506.9.1.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about stopping kinescope, which is created by the third party $*
SDESC
Forward a trap about stopping kinescope, which is created by the third party
device.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManClientReportTrap .1.3.6.1.4.1.25506.9.1.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the fault which is reported by clients. $*
SDESC
Send a trap about the fault which is reported by clients.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManReportContent
     Syntax="OCTETSTR"
     Descr="The details of the fault which reported by clients"
EDESC
#
#
#
EVENT hh3cVMManClientRealtimeSurveillanceNoVideoTrap .1.3.6.1.4.1.25506.9.1.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about no realtime surveillance video stream which is reported by clients. $*
SDESC
Send a trap about no realtime surveillance video stream which is reported by clients.
hh3cVMManRegDevIP, entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName
describe an EC's relative information. 
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManClientVODNoVideoTrap .1.3.6.1.4.1.25506.9.1.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about no VOD video stream which is reported by clients. hh3cVMManRegDevIP, $*
SDESC
Send a trap about no VOD video stream which is reported by clients. hh3cVMManRegDevIP,
entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName describe an EC's relative information.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVODStart
     Syntax="OCTETSTR"
     Descr="The start time for VOD."
  8: hh3cVMManClientVODEnd
     Syntax="OCTETSTR"
     Descr="The end time for VOD."
  9: hh3cVMManIPSANDevIP
     Syntax="IPADDR"
     Descr="IP address of IPSAN Device which can store video data."
EDESC
#
#
#
EVENT hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap .1.3.6.1.4.1.25506.9.1.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the realtime surveillance video stream discontinuity which is reported by clients. $*
SDESC
Send a trap about the realtime surveillance video stream discontinuity which is reported by clients.
entPhysicalAssetID, hh3cVMManRegDevIP, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName describe an EC's relative
information.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVideoStreamDiscontinuityInterval
     Syntax="UNSIGNED32"
     Descr="Video stream discontinuity interval. "
  8: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the video stream discontinuity interval. When the
        discontinuity interval exceeds the threshold, a notification will be sent. "
  9: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientVODVideoStreamDiscontinuityTrap .1.3.6.1.4.1.25506.9.1.2.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the VOD video stream discontinuity which is reported by clients. $*
SDESC
Send a trap about the VOD video stream discontinuity which is reported by clients.
hh3cVMManRegDevIP, entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName
describe an EC's relative information.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVODStart
     Syntax="OCTETSTR"
     Descr="The start time for VOD."
  8: hh3cVMManClientVODEnd
     Syntax="OCTETSTR"
     Descr="The end time for VOD."
  9: hh3cVMManIPSANDevIP
     Syntax="IPADDR"
     Descr="IP address of IPSAN Device which can store video data."
 10: hh3cVMManClientVideoStreamDiscontinuityInterval
     Syntax="UNSIGNED32"
     Descr="Video stream discontinuity interval. "
 11: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the video stream discontinuity interval. When the
        discontinuity interval exceeds the threshold, a notification will be sent. "
 12: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientCtlConnExceptionTerminationTrap .1.3.6.1.4.1.25506.9.1.2.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the exceptional termination for control connection.  $*
SDESC
Send a trap about the exceptional termination for control connection. 
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
EDESC
#
#
#
EVENT hh3cVMManClientFrequencyLoginFailTrap .1.3.6.1.4.1.25506.9.1.2.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the frequency of client login failure. $*
SDESC
Send a trap about the frequency of client login failure.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManClientLoginFailNum
     Syntax="UNSIGNED32"
     Descr="The total number of client login failure in last statistic period which is
        defined by hh3cVMManClientStatPeriod entity."
  5: hh3cVMManClientLoginFailNumThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the total number of client login failure in last statistic
        period. When the number exceeds the threshold, a notification will be sent. "
  6: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientFrequencyVODFailTrap .1.3.6.1.4.1.25506.9.1.2.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the frequency of client VOD failure. $*
SDESC
Send a trap about the frequency of client VOD failure.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManClientVODFailNum
     Syntax="UNSIGNED32"
     Descr="The total number of client VOD failure in last statistic period which is
        defined by hh3cVMManClientStatPeriod entity."
  5: hh3cVMManClientVODFailNumThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the total number of client VOD failure in last statistic
        period. When the number exceeds the threshold, a notification will be sent. "
  6: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManDMECDisobeyStorageScheduleTrap .1.3.6.1.4.1.25506.9.1.2.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about EC disobeying storage schedule created by DM. $*
SDESC
Send a trap about EC disobeying storage schedule created by DM.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManDMECDisobeyStorageScheduleRecoverTrap .1.3.6.1.4.1.25506.9.1.2.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about recovery after EC disobeying storage schedule created by DM. $*
SDESC
Send a trap about recovery after EC disobeying storage schedule created by DM.
Variables:
  1: entPhysicalAssetID
     Syntax=""
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
#
MIB: HH3C-VNF-DEVICE-MIB (file:./hh3c-vnf-device.mib) converted on Fri Mar 18 21:59:46 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVnfmConnectionFault .1.3.6.1.4.1.25506.2.196.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Cp and so communication failure. $*
SDESC
Cp and so communication failure.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVnfmConnectionFaultResume .1.3.6.1.4.1.25506.2.196.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Cp and so communication recovery. $*
SDESC
Cp and so communication recovery.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVnvmAuthenFault .1.3.6.1.4.1.25506.2.196.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Cp and so authentication failed. $*
SDESC
Cp and so authentication failed.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVmCreate .1.3.6.1.4.1.25506.2.196.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The event of create VM. $*
SDESC
The event of create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmDelete .1.3.6.1.4.1.25506.2.196.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The event of delete VM. $*
SDESC
The event of delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmCreateSuccess .1.3.6.1.4.1.25506.2.196.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Success to create VM. $*
SDESC
Success to create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
EDESC
#
#
#
EVENT hh3cVmCreateFail .1.3.6.1.4.1.25506.2.196.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to create VM. $*
SDESC
Failed to create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
  6: hh3cVmCreateFailReason
     Syntax="OCTETSTR"
     Descr="The VM create failed reason."
EDESC
#
#
#
EVENT hh3cVmDeleteSuccess .1.3.6.1.4.1.25506.2.196.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Success to delete VM. $*
SDESC
Success to delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
EDESC
#
#
#
EVENT hh3cVmDeleteFail .1.3.6.1.4.1.25506.2.196.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to delete VM. $*
SDESC
Failed to delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
  6: hh3cVmDeleteFailReason
     Syntax="OCTETSTR"
     Descr="The VM delete failed reason."
EDESC
#
#
#
EVENT hh3cVmInconsist .1.3.6.1.4.1.25506.2.196.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The local virtual machine resources are inconsistent with the resources on vnf. $*
SDESC
The local virtual machine resources are inconsistent with the resources on vnf.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmStatusOnVnfm
     Syntax="INTEGER"
       1: building
       2: active
       3: error
       4: unknown
     Descr="The status of the virtual machine on VNFM(virtualized network function managers)."
  4: hh3cVmInconsistFaultReason
     Syntax="INTEGER"
       1: exisitOnLocal
       2: existOnVnfm
     Descr="Reasons for VM inconsistency."
EDESC
#
#
#
EVENT hh3cVmInconsistResume .1.3.6.1.4.1.25506.2.196.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The local virtual machine resources are the same as those on vnf. $*
SDESC
The local virtual machine resources are the same as those on vnf.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmStatusOnVnfm
     Syntax="INTEGER"
       1: building
       2: active
       3: error
       4: unknown
     Descr="The status of the virtual machine on VNFM(virtualized network function managers)."
  4: hh3cVmInconsistFaultReason
     Syntax="INTEGER"
       1: exisitOnLocal
       2: existOnVnfm
     Descr="Reasons for VM inconsistency."
EDESC
#
#
#
EVENT hh3cVmAcceptInconsistVm .1.3.6.1.4.1.25506.2.196.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Unconfigured VM claimed on vbras-cp. $*
SDESC
Unconfigured VM claimed on vbras-cp.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmReset .1.3.6.1.4.1.25506.2.196.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA VM restarts via VNFM. $*
SDESC
VM restarts via VNFM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  4: hh3cVmResetResult
     Syntax="OCTETSTR"
     Descr="Reasons for the failure to restart the virtual machine."
EDESC
#
#
#
EVENT hh3cVmUnregisterLongtime .1.3.6.1.4.1.25506.2.196.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA VNFM has been allocated but will not be online for a long time. $*
SDESC
VNFM has been allocated but will not be online for a long time.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmIsolate .1.3.6.1.4.1.25506.2.196.3.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA During the shrinking operation, it does not communicate with VNFM, VNFM isolates VM. $*
SDESC
During the shrinking operation, it does not communicate with VNFM, VNFM isolates VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmChannelHealthNormal .1.3.6.1.4.1.25506.2.196.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The health check result of the control channel or data channel on the specified VM is normal. $*
SDESC
The health check result of the control channel or data channel on the specified VM is normal.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelHealthMinor .1.3.6.1.4.1.25506.2.196.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The control channel or data channel on the specified VM is in the minor sub-health state. $*
SDESC
The control channel or data channel on the specified VM is in the minor sub-health state.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelHealthSevere .1.3.6.1.4.1.25506.2.196.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The control channel or data channel on the specified VM is in the severe sub-health state. $*
SDESC
The control channel or data channel on the specified VM is in the severe sub-health state.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelLinkSwitch .1.3.6.1.4.1.25506.2.196.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Link switching event. $*
SDESC
Link switching event.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  3: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
  4: hh3cVmChannelLinkMacAddress
     Syntax="OCTETSTR"
     Descr="The mac address of the fault port."
EDESC
#
#
#
#
MIB: HH3C-VOICE-CALL-ACTIVE-MIB (file:./hh3c-voice-call-active.mib) converted on Fri Mar 18 21:59:46 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-CALL-HISTORY-MIB (file:./hh3c-voice-call-history.mib) converted on Fri Mar 18 21:59:46 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-DIAL-CONTROL-MIB (file:./hh3c-voice-dial-control.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-IF-MIB (file:./hh3c-voice-if.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-VLAN-MIB (file:./hh3c-voice-vlan.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VPN-PEER-MIB (file:./hh3c-vpn-peer.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VRRP-EXT-MIB (file:./hh3c-vrrp-ext.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVrrpExtStateChange .1.3.6.1.4.1.25506.2.24.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the sending agent VRRP state has changed. $*
SDESC
This trap indicates that the sending agent VRRP state has changed.
Variables:
  1: hh3cVrrpExtVrId
     Syntax="INTEGER32"
     Descr="This object contains the Virtual Router Identifier (VRID)."
  2: hh3cVrrpExtIpAddressType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
     Descr="IP address type of VRRP.
         ipv4: IPv4 type.
         ipv6: IPv6 type."
  3: hh3cVrrpExtIfIndex
     Syntax="INTEGER32"
     Descr="This value is the ifIndex that identifies the interface configured for
         the virtual router."
  4: hh3cVrrpExtIfDescr
     Syntax="OCTETSTR"
     Descr="This value is the interface decription that identifies the interface
        configured for the virtual router."
  5: hh3cVrrpExtOldState
     Syntax="INTEGER"
       1: initialize
       2: backup
       3: master
     Descr="The current state of the virtual router. This object has
        three defined values:

        - `initialize', which indicates that the
         virtual router is waiting for a startup event.

        - `backup', which indicates the virtual router is
         monitoring the availability of the master router.

        - `master', which indicates that the virtual router
         is forwarding packets for IP addresses that are
         associated with this router."
  6: hh3cVrrpExtNewState
     Syntax="INTEGER"
       1: initialize
       2: backup
       3: master
     Descr="The current state of the virtual router. This object has
        three defined values:

        - `initialize', which indicates that the
         virtual router is waiting for a startup event.

        - `backup', which indicates the virtual router is
         monitoring the availability of the master router.

        - `master', which indicates that the virtual router
         is forwarding packets for IP addresses that are
         associated with this router."
  7: hh3cVrrpExtStateChangeReason
     Syntax="INTEGER32"
     Descr="Reason why VRRP state changed,
         0: other reason.
         1: Timer expired.
         2: Adding virtual MAC address failed.
         3: Interface event received.
         4: IP address deleted.
         5: The status of the tracked object changed.
         6: VRRP packet received.
         7: Current device has changed to IP address owner.
         8: Insufficient hardware resources.
         9: Master-down-timer expired.
         10: Zero priority packet received.
         11: Preempt.
         12: Master group drove."
EDESC
#
#
#
#
MIB: HH3C-VSAN-MIB (file:./hh3c-vsan.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVsanDmDomainIdNotAssignedNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered if a Domain ID is not $*
SDESC
This event will be triggered if a Domain ID is not
assigned or configured, then the E_ports may be isolated
in the VSAN. The conditions are listed as follows:
1. If the switch has enabled the fabric configuration and
a request for a configured static Domain ID is rejected
or no other Domain ID is assigned, the E_ports will be
isolated in the particular VSAN.
2. If the switch does not enable the fabric configuration
and a Domain ID is not configured, all of its E_ports
will be isolated in the particular VSAN.
The notification contains the WWN of the Switch and
the index of the VSAN in which the event occurred.
Variables:
  1: hh3cVsanIndex
     Syntax=""
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmLocalSwitchWWN
     Syntax=""
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmNewPrincipalSwitchNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA If a switch becomes the new Principal Switch in a VSAN, this $*
SDESC
If a switch becomes the new Principal Switch in a VSAN, this
notification is sent immediately after the election.
The notification contains the WWN of the new Principal Switch
and the index of the VSAN in which the transition occurred.
Variables:
  1: hh3cVsanIndex
     Syntax=""
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmLocalSwitchWWN
     Syntax=""
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmFabricChangeNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered if a switch sends or receives a $*
SDESC
This event will be triggered if a switch sends or receives a
Build Fabric (BF) or a Reconfigure Fabric (RCF) message in a
VSAN.
The conditions a switch can receive or send a BF or a RCF are
listed as follows:
1. Two isolated fabrics in a VSAN merge into one fabric.  If
the Domain ID lists do not overlap, the sent or received
message is BF, other cases, it is RCF.
2. If an upstream principal link which connects to principal
switch and other switches become disconnected, the sent or
received message is BF.
3. A BF or RCF process is triggered manually by configuration.
The notification contains the index of the VSAN in which a BF
or a RCF was sent or received.
Variables:
  1: hh3cVsanIndex
     Syntax=""
     Descr="The identifier of the VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmDomainIdChangeNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered if the Domain ID of the local switch $*
SDESC
This event will be triggered if the Domain ID of the local switch
changed in a VSAN.
Variables:
  1: hh3cVsanIndex
     Syntax=""
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmDomainIdAssigned
     Syntax=""
     Descr="Indicates the Domain ID of the local switch in this
         VSAN or zero if no Domain ID has been assigned."
  3: hh3cVsanDmLocalSwitchWWN
     Syntax=""
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
#
MIB: HH3C-VSI-MIB (file:./hh3c-vsi.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VXLAN-MIB (file:./hh3c-vxlan.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WAPI-MIB (file:./hh3c-wapi.mib) converted on Fri Mar 18 21:59:47 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cwapiUserwithInvalidCertificate .1.3.6.1.4.1.25506.2.77.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a user intrudes upon network with invalid $*
SDESC
This trap is sent when a user intrudes upon network with invalid
certificate.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiStationReplayAttack .1.3.6.1.4.1.25506.2.77.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when an attacker records and replays network $*
SDESC
This trap is sent when an attacker records and replays network
transactions.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiTamperAttack .1.3.6.1.4.1.25506.2.77.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when an attacker monitors network traffic and $*
SDESC
This trap is sent when an attacker monitors network traffic and
maliciously changes data in transit(for example, an attacker may
modify the contents of a WAI message).
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiLowSafeLevelAttack .1.3.6.1.4.1.25506.2.77.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a station associates AP(Access Point), $*
SDESC
This trap is sent when a station associates AP(Access Point),
creates packet of Unicast Key Negotiation Response with wrong
WIE(WAPI Information Element) of ASUE(Authentication Supplicant
Entity).
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiAddressRedirectionAttack .1.3.6.1.4.1.25506.2.77.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when an attacker maliciously changes destination $*
SDESC
This trap is sent when an attacker maliciously changes destination
MAC address of WPI(WLAN Privacy Infrastructure) frame.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
#
MIB: HH3C-WEB-AUTHENTICATION-MIB (file:./hh3c-web-authentication.mib) converted on Fri Mar 18 21:59:48 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWaClientLogon .1.3.6.1.4.1.25506.2.93.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when a client succeeded to logon. $*
SDESC
It is generated when a client succeeded to logon.
Variables:
  1: hh3cWaClientMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the client."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of
            the manufacturer, the product name and the version
            of the hardware interface."
  3: hh3cWaVlanID
     Syntax="INTEGER32"
     Descr="The Vlan ID associate with the port and the MAC address."
EDESC
#
#
#
EVENT hh3cWaClientLogonFail .1.3.6.1.4.1.25506.2.93.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when a client failed to logon, the hh3cWaReasonCode $*
SDESC
It is generated when a client failed to logon, the hh3cWaReasonCode
shows the failure reason.
Variables:
  1: hh3cWaClientMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the client."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of
            the manufacturer, the product name and the version
            of the hardware interface."
  3: hh3cWaVlanID
     Syntax="INTEGER32"
     Descr="The Vlan ID associate with the port and the MAC address."
  4: hh3cWaReasonCode
     Syntax="INTEGER"
       1: globalNumberMax
       10: noTransferData
       11: cutOperation
       12: portDisabled
       13: portDown
       14: userLogout
       15: vlanChanged
       16: vlanDelted
       2: configNumberMax
       3: portNumberMax
       4: invalidUsername
       5: authFail
       6: setACLFail
       7: changeVlanFail
       8: other
       9: onlineOverTime
     Descr="The code indicates the reason for the action of this trap.
         globalNumberMax:
            The global number of connections is up to max.
         configNumberMax:
            The global number of connections is up to configured max value.
         portNumberMax:
            The interface number of connections is up to max.
         invalidUsername:
            The username or password is too long or username is empty.
         authFail:
            Wrong username or password.
         setACLFail:
            Failed to set ACL.
         changeVlanFail:
            Failed to set VLAN.
         other:
            Other reasons.
         onlineOverTime:
            The online time is over the max value.
         noTransferData:
            There was no data flow for the connection.
         cutOperation:
            There was a cut operation.
         portDisabled:
            Web authentication was disabled on interface.
         portDown:
            The interface turned down.
         userLogout:
            The client required to logout.
         vlanChanged:
            The interface VLAN value was changed.
         vlanDelted:
            The interface VLAN was deleted."
EDESC
#
#
#
EVENT hh3cWaClientLogout .1.3.6.1.4.1.25506.2.93.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when a client logout, the hh3cWaReasonCode $*
SDESC
It is generated when a client logout, the hh3cWaReasonCode
shows the logout reason.
Variables:
  1: hh3cWaClientMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the client."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of
            the manufacturer, the product name and the version
            of the hardware interface."
  3: hh3cWaVlanID
     Syntax="INTEGER32"
     Descr="The Vlan ID associate with the port and the MAC address."
  4: hh3cWaReasonCode
     Syntax="INTEGER"
       1: globalNumberMax
       10: noTransferData
       11: cutOperation
       12: portDisabled
       13: portDown
       14: userLogout
       15: vlanChanged
       16: vlanDelted
       2: configNumberMax
       3: portNumberMax
       4: invalidUsername
       5: authFail
       6: setACLFail
       7: changeVlanFail
       8: other
       9: onlineOverTime
     Descr="The code indicates the reason for the action of this trap.
         globalNumberMax:
            The global number of connections is up to max.
         configNumberMax:
            The global number of connections is up to configured max value.
         portNumberMax:
            The interface number of connections is up to max.
         invalidUsername:
            The username or password is too long or username is empty.
         authFail:
            Wrong username or password.
         setACLFail:
            Failed to set ACL.
         changeVlanFail:
            Failed to set VLAN.
         other:
            Other reasons.
         onlineOverTime:
            The online time is over the max value.
         noTransferData:
            There was no data flow for the connection.
         cutOperation:
            There was a cut operation.
         portDisabled:
            Web authentication was disabled on interface.
         portDown:
            The interface turned down.
         userLogout:
            The client required to logout.
         vlanChanged:
            The interface VLAN value was changed.
         vlanDelted:
            The interface VLAN was deleted."
EDESC
#
#
#
EVENT hh3cWaSysAction .1.3.6.1.4.1.25506.2.93.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when a system action was occurred, the hh3cWaActionCode $*
SDESC
It is generated when a system action was occurred, the hh3cWaActionCode
shows the action information.
Variables:
  1: hh3cWaActionCode
     Syntax="INTEGER"
       1: enabled
       2: disabled
     Descr="The code indicates the system action.
         enabled:
            Web authentication turns enabled.
         disabled:
            Web authentication turns disabled."
EDESC
#
#
#
#
MIB: HH3C-WIPS-MIB (file:./hh3c-wips.mib) converted on Fri Mar 18 21:59:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WLAN-FLEXAPP-CFG-MIB (file:./hh3c-wlan-flexapp-cfg.mib) converted on Fri Mar 18 21:59:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WLANMT-MIB (file:./hh3c-wlanmt.mib) converted on Fri Mar 18 21:59:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-3GMODEM-MIB (file:./hh3c-3gmodem.mib) converted on Fri Mar 18 23:13:21 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWirelessCardInserted .1.3.6.1.4.1.25506.2.98.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cWirelessCardInserted notification is generated when a wireless $*
SDESC
A hh3cWirelessCardInserted notification is generated when a wireless
card is inserted.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cWirelessCardPulledOut .1.3.6.1.4.1.25506.2.98.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cWirelessCardPulledOut notification is generated when a wireless $*
SDESC
A hh3cWirelessCardPulledOut notification is generated when a wireless
card is pulled out.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cUIMPinInvalid .1.3.6.1.4.1.25506.2.98.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cUIMPinInvalid notification is generated when UIM PIN is invalid. $*
SDESC
A hh3cUIMPinInvalid notification is generated when UIM PIN is invalid.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cUIMPinChanged .1.3.6.1.4.1.25506.2.98.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cUIMPinInvalid notification is generated when UIM PIN is changed. $*
SDESC
A hh3cUIMPinInvalid notification is generated when UIM PIN is changed.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
  5: hh3cUIMOldPin
     Syntax="OCTETSTR"
     Descr="The old PIN for this UIM."
  6: hh3cUIMPin
     Syntax="OCTETSTR"
     Descr="The PIN about this UIM.  If this information is unknown to the agent,
        then this object will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cAccessMediaChanged .1.3.6.1.4.1.25506.2.98.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cAccessMediaChanged notification is generated when access media $*
SDESC
A hh3cAccessMediaChanged notification is generated when access media
is changed.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
  5: hh3cAccessMedia
     Syntax="INTEGER"
       1: unknown
       2: air
       3: cable
     Descr="The current access media."
EDESC
#
#
#
EVENT hh3c3GRssiStrongSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3c3GRssiStrongSignalTrap notification is generated when current RSSI $*
SDESC
A hh3c3GRssiStrongSignalTrap notification is generated when current RSSI
exceeds the medium signal threshold.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3c3GRssiMediumSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3c3GRssiMediumSignalTrap notification is generated when the current RSSI $*
SDESC
A hh3c3GRssiMediumSignalTrap notification is generated when the current RSSI
falls or rises to a value between the medium and weak signal thresholds.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3c3GRssiWeakSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3c3GRssiWeakSignalTrap notification is generated when current RSSI $*
SDESC
A hh3c3GRssiWeakSignalTrap notification is generated when current RSSI
falls below the weak signal threshold.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3cSmsTxNotification .1.3.6.1.4.1.25506.2.98.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSmsTxNotification notification is generated $*
SDESC
A hh3cSmsTxNotification notification is generated
when a short message is sent.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cSmsSendStatus
     Syntax="INTEGER"
       1: set2Send
       10: busy
       11: notPresent
       12: notSupport
       13: initializing
       14: noCenterNum
       15: noSim
       16: simNotReady
       17: sendAtFailed
       18: sendDisable
       2: ready2Send
       3: sending
       4: sentAlready
       5: telnumberInvalid
       6: paramInvalid
       7: contentTooLong
       8: codeError
       9: unknown
     Descr="Status of the short message sent."
EDESC
#
#
#
EVENT hh3cSmsRxNotification .1.3.6.1.4.1.25506.2.98.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSmsRxNotification notification is generated $*
SDESC
A hh3cSmsRxNotification notification is generated
when a short message is received.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cSmsSrcNumberBind
     Syntax="OCTETSTR"
     Descr="The source number that is bound in the notifications."
  3: hh3cSmsTimeBind
     Syntax="OCTETSTR"
     Descr="The sending time that is bound in the notifications."
  4: hh3cSmsEncodeBind
     Syntax="INTEGER"
       1: ascii
       2: ucs2
     Descr="The encoded type that is bound in the notifications."
  5: hh3cSmsContentBind
     Syntax="OCTETSTR"
     Descr="The content of short message that is bound in the notifications."
EDESC
#
#
#
#
MIB: HH3C-8021X-EXT2-MIB (file:./hh3c-8021x-ext2.mib) converted on Fri Mar 18 23:13:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-8021PAE-MIB (file:./hh3c-8021x-ext.mib) converted on Fri Mar 18 23:13:21 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3csupplicantproxycheck .1.3.6.1.4.1.25506.8.6.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Variables:
  1: hh3cproxycheckVlanId
     Syntax="INTEGER"
     Descr="."
  2: hh3cproxycheckPortName
     Syntax="OCTETSTR"
     Descr="."
  3: hh3cproxycheckMacAddr
     Syntax="OCTETSTR"
     Descr="."
  4: hh3cproxycheckIpaddr
     Syntax="IPADDR"
     Descr="."
  5: hh3cproxycheckUsrName
     Syntax="OCTETSTR"
     Descr="."
EDESC
#
#
#
#
MIB: HH3C-AAA-MIB (file:./hh3c-aaa.mib) converted on Fri Mar 18 23:13:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-AAA-NASID-MIB (file:./hh3c-aaa-nasid.mib) converted on Fri Mar 18 23:13:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-AAL5-MIB (file:./hh3c-aal5.mib) converted on Fri Mar 18 23:13:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ACFP-MIB (file:./hh3c-acfp.mib) converted on Fri Mar 18 23:13:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAcfpCurContextChanged .1.3.6.1.4.1.25506.2.74.1.1.5.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when router or switch changed $*
SDESC
This notification is sent when router or switch changed
hh3cAcfpServerCurContextType.
Variables:
  1: hh3cAcfpServerCurContextType
     Syntax="INTEGER"
       1: no-context
       2: context-VLANID
       3: context-HG
       4: context-FlowID
       5: context-HGPlus
     Descr="In some circumstances, it's necessary that packets go to
        ACFP client with context from ACFP server.  However, the context
        perhaps is different.  hh3cAcfpServerCurContextType is
        used to distinguish this difference, ACFP client may
        process distinctively."
EDESC
#
#
#
EVENT hh3cAcfpClientRegister .1.3.6.1.4.1.25506.2.74.1.1.5.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when the ACFP client is registered. $*
SDESC
This notification is sent when the ACFP client is registered.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpClientUnRegister .1.3.6.1.4.1.25506.2.74.1.1.5.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when the ACFP client is unregistered. $*
SDESC
This notification is sent when the ACFP client is unregistered.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpClientDead .1.3.6.1.4.1.25506.2.74.1.1.5.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when the ACFP client is not responding. $*
SDESC
This notification is sent when the ACFP client is not responding.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpNotSupportedOAPMode .1.3.6.1.4.1.25506.2.74.1.1.5.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when router or switch cannot support OAP $*
SDESC
This notification is sent when router or switch cannot support OAP
mode that ACFP client wants to operate on.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
  2: hh3cAcfpClientMode
     Syntax="BITS"
     Descr="ACFP client informs Router or switch which mode it is operating.
        Router or switch checks hh3cAcfpServerInfo to see whether it is
        capable of fulfilling this function.  If not, router or switch
        generates a trap informing ACFP client such OAP mode is not
        supported."
  3: hh3cAcfpServerInfo
     Syntax="BITS"
     Descr="When retrieved, this object returns a set of bits
        indicating the capabilities (or configuration) of the
        switch or router.  The set bit is indication that a
        router or switch can support the action for
        security rule."
EDESC
#
#
#
EVENT hh3cAcfpLifetimeChangeEvent .1.3.6.1.4.1.25506.2.74.1.1.5.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification can be generated for indicating that $*
SDESC
This notification can be generated for indicating that
The lifetime of all member rules of the was
changed by successfully writing to object
hh3cAcfpPolicyLifetime.  Note that this notification
is only sent if the lifetime of a policy was changed by
successfully writing to object hh3cAcfpPolicyLifetime.
Variables:
  1: hh3cAcfpPolicyLifetime
     Syntax="INTEGER32"
     Descr="When retrieved, this object delivers the maximum lifetime (seconds)
        of all the rules of this, i.e., of all the rows in hh3cAcfpRuleTable
        that have the same values of hh3cAcfpRulePolicyIndex and
        hh3cAcfpClientID.  Successfully writing to this object modifies the
        lifetime of all the rules of this.  Successfully writing a value
        of 0 terminates all the rules and implicitly deletes this as soon as
        all member entries are removed from the hh3cAcfpRuleTable. Note that
        after a lifetime expired, all the corresponding entry in the
        hh3cAcfpRuleTable will be removed and this will be deleted
        implicitly.  Writing to this object is processed by the ACFP MIB
        implementation by choosing a lifetime value that is greater than
        or equal to zero and less than or equal to the minimum of the requested
        value and the value specified by object hh3cAcfpServerMaxLifetime:

            0 <= lt_granted <= MINIMUM(lt_requested, lt_maximum)

        whereas:
        lt_granted is the actually granted lifetime by the ACFP MIB
        implementation.
        lt_requested is the requested lifetime of the ACFP client.
        lt_maximum is the value of object hh3cAcfpServerMaxLifetime.
        SNMP set requests to this object may be rejected or the value of
        the object after an accepted set operation may be less than the
        value that was contained in the SNMP set request."
EDESC
#
#
#
EVENT hh3cAcfpRuleCreatedEvent .1.3.6.1.4.1.25506.2.74.1.1.5.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when a new rule is created. $*
SDESC
This notification is sent when a new rule is created.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpRuleDeletedEvent .1.3.6.1.4.1.25506.2.74.1.1.5.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when a rule is deleted. $*
SDESC
This notification is sent when a rule is deleted.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpRuleErrorEvent .1.3.6.1.4.1.25506.2.74.1.1.5.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when rule cannot be applied. $*
SDESC
This notification is sent when rule cannot be applied.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpLifetimeExpireEvent .1.3.6.1.4.1.25506.2.74.1.1.5.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent $*
SDESC
This notification is sent
when the time of the policy existed exceeds its lifetime.
Variables:
  1: hh3cAcfpPolicyLifetime
     Syntax="INTEGER32"
     Descr="When retrieved, this object delivers the maximum lifetime (seconds)
        of all the rules of this, i.e., of all the rows in hh3cAcfpRuleTable
        that have the same values of hh3cAcfpRulePolicyIndex and
        hh3cAcfpClientID.  Successfully writing to this object modifies the
        lifetime of all the rules of this.  Successfully writing a value
        of 0 terminates all the rules and implicitly deletes this as soon as
        all member entries are removed from the hh3cAcfpRuleTable. Note that
        after a lifetime expired, all the corresponding entry in the
        hh3cAcfpRuleTable will be removed and this will be deleted
        implicitly.  Writing to this object is processed by the ACFP MIB
        implementation by choosing a lifetime value that is greater than
        or equal to zero and less than or equal to the minimum of the requested
        value and the value specified by object hh3cAcfpServerMaxLifetime:

            0 <= lt_granted <= MINIMUM(lt_requested, lt_maximum)

        whereas:
        lt_granted is the actually granted lifetime by the ACFP MIB
        implementation.
        lt_requested is the requested lifetime of the ACFP client.
        lt_maximum is the value of object hh3cAcfpServerMaxLifetime.
        SNMP set requests to this object may be rejected or the value of
        the object after an accepted set operation may be less than the
        value that was contained in the SNMP set request."
EDESC
#
#
#
#
MIB: HH3C-ACL-MIB (file:./hh3c-acl.mib) converted on Fri Mar 18 23:13:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMACfilterTrap .1.3.6.1.4.1.25506.2.8.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a packet was processed $*
SDESC
This notification is generated when a packet was processed
by MAC address filter, but not every packet will generate one
notification, the same notification only generate once in 30
seconds.

Variables:
  1: hh3cPfilterInterface
     Syntax="OCTETSTR"
     Descr="The interface which policy apply."
  2: hh3cPfilterDirection
     Syntax="OCTETSTR"
     Descr="Inbound or outbound."
  3: hh3cPfilterACLNumber
     Syntax="INTEGER32"
     Descr="ACL number."
  4: hh3cPfilterAction
     Syntax="OCTETSTR"
     Descr="Permit or deny."
  5: hh3cMACfilterSourceMac
     Syntax="OCTETSTR"
     Descr="Source MAC address."
  6: hh3cMACfilterDestinationMac
     Syntax="OCTETSTR"
     Descr="Destination MAC address."
  7: hh3cPfilterPacketNumber
     Syntax="INTEGER32"
     Descr="The number of packets permitted or denied by ACL."
  8: hh3cPfilterReceiveInterface
     Syntax="OCTETSTR"
     Descr="The interface where packet come from."
EDESC
#
#
#
EVENT hh3cAclRuleMatchCount .1.3.6.1.4.1.25506.2.8.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated periodically due to a timer. $*
SDESC
This notification is generated periodically due to a timer.
The interval of the timer is configured in hh3cAclIntervalTable.
The notification details the entries about the packet-filter
object, the matched ACL rule and the number of matching packets.

Variables:
  1: hh3cPfilter2ApplyObjType
     Syntax="INTEGER"
       1: interface
       2: vlan
       3: global
     Descr="The object type of packet filter application.
                interface: Apply an ACL to the interface to filter packets.
                vlan: Apply an ACL to the VLAN to filter packets.
                global: Apply an ACL globally to filter packets.
                "
  2: hh3cPfilter2ApplyObjIndex
     Syntax="INTEGER32"
     Descr="The object ID of packet filter application.
                Interface: interface index, equal to ifIndex
                VLAN: VLAN ID, 1..4094
                Global: 0
                "
  3: hh3cPfilter2ApplyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction of packet filter application."
  4: hh3cPfilter2ApplyAclType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
       3: default
       4: mac
       5: user
     Descr="ACL Type: IPv4, IPv6, default action, MAC, and user.
                Take default action as a special ACL group.
                "
  5: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  6: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  7: hh3cPfilter2AclRuleMatchPackets
     Syntax="COUNTER64"
     Descr="The number of packets matched."
EDESC
#
#
#
EVENT hh3cAclFirstIPv4PktCaptured .1.3.6.1.4.1.25506.2.8.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched IPv4 flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcIP
     Syntax="OCTETSTR"
     Descr="Source IP address of IPv4/IPv6 packet."
  8: hh3cAclPacketDstIP
     Syntax="OCTETSTR"
     Descr="Destination IP address of IPv4/IPv6 packet."
  9: hh3cAclPacketProtocol
     Syntax="INTEGER32"
     Descr="The protocol of IPv4/IPv6 packet.
                icmp(1),
                tcp(6),
                udp(17),
                igmp(2),
                gre(47),
                ospf(89),
                ipinip(4),
                icmp6(58),
                ipv6_ah(51),
                ipv6_esp(50)
                "
 10: hh3cAclPacketDscp
     Syntax="INTEGER32"
     Descr="DSCP of IPv4/IPv6 packet."
 11: hh3cAclPacketIcmpIgmpType
     Syntax="INTEGER32"
     Descr="The type of ICMP or IGMP packet."
 12: hh3cAclPacketIcmpIgmpCode
     Syntax="INTEGER32"
     Descr="The code of ICMP or IGMP packet."
 13: hh3cAclPacketTcpFlags
     Syntax="INTEGER"
       1: tcpack
       2: tcpfin
       255: invalid
       3: tcppsh
       4: tcprst
       5: tcpsyn
       6: tcpurg
     Descr="The flags of TCP packet.
                tcpack(1),
                tcpfin(2),
                tcppsh(3),
                tcprst(4),
                tcpsyn(5),
                tcpurg(6),
                invalid(255)
                "
 14: hh3cAclPacketSrcPort
     Syntax="INTEGER32"
     Descr="Source port of TCP or UDP packet."
 15: hh3cAclPacketDstPort
     Syntax="INTEGER32"
     Descr="Destination port of TCP or UDP packet."
EDESC
#
#
#
EVENT hh3cAclFirstIPv6PktCaptured .1.3.6.1.4.1.25506.2.8.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched IPv6 flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcIP
     Syntax="OCTETSTR"
     Descr="Source IP address of IPv4/IPv6 packet."
  8: hh3cAclPacketDstIP
     Syntax="OCTETSTR"
     Descr="Destination IP address of IPv4/IPv6 packet."
  9: hh3cAclPacketProtocol
     Syntax="INTEGER32"
     Descr="The protocol of IPv4/IPv6 packet.
                icmp(1),
                tcp(6),
                udp(17),
                igmp(2),
                gre(47),
                ospf(89),
                ipinip(4),
                icmp6(58),
                ipv6_ah(51),
                ipv6_esp(50)
                "
 10: hh3cAclPacketDscp
     Syntax="INTEGER32"
     Descr="DSCP of IPv4/IPv6 packet."
 11: hh3cAclPacketFlowLabel
     Syntax="UNSIGNED32"
     Descr="Flow label value of IPv6 packet."
 12: hh3cAclPacketIcmpIgmpType
     Syntax="INTEGER32"
     Descr="The type of ICMP or IGMP packet."
 13: hh3cAclPacketIcmpIgmpCode
     Syntax="INTEGER32"
     Descr="The code of ICMP or IGMP packet."
 14: hh3cAclPacketTcpFlags
     Syntax="INTEGER"
       1: tcpack
       2: tcpfin
       255: invalid
       3: tcppsh
       4: tcprst
       5: tcpsyn
       6: tcpurg
     Descr="The flags of TCP packet.
                tcpack(1),
                tcpfin(2),
                tcppsh(3),
                tcprst(4),
                tcpsyn(5),
                tcpurg(6),
                invalid(255)
                "
 15: hh3cAclPacketSrcPort
     Syntax="INTEGER32"
     Descr="Source port of TCP or UDP packet."
 16: hh3cAclPacketDstPort
     Syntax="INTEGER32"
     Descr="Destination port of TCP or UDP packet."
EDESC
#
#
#
EVENT hh3cAclFirstEthernetPktCaptured .1.3.6.1.4.1.25506.2.8.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched Ethernet flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcMacAddr
     Syntax="OCTETSTR"
     Descr="Source MAC address of Ethernet packet."
  8: hh3cAclPacketDstMacAddr
     Syntax="OCTETSTR"
     Descr="Destination MAC address of Ethernet packet."
  9: hh3cAclPacketMacTypeLen
     Syntax="INTEGER32"
     Descr="The Ethertype or 802.3 length of Ethernet packet."
 10: hh3cAclPacketVlanPCP
     Syntax="INTEGER32"
     Descr="802.1p priority code point of Ethernet packet."
EDESC
#
#
#
EVENT hh3cAclResourceTrap .1.3.6.1.4.1.25506.2.8.7.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of entries on TCAM $*
SDESC
This notification is generated when the number of entries on TCAM
becomes equal to or greater than a preset threshold level
Variables:
  1: hh3cAclResourceTypeName
     Syntax="OCTETSTR"
     Descr="The name of TCAM resources."
  2: hh3cAclResourceUsage
     Syntax="INTEGER32"
     Descr="The current usage of TCAM resources."
  3: hh3cAclResourceUsedEntries
     Syntax="INTEGER32"
     Descr="The used number of entries on TCAM."
  4: hh3cAclResourceTotalEntries
     Syntax="INTEGER32"
     Descr="The total number of entries on TCAM."
  5: hh3cAclMib2ResourceThreshold
     Syntax="INTEGER32"
     Descr="The threshold of TCAM resources.
                 The value 0 indicates that cancelling the TCAM resource notification function."
  6: hh3cAclResourceChassisID
     Syntax="INTEGER32"
     Descr="The chassis number.  On a centralized or distributed device,
                 the value for this node is always zero."
  7: hh3cAclResourceSlotID
     Syntax="INTEGER32"
     Descr="The slot number.  On a centralized device, the value for
                 this node is always zero."
EDESC
#
#
#
#
MIB: HH3C-AFC-MIB (file:./hh3c-afc.mib) converted on Fri Mar 18 23:13:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ARP-ENTRY-MIB (file:./hh3c-arp-entry.mib) converted on Fri Mar 18 23:13:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ARP-RATELIMIT-MIB (file:./hh3c-arp-ratelimit.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cARPRatelimitOverspeedTrap .1.3.6.1.4.1.25506.2.110.1.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA If the rate of ARP packets delivered to the CPU on a device $*
SDESC
If the rate of ARP packets delivered to the CPU on a device
exceeds the threshold, a trap message is generated and sent
to the remote monitoring device.
Variables:
  1: hh3cARPRatelimitTrapVer
     Syntax="UNSIGNED32"
     Descr="The version of trap information."
  2: hh3cARPRatelimitTrapCount
     Syntax="UNSIGNED32"
     Descr="Number of cells in the trap message.  A trap message may contain
        multiple cells, each of which indicates that the rate information of
        ARP packets exceeds the threshold."
  3: hh3cARPRatelimitTrapMsg
     Syntax="OCTETSTR"
     Descr="This object is the cell section in a trap message sent from a
        monitored device.  This object can contain multiple cells.
        This object is in the format of '<cell1><cell2>...'.  Each cell
        consists of 17 octets in the format of
        '<TrapOrigin><IfIndex><OverSpeedValue><Threshold><Interval>'.

        <TrapOrigin> indicates the source of the trap message and has
        size of 1 octet.  It only supports the following values.
        1 - Global.
        2 - Interface.

        <IfIndex> is the index of the interface where the rate of ARP packet
        exceeds the threshold and has size of 4 octets.  It is 0xFFFFFFFF
        when <TrapOrigin> is 1(Global).

        <OverSpeedValue> indicates the rate that ARP packets are actually
        delivered and has size of 4 octets.

        <Threshold> indicates the threshold that ARP packets can be delivered
        to CPU and has size of 4 octets.

        <Interval> indicates the interval that a trap message is sent out
        and has size of 4 octets."
EDESC
#
#
#
#
MIB: HH3C-ARP-SOURCE-SUPPRESSION-MIB (file:./hh3c-arp-source-suppression.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ATM-DXI-MIB (file:./hh3c-atm-dxi.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BFD-STD-MIB (file:./hh3c-bfd-std.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBfdSessStateChange .1.3.6.1.4.1.25506.2.72.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when a session changes $*
SDESC
A notification sent when a session changes
state, entering state up or entering state down.
The session will enter state up finishing three times handshakes
, and will enter state down when the communication path is out
of work.
When the hh3cBfdSessState's value is state up, the session enters
state up, and the session enters state down when the
hh3cBfdSessState's value is state down.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
EDESC
#
#
#
EVENT hh3cBfdSessAuthFail .1.3.6.1.4.1.25506.2.72.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when receiving a session $*
SDESC
A notification sent when receiving a session
with an authentication fail.
The hh3cBfdIfIndex is an index which represents a unique BFD
interface on this device.

Variables:
  1: hh3cBfdIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an index that represents a
         unique BFD interface on this device."
EDESC
#
#
#
EVENT hh3cBfdSessStateUp .1.3.6.1.4.1.25506.2.72.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when a session changes state to up. $*
SDESC
A notification sent when a session changes state to up.
The session will enter state up finishing three times handshakes.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.
The hh3cBfdSessName is the name of the running BFD session.
The hh3cBfdVpnInstanceName contains a VPN's name under which
the BFD session runs.
The hh3cBfdLocalAddr contains an IP address of the local interface
from which the BFD packets is transmitted.
The hh3cBfdRemoteAddr contains an IP address of the remote interface
from which the BFD packets is transmitted.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
  4: hh3cBfdSessName
     Syntax="OCTETSTR"
     Descr="A name used to uniquely identify BFD sessions."
  5: hh3cBfdVpnInstanceName
     Syntax="OCTETSTR"
     Descr="The human-readable name of this VPN.  This MAY
         be equivalent to the [RFC2685] VPN-ID, but may
         also vary.  If it is set to the VPN ID, it MUST
         be equivalent to the value of mplsL3VpnVrfVpnId.
         It is strongly recommended that all sites supporting
         VRFs that are part of the same VPN use the same
         naming convention for VRFs as well as the same VPN
         ID."
  6: hh3cBfdLocalAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
  7: hh3cBfdRemoteAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
EDESC
#
#
#
EVENT hh3cBfdSessStateDown .1.3.6.1.4.1.25506.2.72.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when a session changes state to down. $*
SDESC
A notification sent when a session changes state to down.
The session will enter state down when the communication path is out
of work.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.
The hh3cBfdSessName is the name of the running BFD session.
The hh3cBfdVpnInstanceName contains a VPN's name under which
the BFD session runs.
The hh3cBfdLocalAddr contains an IP address of the local interface
from which the BFD packets is transmitted.
The hh3cBfdRemoteAddr contains an IP address of the remote interface
from which the BFD packets is transmitted.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
  4: hh3cBfdSessName
     Syntax="OCTETSTR"
     Descr="A name used to uniquely identify BFD sessions."
  5: hh3cBfdVpnInstanceName
     Syntax="OCTETSTR"
     Descr="The human-readable name of this VPN.  This MAY
         be equivalent to the [RFC2685] VPN-ID, but may
         also vary.  If it is set to the VPN ID, it MUST
         be equivalent to the value of mplsL3VpnVrfVpnId.
         It is strongly recommended that all sites supporting
         VRFs that are part of the same VPN use the same
         naming convention for VRFs as well as the same VPN
         ID."
  6: hh3cBfdLocalAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
  7: hh3cBfdRemoteAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
EDESC
#
#
#
EVENT hh3cBfdSessReachLimit .1.3.6.1.4.1.25506.2.72.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification would be sent when the number of active BFD sessions $*
SDESC
A notification would be sent when the number of active BFD sessions
reached this device's upper limit and no more session could be
activated.
The hh3cBfdSessNumberLimit is the active session limit of this device.
Variables:
  1: hh3cBfdSessNumberLimit
     Syntax="UNSIGNED32"
     Descr="This variable is the active session limit of this device."
EDESC
#
#
#
#
MIB: HH3C-BGP4V2-MIB (file:./hh3c-bgp4v2.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBgp4v2Established .1.3.6.1.4.1.25506.2.183.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cBgp4v2Established event is generated when the BGP4+ $*
SDESC
The hh3cBgp4v2Established event is generated when the BGP4+
FSM enters the ESTABLISHED state.
Variables:
  1: hh3cBgp4v2PeerRemoteAddr
     Syntax="OCTETSTR"
     Descr="The remote IPv6 address of this entry's BGP
        peer."
  2: hh3cBgp4v2PeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
        peer on this connection.  If no error has
        occurred, this field is zero.  Otherwise, the
        first byte of this two byte OCTET STRING
        contains the error code, and the second byte
        contains the subcode."
  3: hh3cBgp4v2PeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: opensent
       5: openconfirm
       6: established
     Descr="The BGP peer connection state."
EDESC
#
#
#
EVENT hh3cBgp4v2BackwardTransition .1.3.6.1.4.1.25506.2.183.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cBgp4v2BackwardTransition event is generated when $*
SDESC
The hh3cBgp4v2BackwardTransition event is generated when
the BGP4+ FSM moves from a higher numbered state to a lower
numbered state.
Due to the nature of the BGP state machine, an
implementation MAY rate limit the generation of this event.
An implementation MAY also generate this notification ONLY
when the state machine moves out of the established state.
An implementation should document its specific behavior.
Variables:
  1: hh3cBgp4v2PeerRemoteAddr
     Syntax="OCTETSTR"
     Descr="The remote IPv6 address of this entry's BGP
        peer."
  2: hh3cBgp4v2PeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
        peer on this connection.  If no error has
        occurred, this field is zero.  Otherwise, the
        first byte of this two byte OCTET STRING
        contains the error code, and the second byte
        contains the subcode."
  3: hh3cBgp4v2PeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: opensent
       5: openconfirm
       6: established
     Descr="The BGP peer connection state."
EDESC
#
#
#
#
MIB: HH3C-BGP-EVPN-MIB (file:./hh3c-bgp-evpn.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BGP-VPN-MIB (file:./hh3c-bgp-vpn.mib) converted on Fri Mar 18 23:13:23 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBgpVpnRpkiSessionRoaExceed .1.3.6.1.4.1.25506.2.202.3.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The RPKI SessionRoaExceed event will be generated when the number of rpki session ROA exceeds. $*
SDESC
The RPKI SessionRoaExceed event will be generated when the number of rpki session ROA exceeds.
Variables:
  1: hh3cBgpVpnRpkiSessionRoaLimitNum
     Syntax="UNSIGNED32"
     Descr="Restriction number of rpki session ROA."
EDESC
#
#
#
EVENT hh3cBgpVpnRpkiSessionRoaExceedClear .1.3.6.1.4.1.25506.2.202.3.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Generate rpki sessionroaedeclear event when the number of rpki session ROAs exceeds clear. $*
SDESC
Generate rpki sessionroaedeclear event when the number of rpki session ROAs exceeds clear.
Variables:
  1: hh3cBgpVpnRpkiSessionRoaLimitNum
     Syntax="UNSIGNED32"
     Descr="Restriction number of rpki session ROA."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteNumThresholdExceed .1.3.6.1.4.1.25506.2.202.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of routes received from the BGP peer exceeds the alarm threshold. $*
SDESC
This notification is generated when the number of routes received from the BGP peer exceeds the alarm threshold.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteNumThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of routes received from the BGP peer decreases below the alarm threshold. $*
SDESC
This notification is generated when the number of routes received from the BGP peer decreases below the alarm threshold.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteExceed .1.3.6.1.4.1.25506.2.202.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when bgp peer session route number exceed. $*
SDESC
This notification is generated when bgp peer session route number exceed.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteExceedClear .1.3.6.1.4.1.25506.2.202.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when bgp peer session route number exceed clear. $*
SDESC
This notification is generated when bgp peer session route number exceed clear.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerEstablished .1.3.6.1.4.1.25506.2.202.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA When the BGP FSM enters the established state, the BGP established event is generated. $*
SDESC
When the BGP FSM enters the established state, the BGP established event is generated.
Variables:
  1: hh3cBgpPeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
          peer on this connection.  If no error has
          occurred, this field is zero.  Otherwise, the
          first byte of this two byte OCTET STRING
          contains the error code, and the second byte
          contains the subcode."
  2: hh3cBgpPeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: openSent
       5: openConfirm
       6: established
     Descr="The status of the remote BGP peer, including:
            1: Idle(1)
            2: Connect(2)
            3: Active(3)
            4: OpenSent(4)
            5: OpenConfirm(5)
            6: Established(6)"
EDESC
#
#
#
EVENT hh3cBgpPeerBackwardTransition .1.3.6.1.4.1.25506.2.202.4.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The BGPBackwardTransition Event is generated $*
SDESC
The BGPBackwardTransition Event is generated
when the BGP FSM number moves from a higher
state to a lower state.
Variables:
  1: hh3cBgpPeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
          peer on this connection.  If no error has
          occurred, this field is zero.  Otherwise, the
          first byte of this two byte OCTET STRING
          contains the error code, and the second byte
          contains the subcode."
  2: hh3cBgpPeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: openSent
       5: openConfirm
       6: established
     Descr="The status of the remote BGP peer, including:
            1: Idle(1)
            2: Connect(2)
            3: Active(3)
            4: OpenSent(4)
            5: OpenConfirm(5)
            6: Established(6)"
  3: hh3cBgpPeerUnAvaiReason
     Syntax="INTEGER"
       1: otherErrCode
       10: unsupportedOptionalParameter
       11: authenticationFailure
       12: unacceptableHoldTime
       13: unsupportedCapability
       14: malformedAttributeList
       15: unrecognizedWellknownAttr
       16: missingWellknownAttribute
       17: attributeFlagsError
       18: attributeLengthError
       19: invalidORIGINAttribute
       2: errSubCodeUnspecified
       20: asRoutingLoop
       21: invalidNEXTHOPAttribute
       22: optionalAttributeError
       23: invalidNetworkField
       24: malformedASPATH
       25: receiveUnexpectedMessageinOpenSent
       26: receiveUnexpectedMessageinOpenConfirm
       27: receiveUnexpectedMessageinEstablished
       28: maximumNumberofPrefixesReached
       29: administrativeShutdown
       3: unknownErrSubcode
       30: peerDeconfigured
       31: administrativeReset
       32: connectionRejected
       33: otherConfigurationChange
       34: connectionCollisionResolution
       35: outofResources
       4: connectionNoSynchronized
       5: badMessageLength
       6: badMessageType
       7: unsupportedVersionNumber
       8: badPeerAS
       9: badBGPIdentifier
     Descr="The reason of BGP states change."
EDESC
#
#
#
EVENT hh3cBgpVrfRouteNumReachThreshold .1.3.6.1.4.1.25506.2.202.4.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The VPN instance routes reached the alarm threshould. $*
SDESC
The VPN instance routes reached the alarm threshould.
Variables:
  1: hh3cBgpVpnRouteType
     Syntax="UNSIGNED32"
     Descr="Route type."
  2: hh3cBgpVpnInstName
     Syntax="OCTETSTR"
     Descr="VPN instance name."
  3: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  4: hh3cBgpVpnCurrRouteNum
     Syntax="UNSIGNED32"
     Descr="Current number of BGP peer routes."
  5: hh3cBgpVpnThresholdValue
     Syntax="UNSIGNED32"
     Descr="Total threshold value."
EDESC
#
#
#
EVENT hh3cBgpVrfRouteNumReachThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The VPN instance routes fell below the clear alarm threshold. $*
SDESC
The VPN instance routes fell below the clear alarm threshold.
Variables:
  1: hh3cBgpVpnRouteType
     Syntax="UNSIGNED32"
     Descr="Route type."
  2: hh3cBgpVpnInstName
     Syntax="OCTETSTR"
     Descr="VPN instance name."
  3: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  4: hh3cBgpVpnCurrRouteNum
     Syntax="UNSIGNED32"
     Descr="Current number of BGP peer routes."
  5: hh3cBgpVpnThresholdValue
     Syntax="UNSIGNED32"
     Descr="Total threshold value."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteThresholdExceed .1.3.6.1.4.1.25506.2.202.4.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when when the number of $*
SDESC
This notification is generated when when the number of
routes received by the neighbor under the BGP address family
reaches an alarm threshold state.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
  4: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbor below the BGP address
family drops below the alert threshold.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
  4: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteExceed .1.3.6.1.4.1.25506.2.202.4.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbor under the BGP address
family reaches a maximum state.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteExceedClear .1.3.6.1.4.1.25506.2.202.4.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbors below the BGP address
family drops below a maximum.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
#
MIB: HH3C-BLG-MIB (file:./hh3c-blg.mib) converted on Fri Mar 18 23:13:24 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BPA-MIB (file:./hh3c-bpa.mib) converted on Fri Mar 18 23:13:24 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BRAS-ACCESS-MIB (file:./hh3c-bras-access.mib) converted on Fri Mar 18 23:13:24 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CATV-TRANSCEIVER-MIB (file:./hh3c-catv-transceiver.mib) converted on Fri Mar 18 23:13:24 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CBQOS2-MIB (file:./hh3c-cbqos2.mib) converted on Fri Mar 18 23:13:24 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCBQoSIfPolicyChanged .1.3.6.1.4.1.25506.2.65.2.1.7.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the applying status $*
SDESC
This notification will be sent when the applying status
of the policy on the interface is changed.
Variables:
  1: hh3cCBQoSIfApplyPolicyIfIndex
     Syntax="INTEGER32"
     Descr="Interface Index, equal to ifIndex."
  2: hh3cCBQoSIfApplyPolicyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)
        "
EDESC
#
#
#
EVENT hh3cCBQoSVlanPolicyChanged .1.3.6.1.4.1.25506.2.65.2.1.7.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the applying status $*
SDESC
This notification will be sent when the applying status
of the policy on the VLAN is changed.
Variables:
  1: hh3cCBQoSVlanApplyPolicyVlanid
     Syntax="INTEGER32"
     Descr="Vlan of Ethernet Interface."
  2: hh3cCBQoSVlanApplyPolicyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
EVENT hh3cCBQoSGlobalAclNotSupport .1.3.6.1.4.1.25506.2.65.2.1.7.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The global ACL configuration cannot work. $*
SDESC
The global ACL configuration cannot work.
Variables:
  1: hh3cCBQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cCBQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cCBQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cCBQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
EVENT hh3cCBQoSGlobalQPPBNotSupport .1.3.6.1.4.1.25506.2.65.2.1.7.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The global QPPB will not be effective. $*
SDESC
The global QPPB will not be effective.
Variables:
  1: hh3cCBQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cCBQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cCBQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cCBQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
#
MIB: HH3C-CFCARD-MIB (file:./hh3c-cfcard.mib) converted on Fri Mar 18 23:13:24 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CFD-MIB (file:./hh3c-cfd.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-COMMON-SYSTEM-MIB (file:./hh3c-common-system.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWriteSuccessTrap .1.3.6.1.4.1.25506.6.8.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about write success. $*
SDESC
Send a trap about write success.
EDESC
#
#
#
EVENT hh3cWriteFailureTrap .1.3.6.1.4.1.25506.6.8.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about write failure. $*
SDESC
Send a trap about write failure.
EDESC
#
#
#
EVENT hh3cRebootSendTrap .1.3.6.1.4.1.25506.6.8.3 "Status Events" Normal
FORMAT ZBXTRAP $aA If a user restarts the device with command $*
SDESC
If a user restarts the device with command
'reboot', this trap will be sent two seconds
before the device reboots.
EDESC
#
#
#
EVENT hh3cSysColdStartTrap .1.3.6.1.4.1.25506.6.8.4 "Status Events" Normal
FORMAT ZBXTRAP $aA System cold start trap. $*
SDESC
System cold start trap.
Variables:
  1: hh3cSysFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
EVENT hh3cSysWarmStartTrap .1.3.6.1.4.1.25506.6.8.5 "Status Events" Normal
FORMAT ZBXTRAP $aA System warm start trap. $*
SDESC
System warm start trap.
Variables:
  1: hh3cSysFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
EVENT hh3cSysLoghostUnreachableTrap .1.3.6.1.4.1.25506.6.8.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when a loghost becomes unreachable. $*
SDESC
This notification will be sent when a loghost becomes unreachable.
Variables:
  1: hh3cSysLoghostIndex
     Syntax="INTEGER32"
     Descr="Index of loghost."
  2: hh3cSysLoghostIpaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP address type of the loghost."
  3: hh3cSysLoghostIpaddress
     Syntax="OCTETSTR"
     Descr="IP address of the loghost."
  4: hh3cSysLoghostTrapVpnName
     Syntax="OCTETSTR"
     Descr="VPN name of the loghost."
EDESC
#
#
#
EVENT hh3cSysDyingGaspTrap .1.3.6.1.4.1.25506.6.8.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent upon loss of power. $*
SDESC
This notification will be sent upon loss of power.
EDESC
#
#
#
#
MIB: HH3C-CONFIG-MAN-MIB (file:./hh3c-config-man.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCfgManEventlog .1.3.6.1.4.1.25506.2.4.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The object calculates the checksum on the current config per 10 minutes and $*
SDESC
The object calculates the checksum on the current config per 10 minutes and
even if it is different from the saved config but if a trap has been sent
with the same checksum then don't send again until the checksum is different.
Variables:
  1: hh3cCfgLogSrcCmd
     Syntax="INTEGER"
       1: cmdLine
       2: snmp
       3: other
     Descr="Specify the source command which brought the log.
        Currently, we provide the following types of sources:
        1.cmdLine(1):configure log instigated by command line.
        2.snmp(2):configure log instigated by SNMPS.
        3.other(3):configure log instigated by other source unknown."
  2: hh3cCfgLogSrcData
     Syntax="INTEGER"
       1: erase
       2: runningData
       3: commandSource
       4: startupData
       5: local
       6: netFtp
       7: hotPlugging
     Descr="The source of the configuration data event.
        erase           erasing destination
        runningData     operational data alive
        commandSource   the command source itself
        startupData     what the system will use next reboot
        local           local NVRAM or flash
        netFtp          FTP network transfer
        hotPlugging     board is inserted or pulled out on line
        "
  3: hh3cCfgLogDesData
     Syntax="INTEGER"
       1: unknown
       2: runningData
       3: commandSource
       4: startupData
       5: local
       6: netFtp
       7: hotPlugging
     Descr="The destination for the configuration data event.
        unknown          unknown
        runningData     operational data alive
        commandSource   the command source itself
        startupData     what the system will use next reboot
        local           local NVRAM or flash
        netFtp          FTP network transfer
        hotPlugging     board is inserted or pulled out on line"
EDESC
#
#
#
EVENT hh3cCfgOperateCompletion .1.3.6.1.4.1.25506.2.4.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When create hh3cCfgOperateTable successfully, a $*
SDESC
When create hh3cCfgOperateTable successfully, a
notification may be generated.
Variables:
  1: hh3cCfgOperateType
     Syntax="INTEGER"
       1: running2Startup
       2: startup2Running
       3: running2Net
       4: net2Running
       5: net2Startup
       6: startup2Net
       7: running2File
       8: file2Running
     Descr="Specify the type of operation on configuration."
  2: hh3cCfgOperateTime
     Syntax="TICKS"
     Descr="Record the time taken for the operation.  This object will
        be like a stopwatch, starting when the operation
        starts, and stopping when the operation completes."
  3: hh3cCfgOperateState
     Syntax="INTEGER"
       1: opInProgress
       10: opDeviceError
       11: opDeviceNotProgrammable
       12: opDeviceFull
       13: opFileOpenError
       14: opFileTransferError
       15: opFileChecksumError
       16: opNoMemory
       17: opAuthFail
       18: opTimeOut
       19: opUnknownFailure
       2: opSuccess
       20: opInvalidConfigFile
       21: opSlaveFull
       22: opCopyToSlaveFailure
       3: opInvalidOperation
       4: opInvalidProtocol
       5: opInvalidSourceName
       6: opInvalidDestName
       7: opInvalidServerAddress
       8: opDeviceBusy
       9: opDeviceOpenError
     Descr="The operation state type in the hh3cCfgOperateTable."
  4: hh3cCfgOperateEndTime
     Syntax="TICKS"
     Descr="The value of sysUpTime when the configuration operation is finished."
  5: hh3cCfgOperFailReason
     Syntax="OCTETSTR"
     Descr="The failure reasons of configuration operation."
EDESC
#
#
#
EVENT hh3cCfgInvalidConfigFile .1.3.6.1.4.1.25506.2.4.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA When the configuration file is invalid, this $*
SDESC
When the configuration file is invalid, this
notification will be generated.
Variables:
  1: hh3cCfgOperateType
     Syntax="INTEGER"
       1: running2Startup
       2: startup2Running
       3: running2Net
       4: net2Running
       5: net2Startup
       6: startup2Net
       7: running2File
       8: file2Running
     Descr="Specify the type of operation on configuration."
  2: hh3cCfgOperateFileName
     Syntax="OCTETSTR"
     Descr="When the object of hh3cCfgOperateType has the value of net2Startup, net2running,
        running2Net, running2File or file2Running, the value must be specified.

        The file name may include the path if applicable.

        If the value of hh3cCfgOperateType is net2Startup or net2running, this node specify the
        source file name of transfers.

        If the value of hh3cCfgOperateType is running2Net,
        this node specify the destination file name of transfers.

        When hh3cCfgOperateType has the value of startup2net, the object may not be
        created instead of using the file name of startup configuration file.

        If the value of hh3cCfgOperateType is running2File or file2Running,
        this node specifies the file name to be written or loaded."
  3: hh3cCfgFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
#
MIB: HH3C-CONTEXT-MIB (file:./hh3c-context.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CPDR-MIB (file:./hh3c-cpdr.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CUPM-CP-MIB (file:./hh3c-cupm-cp.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCupmCpProtoTnlUp .1.3.6.1.4.1.25506.2.194.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
CP device connects to VXLAN tunnel.
Variables:
  1: hh3cCupmCpVbUpID
     Syntax="INTEGER32"
     Descr="The number of UP device."
  2: hh3cCupmCpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  3: hh3cCupmCpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  4: hh3cCupmCpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  5: hh3cCupmCpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmCpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  7: hh3cCupmCpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
  8: hh3cCupmCpVbVxlanState
     Syntax="INTEGER"
       0: unknown
       1: up
       2: down
     Descr="The state of VXLAN protocol tunnel.
         0 (unknown) The VXLAN protocol tunnel is in unknown state.
         1 (up) The VXLAN protocol tunnel is in connected state.
         2 (down) The VXLAN protocol tunnel is in disconnected state."
EDESC
#
#
#
EVENT hh3cCupmCpProtoTnlDown .1.3.6.1.4.1.25506.2.194.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
CP device disconnects to VXLAN tunnel.
Variables:
  1: hh3cCupmCpVbUpID
     Syntax="INTEGER32"
     Descr="The number of UP device."
  2: hh3cCupmCpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  3: hh3cCupmCpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  4: hh3cCupmCpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  5: hh3cCupmCpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmCpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  7: hh3cCupmCpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
  8: hh3cCupmCpVbVxlanState
     Syntax="INTEGER"
       0: unknown
       1: up
       2: down
     Descr="The state of VXLAN protocol tunnel.
         0 (unknown) The VXLAN protocol tunnel is in unknown state.
         1 (up) The VXLAN protocol tunnel is in connected state.
         2 (down) The VXLAN protocol tunnel is in disconnected state."
EDESC
#
#
#
#
MIB: HH3C-CUPM-UP-MIB (file:./hh3c-cupm-up.mib) converted on Fri Mar 18 23:13:25 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCupmUpProtoTnlUp .1.3.6.1.4.1.25506.2.195.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
UP device connects to VXLAN tunnel.
Variables:
  1: hh3cCupmUpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  2: hh3cCupmUpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  3: hh3cCupmUpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  4: hh3cCupmUpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  5: hh3cCupmUpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmUpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
EDESC
#
#
#
EVENT hh3cCupmUpProtoTnlDown .1.3.6.1.4.1.25506.2.195.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when $*
SDESC
The notification is generated when
UP device disconnects to VXLAN tunnel.
Variables:
  1: hh3cCupmUpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  2: hh3cCupmUpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  3: hh3cCupmUpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  4: hh3cCupmUpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  5: hh3cCupmUpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmUpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
EDESC
#
#
#
#
MIB: HH3C-CUSP-MIB (file:./hh3c-cusp.mib) converted on Fri Mar 18 23:13:26 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCuspServerDisconnect .1.3.6.1.4.1.25506.2.190.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the controller is disconnected $*
SDESC
This trap is generated when the controller is disconnected
from the agent. The disconnection reason is
hh3cCuspServerDisconnectReason.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
  6: hh3cCuspServerDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Connection became abnormal.
             1: An SSL connection became abnormal.
             2: BFD timed out.
             3: Version negotiation failed.
             4: Protocol disabled.
             5: Connection became abnormal when messages were being sent.
             6: Connection recovery failed.
             7: Received invalid packets or incorrectly processed received packets.
             8: Connection became abnormal when messages were being received.
             9: VPN instance deleted.
             10: A TCP connection became abnormal.
             11: Heartbeat packets sending failed.
             12: Heartbeat packets timed out.
             13: Configuration changes.
             14: Not enough memory."
EDESC
#
#
#
EVENT hh3cCuspServerConnect .1.3.6.1.4.1.25506.2.190.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the controller is connected $*
SDESC
This trap is generated when the controller is connected
to the agent.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
EDESC
#
#
#
EVENT hh3cCuspClientDisconnect .1.3.6.1.4.1.25506.2.190.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the agent is disconnected $*
SDESC
This trap is generated when the agent is disconnected
from the controller. The disconnection reason is
hh3cCuspClientDisconnectReason.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
  6: hh3cCuspClientDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Connection became abnormal.
             1: Configuration changes.
             2: Heartbeat packets timed out.
             3: Version negotiation failed.
             4: Receiving Hello packets timed out.
             5: A TCP connection became abnormal.
             6: VPN instance deleted.
             7: VRF service disabled.
             8: Resource request failed.
             9: BFD timed out.
             10: Not enough memory."
EDESC
#
#
#
EVENT hh3cCuspClientConnect .1.3.6.1.4.1.25506.2.190.1.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the agent is connected $*
SDESC
This trap is generated when the agent is connected
to the controller.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
EDESC
#
#
#
#
MIB: HH3C-DAR-MIB (file:./hh3c-dar.mib) converted on Fri Mar 18 23:13:26 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP4-MIB (file:./hh3c-dhcp4.mib) converted on Fri Mar 18 23:13:26 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcpServer2AddrExhaust .1.3.6.1.4.1.25506.2.122.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when addresses are exhausted $*
SDESC
This trap is generated when addresses are exhausted
in the DHCP pool.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2AddrExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCP pool recovers from $*
SDESC
This trap is generated when the DHCP pool recovers from
address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2IpUsageOverflow .1.3.6.1.4.1.25506.2.122.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IP address usage of DHCP $*
SDESC
This trap is generated when the IP address usage of DHCP
server pool above the threshold.  The value of the IP address
usage is sampled for every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2AllocOverflow .1.3.6.1.4.1.25506.2.122.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the success rate of allocation $*
SDESC
This trap is generated when the success rate of allocation
of DHCP server IP address in 5 minutes below the threshold.
EDESC
#
#
#
EVENT hh3cDhcpServer2IpUsageOverflowRecov .1.3.6.1.4.1.25506.2.122.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IP address usage of DHCP $*
SDESC
This trap is generated when the IP address usage of DHCP
server pool reduced to 90% of the threshold.
The value of the IP address usage is sampled for every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetUsageOverflow .1.3.6.1.4.1.25506.2.122.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the subnet usage of DHCP $*
SDESC
This trap is generated when the subnet usage of DHCP
server pool has reached or exceeded the threshold. The IP address usage
data is polled every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetUsageOverflowRecov .1.3.6.1.4.1.25506.2.122.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the subnet usage in the DHCP $*
SDESC
This trap is generated when the subnet usage in the DHCP
server pool has dropped to or below 90% of the threshold.
The IP address usage data is polled every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetExhaust .1.3.6.1.4.1.25506.2.122.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all IP addresses $*
SDESC
This trap is generated when all IP addresses
in the DHCP pool are exhausted.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCP pool recovers from $*
SDESC
This trap is generated when the DHCP pool recovers from
IP address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2GpNetExhaust .1.3.6.1.4.1.25506.2.122.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all IP addresses $*
SDESC
This trap is generated when all IP addresses
in the DHCP pool group are exhausted.
Variables:
  1: hh3cDhcpServer2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCP server pool group name."
EDESC
#
#
#
EVENT hh3cDhcpServer2GpNetExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCP pool group recovers from $*
SDESC
This trap is generated when the DHCP pool group recovers from
IP address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCP server pool group name."
EDESC
#
#
#
#
MIB: HH3C-DHCP6-MIB (file:./hh3c-dhcp6.mib) converted on Fri Mar 18 23:13:26 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcp6Server2AddrExhaust .1.3.6.1.4.1.25506.2.179.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when IPv6 addresses are exhausted $*
SDESC
This trap is generated when IPv6 addresses are exhausted
in the DHCPv6 address pool.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2AddrExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 address pool recovers from $*
SDESC
This trap is generated when the DHCPv6 address pool recovers from
IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool is above the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool drops down to 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdExhaust .1.3.6.1.4.1.25506.2.179.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when IPv6 prefixes are exhausted $*
SDESC
This trap is generated when IPv6 prefixes are exhausted
in the DHCPv6 address pool.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 prefixes pool recovers from $*
SDESC
This trap is generated when the DHCPv6 prefixes pool recovers from
IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefixes usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 prefixes usage of DHCPv6
address pool is above the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefixes usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 prefixes usage of DHCPv6
address pool drops down to 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage in the DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage in the DHCPv6
address pool has reached or exceeded the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage in the DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage in the DHCPv6
address pool has dropped to or below 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all addresses $*
SDESC
This trap is generated when all addresses
in the DHCPv6 address pool are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 address pool has recovered $*
SDESC
This trap is generated when the DHCPv6 address pool has recovered
from IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool has reached or exceeded the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the prefix usage in the DHCPv6 $*
SDESC
This trap is generated when the prefix usage in the DHCPv6
address pool has dropped to or below 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all prefixes $*
SDESC
This trap is generated when all prefixes
in the DHCPv6 address pool are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefix pool recovers from $*
SDESC
This trap is generated when the IPv6 prefix pool recovers from
prefix exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpIpNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all addresses $*
SDESC
This trap is generated when all addresses
in the DHCPv6 address pool group are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpIpNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the DHCPv6 address pool group has recovered $*
SDESC
This trap is generated when the DHCPv6 address pool group has recovered
from IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpPdNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when all prefixes $*
SDESC
This trap is generated when all prefixes
in the DHCPv6 address pool group are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpPdNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the IPv6 prefix pool group recovers from $*
SDESC
This trap is generated when the IPv6 prefix pool group recovers from
prefix exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
#
MIB: HH3C-DHCP6-SERVER-MIB (file:./hh3c-dhcp6-server.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPRELAY-MIB (file:./hh3c-dhcprelay.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPR-MIB (file:./hh3c-dhcpr.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP-SERVER-MIB (file:./hh3c-dhcp-server.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPS-MIB (file:./hh3c-dhcps.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP-SNOOP2-MIB (file:./hh3c-dhcp-snoop2.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPSNOOP-MIB (file:./hh3c-dhcpsnoop.mib) converted on Fri Mar 18 23:13:27 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcpSnoopSpoofServerDetected .1.3.6.1.4.1.25506.2.36.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA To detect unauthorized DHCP servers on a network, the DHCP snooping $*
SDESC
To detect unauthorized DHCP servers on a network, the DHCP snooping
device sends DHCP-DISCOVER messages through its downstream port
(which is connected to the DHCP clients).
If any response (DHCP-OFFER message) is received from the downstream port,
an unauthorized DHCP server is considered present, and then the device
sends a trap.
With unauthorized DHCP server detection enabled, the interface sends a
DHCP-DISCOVER message to detect unauthorized DHCP servers on the network.
If this interface receives a DHCP-OFFER  message,  the DHCP server which
sent it is considered unauthorized. 
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cdot1qVlanIndex
     Syntax="INTEGER32"
     Descr="The VLAN-ID."
  3: hh3cDhcpSnoopSpoofServerMac
     Syntax="OCTETSTR"
     Descr="MAC address of the spoofing server and it is derived from
          link-layer header of offer packet. If the offer packet is relayed
          by dhcp relay entity, it may be the MAC address of relay entity.
          "
  4: hh3cDhcpSnoopSpoofServerIP
     Syntax="IPADDR"
     Descr="IP address of the spoofing server and it is derived from
          IP header of offer packet. A tricksy host may send offer packet use
          other host's address, so this address can not always be  trust.
          "
EDESC
#
#
#
EVENT hh3cDhcpSnoopNewBinding .1.3.6.1.4.1.25506.2.36.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The device sends a trap when adding a new binding. $*
SDESC
The device sends a trap when adding a new binding.
Variables:
  1: hh3cDhcpSnoopBindingIP
     Syntax="IPADDR"
     Descr="IP address of a new binding. "
  2: hh3cDhcpSnoopBindingMac
     Syntax="OCTETSTR"
     Descr="MAC address of a new binding. "
EDESC
#
#
#
#
MIB: HH3C-DISK-MIB (file:./hh3c-disk.mib) converted on Fri Mar 18 23:13:28 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DLDP2-MIB (file:./hh3c-dldp2.mib) converted on Fri Mar 18 23:13:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDldp2TrapUniLink .1.3.6.1.4.1.25506.2.117.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when DLDP detects a unidirectional link, $*
SDESC
This trap is generated when DLDP detects a unidirectional link,
ifIndex and ifDescr identify the port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cDldp2TrapBidLink .1.3.6.1.4.1.25506.2.117.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when DLDP detects a bidirectional link, $*
SDESC
This trap is generated when DLDP detects a bidirectional link,
ifIndex and ifDescr identify the port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-DLDP-MIB (file:./hh3c-dldp.mib) converted on Fri Mar 18 23:13:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDLDPUnidirectionalPort .1.3.6.1.4.1.25506.2.43.2.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA It will send a SNMP trap when the state of a port $*
SDESC
It will send a SNMP trap when the state of a port
has changed to unidirectional-link.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
#
MIB: HH3C-DNS-MIB (file:./hh3c-dns.mib) converted on Fri Mar 18 23:13:28 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOMAIN-MIB (file:./hh3c-domain.mib) converted on Fri Mar 18 23:13:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cUserIPAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IP address allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IP pool
Add new IP pool to this domain.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated IP address recovery
2 Notice/Trap generation cause:  Recover from a state where IP address allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPLowerlimitWarningAlarm .1.3.6.1.4.1.25506.2.46.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IP address allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set in domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPLowerlimitWarningResume .1.3.6.1.4.1.25506.2.46.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated IP address recovery
2 Notice/Trap generation cause:  Recover from a state where IP address allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPv6AllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 address allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 address pool
Add new IPv6 address pool to this domain .

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6AllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated IPv6 address recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 address allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6LowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 address allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6LowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated IPv6 address recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 address allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 NDRA prefix allocable threshold
2 Notice/Trap generation cause: Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 NDRA prefix pool
Add new IPv6 NDRA prefix pool to this domain .

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated NDRA prefix recovery
2 Notice/Trap generation cause:  Recover from a state where NDRA prefix allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfLowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach NDRA prefix allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfLowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated NDRA prefix recovery
2 Notice/Trap generation cause:  Recover from a state where NDRA Prefix allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 DHCPv6-PD prefix allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 DHCPv6-PD prefix pool
Add new IPv6 DHCPv6-PD prefix pool to this domain .

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Overallocated IPv6 DHCPv6-PD prefix recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 DHCPv6-PD Prefix allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfLowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Reach IPv6 DHCPv6-PD prefix allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfLowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

1 Notice/Trap name:  Less-allocated IPv6 DHCPv6-PD prefix recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 DHCPv6-PD Prefix allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserWebServerDownAlarm .1.3.6.1.4.1.25506.2.46.5.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the Web server is not reachable.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserWebServerUpAlarm .1.3.6.1.4.1.25506.2.46.5.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the Web server becomes reachable.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserWebServerChangeAlarm .1.3.6.1.4.1.25506.2.46.5.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the valid URL of the Web Server changes.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerDownAlarm .1.3.6.1.4.1.25506.2.46.5.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the IPv6 Web server is not reachable.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerUpAlarm .1.3.6.1.4.1.25506.2.46.5.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the IPv6 Web server becomes reachable.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerChangeAlarm .1.3.6.1.4.1.25506.2.46.5.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

This trap is generated when the valid IPv6 URL of the Web Server changes.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
#
MIB: HH3C-DOT11-ACMT-MIB (file:./hh3c-dot11-acmt.mib) converted on Fri Mar 18 23:13:28 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot11ACMtTunnelSetupTrap .1.3.6.1.4.1.25506.2.75.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent by AC when CAPWAP tunnel becomes up. $*
SDESC
This notification is sent by AC when CAPWAP tunnel becomes up.
By this way, NMS will immediately know tunnel up event.
It is unnecessary to identify whether it is control or data
tunnel.
Variables:
  1: hh3cDot11CurrTunnelAPID
     Syntax="OCTETSTR"
     Descr="To uniquely identify the CAPWAP tunnel set up between the AP
        identified by APID and a specific AC."
  2: hh3cDot11ACMtTrapTunlUpInfo
     Syntax="INTEGER"
       1: up
     Descr="Represents the reason for tunnel up.
        The following values are supported:
        up(1)  - The AP joined AC.
        "
  3: hh3cDot11ACMtTrapTnlAPName
     Syntax="OCTETSTR"
     Descr="Represents name of the AP which sets up the tunnel with the AC.
        "
  4: hh3cDot11ACMtTrapTnlAPIPAddr
     Syntax="IPADDR"
     Descr="Represents IP address of the AP which sets up the tunnel with the AC.
        "
  5: hh3cDot11ACMtTrapAPIPv6Addr
     Syntax="OCTETSTR"
     Descr="Represents IPv6 address of the AP which sets up the tunnel with
        the AC."
  6: hh3cDot11ACMtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  7: hh3cDot11ACMtTrapAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of an AP."
EDESC
#
#
#
EVENT hh3cDot11ACMtTunnelDownTrap .1.3.6.1.4.1.25506.2.75.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent by AC when CAPWAP tunnel becomes down. $*
SDESC
This notification is sent by AC when CAPWAP tunnel becomes down.
By this way, NMS will immediately know tunnel down event.
It is unnecessary to identify whether it is control or data
tunnel.
Variables:
  1: hh3cDot11CurrTunnelAPID
     Syntax="OCTETSTR"
     Descr="To uniquely identify the CAPWAP tunnel set up between the AP
        identified by APID and a specific AC."
  2: hh3cDot11ACMtTrapTunlDwnInfo
     Syntax="INTEGER"
       1: tunnelTimeout
       2: keyUpdateFailure
       3: apReset
       4: apCrash
       5: apDeleted
       6: apCfgChange
     Descr="Represents the reason for tunnel down.
        The following values are supported:
        tunnelTimeout     - When AC detects the tunnel is broken,
        - it will notify NMS.
        keyUpdateFailure  - rekey process is failed, tunnel will be broken.
        apReset           - Administrator reset AP.
        apCrash           - AP reboot for system crash.
        apDeleted         - Delete AP from AC and trigger tunnel down.
        apCfgChange       - The configuration for AP was changed."
  3: hh3cDot11ACMtTrapTnlAPName
     Syntax="OCTETSTR"
     Descr="Represents name of the AP which sets up the tunnel with the AC.
        "
  4: hh3cDot11ACMtTrapTnlAPIPAddr
     Syntax="IPADDR"
     Descr="Represents IP address of the AP which sets up the tunnel with the AC.
        "
  5: hh3cDot11ACMtTrapAPIPv6Addr
     Syntax="OCTETSTR"
     Descr="Represents IPv6 address of the AP which sets up the tunnel with
        the AC."
  6: hh3cDot11ACMtTrapTunlDwnCount
     Syntax="INTEGER32"
     Descr="Represents how many times that the tunnel between AC and AP has down."
  7: hh3cDot11ACMtTrapTnlAPSysName
     Syntax="OCTETSTR"
     Descr="Represents system name of the AP which sets up the tunnel with the AC."
  8: hh3cDot11ACMtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  9: hh3cDot11ACMtTrapAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of an AP."
EDESC
#
#
#
EVENT hh3cDot11ACMtBackupSwtTrap .1.3.6.1.4.1.25506.2.75.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent by AC when AC switches from master to slave $*
SDESC
This trap is sent by AC when AC switches from master to slave
or from slave to master.
Variables:
  1: hh3cDot11ACMtTrapACMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of the AC."
  2: hh3cDot11ACMtTrapBackupSwitchInfo
     Syntax="INTEGER"
       1: masterToSlave
       2: slaveToMaster
     Descr="Represents status which the AC switches to.
        The following values are supported:
        masterToSlave  - The AC switches from master to slave.
        slaveToMaster  - The AC switches from slave to master.
        "
  3: hh3cDot11ACMtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cDot11ACLoadBalanceTrap .1.3.6.1.4.1.25506.2.75.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent by AC when load-balance is enabled on AC. $*
SDESC
This trap is sent by AC when load-balance is enabled on AC.
Variables:
  1: hh3cDot11LoadBalanceType
     Syntax="INTEGER"
       1: traffic
       2: session
     Descr="Represents which kind load balance is enabled by AC.
         The following values are supported:
         traffic mode load-balancing: traffic snapshot is considered.
         session mode load-balancing: the number of users associated
                                      with the AP/radio is considered.
        "
  2: hh3cDot11LoadBalanceThreshold
     Syntax="INTEGER32"
     Descr="Represents the value of load balance threshold.
        "
EDESC
#
#
#
EVENT hh3cDot11ACStaFullTrap .1.3.6.1.4.1.25506.2.75.1.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when STA is full on AC. $*
SDESC
This notification will be sent when STA is full on AC.
Variables:
  1: hh3cDot11ACMaxStaNum
     Syntax="INTEGER32"
     Descr="Represents the max number of STA on AC."
EDESC
#
#
#
EVENT hh3cDot11ACStatusSwitchTrap .1.3.6.1.4.1.25506.2.75.1.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when AC switches from standby to active $*
SDESC
This notification will be sent when AC switches from standby to active
or from standby to active.
Variables:
  1: hh3cDot11ACStatusSwitchInfo
     Syntax="INTEGER"
       1: activeToStandby
       2: standbyToActive
     Descr="Represents status which the AC switches to.
        The following values are supported:
        activeToStandby  - The AC switches from active to standby.
        standbyToActive  - The AC switches from standby to active.
        "
  2: hh3cDot11SourceACNmsIP
     Syntax="IPADDR"
     Descr="Represents the NMS IP address of master AC.
        "
EDESC
#
#
#
EVENT hh3cDot11RunAPNumOverload .1.3.6.1.4.1.25506.2.75.1.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification will be sent by AC when run AP number exceeds the threshold. $*
SDESC
The notification will be sent by AC when run AP number exceeds the threshold.
Variables:
  1: hh3cDot11MaxAPNumPermitted
     Syntax="INTEGER32"
     Descr="Represents the maximum number of AP connection permitted
        for one AC."
  2: hh3cDot11APConnectCount
     Syntax="INTEGER32"
     Descr="Represents the total number of APs which are connecting to AC."
EDESC
#
#
#
EVENT hh3cDot11RunAPNumOverloadRecover .1.3.6.1.4.1.25506.2.75.1.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification will be sent by AC when run AP number $*
SDESC
The notification will be sent by AC when run AP number
recover normal from overload state.
Variables:
  1: hh3cDot11MaxAPNumPermitted
     Syntax="INTEGER32"
     Descr="Represents the maximum number of AP connection permitted
        for one AC."
  2: hh3cDot11APConnectCount
     Syntax="INTEGER32"
     Descr="Represents the total number of APs which are connecting to AC."
EDESC
#
#
#
EVENT hh3cDot11APInvalidCertificateTrap .1.3.6.1.4.1.25506.2.75.1.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The AC sends the notification once the certificate of an AP expires. $*
SDESC
The AC sends the notification once the certificate of an AP expires.
Variables:
  1: hh3cDot11ACMtTrapACMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of the AC."
  2: hh3cDot11ACMtTrapAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of an AP."
EDESC
#
#
#
#
MIB: HH3C-DOT11-APMT-MIB (file:./hh3c-dot11-apmt.mib) converted on Fri Mar 18 23:13:29 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-CFGEXT-MIB (file:./hh3c-dot11-cfgext.mib) converted on Fri Mar 18 23:13:35 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-CFG-MIB (file:./hh3c-dot11-cfg.mib) converted on Fri Mar 18 23:13:35 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot11CfgCipherChange .1.3.6.1.4.1.25506.2.75.4.9.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when cipher type of corresponding service $*
SDESC
This notification is sent when cipher type of corresponding service
template is changed.
Variables:
  1: hh3cDot11SSIDName
     Syntax="OCTETSTR"
     Descr="Represents the ESS.  As per CLI, the value of
        service policy name will be SSID."
  2: hh3cDot11SecurityCiphers
     Syntax="INTEGER32"
     Descr="The WLAN system support the following cipher type for data frame
        encryption.
        wep40(2)
        tkip(4)
        aesccmp(16)
        wep104(32)
        wpisms4(64)
        wep128(128)
        For each service policy, it could support multiple cipher types at
        the same time.  So the value of object could combine multiple value
        of cipher type above.
        When the value of node equals to zero, it means no configuration or
        undo operation."
EDESC
#
#
#
EVENT hh3cDot11CfgPSKChange .1.3.6.1.4.1.25506.2.75.4.9.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is sent when pre-shared key of corresponding $*
SDESC
This notification is sent when pre-shared key of corresponding
service template is changed.
Variables:
  1: hh3cDot11SSIDName
     Syntax="OCTETSTR"
     Descr="Represents the ESS.  As per CLI, the value of
        service policy name will be SSID."
EDESC
#
#
#
EVENT hh3cDot11SSIDWepIDConflictTrap .1.3.6.1.4.1.25506.2.75.4.9.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the same wep ID is configured $*
SDESC
This notification will be sent when the same wep ID is configured
on two service policies.
Variables:
  1: hh3cDot11PreConflictTemplateNum
     Syntax="INTEGER32"
     Descr="Represents previous service policy ID when radio bind service policy
         and current service policy conflict with previous service policy
         in cipher configuration."
  2: hh3cDot11CurrConflictTemplateNum
     Syntax="INTEGER32"
     Descr="Represents current service policy ID when radio bind service policy
         and current service policy conflict with previous service policy
         in cipher configuration."
  3: hh3cDot11ConflictCipherIdx
     Syntax="INTEGER32"
     Descr="Represents wep ID that conflicted with."
  4: hh3cDot11ConfigureAPID
     Syntax="OCTETSTR"
     Descr="Represents which AP is configured."
  5: hh3cDot11ConfigureRadioID
     Syntax="INTEGER32"
     Descr="Represents which radio in AP is configured."
  6: hh3cDot11ConfigureAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents MAC Address of AP."
  7: hh3cDot11PreConflictTemplateSSID
     Syntax="OCTETSTR"
     Descr="Represents the previous SSID of the AP."
  8: hh3cDot11CurrConflictTemplateSSID
     Syntax="OCTETSTR"
     Descr="Represents the current SSID of the AP."
EDESC
#
#
#
#
MIB: HH3C-DOT11-LIC-MIB (file:./hh3c-dot11-lic.mib) converted on Fri Mar 18 23:13:35 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-PROBE-MIB (file:./hh3c-dot11-probe.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-QOS-MIB (file:./hh3c-dot11-qos.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-REF-MIB (file:./hh3c-dot11-ref.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-ROAM-MIB (file:./hh3c-dot11-roam.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-RRM-MIB (file:./hh3c-dot11-rrm.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-SA-MIB (file:./hh3c-dot11-sa.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-SAVI-MIB (file:./hh3c-dot11-savi.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11S-MESH-MIB (file:./hh3c-dot11s-mesh.mib) converted on Fri Mar 18 23:13:38 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-STATION-MIB (file:./hh3c-dot11-station.mib) converted on Fri Mar 18 23:13:39 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WIDS-MIB (file:./hh3c-dot11-wids.mib) converted on Fri Mar 18 23:13:39 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WIPS-MIB (file:./hh3c-dot11-wips.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WLANEXT-MIB (file:./hh3c-dot11-wlanext.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WM2U-MIB (file:./hh3c-dot11-wm2u.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT3-EFM-EPON-MIB (file:./hh3c-dot3-efm-epon.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DRNI-MIB (file:./hh3c-drni.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DSP-MIB (file:./hh3c-dsp.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVPMStateChange .1.3.6.1.4.1.25506.2.89.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when VPM state changes. $*
SDESC
This trap is sent when VPM state changes.
Variables:
  1: hh3cVPMIndex
     Syntax="INTEGER32"
     Descr="The index for this entry. The sequence of VPM card in the chassis is
        from the top to bottom."
  2: hh3cVPMEnPhysicalIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to PhysicalIndex in the chassis."
  3: hh3cVPMState
     Syntax="INTEGER"
       1: normal
       2: warning
       3: fatal
       4: offLine
     Descr="The object indicates the current state of VPM card being monitored.
        normal(1)  - VPM card in normal condition.
        warning(2) - VPM card has some problem and need attention.
        fatal(3)   - VPM card is not functional.
        offLine(4) - VPM card is in off-line maintenance state."
EDESC
#
#
#
EVENT hh3cDSPStateChange .1.3.6.1.4.1.25506.2.89.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when DSP state changes. $*
SDESC
This trap is sent when DSP state changes.
Variables:
  1: hh3cDSPIndex
     Syntax="INTEGER32"
     Descr="The index for this entry. DSP is fixed on VPM card or chassis card.
        The sequence of DSP in the VPM card or chassis card is from right to left."
  2: hh3cDSPVPMIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to VPMIndex in the chassis.
        If value of this object is non-zero, it is the index of VPM card.(DSP is in
        this VPM card.) If value of this object is 0, then the DSP is fixed in the
        chassis card."
  3: hh3cDSPEnPhysicalIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to PhysicalIndex in the chassis."
  4: hh3cDSPState
     Syntax="INTEGER"
       1: normal
       3: fatal
       4: offLine
     Descr="The object indicates the current state of DSP being monitored.
        normal(1)  - DSP in normal condition.
        fatal(3)   - DSP is not functional.
        offLine(4) - DSP is in off-line maintenance state."
EDESC
#
#
#
#
MIB: HH3C-DVPN-MIB (file:./hh3c-dvpn.mib) converted on Fri Mar 18 23:13:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDvpnSessionBuildNotification .1.3.6.1.4.1.25506.2.57.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn session build notification.

Variables:
  1: hh3cDvpnSessionDvpnId
     Syntax="INTEGER32"
     Descr="
                The ID of the dvpn domain which the session belongs to.
            "
  2: hh3cDvpnSessionPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session peer device.
            "
  3: hh3cDvpnSessionPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of the session peer device.
            "
  4: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  5: hh3cDvpnSessionLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session local device.
            "
  6: hh3cDvpnSessionLocalPriIp
     Syntax="OCTETSTR"
     Descr="
               The private ip of session local device.
            "
  7: hh3cDvpnSessionLocalPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The public ip type (ipv4, ipv6) of session local device.
            "
  8: hh3cDvpnSessionLocalPubIp
     Syntax="OCTETSTR"
     Descr="
               The public ip of session local device.
            "
  9: hh3cDvpnSessionPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID of session peer device.
                It is a string.
            "
 10: hh3cDvpnSessionPeerPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of session peer device.
            "
 11: hh3cDvpnSessionPeerPubIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of session peer device.
            "
 12: hh3cDvpnSessionPeerUdpPort
     Syntax="INTEGER32"
     Descr="
               The udp port used by session peer device .
            "
 13: hh3cDvpnSessionPeerType
     Syntax="INTEGER"
       1: router
       2: pcClient
     Descr="
                The type of the session peer device.
                It may be client software or a router.
            "
 14: hh3cDvpnSessionUserName
     Syntax="OCTETSTR"
     Descr="
                The user's name.
                If the session type is client to client,
                the value of this object is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnSessionDelNotification .1.3.6.1.4.1.25506.2.57.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn session deleted notification.

Variables:
  1: hh3cDvpnSessionDvpnId
     Syntax="INTEGER32"
     Descr="
                The ID of the dvpn domain which the session belongs to.
            "
  2: hh3cDvpnSessionPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session peer device.
            "
  3: hh3cDvpnSessionPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of the session peer device.
            "
  4: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  5: hh3cDvpnSessionLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session local device.
            "
  6: hh3cDvpnSessionLocalPriIp
     Syntax="OCTETSTR"
     Descr="
               The private ip of session local device.
            "
  7: hh3cDvpnSessionLocalPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The public ip type (ipv4, ipv6) of session local device.
            "
  8: hh3cDvpnSessionLocalPubIp
     Syntax="OCTETSTR"
     Descr="
               The public ip of session local device.
            "
  9: hh3cDvpnSessionPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID of session peer device.
                It is a string.
            "
 10: hh3cDvpnSessionPeerPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of session peer device.
            "
 11: hh3cDvpnSessionPeerPubIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of session peer device.
            "
 12: hh3cDvpnSessionPeerUdpPort
     Syntax="INTEGER32"
     Descr="
               The udp port used by session peer device .
            "
 13: hh3cDvpnSessionPeerType
     Syntax="INTEGER"
       1: router
       2: pcClient
     Descr="
                The type of the session peer device.
                It may be client software or a router.
            "
 14: hh3cDvpnSessionUserName
     Syntax="OCTETSTR"
     Descr="
                The user's name.
                If the session type is client to client,
                the value of this object is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnMapBuildNotification .1.3.6.1.4.1.25506.2.57.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn map build notification.

Variables:
  1: hh3cDvpnMapIndex
     Syntax="UNSIGNED32"
     Descr="
                The index of hh3cDvpnMapTable.
            "
  2: hh3cDvpnMapDvpnId
     Syntax="UNSIGNED32"
     Descr="
                The ID of the dvpn domain which the map belongs to.
                The dvpn ID is 0 means that the map has not been built.
                It has not gotten the dvpn ID at that time.
            "
  3: hh3cDvpnMapPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The identifier of peer device.
                It is a string.
            "
  4: hh3cDvpnMapPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map peer device.
            "
  5: hh3cDvpnMapPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map peer device.
            "
  6: hh3cDvpnMapPeerPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map peer device.
            "
  7: hh3cDvpnMapPeerPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map peer device.
            "
  8: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  9: hh3cDvpnMapLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map local device.
            "
 10: hh3cDvpnMapLocalPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map local device.
            "
 11: hh3cDvpnMapLocalPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map local device.
            "
 12: hh3cDvpnMapLocalPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map local device.
            "
 13: hh3cDvpnMapUserName
     Syntax="OCTETSTR"
     Descr="
                The user name used by the client registering to server.
                If the client is not been authenticated, this is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnMapDelNotification .1.3.6.1.4.1.25506.2.57.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Dvpn map deleted notification.

Variables:
  1: hh3cDvpnMapIndex
     Syntax="UNSIGNED32"
     Descr="
                The index of hh3cDvpnMapTable.
            "
  2: hh3cDvpnMapDvpnId
     Syntax="UNSIGNED32"
     Descr="
                The ID of the dvpn domain which the map belongs to.
                The dvpn ID is 0 means that the map has not been built.
                It has not gotten the dvpn ID at that time.
            "
  3: hh3cDvpnMapPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The identifier of peer device.
                It is a string.
            "
  4: hh3cDvpnMapPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map peer device.
            "
  5: hh3cDvpnMapPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map peer device.
            "
  6: hh3cDvpnMapPeerPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map peer device.
            "
  7: hh3cDvpnMapPeerPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map peer device.
            "
  8: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  9: hh3cDvpnMapLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map local device.
            "
 10: hh3cDvpnMapLocalPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map local device.
            "
 11: hh3cDvpnMapLocalPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map local device.
            "
 12: hh3cDvpnMapLocalPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map local device.
            "
 13: hh3cDvpnMapUserName
     Syntax="OCTETSTR"
     Descr="
                The user name used by the client registering to server.
                If the client is not been authenticated, this is a null string.
            "
EDESC
#
#
#
#
MIB: HH3C-E1-MIB (file:./hh3c-e1.mib) converted on Fri Mar 18 23:13:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-E1T1VI-MIB (file:./hh3c-e1t1vi.mib) converted on Fri Mar 18 23:13:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cE1T1VITrapTimeSlot .1.3.6.1.4.1.25506.2.76.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent to the manager under the following $*
SDESC
This trap is sent to the manager under the following
condition: The number of used time slots of an E1/T1
interface reaches the threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-EFM-COMMON-MIB (file:./hh3c-efm-common.mib) converted on Fri Mar 18 23:13:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot3OamThresholdEvent .1.3.6.1.4.1.25506.2.42.3.1.7.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cDot3OamThresholdEvent notification is sent when a local or $*
SDESC
A hh3cDot3OamThresholdEvent notification is sent when a local or
remote threshold crossing event is detected.  A local
threshold crossing event is detected by the local entity,
while a remote threshold crossing event is detected by the
reception of an Ethernet OAM Event Notification OAMPDU
indicating a threshold event.
This notification should not be sent more than once per
second.
The management entity should periodically check
hh3cDot3OamEventLogTable to detect any missed events.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cDot3OamEventLogTimestamp
     Syntax="OCTETSTR"
     Descr="The date and time that this event instance occurred."
  3: hh3cDot3OamEventLogOui
     Syntax="OCTETSTR"
     Descr="The OUI of the entity defining the object type.  All IEEE
          802.3 defined events (as appearing in [802.3ah] except for the
          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of
          0x0180C2.  Organizations defining their own Event Notification
          TLVs include their OUI in the Event Notification TLV which
          gets reflected here."
  4: hh3cDot3OamEventLogType
     Syntax="UNSIGNED32"
     Descr="The type of event that generated this entry in the event log.

          When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following
          event types are defined:
              erroredSymbolEvent(1),
              erroredFramePeriodEvent (2),
              erroredFrameEvent(3),
              erroredFrameSecondsEvent(4),
              linkFault(256),
              dyingGaspEvent(257),
              criticalLinkEvent(258)
          The first four are considered threshold crossing events as
          they are generated when a metric exceeds a given value within
          a specified window.  The other three are not threshold
          crossing events.

          When the OUI is not 0x0180C2, then some other organization has
          defined the event space.  If event subtyping is known to the
          implementation, it may be reflected here.  Otherwise, this
          value should return all Fs (0xFFFFFFFF).
          "
  5: hh3cDot3OamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="Whether this event occurred locally, or was received from the
          OAM peer via Ethernet OAM."
  6: hh3cDot3OamEventLogWindowHi
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventWindowHi and hh3cDot3OamEventWindowLo form an
          unsigned 64-bit integer yielding the window over which the
          value was measured for the threshold crossing event (e.g. 5,
          when 11 occurrences happened in 5 seconds while the threshold
          was 10).   The two objects are combined as:

          hh3cDot3OamEventLogWindow = ((2^32) * hh3cDot3OamEventLogWindowHi)
                                          + hh3cDot3OamEventLogWindowLo


          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  7: hh3cDot3OamEventLogWindowLo
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventWindowHi and hh3cDot3OamEventWindowLo form an
          unsigned 64-bit integer yielding the window over which the
          value was measured for the threshold crossing event (e.g. 5,
          when 11 occurrences happened in 5 seconds while the threshold
          was 10).   The two objects are combined as:
          hh3cDot3OamEventLogWindow = ((2^32) * hh3cDot3OamEventLogWindowHi)
                                          + hh3cDot3OamEventLogWindowLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  8: hh3cDot3OamEventLogThresholdHi
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventThresholdHi and hh3cDot3OamEventThresholdLo
          form an unsigned 64-bit integer yielding the value that was
          crossed for the threshold crossing event (e.g. 10, when 11
          occurrences happened in 5 seconds while the threshold was 10).
          The two objects are combined as:

        hh3cDot3OamEventLogThreshold = ((2^32) * hh3cDot3OamEventLogThresholdHi)
                                           + hh3cDot3OamEventLogThresholdLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  9: hh3cDot3OamEventLogThresholdLo
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventThresholdHi and hh3cDot3OamEventThresholdLo
          form an unsigned 64-bit integer yielding the value that was
          crossed for the threshold crossing event (e.g. 10, when 11
          occurrences happened in 5 seconds while the threshold was 10).
          The two objects are combined as:

        hh3cDot3OamEventLogThreshold = ((2^32) * hh3cDot3OamEventLogThresholdHi)
                                           + hh3cDot3OamEventLogThresholdLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
 10: hh3cDot3OamEventLogValue
     Syntax="COUNTER64"
     Descr="If the event represents a threshold crossing event, this
          value indicates the value of the parameter within the given
          window that generated this event (e.g. 11, when 11 occurrences
          happened in 5 seconds while the threshold was 10).

          Otherwise, this value is returned as all F's
          (0xFFFFFFFFFFFFFFFF) and adds no useful information.
          "
 11: hh3cDot3OamEventLogRunningTotal
     Syntax="COUNTER64"
     Descr="This value respresents the total number of times this
          occurence has happened since the last reset (e.g. 3253, when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
 12: hh3cDot3OamEventLogEventTotal
     Syntax="UNSIGNED32"
     Descr="This value respresents the total number of times one or more
          of these occurences have resulted in an event (e.g. 51 when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
EDESC
#
#
#
EVENT hh3cDot3OamNonThresholdEvent .1.3.6.1.4.1.25506.2.42.3.1.7.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cDot3OamNonThresholdEvent notification is sent when a local $*
SDESC
A hh3cDot3OamNonThresholdEvent notification is sent when a local
or remote non-threshold crossing event is detected.  A local
event is detected by the local entity, while a remote event is
detected by the reception of an Ethernet OAM Event
Notification OAMPDU indicating a non-threshold crossing event.
This notification should not be sent more than once per
second.
The management entity should periodically check
hh3cDot3OamEventLogTable to detect any missed events.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cDot3OamEventLogTimestamp
     Syntax="OCTETSTR"
     Descr="The date and time that this event instance occurred."
  3: hh3cDot3OamEventLogOui
     Syntax="OCTETSTR"
     Descr="The OUI of the entity defining the object type.  All IEEE
          802.3 defined events (as appearing in [802.3ah] except for the
          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of
          0x0180C2.  Organizations defining their own Event Notification
          TLVs include their OUI in the Event Notification TLV which
          gets reflected here."
  4: hh3cDot3OamEventLogType
     Syntax="UNSIGNED32"
     Descr="The type of event that generated this entry in the event log.

          When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following
          event types are defined:
              erroredSymbolEvent(1),
              erroredFramePeriodEvent (2),
              erroredFrameEvent(3),
              erroredFrameSecondsEvent(4),
              linkFault(256),
              dyingGaspEvent(257),
              criticalLinkEvent(258)
          The first four are considered threshold crossing events as
          they are generated when a metric exceeds a given value within
          a specified window.  The other three are not threshold
          crossing events.

          When the OUI is not 0x0180C2, then some other organization has
          defined the event space.  If event subtyping is known to the
          implementation, it may be reflected here.  Otherwise, this
          value should return all Fs (0xFFFFFFFF).
          "
  5: hh3cDot3OamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="Whether this event occurred locally, or was received from the
          OAM peer via Ethernet OAM."
  6: hh3cDot3OamEventLogEventTotal
     Syntax="UNSIGNED32"
     Descr="This value respresents the total number of times one or more
          of these occurences have resulted in an event (e.g. 51 when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
EDESC
#
#
#
#
MIB: HH3C-ENTITY-EXT-MIB (file:./hh3c-entity-ext.mib) converted on Fri Mar 18 23:13:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEntityExtTemperatureThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtTemperatureThresholdNotification $*
SDESC
The hh3cEntityExtTemperatureThresholdNotification
indicates the temperature exceeded the threshold.
In this condition, user should check the status and the
environment of the entity, sometimes it happens because
of the failure of air-condition.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  3: hh3cEntityExtTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageLowThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtVoltageLowThresholdNotification indicates $*
SDESC
The hh3cEntityExtVoltageLowThresholdNotification indicates
the voltage is lower than the threshold.
If the voltage is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  3: hh3cEntityExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageHighThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtVoltageHighThresholdNotification indicates $*
SDESC
The hh3cEntityExtVoltageHighThresholdNotification indicates
the voltage is higher than the threshold.
If the voltage is higher too much than the entity needs,
The entity may be damaged by the high voltage.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  3: hh3cEntityExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage greater than high-threshold, a notification will be
            sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtCpuUsageThresholdNotfication .1.3.6.1.4.1.25506.2.6.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtCpuUsageThresholdNotfication indicates $*
SDESC
The hh3cEntityExtCpuUsageThresholdNotfication indicates
the entity is overloaded.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCpuUsage
     Syntax="INTEGER32"
     Descr="The CPU usage for this entity. Generally, the overall
            CPU usage on the entity is calculated, independent of
            the number of CPUs on the entity."
  3: hh3cEntityExtCpuUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
            the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  6: hh3cEntityExtCpuUsageRecoverThreshold
     Syntax="INTEGER32"
     Descr="The recover threshold for the CPU usage.  When the CPU usage falls down to
            the threshold, a notification is sent.  The hh3cEntityExtCpuUsageRecoverThreshold
            must be less than or equal to the hh3cEntityExtCpuUsageThreshold."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtMemUsageThresholdNotification indicates $*
SDESC
The hh3cEntityExtMemUsageThresholdNotification indicates
the entity is overloaded.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSize
     Syntax="UNSIGNED32"
     Descr="The size of memory for the entity.

            If the amount of memory exceeds 4,294,967,295 bytes,
            the value remains 4,294,967,295 bytes."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtOperEnabled .1.3.6.1.4.1.25506.2.6.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is operable at present. $*
SDESC
The trap indicates the entity is operable at present.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtOperDisabled .1.3.6.1.4.1.25506.2.6.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is not operable at present. $*
SDESC
The trap indicates the entity is not operable at present.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtCriticalTemperatureThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtCriticalTemperatureThresholdNotification $*
SDESC
The hh3cEntityExtCriticalTemperatureThresholdNotification
indicates the temperature exceeds the critical temperature.
In this condition, user should check the status and the
environment of the entity, sometimes it happens because
of the failure of air-condition.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  3: hh3cEntityExtCriticalTemperatureThreshold
     Syntax="INTEGER32"
     Descr=" The threshold for the critical Temperature. When temperature
            exceeds the critical temperature, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOn .1.3.6.1.4.1.25506.2.6.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module fails $*
SDESC
The trap is generated when the SFP module fails
or runs abnormally for some particular reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOff .1.3.6.1.4.1.25506.2.6.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module restores to $*
SDESC
The trap is generated when the SFP module restores to
normal status.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPPhony .1.3.6.1.4.1.25506.2.6.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This module is NOT sold by authorized manufacturer. $*
SDESC
This module is NOT sold by authorized manufacturer.
The normal function of the device or assume the maintenance
responsibility thereof will NOT be guaranteed.
The trap is generated periodically after a phony module has been
found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityInsert .1.3.6.1.4.1.25506.2.6.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a removable entity inserting to $*
SDESC
The trap is generated when a removable entity inserting to
device.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cEntityRemove .1.3.6.1.4.1.25506.2.6.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a removable entity removing from $*
SDESC
The trap is generated when a removable entity removing from
device.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtForcedPowerOff .1.3.6.1.4.1.25506.2.6.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is forced to power off. $*
SDESC
The trap indicates the entity is forced to power off.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtForcedPowerOn .1.3.6.1.4.1.25506.2.6.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the entity is forced to power on. $*
SDESC
The trap indicates the entity is forced to power on.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtFaultAlarmOn .1.3.6.1.4.1.25506.2.6.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates a fault occurs on the specified entity. $*
SDESC
The trap indicates a fault occurs on the specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtFaultAlarmOff .1.3.6.1.4.1.25506.2.6.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates a fault disappears on the specified entity. $*
SDESC
The trap indicates a fault disappears on the specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtResourceLack .1.3.6.1.4.1.25506.2.6.2.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that a kind of resource is not enough on the $*
SDESC
The trap indicates that a kind of resource is not enough on the
specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtResourceEnough .1.3.6.1.4.1.25506.2.6.2.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the entity recovers from the status of no $*
SDESC
The trap indicates that the entity recovers from the status of no
enough resource.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureLower .1.3.6.1.4.1.25506.2.6.2.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the temperature of a specified entity is under $*
SDESC
The trap indicates the temperature of a specified entity is under
the lower threshold. In this condition, user should check the
status and the environment of the entity, sometimes it goes wrong
for some reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the lower Temperature. When temperature runs
            under the threshold, a notification will be sent."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureTooUp .1.3.6.1.4.1.25506.2.6.2.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the temperature of a specified entity exceeded $*
SDESC
The trap indicates the temperature of a specified entity exceeded
the shutdown threshold. In this condition, user should check the
status and the environment of the entity, sometimes it goes wrong
for some reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature. When temperature
            exceeds the threshold, a notification will be sent and the entity
            will be shutdown."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureNormal .1.3.6.1.4.1.25506.2.6.2.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the temperature of a specified entity recover $*
SDESC
The trap indicates the temperature of a specified entity recover
from abnormal status.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the lower Temperature. When temperature runs
            under the threshold, a notification will be sent."
  5: hh3cEntityExtTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
            exceeds the threshold, a notification will be sent."
  6: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExternalAlarmOccur .1.3.6.1.4.1.25506.2.6.2.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the monitored device connected to the $*
SDESC
The trap is generated when the monitored device connected to the
specified entity fails.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExternalAlarmRecover .1.3.6.1.4.1.25506.2.6.2.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the failed device connected to the $*
SDESC
The trap is generated when the failed device connected to the
specified entity returns to normal.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtCpuUsageThresholdRecover .1.3.6.1.4.1.25506.2.6.2.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the CPU usage descends the threshold. $*
SDESC
The trap indicates the CPU usage descends the threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCpuUsage
     Syntax="INTEGER32"
     Descr="The CPU usage for this entity. Generally, the overall
            CPU usage on the entity is calculated, independent of
            the number of CPUs on the entity."
  3: hh3cEntityExtCpuUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
            the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  6: hh3cEntityExtCpuUsageRecoverThreshold
     Syntax="INTEGER32"
     Descr="The recover threshold for the CPU usage.  When the CPU usage falls down to
            the threshold, a notification is sent.  The hh3cEntityExtCpuUsageRecoverThreshold
            must be less than or equal to the hh3cEntityExtCpuUsageThreshold."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdRecover .1.3.6.1.4.1.25506.2.6.2.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the memory usage descends the threshold. $*
SDESC
The trap indicates the memory usage descends the threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSize
     Syntax="UNSIGNED32"
     Descr="The size of memory for the entity.

            If the amount of memory exceeds 4,294,967,295 bytes,
            the value remains 4,294,967,295 bytes."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemAllocatedFailed .1.3.6.1.4.1.25506.2.6.2.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the memory allocated failed. $*
SDESC
The trap indicates the memory allocated failed.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTrapDescription
     Syntax="OCTETSTR"
     Descr="The information of trap."
EDESC
#
#
#
EVENT hh3cEntityExtECCParityAlarm .1.3.6.1.4.1.25506.2.6.2.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates the ECC(Error Correction Code) parity error alarm. $*
SDESC
The trap indicates the ECC(Error Correction Code) parity error alarm.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtECCParityAlarmStatus
     Syntax="INTEGER"
       1: other
       10: controlmemory
       2: l1cache
       3: l2cache
       4: sdram
       5: mac
       6: tcam
       7: ingressbuffer
       8: egressbuffer
       9: lpm
     Descr="ECC parity error."
  3: hh3cEntityExtTrapDescription
     Syntax="OCTETSTR"
     Descr="The information of trap."
EDESC
#
#
#
EVENT hh3cEntityExtCritLowerTempThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.29 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtCritLowerTempThresholdNotification $*
SDESC
The hh3cEntityExtCritLowerTempThresholdNotification
indicates the temperature is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtCriticalLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the critical Temperature.  When temperature
            exceeds the critical lower temperature, a notification will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureTooLow .1.3.6.1.4.1.25506.2.6.2.0.30 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cEntityExtTemperatureTooLow indicates the temperature $*
SDESC
The hh3cEntityExtTemperatureTooLow indicates the temperature
is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity halts now.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature.  When temperature
            exceeds the lower threshold, a notification will be sent and the entity
            will be shutdown."
EDESC
#
#
#
EVENT hh3cEntityExtFanDirectionNotPreferred .1.3.6.1.4.1.25506.2.6.2.0.31 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates the specified fan's direction does not $*
SDESC
This trap indicates the specified fan's direction does not
accord with preferred. The two parameters indicate the entity
index and physical name of fan.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtFanDirectionNotAccord .1.3.6.1.4.1.25506.2.6.2.0.32 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates the direction of fans does not accord $*
SDESC
This trap indicates the direction of fans does not accord
with each other. The two parameters indicate the parent
entity of the fans.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtSFPInvalid .1.3.6.1.4.1.25506.2.6.2.0.33 "Status Events" Normal
FORMAT ZBXTRAP $aA The transceiver module is not compatible with the interface card. $*
SDESC
The transceiver module is not compatible with the interface card.
The authorized manufacturer therefore shall NOT guarantee
the normal function of the transceiver.
The transceiver module will be invalidated in days.
Please replace it with a compatible one as soon as possible.
The trap is generated periodically after a phony transceiver module
has been found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtSFPInvalidInDays
     Syntax="INTEGER32"
     Descr="The days when the transceiver module is still valid,
            but after those days, it will be invalidated."
EDESC
#
#
#
EVENT hh3cEntityExtSFPInvalidNow .1.3.6.1.4.1.25506.2.6.2.0.34 "Status Events" Normal
FORMAT ZBXTRAP $aA This transceiver module is not compatible with the interface card. $*
SDESC
This transceiver module is not compatible with the interface card.
The authorized manufacturer therefore shall NOT guarantee
the normal function of the transceiver.
The trap is generated after a phony transceiver module
has been found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdOverTrap .1.3.6.1.4.1.25506.2.6.2.0.35 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the memory usage of the entity is $*
SDESC
This trap indicates that the memory usage of the entity is
overloaded.
This trap is used to replace
hh3cEntityExtMemUsageThresholdNotification.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSizeRev
     Syntax="COUNTER64"
     Descr="Size of memory space for the entity.

            This node is used to replace hh3cEntityExtMemSize."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdRecoverTrap .1.3.6.1.4.1.25506.2.6.2.0.36 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the memory usage decreased below $*
SDESC
This trap indicates that the memory usage decreased below
the threshold.
This trap is used to replace
hh3cEntityExtMemUsageThresholdRecover.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSizeRev
     Syntax="COUNTER64"
     Descr="Size of memory space for the entity.

            This node is used to replace hh3cEntityExtMemSize."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageNormal .1.3.6.1.4.1.25506.2.6.2.0.37 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage recovers to normal. $*
SDESC
This trap indicates that the voltage recovers to normal.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorLowThreshold
     Syntax="INTEGER32"
     Descr="The low threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
  5: hh3cEntityExtVoltageMajorHighThreshold
     Syntax="INTEGER32"
     Descr="The high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageLower .1.3.6.1.4.1.25506.2.6.2.0.38 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is lower than the $*
SDESC
This trap indicates that the voltage is lower than the
low threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorLowThreshold
     Syntax="INTEGER32"
     Descr="The low threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageTooLow .1.3.6.1.4.1.25506.2.6.2.0.39 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is lower than the $*
SDESC
This trap indicates that the voltage is lower than the
fatal low threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageFatalLowThreshold
     Syntax="INTEGER32"
     Descr="The fatal low voltage threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageHigher .1.3.6.1.4.1.25506.2.6.2.0.40 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is higher than the $*
SDESC
This trap indicates that the voltage is higher than the
high threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorHighThreshold
     Syntax="INTEGER32"
     Descr="The high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageTooHigh .1.3.6.1.4.1.25506.2.6.2.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the voltage is higher than the $*
SDESC
This trap indicates that the voltage is higher than the
fatal high threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageFatalHighThreshold
     Syntax="INTEGER32"
     Descr="The fatal high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOnEx .1.3.6.1.4.1.25506.2.6.2.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module fails $*
SDESC
The trap is generated when the SFP module fails
or runs abnormally for some particular reason.
This trap is used to replace hh3cEntityExtSFPAlarmOn.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  5: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOffEx .1.3.6.1.4.1.25506.2.6.2.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when the SFP module is restored to $*
SDESC
The trap is generated when the SFP module is restored to
normal status.
This trap is used to replace hh3cEntityExtSFPAlarmOff.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  5: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
EDESC
#
#
#
EVENT hh3cEntityExtSystemFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system fatal alarm occurred. $*
SDESC
The trap is generated when a system fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system fatal alarm cleared. $*
SDESC
The trap is generated when a system fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system alarm occurred. $*
SDESC
The trap is generated when a system alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system alarm cleared. $*
SDESC
The trap is generated when a system alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system warning occurred. $*
SDESC
The trap is generated when a system warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemWarningClear .1.3.6.1.4.1.25506.2.6.4.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a system warning cleared. $*
SDESC
The trap is generated when a system warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board fatal alarm occurred. $*
SDESC
The trap is generated when a board fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board fatal alarm cleared. $*
SDESC
The trap is generated when a board fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board alarm occurred. $*
SDESC
The trap is generated when a board alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board alarm cleared. $*
SDESC
The trap is generated when a board alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board warning occurred. $*
SDESC
The trap is generated when a board warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardWarningClear .1.3.6.1.4.1.25506.2.6.4.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a board warning cleared. $*
SDESC
The trap is generated when a board warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power fatal alarm occurred. $*
SDESC
The trap is generated when a power fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power fatal alarm cleared. $*
SDESC
The trap is generated when a power fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power alarm occurred. $*
SDESC
The trap is generated when a power alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power alarm cleared. $*
SDESC
The trap is generated when a power alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power warning occurred. $*
SDESC
The trap is generated when a power warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerWarningClear .1.3.6.1.4.1.25506.2.6.4.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a power warning cleared. $*
SDESC
The trap is generated when a power warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan fatal alarm occurred. $*
SDESC
The trap is generated when a fan fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan fatal alarm cleared. $*
SDESC
The trap is generated when a fan fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan alarm occurred. $*
SDESC
The trap is generated when a fan alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan alarm cleared. $*
SDESC
The trap is generated when a fan alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan warning occurred. $*
SDESC
The trap is generated when a fan warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanWarningClear .1.3.6.1.4.1.25506.2.6.4.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a fan warning cleared. $*
SDESC
The trap is generated when a fan warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage fatal alarm occurred. $*
SDESC
The trap is generated when a voltage fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage fatal alarm cleared. $*
SDESC
The trap is generated when a voltage fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage alarm occurred. $*
SDESC
The trap is generated when a voltage alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage alarm cleared. $*
SDESC
The trap is generated when a voltage alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.29 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage warning occurred. $*
SDESC
The trap is generated when a voltage warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageWarningClear .1.3.6.1.4.1.25506.2.6.4.0.30 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a voltage warning cleared. $*
SDESC
The trap is generated when a voltage warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.31 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature fatal alarm occurred. $*
SDESC
The trap is generated when a temperature fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.32 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature fatal alarm cleared. $*
SDESC
The trap is generated when a temperature fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.33 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature alarm occurred. $*
SDESC
The trap is generated when a temperature alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.34 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature alarm cleared. $*
SDESC
The trap is generated when a temperature alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.35 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature warning occurred. $*
SDESC
The trap is generated when a temperature warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureWarningClear .1.3.6.1.4.1.25506.2.6.4.0.36 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a temperature warning cleared. $*
SDESC
The trap is generated when a temperature warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.37 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock fatal alarm occurred. $*
SDESC
The trap is generated when a clock fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.38 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock fatal alarm cleared. $*
SDESC
The trap is generated when a clock fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.39 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock alarm occurred. $*
SDESC
The trap is generated when a clock alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.40 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock alarm cleared. $*
SDESC
The trap is generated when a clock alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock warning occurred. $*
SDESC
The trap is generated when a clock warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockWarningClear .1.3.6.1.4.1.25506.2.6.4.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a clock warning cleared. $*
SDESC
The trap is generated when a clock warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk fatal alarm occurred. $*
SDESC
The trap is generated when a disk fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.44 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk fatal alarm cleared. $*
SDESC
The trap is generated when a disk fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.45 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk alarm occurred. $*
SDESC
The trap is generated when a disk alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.46 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk alarm cleared. $*
SDESC
The trap is generated when a disk alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.47 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk warning occurred. $*
SDESC
The trap is generated when a disk warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskWarningClear .1.3.6.1.4.1.25506.2.6.4.0.48 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a disk warning cleared. $*
SDESC
The trap is generated when a disk warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.49 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical fatal alarm occurred. $*
SDESC
The trap is generated when an optical fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.50 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical fatal alarm cleared. $*
SDESC
The trap is generated when an optical fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.51 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical alarm occurred. $*
SDESC
The trap is generated when an optical alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.52 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical alarm cleared. $*
SDESC
The trap is generated when an optical alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.53 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical warning occurred. $*
SDESC
The trap is generated when an optical warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalWarningClear .1.3.6.1.4.1.25506.2.6.4.0.54 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an optical warning cleared. $*
SDESC
The trap is generated when an optical warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.55 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link fatal alarm occurred. $*
SDESC
The trap is generated when an internal link fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.56 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link fatal alarm cleared. $*
SDESC
The trap is generated when an internal link fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.57 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link alarm occurred. $*
SDESC
The trap is generated when an internal link alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.58 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link alarm cleared. $*
SDESC
The trap is generated when an internal link alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.59 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link warning occurred. $*
SDESC
The trap is generated when an internal link warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkWarningClear .1.3.6.1.4.1.25506.2.6.4.0.60 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when an internal link warning cleared. $*
SDESC
The trap is generated when an internal link warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
#
MIB: HH3C-ENTITY-VENDORTYPE-OID-MIB (file:./hh3c-entity-vendortype-oid.mib) converted on Fri Mar 18 23:13:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ENTRELATION-MIB (file:./hh3c-entrelation.mib) converted on Fri Mar 18 23:13:44 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EOC-COMMON-MIB (file:./hh3c-eoc-common.mib) converted on Fri Mar 18 23:13:45 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEOCCnuRegExcessTrap .1.3.6.1.4.1.25506.2.83.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegExcessTrap notification is sent when the
number of registered CNUs exceeds the limit.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuRegExcessRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegExcessRecoverTrap notification is sent when
hh3cEOCCnuRegExcessTrap is detected and then recoverd.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuRegSuccTrap .1.3.6.1.4.1.25506.2.83.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegSuccTrap notification is sent when a
CNU registers successful.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuOffLineTrap .1.3.6.1.4.1.25506.2.83.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuOffLineTrap notification is sent when a
CNU offline.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuLinkupTrap .1.3.6.1.4.1.25506.2.83.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuLinkupTrap notification is sent when a
CNU linkup.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCOamDisconnectTrap .1.3.6.1.4.1.25506.2.83.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCOamDisconnectionTrap notification is sent when
LLID's OAM link is disconnected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCOamDisconnectRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCOamDisconnectionRecoverTrap notification is sent when
LLID's OAM link is disconnected and then connected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCBandwidthNotEnoughTrap .1.3.6.1.4.1.25506.2.83.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

Bandwidth is not enough, cnu can not bind now.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuAttenuationTrap .1.3.6.1.4.1.25506.2.83.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cHPEOCCnuAttenuationTrap notification is sent when a
CNU's attenuation is changing.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuAttenuation
     Syntax="INTEGER32"
     Descr="
        The cnu's average attenuation.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRegFailTrap .1.3.6.1.4.1.25506.2.83.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRegFailTrap notification is sent when a
CNU registers fail.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCLTCablePortErrorTrap .1.3.6.1.4.1.25506.2.83.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCLTCablePortErrorTrap notification is sent when the
hardware of cable port occurs error or CLT's vlan is configged
error.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCLTCablePortErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCLTCablePortErrReTrap notification is sent when cable port
error and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuTxRateDropTrap .1.3.6.1.4.1.25506.2.83.5.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuTxRateDropTrap notification is sent when cable port
rate of TX capability drop exceeded threshold.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuTxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of tx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuTxRateDropRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuTxRateDropRecoverTrap notification is sent when cable port
rate of TX capability recover from the recent rate-drop trap.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuTxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of tx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRxRateDropTrap .1.3.6.1.4.1.25506.2.83.5.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRxRateDropTrap notification is sent when cable port
rate of RX capability drop exceeded threshold.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuRxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of rx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRxRateDropRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuRxRateDropRecoverTrap notification is sent when cable port
rate of RX capability recover from the recent rate-drop trap.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuRxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of rx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuFWDownLoadErrTrap .1.3.6.1.4.1.25506.2.83.5.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuFWDownLoadErrTrap notification is sent when CLT can't
download CNU firmware from the server successfully.

Variables:
  1: hh3cHPEOCDownLoadCNUFWResult
     Syntax="OCTETSTR"
     Descr="
        Download CNU firmware result.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuFWDownLoadErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuFWDownLoadErrReTrap notification is sent when CLT recover
from the download CNU firmware error.

EDESC
#
#
#
EVENT hh3cEOCCnuDeviceTypeErrTrap .1.3.6.1.4.1.25506.2.83.5.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuDeviceTypeErrTrap notification is sent when the online CNU
doesn't match the type which user defined earlier.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuDeviceType
     Syntax="OCTETSTR"
     Descr="
        The type of the EOC CNU(Coax Network Unit).
        "
EDESC
#
#
#
EVENT hh3cEOCCnuDeviceTypeErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuDeviceTypeErrReTrap notification is sent when the online CNU
doesn't match the type which user defined earlier and then recover.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuAutoUpdateErrTrap .1.3.6.1.4.1.25506.2.83.5.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuAutoUpdateErrTrap notification is sent when the online CNU
doesn't auto update successfully.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuAutoUpdateSuccTrap .1.3.6.1.4.1.25506.2.83.5.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCCnuAutoUpdateSuccTrap notification is sent when the online CNU
auto update successfully.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCLoopbackDetectTrap .1.3.6.1.4.1.25506.2.83.5.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCLoopbackDetectTrap notification is sent when the loopback between
the ethernet ports of CNU or CLT is found.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCLoopbackRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEOCLoopbackRecoverTrap notification is sent when the loopback between
the ethernet ports of CNU or CLT is recover.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
#
MIB: HH3C-EPON-DEVICE-MIB (file:./hh3c-epon-device.mib) converted on Fri Mar 18 23:13:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EPON-FB-MIB (file:./hh3c-epon-fb.mib) converted on Fri Mar 18 23:13:45 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EPON-MIB (file:./hh3c-epon.mib) converted on Fri Mar 18 23:13:45 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEponPortAlarmBerTrap .1.3.6.1.4.1.25506.2.42.1.8.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmBerTrap notification is sent when
a BER threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmBerDirect
     Syntax="INTEGER"
       1: berUplink
       2: berDownlink
       3: berAll
     Descr="
        Traffic direction to monitor for BER alarm.
        "
  4: hh3cOltPortAlarmBer
     Syntax="UNSIGNED32"
     Descr="
        error bit rate.
        "
  5: hh3cOltPortAlarmBerThreshold
     Syntax="INTEGER32"
     Descr="
        BER threshold exceed which the alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmFerTrap .1.3.6.1.4.1.25506.2.42.1.8.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmFerTrap notification is sent when
a frame error rate threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmFerDirect
     Syntax="INTEGER"
       1: ferUplink
       2: ferDownlink
       3: ferAll
     Descr="
        Traffic direction to monitor for FER alarm.
        "
  4: hh3cOltPortAlarmFer
     Syntax="UNSIGNED32"
     Descr="
        error frames rate.
        "
  5: hh3cOltPortAlarmFerThreshold
     Syntax="INTEGER32"
     Descr="
        Frame error rate exceed threshold then the alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponErrorLLIDFrameTrap .1.3.6.1.4.1.25506.2.42.1.8.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponErrorLLIDFrameTrap notification is sent when a
LLID mismatched frames rate threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmLlidMisFrames
     Syntax="UNSIGNED32"
     Descr="
        the amount of mismatched frames about the LLID mismatch alarm.
        "
  4: hh3cOltPortAlarmLlidMismatchThreshold
     Syntax="INTEGER32"
     Descr="
        The minimal number of mismatched frames exceed threshold then
        LLID mismatch alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponLoopBackEnableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLoopBackEnableTrap notification is sent when
the loop back command is committed.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponLoopbackPortIndex
     Syntax="INTEGER32"
     Descr="
        The index of port which generate loop back event.
        "
  4: hh3cEponLoopbackPortDescr
     Syntax="OCTETSTR"
     Descr="
        A textual string containing information about the
        port generated loop back event.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegistrationErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegistrationErrTrap notification is sent when a
ONU register failed.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorMacAddr
     Syntax="OCTETSTR"
     Descr="
        The MAC of ONU registered error.
        "
EDESC
#
#
#
EVENT hh3cEponOamDisconnectionTrap .1.3.6.1.4.1.25506.2.42.1.8.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamDisconnectionTrap notification is sent when
LLID's OAM link is disconnected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponEncryptionKeyErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponEncryptionKeyErrTrap notification is sent when
LLID's encryption key is bad.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponRemoteStableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponRemoteStableTrap notification is sent when
remote Data Terminal Equipment(DTE) has not seen or
is unsatisfied with local state information.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLocalStableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLocalStableTrap notification is sent when
DTE has not seen or is unsatisfied with remote state
information.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOamVendorSpecificTrap .1.3.6.1.4.1.25506.2.42.1.8.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamVendorSpecificTrap notification is sent when
system vendor specific OAM alarm raised.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOamVendorSpecificAlarmCode
     Syntax="INTEGER32"
     Descr="
        Alarm code of the vendor.
        "
EDESC
#
#
#
EVENT hh3cEponSoftwareErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponSoftwareErrTrap notification is sent when
a PAS-SOFT internal error occurs.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cEponSoftwareErrorCode
     Syntax="INTEGER32"
     Descr="
        OLT software error code.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmBerRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmBerRecoverTrap notification is sent when
a BER threshold crossing event is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmBerDirect
     Syntax="INTEGER"
       1: berUplink
       2: berDownlink
       3: berAll
     Descr="
        Traffic direction to monitor for BER alarm.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmFerRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponPortAlarmFerRecoverTrap notification is sent when
a frame error rate threshold crossing event is detected and then
recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmFerDirect
     Syntax="INTEGER"
       1: ferUplink
       2: ferDownlink
       3: ferAll
     Descr="
        Traffic direction to monitor for FER alarm.
        "
EDESC
#
#
#
EVENT hh3cEponErrorLLIDFrameRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponErrorLLIDFrameRecoverTrap notification is sent when a
LLID mismatched frames rate threshold crossing event is detected
and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLoopBackEnableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLoopBackEnableRecoverTrap notification is sent when
the loop back is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuRegistrationErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegistrationErrRecoverTrap notification is sent when an
ONU register failed and then register successful again.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorMacAddr
     Syntax="OCTETSTR"
     Descr="
        The MAC of ONU registered error.
        "
EDESC
#
#
#
EVENT hh3cEponOamDisconnectionRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamDisconnectionRecoverTrap notification is sent when
LLID's OAM link is disconnected and then connected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponEncryptionKeyErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponEncryptionKeyErrRecoverTrap notification is sent when
LLID's encryption key is bad and then right.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponRemoteStableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponRemoteStableRecoverTrap notification is sent when
remote DTE has not seen or is unsatisfied with local
state information and then is realized.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLocalStableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponLocalStableRecoverTrap notification is sent when
DTE has not seen or is unsatisfied with remote state
information and then is realized.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOamVendorSpecificRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOamVendorSpecificRecoverTrap notification is sent when
system vendor specific OAM alarm is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOamVendorSpecificAlarmCode
     Syntax="INTEGER32"
     Descr="
        Alarm code of the vendor.
        "
EDESC
#
#
#
EVENT hh3cEponSoftwareErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponSoftwareErrRecoverTrap notification is sent when
a PAS-SOFT internal error is detected and then recovered.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cEponSoftwareErrorCode
     Syntax="INTEGER32"
     Descr="
        OLT software error code.
        "
EDESC
#
#
#
EVENT hh3cDot3OamThresholdRecoverEvent .1.3.6.1.4.1.25506.2.42.1.8.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cDot3OamThresholdRecoverEvent notification is sent when
hh3cDot3OamThresholdEvent is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cOamEventLogType
     Syntax="UNSIGNED32"
     Descr="
        The type of event that generated this entry in the event log.
        "
  3: hh3cOamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="
        Whether this event occurred locally, or was received from the
        OAM peer via Ethernet OAM.
        "
EDESC
#
#
#
EVENT hh3cDot3OamNonThresholdRecoverEvent .1.3.6.1.4.1.25506.2.42.1.8.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cDot3OamNonThresholdRecoverEvent notification is sent when
hh3cDot3OamNonThresholdEvent is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cOamEventLogType
     Syntax="UNSIGNED32"
     Descr="
        The type of event that generated this entry in the event log.
        "
  3: hh3cOamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="
        Whether this event occurred locally, or was received from the
        OAM peer via Ethernet OAM.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegExcessTrap .1.3.6.1.4.1.25506.2.42.1.8.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegExcessTrap notification is sent when the
number of registered ONUs exceeds the limit.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuRegExcessRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegExcessRecoverTrap notification is sent when
hh3cEponOnuRegExcessTrap is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuPowerOffTrap .1.3.6.1.4.1.25506.2.42.1.8.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when ONU is power off.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltSwitchoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOltSwithoverTrap notification is sent when OLT switchover
is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltDFETrap .1.3.6.1.4.1.25506.2.42.1.8.0.29 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOltDFETrap notification is sent when there was
a serious problem(device fatal error) on OLT.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltDFERecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.30 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOltDFERecoverTrap notification is sent when
device fatal error is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuSilenceTrap .1.3.6.1.4.1.25506.2.42.1.8.0.31 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceTrap notification is sent when an
unbound ONU try to register to an OLT.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.32 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceRecoverTrap notification is sent when
a silent ONU is bound in the OLT or the aging onu mac
address is timeout.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
EDESC
#
#
#
EVENT hh3cEponOnuUpdateResultTrap .1.3.6.1.4.1.25506.2.42.1.8.0.33 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUpdateResultTrap notification is sent when
an ONU reported its firmware update result.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindMacAddress
     Syntax="OCTETSTR"
     Descr="
        Bind the MAC of ONU.
        While the MAC is not bound, the ONU can not go into
        effect and configurations can not be set.
        Set 0-0-0 (MAC address) to the EPON device port will
        unbind the relationship with the original MAC and
        configurations will be set to default values.
        "
  4: hh3cOnuUpdateResult
     Syntax="INTEGER"
       1: updating
       2: ok
       3: fail
       4: fileNotExist
       5: notSetFilename
       6: fileNotMatchONU
       7: timeout
       8: otherError
     Descr="
        The ONU firmware update result.
        updating  - The ONU is updating firmware right now.
        ok     - The ONU update result is OK.
        fail   - The ONU update result is fail.
        fileNotExist - The ONU update failed because the file does not exist.
        notSetFilename - The ONU firmware filename is not set.
        fileNotMatchONU - The ONU firmware does not match the ONU.
        timeout - The ONU responses timeout.
        otherError - The ONU update result is unknown.
        "
  5: hh3cOnuRegType
     Syntax="OCTETSTR"
     Descr="
        ONU registered type.
        "
  6: hh3cOnuUpdateFileName
     Syntax="OCTETSTR"
     Descr="
        The filename of the ONU firmware to be updated.
        Note that the filename must contain the file path.
        "
EDESC
#
#
#
EVENT hh3cEponOnuAutoBindTrap .1.3.6.1.4.1.25506.2.42.1.8.0.34 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuAutoBindTrap notification is sent
when a silent ONU is bound automatically.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindMacAddress
     Syntax="OCTETSTR"
     Descr="
        Bind the MAC of ONU.
        While the MAC is not bound, the ONU can not go into
        effect and configurations can not be set.
        Set 0-0-0 (MAC address) to the EPON device port will
        unbind the relationship with the original MAC and
        configurations will be set to default values.
        "
  4: hh3cEponOperationResult
     Syntax="OCTETSTR"
     Descr="
        The result of EPON operation.
        "
EDESC
#
#
#
EVENT hh3cEponOnuPortStpStateTrap .1.3.6.1.4.1.25506.2.42.1.8.0.35 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPortStpStateTrap notification is sent when
a port turns into another state in STP environment.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponStpPortIndex
     Syntax="INTEGER32"
     Descr="The index of the STP ports."
  4: hh3cEponStpPortDescr
     Syntax="OCTETSTR"
     Descr="The description of the STP ports."
  5: hh3cEponStpPortState
     Syntax="INTEGER"
       1: disabled
       2: discarding
       3: learning
       4: forwarding
     Descr="The current state of the port (i.e. disabled, discarding,
         learning and forwarding)."
EDESC
#
#
#
EVENT hh3cEponOnuLaserFailedTrap .1.3.6.1.4.1.25506.2.42.1.8.0.36 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuLaserFailedTrap notification is sent when
an ONU has trouble with laser, such as laser constantly turned on,
signal degradation or optics EOL (End of Life).

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuLaserState
     Syntax="INTEGER"
       1: normal
       2: laserAlwaysOn
       3: signalDegradation
       4: endOfLife
     Descr="
        The state of ONU laser.
        "
EDESC
#
#
#
EVENT hh3cOnuSmlkSwitchoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.37 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cOnuSmlkSwitchoverTrap notification is sent when
an ONU SMLK switchover is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuSmlkGroupID
     Syntax="INTEGER32"
     Descr="
        The SMLK group ID of ONU.
        "
  4: hh3cOnuSmlkFirstPonStatus
     Syntax="INTEGER"
       1: active
       2: standby
       3: down
       4: null
     Descr="
        The transmitting status of ONU first PON port in a SMLK group.
        "
  5: hh3cOnuSmlkSecondPonStatus
     Syntax="INTEGER"
       1: active
       2: standby
       3: down
       4: null
     Descr="
        The transmitting status of ONU second PON port in a SMLK group.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegLoidErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.38 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegLoidErrTrap notification is sent when an
ONU failed to register identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of an ONU with registration error.
        "
  4: hh3cEponOnuRegErrorLoidCode
     Syntax="INTEGER"
       1: loidNotExist
       2: wrongPassword
       3: conflictLoid
       4: notSupport
       5: mismatch
     Descr="
        The reason of ONU registration failure.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegLoidErrRecTrap .1.3.6.1.4.1.25506.2.42.1.8.0.39 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuRegLoidErrRecTrap notification is sent when an
ONU failed to register and then registered successful again identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of an ONU with registration error.
        "
  4: hh3cEponOnuRegErrorLoidCode
     Syntax="INTEGER"
       1: loidNotExist
       2: wrongPassword
       3: conflictLoid
       4: notSupport
       5: mismatch
     Descr="
        The reason of ONU registration failure.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceLoidTrap .1.3.6.1.4.1.25506.2.42.1.8.0.40 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceLoidTrap notification is sent when an
unbound ONU try to register to an OLT identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentBindType
     Syntax="BITS"
     Descr="
        The binding type of a silent ONU.
        "
  4: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
  5: hh3cEponOnuRegSilentLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of a silent ONU.
        "
  6: hh3cEponOnuRegSilentLoidPwd
     Syntax="OCTETSTR"
     Descr="
        The LOID's password of a silent ONU.
        A zero-length string will be returned when reading.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceLoidRecTrap .1.3.6.1.4.1.25506.2.42.1.8.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

The hh3cEponOnuSilenceLoidRecTrap notification is sent when
a silent ONU is bound in the OLT or the aging ONU MAC
address times out identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentBindType
     Syntax="BITS"
     Descr="
        The binding type of a silent ONU.
        "
  4: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
  5: hh3cEponOnuRegSilentLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of a silent ONU.
        "
  6: hh3cEponOnuRegSilentLoidPwd
     Syntax="OCTETSTR"
     Descr="
        The LOID's password of a silent ONU.
        A zero-length string will be returned when reading.
        "
EDESC
#
#
#
EVENT hh3cEponOnuUpdateLoidRetTrap .1.3.6.1.4.1.25506.2.42.1.8.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuUpdateLoidRetTrap notification is sent when
an ONU reported its firmware update result identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindLoid
     Syntax="OCTETSTR"
     Descr="
        Bind the LOID of ONU.
        While the LOID is not bound, the ONU can not go into
        effect and configurations can not be set.
        "
  4: hh3cOnuUpdateResult
     Syntax="INTEGER"
       1: updating
       2: ok
       3: fail
       4: fileNotExist
       5: notSetFilename
       6: fileNotMatchONU
       7: timeout
       8: otherError
     Descr="
        The ONU firmware update result.
        updating  - The ONU is updating firmware right now.
        ok     - The ONU update result is OK.
        fail   - The ONU update result is fail.
        fileNotExist - The ONU update failed because the file does not exist.
        notSetFilename - The ONU firmware filename is not set.
        fileNotMatchONU - The ONU firmware does not match the ONU.
        timeout - The ONU responses timeout.
        otherError - The ONU update result is unknown.
        "
  5: hh3cOnuRegType
     Syntax="OCTETSTR"
     Descr="
        ONU registered type.
        "
  6: hh3cOnuUpdateFileName
     Syntax="OCTETSTR"
     Descr="
        The filename of the ONU firmware to be updated.
        Note that the filename must contain the file path.
        "
EDESC
#
#
#
EVENT hh3cEponOnuAutoBindLoidTrap .1.3.6.1.4.1.25506.2.42.1.8.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuAutoBindLoidTrap notification is sent
when a silent ONU is bound automatically identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindLoid
     Syntax="OCTETSTR"
     Descr="
        Bind the LOID of ONU.
        While the LOID is not bound, the ONU can not go into
        effect and configurations can not be set.
        "
  4: hh3cEponOperationResult
     Syntax="OCTETSTR"
     Descr="
        The result of EPON operation.
        "
EDESC
#
#
#
EVENT hh3cEponOnuPowerOnTrap .1.3.6.1.4.1.25506.2.42.1.8.0.44 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when ONU is powered on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOpticalSignalLosTrap .1.3.6.1.4.1.25506.2.42.1.8.0.45 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOpticalSignalLosTrap notification is sent when optical signals are lost.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOpticalSignalLosRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.46 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOpticalSignalLosTrap notification is sent when optical signal loss recovers.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuFiberFailTrap .1.3.6.1.4.1.25506.2.42.1.8.0.47 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when the ONU fiber fails.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuFiberFailRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.48 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when the ONU fiber failure recovers.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-EPON-UNI-MIB (file:./hh3c-epon-uni.mib) converted on Fri Mar 18 23:13:47 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEponUniLinkUpTrap .1.3.6.1.4.1.25506.2.42.5.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLinkUpTrap notification is sent
when the UNI up event is detected
and the transmitting switch is turned on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the user network interface. When a managed
        system initializes, all user network interfaces start with down(2)
        state. The testing(3)state indicates that no operational packets
        can be passed. As a result of either explicit management action or
        per configuration information retained by the managed system,
        hh3cEponUniAdminStatus is then changed to either the up(1) or
        testing(3) states (or remains in the down(2) state)."
EDESC
#
#
#
EVENT hh3cEponUniLinkDownTrap .1.3.6.1.4.1.25506.2.42.5.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLinkDownTrap notification is sent
when the UNI down event is detected
and the transmitting switch is turned on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the user network interface. When a managed
        system initializes, all user network interfaces start with down(2)
        state. The testing(3)state indicates that no operational packets
        can be passed. As a result of either explicit management action or
        per configuration information retained by the managed system,
        hh3cEponUniAdminStatus is then changed to either the up(1) or
        testing(3) states (or remains in the down(2) state)."
EDESC
#
#
#
EVENT hh3cEponUniLoopBackDetectedTrap .1.3.6.1.4.1.25506.2.42.5.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLoopBackDetectedTrap notification is sent
when the UNI loopback event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniVlan
     Syntax="INTEGER32"
     Descr="
        If the function is not supported,
        the default value 0 will be returned.
        Unit:decibel(db).
        "
EDESC
#
#
#
EVENT hh3cEponUniLoopBackRecoveredTrap .1.3.6.1.4.1.25506.2.42.5.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponUniLoopBackRecoveredTrap notification is sent
when the UNI loopback is recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniVlan
     Syntax="INTEGER32"
     Descr="
        If the function is not supported,
        the default value 0 will be returned.
        Unit:decibel(db).
        "
EDESC
#
#
#
EVENT hh3cEponCTCAlarmTrap .1.3.6.1.4.1.25506.2.42.5.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponCTCAlarmTrap notification is sent
when an ONU CTC alarm is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponCTCAlarmID
     Syntax="INTEGER"
       1: onuEquipmentAlarm
       10: onuONUTempLowAlarm
       1025: uniPOTSPortFailure
       11: onuIADConnectionFailure
       12: onuPonIFSwitch
       1281: uniE1PortFailure
       1282: uniE1TimingUnlock
       1283: uniE1LOS
       13: onuSleepStatusUpdate
       2: onuPowerAlarm
       257: ponRXPowerHighAlarm
       258: ponRXPowerLowAlarm
       259: ponTXPowerHighAlarm
       260: ponTXPowerLowAlarm
       261: ponTXBiasHighAlarm
       262: ponTXBiasLowAlarm
       263: ponVccHighAlarm
       264: ponVccLowAlarm
       265: ponTempHighAlarm
       266: ponTempLowAlarm
       267: ponRXPowerHighWarning
       268: ponRXPowerLowWarning
       269: ponTXPowerHighWarning
       270: ponTXPowerLowWarning
       271: ponTXBiasHighWarning
       272: ponTXBiasLowWarning
       273: ponVccHighWarning
       274: ponVccLowWarning
       275: ponTempHighWarning
       276: ponTempLowWarning
       277: ponDownstreamDropEventsAlarm
       278: ponUpstreamDropEventsAlarm
       279: ponDownstreamCRCErrorFramesAlarm
       280: ponUpstreamCRCErrorFramesAlarm
       281: ponDownstreamUndersizeFramesAlarm
       282: ponUpstreamUndersizeFramesAlarm
       283: ponDownstreamOversizeFramesAlarm
       284: ponUpstreamOversizeFramesAlarm
       285: ponDownstreamFragmentsAlarm
       286: ponUpstreamFragmentsAlarm
       287: ponDownstreamJabbersAlarm
       288: ponUpstreamJabbersAlarm
       289: ponDownstreamDiscardsAlarm
       290: ponUpstreamDiscardsAlarm
       291: ponDownstreamErrorsAlarm
       292: ponUpstreamErrorsAlarm
       293: ponDownstreamDropEventsWarning
       294: ponUpstreamDropEventsWarning
       295: ponDownstreamCRCErrorFramesWarning
       296: ponUpstreamCRCErrorFramesWarning
       297: ponDownstreamUndersizeFramesWarning
       298: ponUpstreamUndersizeFramesWarning
       299: ponDownstreamOversizeFramesWarning
       3: onuBatteryMissing
       300: ponUpstreamOversizeFramesWarning
       301: ponDownstreamFragmentsWarning
       302: ponUpstreamFragmentsWarning
       303: ponDownstreamJabbersWarning
       304: ponUpstreamJabbersWarning
       305: ponDownstreamDiscardsWarning
       306: ponUpstreamDiscardsWarning
       307: ponDownstreamErrorsWarning
       308: ponUpstreamErrorsWarning
       4: onuBatteryFailure
       5: onuBatteryVoltLow
       6: onuPhysicalIntrusionAlarm
       7: onuONUSelfTestFailure
       769: uniEthPortAutoNegFailure
       770: uniEthPortLOS
       771: uniEthPortFailure
       772: uniEthPortLoopback
       773: uniEthPortCongestion
       774: uniDownstreamDropEventsAlarm
       775: uniUpstreamDropEventsAlarm
       776: uniDownstreamCRCErrorFramesAlarm
       777: uniUpstreamCRCErrorFramesAlarm
       778: uniDownstreamUndersizeFramesAlarm
       779: uniUpstreamUndersizeFramesAlarm
       780: uniDownstreamOversizeFramesAlarm
       781: uniUpstreamOversizeFramesAlarm
       782: uniDownstreamFragmentsAlarm
       783: uniUpstreamFragmentsAlarm
       784: uniDownstreamJabbersAlarm
       785: uniUpstreamJabbersAlarm
       786: uniDownstreamDiscardsAlarm
       787: uniUpstreamDiscardsAlarm
       788: uniDownstreamErrorsAlarm
       789: uniUpstreamErrorsAlarm
       790: uniStatusChangeTimesAlarm
       791: uniDownstreamDropEventsWarning
       792: uniUpstreamDropEventsWarning
       793: uniDownstreamCRCErrorFramesWarning
       794: uniUpstreamCRCErrorFramesWarning
       795: uniDownstreamUndersizeFramesWarning
       796: uniUpstreamUndersizeFramesWarning
       797: uniDownstreamOversizeFramesWarning
       798: uniUpstreamOversizeFramesWarning
       799: uniDownstreamFragmentsWarning
       800: uniUpstreamFragmentsWarning
       801: uniDownstreamJabbersWarning
       802: uniUpstreamJabbersWarning
       803: uniDownstreamDiscardsWarning
       804: uniUpstreamDiscardsWarning
       805: uniDownstreamErrorsWarning
       806: uniUpstreamErrorsWarning
       807: uniStatusChangeTimesWarning
       9: onuONUTempHighAlarm
     Descr="
        The CTC alarm ID. There are 3 types of CTC alarms.
        ONU alarm:   0x0001~0x00ff
        PON alarm:   0x0101~0x01ff
        UNI alarm:   0x0301~0x05ff
        "
  4: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  5: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  6: hh3cEponCTCAlarmInfo
     Syntax="OCTETSTR"
     Descr="
        The information of an ONU CTC alarm.
        "
EDESC
#
#
#
EVENT hh3cEponCTCAlarmRecoverTrap .1.3.6.1.4.1.25506.2.42.5.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cEponCTCAlarmRecoverTrap notification is sent
when an ONU CTC alarm is cleared.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponCTCAlarmID
     Syntax="INTEGER"
       1: onuEquipmentAlarm
       10: onuONUTempLowAlarm
       1025: uniPOTSPortFailure
       11: onuIADConnectionFailure
       12: onuPonIFSwitch
       1281: uniE1PortFailure
       1282: uniE1TimingUnlock
       1283: uniE1LOS
       13: onuSleepStatusUpdate
       2: onuPowerAlarm
       257: ponRXPowerHighAlarm
       258: ponRXPowerLowAlarm
       259: ponTXPowerHighAlarm
       260: ponTXPowerLowAlarm
       261: ponTXBiasHighAlarm
       262: ponTXBiasLowAlarm
       263: ponVccHighAlarm
       264: ponVccLowAlarm
       265: ponTempHighAlarm
       266: ponTempLowAlarm
       267: ponRXPowerHighWarning
       268: ponRXPowerLowWarning
       269: ponTXPowerHighWarning
       270: ponTXPowerLowWarning
       271: ponTXBiasHighWarning
       272: ponTXBiasLowWarning
       273: ponVccHighWarning
       274: ponVccLowWarning
       275: ponTempHighWarning
       276: ponTempLowWarning
       277: ponDownstreamDropEventsAlarm
       278: ponUpstreamDropEventsAlarm
       279: ponDownstreamCRCErrorFramesAlarm
       280: ponUpstreamCRCErrorFramesAlarm
       281: ponDownstreamUndersizeFramesAlarm
       282: ponUpstreamUndersizeFramesAlarm
       283: ponDownstreamOversizeFramesAlarm
       284: ponUpstreamOversizeFramesAlarm
       285: ponDownstreamFragmentsAlarm
       286: ponUpstreamFragmentsAlarm
       287: ponDownstreamJabbersAlarm
       288: ponUpstreamJabbersAlarm
       289: ponDownstreamDiscardsAlarm
       290: ponUpstreamDiscardsAlarm
       291: ponDownstreamErrorsAlarm
       292: ponUpstreamErrorsAlarm
       293: ponDownstreamDropEventsWarning
       294: ponUpstreamDropEventsWarning
       295: ponDownstreamCRCErrorFramesWarning
       296: ponUpstreamCRCErrorFramesWarning
       297: ponDownstreamUndersizeFramesWarning
       298: ponUpstreamUndersizeFramesWarning
       299: ponDownstreamOversizeFramesWarning
       3: onuBatteryMissing
       300: ponUpstreamOversizeFramesWarning
       301: ponDownstreamFragmentsWarning
       302: ponUpstreamFragmentsWarning
       303: ponDownstreamJabbersWarning
       304: ponUpstreamJabbersWarning
       305: ponDownstreamDiscardsWarning
       306: ponUpstreamDiscardsWarning
       307: ponDownstreamErrorsWarning
       308: ponUpstreamErrorsWarning
       4: onuBatteryFailure
       5: onuBatteryVoltLow
       6: onuPhysicalIntrusionAlarm
       7: onuONUSelfTestFailure
       769: uniEthPortAutoNegFailure
       770: uniEthPortLOS
       771: uniEthPortFailure
       772: uniEthPortLoopback
       773: uniEthPortCongestion
       774: uniDownstreamDropEventsAlarm
       775: uniUpstreamDropEventsAlarm
       776: uniDownstreamCRCErrorFramesAlarm
       777: uniUpstreamCRCErrorFramesAlarm
       778: uniDownstreamUndersizeFramesAlarm
       779: uniUpstreamUndersizeFramesAlarm
       780: uniDownstreamOversizeFramesAlarm
       781: uniUpstreamOversizeFramesAlarm
       782: uniDownstreamFragmentsAlarm
       783: uniUpstreamFragmentsAlarm
       784: uniDownstreamJabbersAlarm
       785: uniUpstreamJabbersAlarm
       786: uniDownstreamDiscardsAlarm
       787: uniUpstreamDiscardsAlarm
       788: uniDownstreamErrorsAlarm
       789: uniUpstreamErrorsAlarm
       790: uniStatusChangeTimesAlarm
       791: uniDownstreamDropEventsWarning
       792: uniUpstreamDropEventsWarning
       793: uniDownstreamCRCErrorFramesWarning
       794: uniUpstreamCRCErrorFramesWarning
       795: uniDownstreamUndersizeFramesWarning
       796: uniUpstreamUndersizeFramesWarning
       797: uniDownstreamOversizeFramesWarning
       798: uniUpstreamOversizeFramesWarning
       799: uniDownstreamFragmentsWarning
       800: uniUpstreamFragmentsWarning
       801: uniDownstreamJabbersWarning
       802: uniUpstreamJabbersWarning
       803: uniDownstreamDiscardsWarning
       804: uniUpstreamDiscardsWarning
       805: uniDownstreamErrorsWarning
       806: uniUpstreamErrorsWarning
       807: uniStatusChangeTimesWarning
       9: onuONUTempHighAlarm
     Descr="
        The CTC alarm ID. There are 3 types of CTC alarms.
        ONU alarm:   0x0001~0x00ff
        PON alarm:   0x0101~0x01ff
        UNI alarm:   0x0301~0x05ff
        "
  4: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  5: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  6: hh3cEponCTCAlarmInfo
     Syntax="OCTETSTR"
     Descr="
        The information of an ONU CTC alarm.
        "
EDESC
#
#
#
#
MIB: HH3C-EVB-MIB (file:./hh3c-evb.mib) converted on Fri Mar 18 23:13:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EVC-MIB (file:./hh3c-evc.mib) converted on Fri Mar 18 23:13:47 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EVI-MIB (file:./hh3c-evi.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEviNewDed .1.3.6.1.4.1.25506.2.132.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that a new DED has been elected. $*
SDESC
Notifies that a new DED has been elected.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
  3: hh3cEviISISNbrSysId
     Syntax="OCTETSTR"
     Descr="System ID of the neighbor."
EDESC
#
#
#
EVENT hh3cEviSiteEDTopoChange .1.3.6.1.4.1.25506.2.132.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that the EVI network topology has changed. $*
SDESC
Notifies that the EVI network topology has changed.
Variables:
  1: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
  2: hh3cEviISISNbrSiteNbrs
     Syntax="UNSIGNED32"
     Descr="The count of neighbors that belong to the same site."
EDESC
#
#
#
EVENT hh3cEviEDLinkDisconnect .1.3.6.1.4.1.25506.2.132.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that all the EVI links on a tunnel are down. $*
SDESC
Notifies that all the EVI links on a tunnel are down.
Variables:
  1: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
EDESC
#
#
#
#
MIB: HH3C-EVPN-MIB (file:./hh3c-evpn.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FAILOVER-MIB (file:./hh3c-failover.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-FLOGIN-MIB (file:./hh3c-fc-flogin.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-NAME-SERVER-MIB (file:./hh3c-fc-name-server.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcNsPortLoginNotify .1.3.6.1.4.1.25506.2.127.10.1.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when an entry is added to the $*
SDESC
This notification will be generated when an entry is added to the
Name Server database by Nx_Port locally logging in.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcNsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local switch."
  3: hh3cFcNsFloginPortWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local logged-in Nx_Port."
EDESC
#
#
#
EVENT hh3cFcNsPortLogoutNotify .1.3.6.1.4.1.25506.2.127.10.1.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when an entry is deleted from $*
SDESC
This notification will be generated when an entry is deleted from
the Name Server database by Nx_Port locally logging out.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcNsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local switch."
  3: hh3cFcNsFloginPortWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local logged-in Nx_Port."
EDESC
#
#
#
#
MIB: HH3C-FCOE-MIB (file:./hh3c-fcoe.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FCOE-MODE-MIB (file:./hh3c-fcoe-mode.mib) converted on Fri Mar 18 23:13:48 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-PING-MIB (file:./hh3c-fc-ping.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcPingCompletionNotify .1.3.6.1.4.1.25506.2.127.5.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When a FC ping test is finished and the instance of $*
SDESC
When a FC ping test is finished and the instance of
hh3cFcPingTrapOnCompletion associated with the test
is set to 'true', this notification occurred.
Variables:
  1: hh3cFcPingIndex
     Syntax="UNSIGNED32"
     Descr="The index of the current FC ping entry.  This object
         identifies a FC ping request entry uniquely in a
         specified VSAN (Virtual Storage Area Network)."
  2: hh3cFcPingVsan
     Syntax="UNSIGNED32"
     Descr="The VSAN on which the FC ping request will be
         performed.  If the corresponding instance value of
         hh3cFcPingOperStatus is 'inProgress', the object
         cannot be modified."
  3: hh3cFcPingAddressType
     Syntax="INTEGER"
       1: wwn
       2: fcid
     Descr="The type of the corresponding instance of
         hh3cFcPingAddress object."
  4: hh3cFcPingAddress
     Syntax="OCTETSTR"
     Descr="The address to which the route will be pinged.

         This object will contain an 8 octet long WWN(World Wide Name),
         if the value of the associated instance of hh3cFcPingAddressType
         object is 'wwn'.

         This object will contain a 3 octet long Fibre Channel Address ID,
         if the value of the associated instance of hh3cFcPingAddressType
         object is 'fcid'."
  5: hh3cFcPingReqPackets
     Syntax="UNSIGNED32"
     Descr="The number of FC ping packets request in this sequence."
  6: hh3cFcPingResPackets
     Syntax="UNSIGNED32"
     Descr="The number of FC ping packets response in this sequence."
EDESC
#
#
#
#
MIB: HH3C-FC-PSM-MIB (file:./hh3c-fc-psm.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcPsmFPortDenyNotify .1.3.6.1.4.1.25506.2.127.8.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that a FLOGI is denied on an F port of the local device. $*
SDESC
Notifies that a FLOGI is denied on an F port of the local device.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cFcPsmLoginPWWN
     Syntax="OCTETSTR"
     Descr="The pWWN of the device whose FLOGI(Fabric Login) request had
        been denied.  If the device is an n-node, the value of the instance
        of hh3cFcPsmLoginSWWN should be zero-length string."
  3: hh3cFcPsmLoginIntf
     Syntax="INTEGER32"
     Descr="The ifindex of the port where the login was denied."
  4: hh3cFcPsmLoginTime
     Syntax="OCTETSTR"
     Descr="Specifies the date and time when the last denied login
         happened."
EDESC
#
#
#
EVENT hh3cFcPsmEPortDenyNotify .1.3.6.1.4.1.25506.2.127.8.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Notifies that a switch is denied on an E port of the local device. $*
SDESC
Notifies that a switch is denied on an E port of the local device.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cFcPsmLoginSWWN
     Syntax="OCTETSTR"
     Descr="The sWWN of the device whose FLOGI request had been denied.
         If the device is a switch, the values of the instance of
         hh3cFcPsmLoginPWWN and hh3cFcPsmLoginNWWN should be zero-length
         string."
  3: hh3cFcPsmLoginIntf
     Syntax="INTEGER32"
     Descr="The ifindex of the port where the login was denied."
  4: hh3cFcPsmLoginTime
     Syntax="OCTETSTR"
     Descr="Specifies the date and time when the last denied login
         happened."
EDESC
#
#
#
#
MIB: HH3C-FC-TC-MIB (file:./hh3c-fc-tc.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-TRACE-ROUTE-MIB (file:./hh3c-fc-trace-route.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcTraceRouteCompletionNotify .1.3.6.1.4.1.25506.2.127.4.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When a trace route test is finished and the instance of $*
SDESC
When a trace route test is finished and the instance of
hh3cFcTraceRouteTrapOnCompletion associated with the test
is set to 'true', this notification occurred.
Variables:
  1: hh3cFcTraceRouteIndex
     Syntax="UNSIGNED32"
     Descr="The index of the current trace route entry.  This object
         uniquely identifies a trace route request entry in a
         specified VSAN (Virtual Storage Area Network)."
  2: hh3cFcTraceRouteVsan
     Syntax="UNSIGNED32"
     Descr="The VSAN on which the trace route request will be
         executed.  If the corresponding instance value of
         hh3cFcTraceRouteOperStatus is 'inProgress', the
         object cannot be modified."
  3: hh3cFcTraceRouteAddressType
     Syntax="INTEGER"
       1: wwn
       2: fcid
     Descr="The type of the corresponding instance of
         hh3cFcTraceRouteAddress object."
  4: hh3cFcTraceRouteAddress
     Syntax="OCTETSTR"
     Descr="The address to which the route will be traced.
         This object will contain an 8-octet WWN (World Wide Name),
         if the value of the associated instance of
         hh3cFcTraceRouteAddressType object is 'wwn'.
         This object will contain a 3-octet Fibre Channel ID,
         if the value of the associated instance of
         hh3cFcTraceRouteAddressType object is 'fcid'."
  5: hh3cFcTraceRouteOperStatus
     Syntax="INTEGER"
       1: inProgress
       2: success
       3: partialSuccess
       4: failure
       5: disabled
     Descr="This object indicates the operational status
         of this hh3cFcTraceRouteEntry.

         The value specifications are listed as follows:
         inProgress     - Trace route is in progress.
         success        - Trace route has succeeded.
         partialSuccess - Trace route has partially succeeded.
         failure        - Trace route has failed due to resource limitations.
         disabled       - Trace route is disabled."
EDESC
#
#
#
#
MIB: HH3C-FC-ZONE-SERVER-MIB (file:./hh3c-fc-zone-server.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcZsDefaultZoneChangedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cFcZsDefaultZoneChangedNotify notification is sent when $*
SDESC
A hh3cFcZsDefaultZoneChangedNotify notification is sent when
the Default Zone setting of a specified VSAN is changed.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  3: hh3cFcZsDefaultZoneSetting
     Syntax="INTEGER"
       1: deny
       2: permit
     Descr="This object controls the Zoning flag that governs the
         behavior of the Default Zone in this VSAN.

         If this object is set to 'permit', the members of the
         Default Zone in this VSAN can communicate with each
         other.

         If this object is set to 'deny', the members of the
         Default Zone in this VSAN cannot communicate with each
         other."
EDESC
#
#
#
EVENT hh3cFcZsHardZoneChangedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cFcZsHardZoneChangedNotify notification is sent when $*
SDESC
A hh3cFcZsHardZoneChangedNotify notification is sent when
the hard Zone configuration of a specified VSAN is changed.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  3: hh3cFcZsHardZoneStatus
     Syntax="INTEGER"
       1: enable
       2: adminDisable
       3: noResourceDisable
     Descr="The current status of Hard Zone Server.

        'enable'            - Hard Zone Server is enabled.
        'adminDisable'      - Hard Zone Server is disabled administratively.
        'noResourceDisable' - Hard Zone Server is disabled due to lack of
                              hardware resource."
EDESC
#
#
#
EVENT hh3cFcZsMergeFailedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cFcZsMergeFailedNotify notification is sent when a Zone merge $*
SDESC
A hh3cFcZsMergeFailedNotify notification is sent when a Zone merge
failure occurs.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  4: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  5: hh3cFcZsPeerSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the peer switch."
  6: hh3cFcZsMergeFailCause
     Syntax="INTEGER"
       1: zoneModeInconsistent
       10: other
       2: zonePolicyNotEqual
       3: hardZoneInconsistent
       4: dataNotEqualInRestrict
       5: activeZoneSetMergeFailed
       6: zoneMergeDataTooBig
       7: zoningObjectNumberTooBig
       8: zoneDbMergeFaildInBasic
       9: zoneDbMergeFaildInEnhanced
     Descr="Indicates the reason of a Zone merge failure.

         'zoneModeInconsistent'        - The zone mode is inconsistent.
         'zonePolicyNotEqual'          - Zone Merge-Control setting or
                                         Default-Zone doesn't match.
         'hardZoneInconsistent'        - The Hard Zone Attribute is
                                         inconsistent.
         'dataNotEqualInRestrict'      - The Merge-Control setting is
                                         Restrict and the peer zoning
                                         database is not equal.
         'activeZoneSetMergeFailed'    - The Active Zone Set merge failed.
         'zoneMergeDataTooBig'         - The merged packet was
                                         too large.
         'zoningObjectNumberTooBig'    - The number of zoning objects exceeded
                                         the limit.
         'zoneDbMergeFaildInBasic'     - The database merge failed in Basic
                                         mode.
         'zoneDbMergeFaildInEnhanced'  - The database merge failed in Enhanced
                                         mode.
         'other'                       - Unknown reason."
EDESC
#
#
#
EVENT hh3cFcZsMergeSucceededNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cFcZsMergeSucceededNotify notification is sent when a successful $*
SDESC
A hh3cFcZsMergeSucceededNotify notification is sent when a successful
Zone merge occurs.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  4: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  5: hh3cFcZsPeerSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the peer switch."
EDESC
#
#
#
EVENT hh3cFcZsActivationCompletedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cFcZsActivationCompletedNotify notification is sent whenever a $*
SDESC
A hh3cFcZsActivationCompletedNotify notification is sent whenever a
activation/deactivation is completed.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  3: hh3cFcZsActivateResult
     Syntax="INTEGER"
       1: none
       2: inProgress
       3: activateSuccess
       4: activateFailure
       5: deactivateSuccess
       6: deactivateFailure
     Descr="As a result of the most recent activation/deactivation.

        'none'               - No activation/deactivation invoked since the
                               last restart of the management system.
        'inProcess'          - Activation/deactivation is still in progress.
        'activateSuccess'    - Activation completed successfully.
        'activateFailure'    - Activation failed due to some reason.
        'deactivateSuccess'  - Deactivation completed successfully.
        'deactivateFailure'  - Deactivation failed due to some reason."
EDESC
#
#
#
#
MIB: HH3C-FDMI-MIB (file:./hh3c-fdmi.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FIREWALL-MIB (file:./hh3c-firewall.mib) converted on Fri Mar 18 23:13:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FLASH-MAN-MIB (file:./hh3c-flash-man.mib) converted on Fri Mar 18 23:13:50 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFlhOperNotification .1.3.6.1.4.1.25506.2.5.1.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cFlhOperNotification is sent at the completion of a flash
copy operation if hh3cFlhOperEndNotification is true.

Variables:
  1: hh3cFlhOperStatus
     Syntax="INTEGER"
       1: opInProgress
       10: opDeviceError
       11: opDeviceNotProgrammable
       12: opDeviceFull
       13: opFileOpenError
       14: opFileTransferError
       15: opFileChecksumError
       16: opNoMemory
       17: opAuthFail
       18: opTimeout
       19: opUnknownFailure
       2: opSuccess
       20: opDeleteFileOpenError
       21: opDeleteInvalidDevice
       22: opDeleteInvalidFunction
       23: opDeleteOperationError
       24: opDeleteInvalidFileName
       25: opDeleteDeviceBusy
       26: opDeleteParaError
       27: opDeleteInvalidPath
       28: opDeleteFileNotExistInSlave
       29: opDeleteFileFailedInSlave
       3: opInvalid
       30: opSlaveFull
       31: opCopyToSlaveFailure
       4: opInvalidProtocol
       5: opInvalidSourceName
       6: opInvalidDestName
       7: opInvalidServerAddress
       8: opDeviceBusy
       9: opDeviceOpenError
     Descr="The status of operation."
EDESC
#
#
#
#
MIB: HH3C-FLEXE-MIB (file:./hh3c-flexe.mib) converted on Fri Mar 18 23:13:50 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFlexEPhyNumberMismatch .1.3.6.1.4.1.25506.2.177.5.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the physical number of the FlexE interface doesn't $*
SDESC
The notification is generated when the physical number of the FlexE interface doesn't
match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyNumber
     Syntax="INTEGER32"
     Descr="Specify the physical number of the FlexE physical interface."
  4: hh3cFlexERemotePhyNumber
     Syntax="INTEGER32"
     Descr="The physical number of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyNumberMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the physical number of the FlexE interface $*
SDESC
The notification is generated when the physical number of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyNumber
     Syntax="INTEGER32"
     Descr="Specify the physical number of the FlexE physical interface."
  4: hh3cFlexERemotePhyNumber
     Syntax="INTEGER32"
     Descr="The physical number of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyGroupMismatch .1.3.6.1.4.1.25506.2.177.5.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the group ID of the FlexE interface doesn't $*
SDESC
The notification is generated when the group ID of the FlexE interface doesn't
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE physical interface."
  4: hh3cFlexERemotePhyGroupID
     Syntax="INTEGER32"
     Descr="The physical group ID of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyGroupMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the group ID of the FlexE interface $*
SDESC
The notification is generated when the group ID of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE physical interface."
  4: hh3cFlexERemotePhyGroupID
     Syntax="INTEGER32"
     Descr="The physical group ID of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEClientIDMismatch .1.3.6.1.4.1.25506.2.177.5.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the client ID of the FlexE interface doesn't $*
SDESC
The notification is generated when the client ID of the FlexE interface doesn't
match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEClientIDMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the client ID of the FlexE interface $*
SDESC
The notification is generated when the client ID of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthReduce .1.3.6.1.4.1.25506.2.177.5.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface becomes $*
SDESC
The notification is generated when the bandwidth of the FlexE interface becomes
smaller.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEBandwidth
     Syntax="INTEGER32"
     Descr="Specify the bandwidth of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthReduceRecover .1.3.6.1.4.1.25506.2.177.5.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface recovers. $*
SDESC
The notification is generated when the bandwidth of the FlexE interface recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEBandwidth
     Syntax="INTEGER32"
     Descr="Specify the bandwidth of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEPhyFcsSdAlarm .1.3.6.1.4.1.25506.2.177.5.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the error code fault happens. $*
SDESC
The notification is generated when the error code fault happens.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyFcsSdAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the error code fault recovers. $*
SDESC
The notification is generated when the error code fault recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyLocalFault .1.3.6.1.4.1.25506.2.177.5.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens in the near_end. $*
SDESC
The notification is generated when the fault happens in the near_end.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyLocalFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault in the near_end recovers. $*
SDESC
The notification is generated when the fault in the near_end recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyRemoteFault .1.3.6.1.4.1.25506.2.177.5.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens in the far_end $*
SDESC
The notification is generated when the fault happens in the far_end
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyRemoteFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault in the far_end recovers. $*
SDESC
The notification is generated when the fault in the far_end recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthMismatch .1.3.6.1.4.1.25506.2.177.5.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface $*
SDESC
The notification is generated when the bandwidth of the FlexE interface
doesn't match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the bandwidth of the FlexE interface $*
SDESC
The notification is generated when the bandwidth of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyDelayOverAlarm .1.3.6.1.4.1.25506.2.177.5.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the TimeDelay is oversize. $*
SDESC
The notification is generated when the TimeDelay is oversize.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPortList
     Syntax="OCTETSTR"
     Descr="The interface list."
EDESC
#
#
#
EVENT hh3cFlexEPhyDelayOverAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the TimeDelay becomes normal. $*
SDESC
The notification is generated when the TimeDelay becomes normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPortList
     Syntax="OCTETSTR"
     Descr="The interface list."
EDESC
#
#
#
EVENT hh3cFlexESTSGMismatch .1.3.6.1.4.1.25506.2.177.5.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the granularity of the FlexE interface $*
SDESC
The notification is generated when the granularity of the FlexE interface
doesn't match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexESubTimeSlotGranular
     Syntax="INTEGER32"
     Descr="Specify the sub-time-slot granularity of the FlexE subslot."
EDESC
#
#
#
EVENT hh3cFlexESTSGMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the granularity of the FlexE interface $*
SDESC
The notification is generated when the granularity of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexESubTimeSlotGranular
     Syntax="INTEGER32"
     Descr="Specify the sub-time-slot granularity of the FlexE subslot."
EDESC
#
#
#
EVENT hh3cFlexEGroupMemberFault .1.3.6.1.4.1.25506.2.177.5.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens on group members. $*
SDESC
The notification is generated when the fault happens on group members.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
  5: hh3cFlexEGroupMemberCount
     Syntax="INTEGER32"
     Descr="The number of group members."
  6: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  7: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEGroupMemberFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault on group members recovers. $*
SDESC
The notification is generated when the fault on group members recovers.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
  5: hh3cFlexEGroupMemberCount
     Syntax="INTEGER32"
     Descr="The number of group members."
  6: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  7: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEGroupFaultAlarm .1.3.6.1.4.1.25506.2.177.5.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault happens on the last group member. $*
SDESC
The notification is generated when the fault happens on the last group member.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEGroupFaultAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the fault on the first group member recovers. $*
SDESC
The notification is generated when the fault on the first group member recovers.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
EDESC
#
#
#
#
MIB: HH3C-FLOWTEMPLATE-MIB (file:./hh3c-flowtemplate.mib) converted on Fri Mar 18 23:13:50 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FR-QOS-MIB (file:./hh3c-fr-qos.mib) converted on Fri Mar 18 23:13:50 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FTM-MIB (file:./hh3c-ftm.mib) converted on Fri Mar 18 23:13:50 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GIR-MIB (file:./hh3c-gir.mib) converted on Fri Mar 18 23:13:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GOLD-MIB (file:./hh3c-gold.mib) converted on Fri Mar 18 23:13:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GRE-MIB (file:./hh3c-gre.mib) converted on Fri Mar 18 23:13:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-HGMP-MIB (file:./hh3c-hgmp.mib) converted on Fri Mar 18 23:13:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-HPEOC-MIB (file:./hh3c-hpeoc.mib) converted on Fri Mar 18 23:13:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IDS-MIB (file:./hh3c-ids.mib) converted on Fri Mar 18 23:13:51 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIDSTrapIPFragQueueFull .1.3.6.1.4.1.25506.2.47.1.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the IP fragment $*
SDESC
This notification will be generated when the IP fragment
queue is full.  The hh3cIDSTrapIPFragmentQueueLen describes
the length of current fragment queue.
The hh3cIDSTrapReasonForError describes reason for error.
Variables:
  1: hh3cIDSTrapIPFragmentQueueLen
     Syntax="UNSIGNED32"
     Descr="The length of IP fragment queue."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapStatSessTabFull .1.3.6.1.4.1.25506.2.47.1.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the status session $*
SDESC
This notification will be generated when the status session
table is full.  The hh3cIDSTrapStatSessionTabLen describes the
length of current status session table.
The hh3cIDSTrapReasonForError describes reason for error.
Variables:
  1: hh3cIDSTrapStatSessionTabLen
     Syntax="UNSIGNED32"
     Descr="The length of status session table."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapDetectRuleParseFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when failing to parse $*
SDESC
This notification will be generated when failing to parse
the rules for detecting.  The hh3cIDSTrapDetectRuleID object describes
rule ID. The hh3cIDSTrapEngineID object identifies an interface
the rule applies to. The hh3cIDSTrapReasonForError object
describes reason for error.
Variables:
  1: hh3cIDSTrapDetectRuleID
     Syntax="UNSIGNED32"
     Descr="The rule ID which is a unique identifier for a specified
                detect rule."
  2: hh3cIDSTrapEngineID
     Syntax="INTEGER32"
     Descr="A unique number used to identify an interface."
  3: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapDBConnLost .1.3.6.1.4.1.25506.2.47.1.1.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when connecting with $*
SDESC
This notification will be generated when connecting with
database server fails. The hh3cIDSTrapIPAddressType object describes
the IP address type of database server.  The hh3cIDSTrapIPAddress
object describes the IP address of database server. The
hh3cIDSTrapReasonForError describes reason of connecting failure.
Variables:
  1: hh3cIDSTrapIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of IP Address."
  2: hh3cIDSTrapIPAddress
     Syntax="OCTETSTR"
     Descr="IP Address."
  3: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCRLNeedUpdate .1.3.6.1.4.1.25506.2.47.1.1.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when IDS device detects $*
SDESC
This notification will be generated when IDS device detects
that CRL is out of date.  The hh3cIDSTrapCRLName object
describes the CRL(Certificate Revoke List) name.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapCRLName
     Syntax="OCTETSTR"
     Descr="CRL(Certificate Revoke List) name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCertOverdue .1.3.6.1.4.1.25506.2.47.1.1.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when IDS device detects $*
SDESC
This notification will be generated when IDS device detects
that certificate is overdue.  The hh3cIDSTrapCertName object
describes the certificate name.  The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapCertName
     Syntax="OCTETSTR"
     Descr="Certificate name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapTooManyLoginFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the login $*
SDESC
This notification will be generated when the login
failure times of a user over a certain number.
The hh3cIDSTrapUserName object describes the user name
when logging in.  The hh3cIDSTrapIPAddressType object
describes the IP address type of client. The
hh3cIDSTrapIPAddress object describes the IP address of
client.  The hh3cIDSTrapLoginType object describes
login type, including: telnet, ssh, web.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapUserName
     Syntax="OCTETSTR"
     Descr="User name."
  2: hh3cIDSTrapIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of IP Address."
  3: hh3cIDSTrapIPAddress
     Syntax="OCTETSTR"
     Descr="IP Address."
  4: hh3cIDSTrapLoginType
     Syntax="INTEGER"
       1: telnet
       2: ssh
       3: web
     Descr="Login type, including telnet, ssh and web."
  5: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapUpgradeError .1.3.6.1.4.1.25506.2.47.1.1.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when upgrading fails. $*
SDESC
This notification will be generated when upgrading fails.
The hh3cIDSTrapUpgradeType object describes upgrade type,
including: programme, vrb. The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapUpgradeType
     Syntax="INTEGER"
       1: programme
       2: crb
       3: vrb
     Descr="Upgrade type, including programme(system image),
                crb(custom rule base, one kind of configuration file),
                vrb(vendor rule base, one kind of configuration file)."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapFileAccessError .1.3.6.1.4.1.25506.2.47.1.1.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when accessing file $*
SDESC
This notification will be generated when accessing file
fails.  The hh3cIDSTrapFileName object describes the name
of file accessed. The hh3cIDSTrapReasonForError object describes
reason for error.
Variables:
  1: hh3cIDSTrapFileName
     Syntax="OCTETSTR"
     Descr="The file name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapConsArithMemLow .1.3.6.1.4.1.25506.2.47.1.1.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when memory used by $*
SDESC
This notification will be generated when memory used by
constructing the arithmetic to seek content is lacking.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapSSRAMOperFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when reading or $*
SDESC
This notification will be generated when reading or
writing SSRAM of CIE card fails. The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapPacketProcessDisorder .1.3.6.1.4.1.25506.2.47.1.1.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when packets processed $*
SDESC
This notification will be generated when packets processed
is in disorder. The hh3cIDSTrapReasonForError object describes
reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCfgFileFormatError .1.3.6.1.4.1.25506.2.47.1.1.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA When devices startup and load the configuration file, $*
SDESC
When devices startup and load the configuration file,
if format error is found, this notification will be generated.
The hh3cIDSTrapFileName object describes the name of
configuration file. The hh3cIDSTrapCfgLineInFile object
describes the line number in the file.
Variables:
  1: hh3cIDSTrapFileName
     Syntax="OCTETSTR"
     Descr="The file name."
  2: hh3cIDSTrapCfgLineInFile
     Syntax="UNSIGNED32"
     Descr="The line number in the configuration file."
EDESC
#
#
#
#
MIB: HH3C-IF-EXT-MIB (file:./hh3c-if-ext.mib) converted on Fri Mar 18 23:13:52 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIfBandwidthUsageHigh .1.3.6.1.4.1.25506.2.40.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the rate of the bandwidth for the $*
SDESC
The notification is generated when the rate of the bandwidth for the
interface exceeds the upper limit.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cIfBandwidthRate
     Syntax="INTEGER32"
     Descr="The rate of the bandwidth for an interface."
  3: hh3cIfBandwidthUpperLimit
     Syntax="INTEGER32"
     Descr="The rate of the bandwidth upper limit for an interface."
EDESC
#
#
#
EVENT hh3cIfDiscardPktRateHigh .1.3.6.1.4.1.25506.2.40.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the rate of the discarded packets $*
SDESC
The notification is generated when the rate of the discarded packets
for the interface exceeds the upper limit.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cIfDiscardPktRate
     Syntax="INTEGER32"
     Descr="The rate of the discarded packets for an interface."
  3: hh3cIfDiscardPktRateUpperLimit
     Syntax="INTEGER32"
     Descr="The rate of the discarded packets upper limit for an interface."
EDESC
#
#
#
EVENT hh3cIfDampeningSuppressed .1.3.6.1.4.1.25506.2.40.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the interface is suppressed $*
SDESC
The notification is generated when the interface is suppressed
via dampening.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfDampeningNotSuppressed .1.3.6.1.4.1.25506.2.40.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the interface is resumed to $*
SDESC
The notification is generated when the interface is resumed to
not suppressed via dampening.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPortUp .1.3.6.1.4.1.25506.2.40.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when physical state of the interface changes to up. $*
SDESC
The notification is generated when physical state of the interface changes to up.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPortDown .1.3.6.1.4.1.25506.2.40.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when physical state of the interface changes to down. $*
SDESC
The notification is generated when physical state of the interface changes to down.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPfcOutRising .1.3.6.1.4.1.25506.2.40.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the outbound rate exceeds the threshold for the dot1p value. $*
SDESC
The notification is generated when the outbound rate exceeds the threshold for the dot1p value.
If the hh3cIfPfcDot1pOutPpsThreshold is set to 0, no hh3cIfPfcOutRising will be generated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfPfcDot1pValue
     Syntax="INTEGER"
       1: pri0
       2: pri1
       3: pri2
       4: pri3
       5: pri4
       6: pri5
       7: pri6
       8: pri7
     Descr="The PFC dot1p value list."
  4: hh3cIfPfcDot1pOutPps
     Syntax="UNSIGNED32"
     Descr="The current outbound rate for the PFC dot1p. "
  5: hh3cIfPfcDot1pOutPpsThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the outbound rate.
         If the hh3cIfPfcDot1pOutPpsThreshold is set to 0, no hh3cIfPfcOutRising will be generated."
EDESC
#
#
#
EVENT hh3cIfPfcInRising .1.3.6.1.4.1.25506.2.40.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the inbound rate exceeds the threshold for the dot1p value. $*
SDESC
The notification is generated when the inbound rate exceeds the threshold for the dot1p value.
If the hh3cIfPfcDot1pInPpsThreshold is set to 0, no hh3cIfPfcInRising will be generated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfPfcDot1pValue
     Syntax="INTEGER"
       1: pri0
       2: pri1
       3: pri2
       4: pri3
       5: pri4
       6: pri5
       7: pri6
       8: pri7
     Descr="The PFC dot1p value list."
  4: hh3cIfPfcDot1pInPps
     Syntax="UNSIGNED32"
     Descr="The current inbound rate for the PFC dot1p."
  5: hh3cIfPfcDot1pInPpsThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the inbound rate.
         If the hh3cIfPfcDot1pInPpsThreshold is set to 0, no hh3cIfPfcInRising will be generated."
EDESC
#
#
#
EVENT hh3cIfMappingIfStatusBackup .1.3.6.1.4.1.25506.2.40.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the mapping status of the interface changes to backup. $*
SDESC
The notification is generated when the mapping status of the interface changes to backup.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfMappingIfStatusNormal .1.3.6.1.4.1.25506.2.40.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the mapping status of the interface changes to normal. $*
SDESC
The notification is generated when the mapping status of the interface changes to normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfMonInputUsageRising .1.3.6.1.4.1.25506.2.40.6.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the inbound bandwidth usage exceeds the $*
SDESC
The notification is generated when the inbound bandwidth usage exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the inbound bandwidth usage."
  4: hh3cIfMonInputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the inbound bandwidth usage."
  5: hh3cIfMonInputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the inbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonInputUsageResume .1.3.6.1.4.1.25506.2.40.6.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the inbound bandwidth usage drops from $*
SDESC
The notification is generated when the inbound bandwidth usage drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the inbound bandwidth usage."
  4: hh3cIfMonInputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the inbound bandwidth usage."
  5: hh3cIfMonInputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the inbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonOutputUsageRising .1.3.6.1.4.1.25506.2.40.6.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the outbound bandwidth usage exceeds the $*
SDESC
The notification is generated when the outbound bandwidth usage exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the outbound bandwidth usage."
  4: hh3cIfMonOutputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the outbound bandwidth usage."
  5: hh3cIfMonOutputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the outbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonOutputUsageResume .1.3.6.1.4.1.25506.2.40.6.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the outbound bandwidth usage drops from $*
SDESC
The notification is generated when the outbound bandwidth usage drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the outbound bandwidth usage."
  4: hh3cIfMonOutputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the outbound bandwidth usage."
  5: hh3cIfMonOutputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the outbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonInputErrorAlarmRising .1.3.6.1.4.1.25506.2.40.6.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of inbound error packets exceeds the $*
SDESC
The notification is generated when the number of inbound error packets exceeds the
upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of inbound error packets."
  4: hh3cIfMonInputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of inbound error packets."
  5: hh3cIfMonInputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of inbound error packets."
  6: hh3cIfMonInputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of inbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonInputErrorAlarmResume .1.3.6.1.4.1.25506.2.40.6.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of inbound error packets drops from $*
SDESC
The notification is generated when the number of inbound error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of inbound error packets."
  4: hh3cIfMonInputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of inbound error packets."
  5: hh3cIfMonInputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of inbound error packets."
  6: hh3cIfMonInputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of inbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonOutputErrorAlarmRising .1.3.6.1.4.1.25506.2.40.6.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of outbound error packets exceeds the $*
SDESC
The notification is generated when the number of outbound error packets exceeds the
upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of outbound error packets."
  4: hh3cIfMonOutputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of outbound error packets."
  5: hh3cIfMonOutputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics  about the number of outbound error packets."
  6: hh3cIfMonOutputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of outbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonOutputErrorAlarmResume .1.3.6.1.4.1.25506.2.40.6.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of outbound error packets drops from $*
SDESC
The notification is generated when the number of outbound error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of outbound error packets."
  4: hh3cIfMonOutputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of outbound error packets."
  5: hh3cIfMonOutputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics  about the number of outbound error packets."
  6: hh3cIfMonOutputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of outbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhErrorRising .1.3.6.1.4.1.25506.2.40.6.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH error packets exceeds $*
SDESC
The notification is generated when the number of SDH error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH error packets."
  4: hh3cIfMonSdhErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH error packets."
  5: hh3cIfMonSdhErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH error packets."
  6: hh3cIfMonSdhErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhErrorResume .1.3.6.1.4.1.25506.2.40.6.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH error packets drops from $*
SDESC
The notification is generated when the number of SDH error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH error packets."
  4: hh3cIfMonSdhErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH error packets."
  5: hh3cIfMonSdhErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH error packets."
  6: hh3cIfMonSdhErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhB1ErrorRising .1.3.6.1.4.1.25506.2.40.6.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B1 error packets exceeds $*
SDESC
The notification is generated when the number of SDH B1 error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB1ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B1 error packets."
  4: hh3cIfMonSdhB1ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B1 error packets."
  5: hh3cIfMonSdhB1ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B1 error packets."
  6: hh3cIfMonSdhB1ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B1 error packets. "
EDESC
#
#
#
EVENT hh3cIfMonSdhB1ErrorResume .1.3.6.1.4.1.25506.2.40.6.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B1 error packets drops from $*
SDESC
The notification is generated when the number of SDH B1 error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB1ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B1 error packets."
  4: hh3cIfMonSdhB1ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B1 error packets."
  5: hh3cIfMonSdhB1ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B1 error packets."
  6: hh3cIfMonSdhB1ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B1 error packets. "
EDESC
#
#
#
EVENT hh3cIfMonSdhB2ErrorRising .1.3.6.1.4.1.25506.2.40.6.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B2 error packets exceeds $*
SDESC
The notification is generated when the number of SDH B2 error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB2ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B2 error packets."
  4: hh3cIfMonSdhB2ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B2 error packets."
  5: hh3cIfMonSdhB2ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B2 error packets."
  6: hh3cIfMonSdhB2ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B2 error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhB2ErrorResume .1.3.6.1.4.1.25506.2.40.6.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of SDH B2 error packets drops from $*
SDESC
The notification is generated when the number of SDH B2 error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB2ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B2 error packets."
  4: hh3cIfMonSdhB2ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B2 error packets."
  5: hh3cIfMonSdhB2ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B2 error packets."
  6: hh3cIfMonSdhB2ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B2 error packets."
EDESC
#
#
#
EVENT hh3cIfMonCRCErrorRising .1.3.6.1.4.1.25506.2.40.6.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of CRC error packets exceeds $*
SDESC
The notification is generated when the number of CRC error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonCRCErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of CRC error packets."
  4: hh3cIfMonCRCErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of CRC error packets."
  5: hh3cIfMonCRCErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of CRC error packets. "
  6: hh3cIfMonCRCErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of CRC error packets."
  7: hh3cIfMonCRCErrType
     Syntax="INTEGER"
       1: absolute
       2: ratio
       65535: invalid
     Descr=" Inspection type for the CRC error packets."
EDESC
#
#
#
EVENT hh3cIfMonCRCErrorResume .1.3.6.1.4.1.25506.2.40.6.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of CRC error packets drops from $*
SDESC
The notification is generated when the number of CRC error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonCRCErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of CRC error packets."
  4: hh3cIfMonCRCErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of CRC error packets."
  5: hh3cIfMonCRCErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of CRC error packets. "
  6: hh3cIfMonCRCErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of CRC error packets."
  7: hh3cIfMonCRCErrType
     Syntax="INTEGER"
       1: absolute
       2: ratio
       65535: invalid
     Descr=" Inspection type for the CRC error packets."
EDESC
#
#
#
EVENT hh3cIfMonRxPauseFrameRising .1.3.6.1.4.1.25506.2.40.6.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of received pause frames exceeds the $*
SDESC
The notification is generated when the number of received pause frames exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of received pause frames."
  4: hh3cIfMonRxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of received pause frames."
  5: hh3cIfMonRxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of received pause frames."
  6: hh3cIfMonRxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of received pause frames."
EDESC
#
#
#
EVENT hh3cIfMonRxPauseFrameResume .1.3.6.1.4.1.25506.2.40.6.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of received pause frames drops from $*
SDESC
The notification is generated when the number of received pause frames drops from
above the upper threshold to below the lower-threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of received pause frames."
  4: hh3cIfMonRxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of received pause frames."
  5: hh3cIfMonRxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of received pause frames."
  6: hh3cIfMonRxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of received pause frames."
EDESC
#
#
#
EVENT hh3cIfMonTxPauseFrameRising .1.3.6.1.4.1.25506.2.40.6.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of transmitted pause frames exceeds $*
SDESC
The notification is generated when the number of transmitted pause frames exceeds
the upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonTxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of transmitted pause frames."
  4: hh3cIfMonTxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of transmitted pause frames."
  5: hh3cIfMonTxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of transmitted pause frames."
  6: hh3cIfMonTxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of transmitted pause frames."
EDESC
#
#
#
EVENT hh3cIfMonTxPauseFrameResume .1.3.6.1.4.1.25506.2.40.6.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of transmitted pause frames  drops from $*
SDESC
The notification is generated when the number of transmitted pause frames  drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonTxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of transmitted pause frames."
  4: hh3cIfMonTxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of transmitted pause frames."
  5: hh3cIfMonTxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of transmitted pause frames."
  6: hh3cIfMonTxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of transmitted pause frames."
EDESC
#
#
#
EVENT hh3cIfMonGiantRising .1.3.6.1.4.1.25506.2.40.6.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Giant error packets exceeds $*
SDESC
The notification is generated when the number of Giant error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonGiantLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Giant error packets."
  4: hh3cIfMonGiantHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Giant error packets."
  5: hh3cIfMonGiantStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Giant packets."
  6: hh3cIfMonGiantInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Giant error packets."
EDESC
#
#
#
EVENT hh3cIfMonGiantResume .1.3.6.1.4.1.25506.2.40.6.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Giant error packets drops from $*
SDESC
The notification is generated when the number of Giant error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonGiantLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Giant error packets."
  4: hh3cIfMonGiantHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Giant error packets."
  5: hh3cIfMonGiantStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Giant packets."
  6: hh3cIfMonGiantInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Giant error packets."
EDESC
#
#
#
EVENT hh3cIfMonRuntRising .1.3.6.1.4.1.25506.2.40.6.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Runt error packets exceeds $*
SDESC
The notification is generated when the number of Runt error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRuntLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Runt error packets."
  4: hh3cIfMonRuntHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Runt error packets."
  5: hh3cIfMonRuntStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Runt packets."
  6: hh3cIfMonRuntInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Runt packets."
EDESC
#
#
#
EVENT hh3cIfMonRuntResume .1.3.6.1.4.1.25506.2.40.6.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The notification is generated when the number of Runt error packets drops from $*
SDESC
The notification is generated when the number of Runt error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRuntLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Runt error packets."
  4: hh3cIfMonRuntHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Runt error packets."
  5: hh3cIfMonRuntStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Runt packets."
  6: hh3cIfMonRuntInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Runt packets."
EDESC
#
#
#
#
MIB: HH3C-IFQOS2-MIB (file:./hh3c-ifqos2.mib) converted on Fri Mar 18 23:13:52 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIfQoS8QueueResouceOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues exceeded the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues exceeded the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResouceOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues dropped below the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues dropped below the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResoucePreAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues exceeded 90 percent of the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues exceeded 90 percent of the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResoucePreRecover .1.3.6.1.4.1.25506.2.65.1.16.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of 8-queue user-queues dropped below 90 percent of the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues dropped below 90 percent of the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSBufferOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The buffer size has been reached. $*
SDESC
The buffer size has been reached.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSBufferOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The queue buffer alarm is cleared. $*
SDESC
The queue buffer alarm is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSModeChannelOverPortShapAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The channelization bandwidth configured on the interface exceeds the port shaping value. $*
SDESC
The channelization bandwidth configured on the interface exceeds the port shaping value.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSModeChannelOverPortShapRecover .1.3.6.1.4.1.25506.2.65.1.16.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The alarm generated when the channelization bandwidth configured on the interface exceeds the port shaping value is cleared. $*
SDESC
The alarm generated when the channelization bandwidth configured on the interface exceeds the port shaping value is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandApplyFailAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The exclusive bandwidth configured on the interface does not take effect. $*
SDESC
The exclusive bandwidth configured on the interface does not take effect.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandApplyFailRecover .1.3.6.1.4.1.25506.2.65.1.16.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The exclusive bandwidth service alarm on interface has cleared. $*
SDESC
The exclusive bandwidth service alarm on interface has cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value. $*
SDESC
The exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The alarm generated when the exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value is cleared. $*
SDESC
The alarm generated when the exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
#
MIB: HH3C-IKE-MONITOR-MIB (file:./hh3c-ike-monitor.mib) converted on Fri Mar 18 23:13:53 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIKETunnelStart .1.3.6.1.4.1.25506.2.30.1.6.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-1 $*
SDESC
This notification is generated when an IPsec Phase-1
IKE Tunnel is created.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunLifeTime
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPsec Phase-1
                 IKE Tunnel in seconds."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKETunnelStop .1.3.6.1.4.1.25506.2.30.1.6.1.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-1 $*
SDESC
This notification is generated when an IPsec Phase-1
IKE Tunnel is deleted.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunActiveTime
     Syntax="INTEGER32"
     Descr="The duration the IPsec Phase-1 IKE tunnel
                 has been active in seconds."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKENoSaFailure .1.3.6.1.4.1.25506.2.30.1.6.1.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has a non-existent SA error.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEEncryFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has an encrypting failure.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEDecryFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has a decrypting failure.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidProposalFailure .1.3.6.1.4.1.25506.2.30.1.6.1.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid proposal occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEAuthFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
authentication failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidCookieFailure .1.3.6.1.4.1.25506.2.30.1.6.1.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid cookie failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEAttrNotSuppFailure .1.3.6.1.4.1.25506.2.30.1.6.1.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 unsupported $*
SDESC
This notification is generated when the IPsec phase-1 unsupported
attribute failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEUnsportExchTypeFailure .1.3.6.1.4.1.25506.2.30.1.6.1.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
unsupported exchange type failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidIdFailure .1.3.6.1.4.1.25506.2.30.1.6.1.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid id failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKEIdInformation
     Syntax="OCTETSTR"
     Descr="The id information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidProtocolFailure .1.3.6.1.4.1.25506.2.30.1.6.1.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the processing for $*
SDESC
This notification is generated when the processing for
an IPsec Phase-1 IKE Tunnel has a protocol related errors.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKEProtocolNum
     Syntax="INTEGER32"
     Descr="The protocol number with a trap"
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKECertTypeUnsuppFailure .1.3.6.1.4.1.25506.2.30.1.6.1.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
unsupported certificate type failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidCertAuthFailure .1.3.6.1.4.1.25506.2.30.1.6.1.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid certificate authorization failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKElInvalidSignFailure .1.3.6.1.4.1.25506.2.30.1.6.1.15 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid signature failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKECertUnavailableFailure .1.3.6.1.4.1.25506.2.30.1.6.1.16 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
certificate unavailable failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEProposalAdd .1.3.6.1.4.1.25506.2.30.1.6.1.17 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IKE proposal is added. $*
SDESC
This notification is generated when an IKE proposal is added.
Variables:
  1: hh3cIKEProposalNumber
     Syntax="INTEGER32"
     Descr="The IKE proposal's number with a trap."
  2: hh3cIKEProposalSize
     Syntax="INTEGER32"
     Descr="The number of IKE proposals with a trap."
EDESC
#
#
#
EVENT hh3cIKEProposalDel .1.3.6.1.4.1.25506.2.30.1.6.1.18 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IKE proposal is deleted. $*
SDESC
This notification is generated when an IKE proposal is deleted.
Variables:
  1: hh3cIKEProposalNumber
     Syntax="INTEGER32"
     Descr="The IKE proposal's number with a trap."
  2: hh3cIKEProposalSize
     Syntax="INTEGER32"
     Descr="The number of IKE proposals with a trap."
EDESC
#
#
#
#
MIB: HH3C-INFOCENTER-MIB (file:./hh3c-infocenter.mib) converted on Fri Mar 18 23:13:53 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IP-ADDRESS-MIB (file:./hh3c-ip-address.mib) converted on Fri Mar 18 23:13:53 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpAddressChangeNotify .1.3.6.1.4.1.25506.2.67.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the IP address of interface $*
SDESC
This notification will be generated when the IP address of interface
is changed.  The change maybe originate from NMS, DHCP server or
administrator.
This notification announces useful IP address change.  So it
is triggered by significative IP address change.
Variables:
  1: hh3cIpAddrNotifyIfIndex
     Syntax="INTEGER32"
     Descr="The IP address IfIndex of specified interface on the device."
  2: hh3cIpAddrOldIpAddress
     Syntax="OCTETSTR"
     Descr="The Old IP address of specified interface on the device."
  3: hh3cIpAddrNewIpAddress
     Syntax="OCTETSTR"
     Descr="The New IP address of specified interface on the device."
  4: hh3cIpAddrFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
#
MIB: HH3C-IPA-MIB (file:./hh3c-ipa.mib) converted on Fri Mar 18 23:13:53 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IP-BROADCAST-MIB (file:./hh3c-ip-broadcast.mib) converted on Fri Mar 18 23:13:54 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPRAN-DCN-MIB (file:./hh3c-ipran-dcn.mib) converted on Fri Mar 18 23:13:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpRanDcnNeOnline .1.3.6.1.4.1.25506.2.152.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a new network element is online. $*
SDESC
The trap is generated when a new network element is online.
Variables:
  1: hh3cIpRanDcnNeInfoNeId
     Syntax="OCTETSTR"
     Descr="This is the network element ID uniquely identifying
        one network element in the routing domain."
  2: hh3cIpRanDcnNeInfoNeIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="This is the IP address type of the network element."
  3: hh3cIpRanDcnNeInfoNeIp
     Syntax="OCTETSTR"
     Descr="This is the IP address of the network element."
  4: hh3cIpRanDcnCompanyName
     Syntax="OCTETSTR"
     Descr="Company name."
  5: hh3cIpRanDcnDeviceType
     Syntax="OCTETSTR"
     Descr="Device type."
  6: hh3cIpRanDcnDeviceMac
     Syntax="OCTETSTR"
     Descr="The bridge MAC address of the network element."
EDESC
#
#
#
EVENT hh3cIpRanDcnNeOffline .1.3.6.1.4.1.25506.2.152.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a network element is offline. $*
SDESC
The trap is generated when a network element is offline.
Variables:
  1: hh3cIpRanDcnNeInfoNeId
     Syntax="OCTETSTR"
     Descr="This is the network element ID uniquely identifying
        one network element in the routing domain."
  2: hh3cIpRanDcnNeInfoNeIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="This is the IP address type of the network element."
  3: hh3cIpRanDcnNeInfoNeIp
     Syntax="OCTETSTR"
     Descr="This is the IP address of the network element."
EDESC
#
#
#
#
MIB: HH3C-IPSEC-MONITOR-MIB (file:./hh3c-ipsec-monitor.mib) converted on Fri Mar 18 23:13:54 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPSEC-MONITOR-V2-MIB (file:./hh3c-ipsec-monitor-v2.mib) converted on Fri Mar 18 23:13:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIPsecTunnelStartV2 .1.3.6.1.4.1.25506.2.126.1.9.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
Tunnel is created.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  6: hh3cIPsecTunLifeTimeV2
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPsec Phase-2 Tunnel in seconds.
             2147483647 is defined as invalid value."
  7: hh3cIPsecTunLifeSizeV2
     Syntax="GAUGE"
     Descr="The negotiated LifeSize of the IPsec Phase-2 Tunnel in kilobytes.
             0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPsecTunnelStopV2 .1.3.6.1.4.1.25506.2.126.1.9.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
Tunnel is deleted.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  6: hh3cIPsecTunActiveTimeV2
     Syntax="INTEGER32"
     Descr="The duration the IPsec Phase-2 Tunnel has been active in
             hundredths of seconds.  2147483647 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPsecNoSaFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
non-existent SA error occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecAuthFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
authentication failure occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecEncryFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
tunnel has an encrypting failure.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecDecryFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
tunnel has a decrypting failure.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecInvalidSaFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
invalid SA failure occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecSaIndexV2
     Syntax="INTEGER32"
     Descr="The number of the Sa associated with the Phase-2 Tunnel
             Table.  The value of this index is a number which begins
             at one and is incremented with each Sa associated with
             an IPsec Phase-2 Tunnel.  The value of this object will
             wrap at 2,147,483,647."
  3: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  4: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  5: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  6: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  7: hh3cIPsecSaSpiValueV2
     Syntax="UNSIGNED32"
     Descr="The value of the SPI."
EDESC
#
#
#
EVENT hh3cIPsecPolicyAddV2 .1.3.6.1.4.1.25506.2.126.1.9.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is added. $*
SDESC
This notification is generated when an IPsec policy is added.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySeqNumV2
     Syntax="INTEGER32"
     Descr="The IPsec policy sequence number with a trap."
  3: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPsecPolicyDelV2 .1.3.6.1.4.1.25506.2.126.1.9.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is deleted. $*
SDESC
This notification is generated when an IPsec policy is deleted.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySeqNumV2
     Syntax="INTEGER32"
     Descr="The IPsec policy sequence number with a trap."
  3: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPsecPolicyAttachV2 .1.3.6.1.4.1.25506.2.126.1.9.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is attached $*
SDESC
This notification is generated when an IPsec policy is attached
with one interface.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPsecPolicyDetachV2 .1.3.6.1.4.1.25506.2.126.1.9.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec policy is detached $*
SDESC
This notification is generated when an IPsec policy is detached
with one interface.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPsecConnectionStartV2 .1.3.6.1.4.1.25506.2.126.1.9.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec connection $*
SDESC
This notification is generated when an IPsec connection
is created.
Variables:
  1: hh3cIPsecPolicyDescripV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy's description."
EDESC
#
#
#
EVENT hh3cIPsecConnectionStopV2 .1.3.6.1.4.1.25506.2.126.1.9.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when an IPsec connection $*
SDESC
This notification is generated when an IPsec connection
is terminated.
Variables:
  1: hh3cIPsecPolicyDescripV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy's description."
EDESC
#
#
#
#
MIB: HH3C-IPV6-ADDRESS-MIB (file:./hh3c-ipv6-address.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPX-MIB (file:./hh3c-ipx.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ISDN-MIB (file:./hh3c-isdn.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ISIS-MIB (file:./hh3c-isis.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIsisAdjacencyProtocolChange .1.3.6.1.4.1.25506.2.59.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A notification sent when the IPv4 or IPv6 protocol $*
SDESC
A notification sent when the IPv4 or IPv6 protocol
of an adjacency changes.
The first 6 bytes of the isisPduLspId are the
SystemID of the adjacent IS.
The hh3cIsisAdjProtoType is the type of adjacency protocol.
The hh3cIsisAdjProtoState is the state of adjacency protocol.
Variables:
  1: isisNotificationSysLevelIndex
     Syntax="INTEGER"
       1: level1
       2: level2
       3: level1and2
     Descr="The system level for this notification."
  2: isisNotificationCircIfIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of this circuit relevant to
             this notification."
  3: isisPduLspId
     Syntax="OCTETSTR"
     Descr="An Octet String that uniquely identifies
             a Link State PDU."
  4: hh3cIsisAdjProtoType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
     Descr="The adjacency protocol type for this notification."
  5: hh3cIsisAdjProtoState
     Syntax="INTEGER"
       1: down
       2: initializing
       3: up
     Descr="The state of the adjacency protocol."
  6: ifName
     Syntax="OCTETSTR"
     Descr="The textual name of the interface.  The value of this
            object should be the name of the interface as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name, such as `le0' or a simple port number, such as `1',
            depending on the interface naming syntax of the device.  If
            several entries in the ifTable together represent a single
            interface as named by the device, then each will have the
            same value of ifName.  Note that for an agent which responds
            to SNMP queries concerning an interface on some other
            (proxied) device, then the value of ifName for such an
            interface is the proxied device's local name for it.

            If there is no local name, or this object is otherwise not
            applicable, then this object contains a zero-length string."
EDESC
#
#
#
#
MIB: HH3C-ISSU-MIB (file:./hh3c-issu.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2ISOLATE-MIB (file:./hh3c-l2isolate.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2TP-MIB (file:./hh3c-l2tp.mib) converted on Fri Mar 18 23:13:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2VPN-MIB (file:./hh3c-l2vpn.mib) converted on Fri Mar 18 23:13:56 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cL2vpnPwSwitchPtoB .1.3.6.1.4.1.25506.2.162.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a primary-to-backup PW switching $*
SDESC
This notification is generated when a primary-to-backup PW switching
happens.  The first three elements show the primary PW,
and the second three elements show the backup PW.
Variables:
  1: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  2: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  3: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
  4: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  5: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  6: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
EDESC
#
#
#
EVENT hh3cL2vpnPwSwitchBtoP .1.3.6.1.4.1.25506.2.162.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a backup-to-primary PW switching $*
SDESC
This notification is generated when a backup-to-primary PW switching
happens.  The first three elements show the backup PW,
and the second three elements show the primary PW.
Variables:
  1: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  2: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  3: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
  4: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  5: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  6: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
EDESC
#
#
#
#
MIB: HH3C-L2VPN-PWE3-MIB (file:./hh3c-l2vpn-pwe3.mib) converted on Fri Mar 18 23:13:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L4RDT-MIB (file:./hh3c-l4rdt.mib) converted on Fri Mar 18 23:13:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LAG-MIB (file:./hh3c-lag.mib) converted on Fri Mar 18 23:13:56 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAggSpeedChangedNotification .1.3.6.1.4.1.25506.8.25.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever an $*
SDESC
This event will be triggered whenever an
aggregation changes its speed.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
EDESC
#
#
#
EVENT hh3cAggPortInactiveNotification .1.3.6.1.4.1.25506.8.25.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever any port $*
SDESC
This event will be triggered whenever any port
in aggregator is made inactive.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
EDESC
#
#
#
EVENT hh3cAggPortInactiveNotification2 .1.3.6.1.4.1.25506.8.25.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the port $*
SDESC
This event will be triggered whenever the port
in aggregator is made inactive.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPortActiveNotification .1.3.6.1.4.1.25506.8.25.2.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the port $*
SDESC
This event will be triggered whenever the port
in aggregator is made active.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPartnerMisconnect .1.3.6.1.4.1.25506.8.25.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the peer link of the LACP $*
SDESC
This event will be triggered whenever the peer link of the LACP
member interface might be incorrectly connected.

Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPartnerMisconnectResume .1.3.6.1.4.1.25506.8.25.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever the peer link of the LACP $*
SDESC
This event will be triggered whenever the peer link of the LACP
member interface was correctly connected.

Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
#
MIB: HH3C-LB-MIB (file:./hh3c-lb.mib) converted on Fri Mar 18 23:13:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LBV2-MIB (file:./hh3c-lbv2.mib) converted on Fri Mar 18 23:13:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LICENSE-MIB (file:./hh3c-license.mib) converted on Fri Mar 18 23:13:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLicenseOpCompletion .1.3.6.1.4.1.25506.2.145.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a license operation completed. $*
SDESC
This notification is generated when a license operation completed.
Variables:
  1: hh3cLicenseOpIndex
     Syntax="UNSIGNED32"
     Descr="ID that can be used to uniquely identify an operation."
  2: hh3cLicenseOpPhysicalIndex
     Syntax="INTEGER32"
     Descr="This object indicates that the entPhysicalIndex of the device
        where the operation is being executed.

        The meaning of this object is associated with the management state
        from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of chassis local master.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of CPUs.

        This object must be set and can not be set to zero when
        executing an operation.
        "
  3: hh3cLicenseOpType
     Syntax="INTEGER"
       1: compress
       2: delete
       3: installActivationFile
       4: installActivationKey
       5: installLicenseKey
       6: uninstallActivationFile
       7: uninstallActivationKey
       8: uninstallLicenseKey
     Descr="The type of this operation.

        compress - Compress the license storage if the free license storage
                   is not sufficient.
        Note that:
        1) After compressing, the expired licenses and uninstalled licenses
           in the storage area will be cleared.
        2) The DID changes each time the license storage is compressed.
        3) Before performing a compression, make sure all activation files
           generated based on the old DID have been installed.
           They cannot be installed after the compression.

        delete - Compress one license storage only.

        installActivationFile   -  Install an activation file.

        installActivationKey    -  Install an activation key.

        installLicenseKey       -  Install a license key.

        uninstallActivationFile -  Uninstall an activation file.

        uninstallActivationKey  -  Uninstall an activation key.

        uninstallLicenseKey     -  Uninstall a license key."
  4: hh3cLicenseOpString
     Syntax="OCTETSTR"
     Descr="This object might be an activation file name, an activation key or
        a license key that is to be installed, uninstalled or deleted.

        The operation type is specified in hh3cLicenseOpType.

        For compressing, this object must not be bound when creating a row.

        For deletion, this object could be an activation file, an activation
        key or a license key.

        For installActivationFile and uninstallActivationFile,
        this object must be a name of an activation file, with full path.
        Such as: flash:/license/210231A1V0A1290000012013032718261184345.ak

        For installActivationKey and uninstallActivationKey,
        this object must be an activation key.

        For installLicenseKey and uninstallLicenseKey,
        this object must be a license key."
  5: hh3cLicenseOpState
     Syntax="INTEGER"
       1: opInProgress
       2: opSuccessful
       3: opFailed
     Descr="The state of this operation.

        opInProgress - This operation is in progress.
        opSuccessful - Successful to execute this operation.
        opFailed - Failed to execute this operation,
                   and 'hh3cLicenseOpFailedReason' will indicate the detailed
                   cause of the failure."
  6: hh3cLicenseOpFailedReason
     Syntax="OCTETSTR"
     Descr="This object indicates the detailed cause of the failure when this
        operation failed."
EDESC
#
#
#
EVENT hh3cLicenseActivationFileLost .1.3.6.1.4.1.25506.2.145.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the activation file $*
SDESC
This notification is generated when the activation file
has been lost.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseActivationFile
     Syntax="OCTETSTR"
     Descr="The name of an installed activation file, with device name and
        file name.

        For example:
        flash:/license/210231A1V0A1290000012013032718261184345.ak
        "
EDESC
#
#
#
EVENT hh3cLicenseActivationFileRestored .1.3.6.1.4.1.25506.2.145.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the activation file $*
SDESC
This notification is generated when the activation file
restored successfully.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseActivationFile
     Syntax="OCTETSTR"
     Descr="The name of an installed activation file, with device name and
        file name.

        For example:
        flash:/license/210231A1V0A1290000012013032718261184345.ak
        "
EDESC
#
#
#
EVENT hh3cLicenseExpired .1.3.6.1.4.1.25506.2.145.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license expires. $*
SDESC
This notification is generated when the license expires.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseFeatureState
     Syntax="INTEGER"
       1: notLicensed
       2: trialLicense
       3: formalLicense
       4: serverLicense
       5: preLicense
     Descr="License type by purchasing state.

        notLicensed - The feature is not licensed.
        trialLicense - The feature is using trial license.
        formalLicense - The feature is using purchased license.
        serverLicense - The feature is using license authorized by license server.
        preLicense - The feature is using pre-installed license."
EDESC
#
#
#
EVENT hh3cLicenseExpireWarning .1.3.6.1.4.1.25506.2.145.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when is about to expire. $*
SDESC
This notification is generated when is about to expire.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseFeatureState
     Syntax="INTEGER"
       1: notLicensed
       2: trialLicense
       3: formalLicense
       4: serverLicense
       5: preLicense
     Descr="License type by purchasing state.

        notLicensed - The feature is not licensed.
        trialLicense - The feature is using trial license.
        formalLicense - The feature is using purchased license.
        serverLicense - The feature is using license authorized by license server.
        preLicense - The feature is using pre-installed license."
  3: hh3cLicenseBindValidityPeriodRemaining
     Syntax="UNSIGNED32"
     Descr="This object indicates the remaining days before
        the feature's license expires."
EDESC
#
#
#
EVENT hh3cLicenseReconnectWithServer .1.3.6.1.4.1.25506.2.145.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license client is reconnected to the license server. $*
SDESC
This notification is generated when the license client is reconnected to the license server.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseServerIp
     Syntax="IPADDR"
     Descr="The IP address of the license server."
  3: hh3cLicenseServerPort
     Syntax="UNSIGNED32"
     Descr="The port number of the license server."
EDESC
#
#
#
EVENT hh3cLicenseDisconnectWithServer .1.3.6.1.4.1.25506.2.145.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA  This notification is generated when the license client is disconnected from the license server. $*
SDESC
 This notification is generated when the license client is disconnected from the license server.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseServerIp
     Syntax="IPADDR"
     Descr="The IP address of the license server."
  3: hh3cLicenseServerPort
     Syntax="UNSIGNED32"
     Descr="The port number of the license server."
EDESC
#
#
#
EVENT hh3cLicenseBelowUsageThreshold .1.3.6.1.4.1.25506.2.145.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license usage drops below warning threshold. $*
SDESC
This notification is generated when the license usage drops below warning threshold.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseLowerUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the lower warning threshold of usage."
  3: hh3cLicenseUpperUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the upper warning threshold of usage."
  4: hh3cLicenseCurrentUsageRate
     Syntax="UNSIGNED32"
     Descr="This object indicates the license current usage rate."
EDESC
#
#
#
EVENT hh3cLicenseOverUsageThreshold .1.3.6.1.4.1.25506.2.145.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when the license usage is over warning threshold. $*
SDESC
This notification is generated when the license usage is over warning threshold.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseLowerUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the lower warning threshold of usage."
  3: hh3cLicenseUpperUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the upper warning threshold of usage."
  4: hh3cLicenseCurrentUsageRate
     Syntax="UNSIGNED32"
     Descr="This object indicates the license current usage rate."
EDESC
#
#
#
#
MIB: HH3C-LI-MIB (file:./hh3c-li.mib) converted on Fri Mar 18 23:13:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLIActive .1.3.6.1.4.1.25506.2.111.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This Notification is sent when a type of intercepting configuration $*
SDESC
This Notification is sent when a type of intercepting configuration
is changed from inactive to active.
The value of the hh3cLIStreamtype which identify the actual intercept
stream is included in this notification.
Variables:
  1: hh3cLIStreamtype
     Syntax="INTEGER"
       1: ip
       2: mac
       3: userConnection
     Descr="Identifies the type of stream, and according to it uses filter table.
        It can not be changed after a filter table is attached to it.
        The following types of streams are supported:
         ip:             IP filter.  The exact definition is a row in
                         hh3cLIIPStreamTable.
         mac:            MAC filter.  The exact definition is a row in
                         hh3cLIMACStreamTable.
         userConnecton:  User connection filter.  The exact definition
                         is a row in hh3cLIUserStreamTable."
EDESC
#
#
#
EVENT hh3cLITimeOut .1.3.6.1.4.1.25506.2.111.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When the time specified in hh3cLIMediationTimeout arrives, $*
SDESC
When the time specified in hh3cLIMediationTimeout arrives,
the device notifies the manager corresponding intercept is removed.
Variables:
  1: hh3cLIMediationRowStatus
     Syntax="INTEGER"
       1: active
       2: notInService
       3: notReady
       4: createAndGo
       5: createAndWait
       6: destroy
     Descr="Operation status of this table entry."
EDESC
#
#
#
EVENT hh3cLIFailureInformation .1.3.6.1.4.1.25506.2.111.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA When interception is configured on distributed device, $*
SDESC
When interception is configured on distributed device,
the configuration perhaps failed on some board.
If this happened, this notification will occur.
Variables:
  1: hh3cLIStreamtype
     Syntax="INTEGER"
       1: ip
       2: mac
       3: userConnection
     Descr="Identifies the type of stream, and according to it uses filter table.
        It can not be changed after a filter table is attached to it.
        The following types of streams are supported:
         ip:             IP filter.  The exact definition is a row in
                         hh3cLIIPStreamTable.
         mac:            MAC filter.  The exact definition is a row in
                         hh3cLIMACStreamTable.
         userConnecton:  User connection filter.  The exact definition
                         is a row in hh3cLIUserStreamTable."
  2: hh3cLIBoardInformation
     Syntax="UNSIGNED32"
     Descr="It is a slot number."
EDESC
#
#
#
#
MIB: HH3C-LLDP-EXT-MIB (file:./hh3c-lldp-ext.mib) converted on Fri Mar 18 23:13:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3clldpValidationStatusChange .1.3.6.1.4.1.25506.2.100.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the neighbor validation $*
SDESC
This notification will be sent when the neighbor validation
protection status of a port is changed.
Variables:
  1: hh3clldpPortStatusPortNum
     Syntax="INTEGER32"
     Descr="Port number."
  2: hh3clldpPortValidationStatus
     Syntax="INTEGER32"
     Descr="Neighbor validation protection status of the port.  The default value
         is 0."
EDESC
#
#
#
EVENT hh3clldpAgingStatusChange .1.3.6.1.4.1.25506.2.100.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be sent when the neighbor aging protection $*
SDESC
This notification will be sent when the neighbor aging protection
status of a port is changed.
Variables:
  1: hh3clldpPortStatusPortNum
     Syntax="INTEGER32"
     Descr="Port number."
  2: hh3clldpPortAgingStatus
     Syntax="INTEGER32"
     Descr="Neighbor aging protection status of the port.  The default value is
         0."
EDESC
#
#
#
#
MIB: HH3C-LOCAL-AAA-SERVER-MIB (file:./hh3c-local-aaa-server.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LOGIC-VOLUME-MIB (file:./hh3c-logic-volume.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LPBKDT-MIB (file:./hh3c-lpbkdt.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLpbkdtTrapLoopbacked .1.3.6.1.4.1.25506.2.95.1.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the interface is looped. $*
SDESC
Trap message is generated when the interface is looped.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapRecovered .1.3.6.1.4.1.25506.2.95.1.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the loops on the interface $*
SDESC
Trap message is generated when the loops on the interface
are eliminated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapPerVlanLoopbacked .1.3.6.1.4.1.25506.2.95.1.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the interface is looped in the VLAN. $*
SDESC
Trap message is generated when the interface is looped in the VLAN.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cLpbkdtVlanID
     Syntax="INTEGER32"
     Descr="The ID of VLAN."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapPerVlanRecovered .1.3.6.1.4.1.25506.2.95.1.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Trap message is generated when the loop on the interface $*
SDESC
Trap message is generated when the loop on the interface
is eliminated in the VLAN.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cLpbkdtVlanID
     Syntax="INTEGER32"
     Descr="The ID of VLAN."
EDESC
#
#
#
#
MIB: HH3C-LSW-DEV-ADM-MIB (file:./hh3c-lsw-dev-adm.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LTE-MEC-MIB (file:./hh3c-lte-mec.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMecTunnelCacheFullTrap .1.3.6.1.4.1.25506.2.185.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MEC tunnel table is full. $*
SDESC
Send this trap when the MEC tunnel table is full.
Variables:
  1: hh3cMecTunnelCacheNumber
     Syntax="INTEGER32"
     Descr="The number of MEC tunnel tables."
EDESC
#
#
#
EVENT hh3cMecTunnelCacheRecoverTrap .1.3.6.1.4.1.25506.2.185.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MEC tunnel table entry falls below the normal value. $*
SDESC
Send this trap when the MEC tunnel table entry falls below the normal value.
Variables:
  1: hh3cMecTunnelCacheNumber
     Syntax="INTEGER32"
     Descr="The number of MEC tunnel tables."
EDESC
#
#
#
#
MIB: HH3C-MAC-INFORMAT ZBXTRAP $aAION-MIB (file:./hh3c-mac-information.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMACInformationChangedTrap .1.3.6.1.4.1.25506.2.87.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When the cached number of MAC address information is reached the $*
SDESC
When the cached number of MAC address information is reached the
value specified by hh3cMACInformationCacheLen, trap is generated
and is sent to the remote monitoring device.  The trap is also
generated when the amount of time elapsed since the previous
notification is greater than the interval value specified by
hh3cMACInformationcSendInterval and there is at least one cached
MAC address information learnt or removed. The object is valid
only when hh3cMACInfomationWorkMode is set to trap(1).  When the
hh3cMACInfomationWorkMode is set to syslog(2), No trap will be
generated even hh3cMACInformationEnabled is set to enabled(1) and
the feature is enabled on interface.
Variables:
  1: hh3cMACInfoTrapIndex
     Syntax="UNSIGNED32"
     Descr="The sequence number of trap information. When it reaches the
        maximum value, it should be set to 1."
  2: hh3cMACInfoTrapCount
     Syntax="UNSIGNED32"
     Descr="The cell number of the current trap information.  The trap
        message may consists of more than one MAC address information.
        Each of the one MAC address information in one trap is called cell."
  3: hh3cMACInfoTrapMsg
     Syntax="OCTETSTR"
     Descr="This object is the MAC information that learnt or removed
        in the monitored device. It can consists of more than
        one MAC information in the object.
        This object is in the format of '<cell1><cell2>...'. Each
        cell consists of 12 octets in the format of
        '<operationType><VLAN><MAC><MACtype><ifIndex>'.

        <operationType> is the reason type of MAC address changed and have
        size of 1 octet. It only supports the following values.
        1 - MAC learnt.
        2 - MAC removed.

        <VLAN> is the vlan number that correspond to the MAC address in
        MAC address table and has size of 2 octet.

        <MAC> is the MAC address and has size of 6 octets.

        <MACtype> is the MAC address type and has size of 1 octet. It only
        supports the following values.
        0 - Unknown
        1 - Learnt
        2 - Config dynamic
        3 - Config static
        4 - Blackhole
        5 - Security
        6 - 802.1x
        7 - MAC authentication
        8 - Voice VLAN
        9 - Reserved

        <ifIndex> is the index of the interface where the MAC
        address is learnt or removed and has size of 2 octets."
EDESC
#
#
#
EVENT hh3cMACInformationChangedTrapExt .1.3.6.1.4.1.25506.2.87.1.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When the cached number of MAC address information is reached the $*
SDESC
When the cached number of MAC address information is reached the
value specified by hh3cMACInformationCacheLen, trap is generated
and is sent to the remote monitoring device.  The trap is also
generated when the amount of time elapsed since the previous
notification is greater than the interval value specified by
hh3cMACInformationcSendInterval and there is at least one cached
MAC address information learnt or removed.  The object is valid
only when hh3cMACInfomationWorkMode is set to trap(1).  When the
hh3cMACInfomationWorkMode is set to syslog(2), No trap will be
generated even hh3cMACInformationEnabled is set to enabled(1) and
the feature is enabled on interface.
Variables:
  1: hh3cMACInfoTrapVerExt
     Syntax="UNSIGNED32"
     Descr="The version of trap information."
  2: hh3cMACInfoTrapIndexExt
     Syntax="UNSIGNED32"
     Descr="The sequence number of trap information.  When it reaches the
        maximum value, it should be set to 1."
  3: hh3cMACInfoTrapCountExt
     Syntax="UNSIGNED32"
     Descr="The cell number of the current trap information.  The trap
        message may consists of more than one MAC address information.
        Each of the one MAC address information in one trap is called cell."
  4: hh3cMACInfoTrapMsgExt
     Syntax="OCTETSTR"
     Descr="This object is the MAC information that learnt or removed
        in the monitored device.  It can consists of more than
        one MAC information in the object.
        This object is in the format of '<cell1><cell2>...'.  Each
        cell consists of 14 octets in the format of
        '<operationType><VLAN><MAC><MACtype><ifIndex>'.

        <operationType> is the reason type of MAC address changed and have
        size of 1 octet.  It only supports the following values.
        1 - MAC learnt.
        2 - MAC removed.

        <VLAN> is the vlan number that correspond to the MAC address in
        MAC address table and has size of 2 octet.

        <MAC> is the MAC address and has size of 6 octets.

        <MACtype> is the MAC address type and has size of 1 octet.  It only
        supports the following values.
        0 - Unknown
        1 - Learnt
        2 - Config dynamic
        3 - Config static
        4 - Blackhole
        5 - Security
        6 - 802.1x
        7 - MAC authentication
        8 - Voice VLAN
        9 - Reserved

        <ifIndex> is the index of the interface where the MAC
        address is learnt or removed and has size of 4 octets."
EDESC
#
#
#
EVENT hh3cMACInformationMovedTrap .1.3.6.1.4.1.25506.2.87.1.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA When the MAC address has been moved to another interface, trap $*
SDESC
When the MAC address has been moved to another interface, trap
is generated and is sent to the remote monitoring device.
Variables:
  1: hh3cMACInfoTrapMsgMovedAddress
     Syntax="OCTETSTR"
     Descr="The MAC address that is moved between interfaces."
  2: hh3cMACInfoTrapMsgMovedVlan
     Syntax="INTEGER32"
     Descr="The VLAN number in which the MAC address is moved."
  3: hh3cMACInfoTrapMsgMovedFromIf
     Syntax="INTEGER32"
     Descr="The index of the interface from which the MAC address is moved."
  4: hh3cMACInfoTrapMsgMovedToIf
     Syntax="INTEGER32"
     Descr="The index of the interface to which the MAC address is moved."
  5: hh3cMACInfoTrapMsgMovedCount
     Syntax="COUNTER"
     Descr="The times for which the MAC address has been moved between the
        interfaces."
EDESC
#
#
#
#
MIB: HH3C-MACSEC-MIB (file:./hh3c-macsec.mib) converted on Fri Mar 18 23:13:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MCDR-MIB (file:./hh3c-mcdr.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MDC-MIB (file:./hh3c-mdc.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMDCStateChangeToActive .1.3.6.1.4.1.25506.2.136.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cMDCStateChangeToActive trap indicates that the MDC status has changed to active. $*
SDESC
The hh3cMDCStateChangeToActive trap indicates that the MDC status has changed to active.
Variables:
  1: hh3cMDCIndex
     Syntax="INTEGER32"
     Descr="MDC ID is used as MDCIndex, the value range of MDC ID depends on the device model.
         MDCIndex cannot be modified after creation."
  2: hh3cMDCName
     Syntax="OCTETSTR"
     Descr="Specifies the MDC name, a case-sensitive string of 1 to 15 characters.
        The MDC name cannot be modified after creation."
EDESC
#
#
#
EVENT hh3cMDCStateChangeToInactive .1.3.6.1.4.1.25506.2.136.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cMDCStateChangeToInactive trap indicates that the MDC status has changed to inactive. $*
SDESC
The hh3cMDCStateChangeToInactive trap indicates that the MDC status has changed to inactive.
Variables:
  1: hh3cMDCIndex
     Syntax="INTEGER32"
     Descr="MDC ID is used as MDCIndex, the value range of MDC ID depends on the device model.
         MDCIndex cannot be modified after creation."
  2: hh3cMDCName
     Syntax="OCTETSTR"
     Descr="Specifies the MDC name, a case-sensitive string of 1 to 15 characters.
        The MDC name cannot be modified after creation."
EDESC
#
#
#
#
MIB: HH3C-MINM-MIB (file:./hh3c-minm.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MIRRORGROUP-MIB (file:./hh3c-mirrorgroup.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSEXT-MIB (file:./hh3c-mplsext.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-LDP-MIB (file:./hh3c-mpls-ldp.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-LSR-MIB (file:./hh3c-mpls-lsr.mib) converted on Fri Mar 18 23:13:59 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cmplsXCUp .1.3.6.1.4.1.25506.8.12.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a $*
SDESC
This notification is generated when a
hh3cmplsXCOperStatus object for one of the configured
cross-connect entries is about to leave the down
state and transition into some other state (but not
into the notPresent state).  This other state is
indicated by the included value of
hh3cmplsXCOperStatus.
Variables:
  1: hh3cmplsXCIndex
     Syntax="INTEGER32"
     Descr="Primary index for the conceptual row identifying 
        a group of cross-connect segments."
  2: hh3cmplsInSegmentIfIndex
     Syntax="INTEGER32"
     Descr="This is a unique index for an entry in the
        hh3cmplsInSegmentTable.  This value represents the
        interface index for the incoming MPLS interface.  A
        value of zero represents an incoming label from the
        per-platform label space.  In this case, the
        hh3cmplsInSegmentLabel is interpreted to be an MPLS-type
        label."
  3: hh3cmplsInSegmentLabel
     Syntax="UNSIGNED32"
     Descr="The incoming label for this segment."
  4: hh3cmplsOutSegmentIndex
     Syntax="INTEGER32"
     Descr="This value contains a unique index for this row.
        While a value of 0 is not valid as an index for this
        row it can be supplied as a valid value to index
        hh3cmplsXCTable to access entries for which no out-
        segment has been configured."
  5: hh3cmplsXCAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired operational status of this segment."
  6: hh3cmplsXCOperStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
       4: unknown
       5: dormant
       6: notPresent
       7: lowerLayerDown
     Descr="The actual operational status of this cross-
        connect."
EDESC
#
#
#
EVENT hh3cmplsXCDown .1.3.6.1.4.1.25506.8.12.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when a $*
SDESC
This notification is generated when a
hh3cmplsXCOperStatus object for one of the configured
cross-connect entries is about to enter the down
state from some other state (but not from the
notPresent state).  This other state is indicated by
the included value of hh3cmplsXCOperStatus.
Variables:
  1: hh3cmplsXCIndex
     Syntax="INTEGER32"
     Descr="Primary index for the conceptual row identifying 
        a group of cross-connect segments."
  2: hh3cmplsInSegmentIfIndex
     Syntax="INTEGER32"
     Descr="This is a unique index for an entry in the
        hh3cmplsInSegmentTable.  This value represents the
        interface index for the incoming MPLS interface.  A
        value of zero represents an incoming label from the
        per-platform label space.  In this case, the
        hh3cmplsInSegmentLabel is interpreted to be an MPLS-type
        label."
  3: hh3cmplsInSegmentLabel
     Syntax="UNSIGNED32"
     Descr="The incoming label for this segment."
  4: hh3cmplsOutSegmentIndex
     Syntax="INTEGER32"
     Descr="This value contains a unique index for this row.
        While a value of 0 is not valid as an index for this
        row it can be supplied as a valid value to index
        hh3cmplsXCTable to access entries for which no out-
        segment has been configured."
  5: hh3cmplsXCAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired operational status of this segment."
  6: hh3cmplsXCOperStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
       4: unknown
       5: dormant
       6: notPresent
       7: lowerLayerDown
     Descr="The actual operational status of this cross-
        connect."
EDESC
#
#
#
#
MIB: HH3C-MPLSOAM-MIB (file:./hh3c-mplsoam.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSOAM-PS-MIB (file:./hh3c-mplsoam-ps.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSTE-MIB (file:./hh3c-mplste.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-VPN-BGP-MIB (file:./hh3c-mpls-vpn-bgp.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-BGP-VPN-MIB (file:./hh3c-mpls-vpn.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MP-MIB (file:./hh3c-mp.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPM-MIB (file:./hh3c-mpm.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MP-V2-MIB (file:./hh3c-mp-v2.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MS-MAN-MIB (file:./hh3c-ms-man.mib) converted on Fri Mar 18 23:14:00 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMSManVODConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Current VOD connection exceeds the threshold. $*
SDESC
Current VOD connection exceeds the threshold.
Variables:
  1: hh3cMSVODIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentVODConnection
     Syntax="UNSIGNED32"
     Descr="Number of VOD connections the entity provided
        in this time."
  3: hh3cMSVODConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of VOD connections."
EDESC
#
#
#
EVENT hh3cMSManVODConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Current VOD connection recovers under the threshold. $*
SDESC
Current VOD connection recovers under the threshold.
Variables:
  1: hh3cMSVODIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentVODConnection
     Syntax="UNSIGNED32"
     Descr="Number of VOD connections the entity provided
        in this time."
  3: hh3cMSVODConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of VOD connections."
EDESC
#
#
#
EVENT hh3cMSManForwardConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Current forward connection exceeds the threshold. $*
SDESC
Current forward connection exceeds the threshold.
Variables:
  1: hh3cMSForwardIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
         depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentForwardConnection
     Syntax="UNSIGNED32"
     Descr="Number of forward connections the entity provided
        in this time."
  3: hh3cMSForwardConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of forward connections."
EDESC
#
#
#
EVENT hh3cMSManForwardConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Current forward connection recovers under the threshold. $*
SDESC
Current forward connection recovers under the threshold.
Variables:
  1: hh3cMSForwardIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
         depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentForwardConnection
     Syntax="UNSIGNED32"
     Descr="Number of forward connections the entity provided
        in this time."
  3: hh3cMSForwardConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of forward connections."
EDESC
#
#
#
EVENT hh3cMSManRecordConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Current record connection exceeds the threshold. $*
SDESC
Current record connection exceeds the threshold.
Variables:
  1: hh3cMSRecordIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentRecordConnection
     Syntax="UNSIGNED32"
     Descr="Number of record connections the entity provided in
        this time."
  3: hh3cMSRecordConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of record connections ."
EDESC
#
#
#
EVENT hh3cMSManRecordConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Current record connection recovers under the threshold. $*
SDESC
Current record connection recovers under the threshold.
Variables:
  1: hh3cMSRecordIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentRecordConnection
     Syntax="UNSIGNED32"
     Descr="Number of record connections the entity provided in
        this time."
  3: hh3cMSRecordConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of record connections ."
EDESC
#
#
#
#
MIB: HH3C-MULTICAST-MIB (file:./hh3c-multicast.mib) converted on Fri Mar 18 23:14:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MULTICAST-SNOOPING-MIB (file:./hh3c-multicast-snooping.mib) converted on Fri Mar 18 23:14:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NAT-MIB (file:./hh3c-nat.mib) converted on Fri Mar 18 23:14:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNATBandwidthTrap .1.3.6.1.4.1.25506.2.18.2.15.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when the bandwidth usage of a CGN card has reached the hh3cNATBandwidthRatio. $*
SDESC
Send trap when the bandwidth usage of a CGN card has reached the hh3cNATBandwidthRatio.
Variables:
  1: hh3cNATBandwidthRatio
     Syntax="UNSIGNED32"
     Descr="The usage of CGN card bandwidth."
  2: hh3cNATChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  3: hh3cNATSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  4: hh3cNATCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cNATBandwidthRecoveryTrap .1.3.6.1.4.1.25506.2.18.2.15.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when the CGN card bandwidth usage has dropped below the threshold. $*
SDESC
Send trap when the CGN card bandwidth usage has dropped below the threshold.
Variables:
  1: hh3cNATChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cNATSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cNATCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cInstAddrGrpUsageTrap .1.3.6.1.4.1.25506.2.18.2.18.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when hh3cInstAddrUsgGrpUsage reached the threshold. $*
SDESC
Send trap when hh3cInstAddrUsgGrpUsage reached the threshold.
Variables:
  1: hh3cInstAddrTrapInstName
     Syntax="OCTETSTR"
     Descr="NAT instance name."
  2: hh3cInstAddrTrapGrpIndex
     Syntax="UNSIGNED32"
     Descr="NAT address group ID."
  3: hh3cInstAddrTrapInstIndex
     Syntax="UNSIGNED32"
     Descr="NAT instance index."
  4: hh3cInstAddrTrapUsgThreshold
     Syntax="UNSIGNED32"
     Descr="NAT address group usage reached the threshold."
EDESC
#
#
#
EVENT hh3cInstAddrGrpUsageRecovTrap .1.3.6.1.4.1.25506.2.18.2.18.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when dropped below the threshold. $*
SDESC
Send trap when dropped below the threshold.
Variables:
  1: hh3cInstAddrTrapInstName
     Syntax="OCTETSTR"
     Descr="NAT instance name."
  2: hh3cInstAddrTrapGrpIndex
     Syntax="UNSIGNED32"
     Descr="NAT address group ID."
  3: hh3cInstAddrTrapInstIndex
     Syntax="UNSIGNED32"
     Descr="NAT instance index."
EDESC
#
#
#
EVENT hh3cNatIPPoolAddrUsageExceedTrap .1.3.6.1.4.1.25506.2.18.2.20.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when NatIPPoolAddrUsageExceed reached the threshold. $*
SDESC
Send trap when NatIPPoolAddrUsageExceed reached the threshold.
Variables:
  1: hh3cNatTrapIPPoolName
     Syntax="OCTETSTR"
     Descr="NAT IP pool name."
  2: hh3cNatTrapIPPoolAddrUsage
     Syntax="UNSIGNED32"
     Descr="NAT IP pool address usage."
EDESC
#
#
#
EVENT hh3cNatIPPoolAddrUsageRecoveryTrap .1.3.6.1.4.1.25506.2.18.2.20.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send trap when dropped below the threshold. $*
SDESC
Send trap when dropped below the threshold.
Variables:
  1: hh3cNatTrapIPPoolName
     Syntax="OCTETSTR"
     Descr="NAT IP pool name."
  2: hh3cNatTrapIPPoolAddrUsage
     Syntax="UNSIGNED32"
     Descr="NAT IP pool address usage."
EDESC
#
#
#
#
MIB: HH3C-NCM-MIB (file:./hh3c-ncm.mib) converted on Fri Mar 18 23:14:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNcmCUConnDisconnected .1.3.6.1.4.1.25506.2.201.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The NETCONF connection with a peer device was torn down. $*
SDESC
The NETCONF connection with a peer device was torn down.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapConnFailedReason
     Syntax="OCTETSTR"
     Descr="The Connection Fail Reason."
EDESC
#
#
#
EVENT hh3cNcmCUConnReconnected .1.3.6.1.4.1.25506.2.201.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The NETCONF connection with a peer device is resumed. $*
SDESC
The NETCONF connection with a peer device is resumed.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
EDESC
#
#
#
EVENT hh3cNcmCUConnectFailed .1.3.6.1.4.1.25506.2.201.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to establish a NETCONF connection with a peer device. $*
SDESC
Failed to establish a NETCONF connection with a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapConnFailedReason
     Syntax="OCTETSTR"
     Descr="The Connection Fail Reason."
EDESC
#
#
#
EVENT hh3cNcmCUConnectSuccess .1.3.6.1.4.1.25506.2.201.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Successed in establishing a NETCONF connection with a peer device. $*
SDESC
Successed in establishing a NETCONF connection with a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
EDESC
#
#
#
EVENT hh3cNcmCUConfigFailed .1.3.6.1.4.1.25506.2.201.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to deliver configurations to a peer device. $*
SDESC
Failed to deliver configurations to a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapFeatureName
     Syntax="OCTETSTR"
     Descr="The name of module that sent the configuration request."
EDESC
#
#
#
#
MIB: HH3C-NDEC-MIB (file:./hh3c-ndec.mib) converted on Fri Mar 18 23:14:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NETCONF-MIB (file:./hh3c-netconf.mib) converted on Fri Mar 18 23:14:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNetconfServerSessionStart .1.3.6.1.4.1.25506.2.206.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The NETCONF server created a session. $*
SDESC
The NETCONF server created a session.
Variables:
  1: hh3cNetconfSessionId
     Syntax="INTEGER32"
     Descr="The ID of NETCONF session ."
  2: hh3cNetconfSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of NETCONF session."
  3: hh3cNetconfSessionPeerIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The peer IP address of NETCONF session."
  4: hh3cNetconfSessionPeerIPAddress
     Syntax="OCTETSTR"
     Descr="The peer IP address of NETCONF session."
EDESC
#
#
#
EVENT hh3cNetconfServerSessionEnd .1.3.6.1.4.1.25506.2.206.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A NETCONF server session ended. $*
SDESC
A NETCONF server session ended.
Variables:
  1: hh3cNetconfSessionId
     Syntax="INTEGER32"
     Descr="The ID of NETCONF session ."
  2: hh3cNetconfSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of NETCONF session."
  3: hh3cNetconfSessionPeerIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The peer IP address of NETCONF session."
  4: hh3cNetconfSessionPeerIPAddress
     Syntax="OCTETSTR"
     Descr="The peer IP address of NETCONF session."
  5: hh3cNetconfSessionTerminationReason
     Syntax="INTEGER"
       1: other
       2: closed
       3: linkDown
       4: idleTimeout
     Descr="The termination reason of NETCONF session.
        other(1)        --Other reason
        closed(2)       --Session was closed
        linkDown(3)     --Link is down
        idleTimeout(4)  --Session time out."
EDESC
#
#
#
#
MIB: HH3C-NET-MAN-MIB (file:./hh3c-net-man.mib) converted on Fri Mar 18 23:14:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpAddrChangeNotify .1.3.6.1.4.1.25506.2.90.3.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the IP address of active $*
SDESC
This notification will be generated when the IP address of active
management interface is changed.  The change maybe originate from NMS,
DHCP server or administrator.
The management interfaces are the interfaces that assigned by
administrator, which can be used to manage device, but may be inactive
for link fault or IP address (IPv4 or IPv6) missing.
The active management interface means an active interface, the IP
address of which can be used for network management.
This notification announces useful management IP address change.  So it
is triggered by significative IP address change.
Suppose that two management interfaces on a device, Interface-A and
Interface-B.  Initially both interfaces are down and assigned no IP
address. Configure Interface-A as the primary monitored interface,
Interface-B as the secondary.
Significative IP address change in following cases:
1. If Interface-A is assigned an IP address primarily, and it is linking
up, then Interface-B will be ignored.  A notification will be triggered,
appending IP address of Interface-A.
2. If Interface-B is assigned an IP address primarily, and it is linking
up, then Interface-A will be ignored.  A notification will be triggered,
appending IP address of Interface-B.
3. If IP address of that interface, which had its IP address announced
to NMS, is changed since last notification triggered, then another
notification will be sent to NMS.
4. Suppore that Interface-A was linked up and assigned an IP address
primarily.  If for some unknown reason, Interface-A is down or loses IP
address, and Interface-B is assigned an IP address which is different
with that announced to NMS before, then a notification will be
triggered, appending the new IP address that Interface-B assigned.
5. A notification appending new IP address that Interface-A assigned
will be triggered, if 4 occurs to Interface-B.
Variables:
  1: hh3cNMIpAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of specified interface on the device."
  2: hh3cNMIpAddress
     Syntax="OCTETSTR"
     Descr="The IP address of specified interface on the device."
  3: hh3cNMCustomBuildInfo
     Syntax="OCTETSTR"
     Descr="The customer-required information of devices, for example,
        OUI (Organizational Unique Identifier)."
  4: hh3cNMSerialNum
     Syntax="OCTETSTR"
     Descr="The serial number used by NMS (Network Management Station) for
        mapping IP address and device."
EDESC
#
#
#
#
MIB: HH3C-NPV-MIB (file:./hh3c-npv.mib) converted on Fri Mar 18 23:14:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NQA-MIB (file:./hh3c-nqa.mib) converted on Fri Mar 18 23:14:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNqaProbeTimeOverThreshold .1.3.6.1.4.1.25506.8.3.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. Probe time(equals to RTT for some type of tests) is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterRTTOverThreshold .1.3.6.1.4.1.25506.8.3.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average NQA round-trip-time (RTT) of jitter packets
is not in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
2. The RTT of jitter packets is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum in one test.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaProbeFailure .1.3.6.1.4.1.25506.8.3.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the probe test accumulatively failed for a
number of times specified in hh3cNqaReactThresholdAccumNum in one
test while the value of hh3cNqaReactThresholdType is 'accumulative'.
2. When the probe test consecutively failed for
a number of times specified in hh3cNqaReactThresholdConsecNum in one
test while the value of hh3cNqaReactThresholdType is 'consecutive'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterPacketLoss .1.3.6.1.4.1.25506.8.3.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the jitter packets accumulatively lost for a
number of times specified in hh3cNqaReactThresholdAccumNum in one
test while the value of hh3cNqaReactThresholdType is 'accumulative'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterSDOverThreshold .1.3.6.1.4.1.25506.8.3.3.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The SD means the jitter values from source to destination. $*
SDESC
The SD means the jitter values from source to destination.
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average of SD in one jitter test is not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The average of SD in one jitter test is accumulatively
not in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterDSOverThreshold .1.3.6.1.4.1.25506.8.3.3.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The DS means the jitter values from destination to source. $*
SDESC
The DS means the jitter values from destination to source.
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average of DS in one jitter test is not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The average of DS in one jitter test is accumulatively not
in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaICPIFOverThreshold .1.3.6.1.4.1.25506.8.3.3.7 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the ICPIF value in one jitter test is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger', pingCtlType of the test
is hh3cNqajitter and hh3cNqaCtlCodecType is 'g711Alaw' or 'g711Ulaw'
or 'g729A'.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaMOSOverThreshold .1.3.6.1.4.1.25506.8.3.3.8 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the MOS value in one jitter test is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger', pingCtlType of the test
is hh3cNqajitter and hh3cNqaCtlCodecType is 'g711Alaw' or 'g711Ulaw'
or 'g729A'.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterOverThreshold .1.3.6.1.4.1.25506.8.3.3.9 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is above threshold
or below threshold.
1. The average jitter value is not in the range of
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The total number of times that the average jitter value is not
in the range of hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit reaches or exceeds
the value specified in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaProbeTimeAboveThreshold .1.3.6.1.4.1.25506.8.3.3.10 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'overThreshold', 'invalid' or 'overUpperThreshold'.
The change may occur when the monitored condition exceeds the
threshold (or upper threshold) or When NQA operation is stopped.
The above threshold situations are specified as below.
1. Probe time is not in the range hh3cNqaReactThresholdLowerLimit
through hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
4. When NQA operation is stopped.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeTimeBelowThreshold .1.3.6.1.4.1.25506.8.3.3.11 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'belowThreshold' or 'belowLowerThreshold' from a
threshold-crossing state.
The below threshold situations are specified as below.
1. Probe time is in the range hh3cNqaReactThresholdLowerLimit
through hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeFailAboveThreshold .1.3.6.1.4.1.25506.8.3.3.12 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'overThreshold', 'invalid' or 'overUpperThreshold'.
The change may occur when the monitored condition exceeds the
threshold (or upper threshold) or When NQA operation is stopped.
The threshold-crossing situations are specified as below.
1. When the number of accumulative failed probes reaches the specified
value in hh3cNqaReactThresholdAccumNum in one test while the value
of hh3cNqaReactThresholdType is 'accumulative'.
2. When the number of consecutive failed probes reaches the specified
value in hh3cNqaReactThresholdConsecNum in one test while the value
of hh3cNqaReactThresholdType is 'consecutive'.
3. When NQA operation is stopped.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeFailBelowThreshold .1.3.6.1.4.1.25506.8.3.3.13 "Status Events" Normal
FORMAT ZBXTRAP $aA It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'belowThreshold' or 'belowLowerThreshold' from a
threshold-crossing state.
The below threshold situations are specified as below.
1. When the number of accumulative successful probes reaches the specified
value in hh3cNqaReactThresholdAccumNum in one test while the value
of hh3cNqaReactThresholdType is 'accumulative'.
2. When the number of consecutive successful probes reaches the specified
value in hh3cNqaReactThresholdConsecNum in one test while the value
of hh3cNqaReactThresholdType is 'consecutive'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
#
MIB: HH3C-NS-MIB (file:./hh3c-ns.mib) converted on Fri Mar 18 23:14:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NTP-MIB (file:./hh3c-ntp.mib) converted on Fri Mar 18 23:14:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NVGRE-MIB (file:./hh3c-nvgre.mib) converted on Fri Mar 18 23:14:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OBJECT-INFO-MIB (file:./hh3c-object-info.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OBJP-MIB (file:./hh3c-objp.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OFP-MIB (file:./hh3c-ofp.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cOfpControllerDisconnect .1.3.6.1.4.1.25506.2.167.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the instance is disconnected $*
SDESC
This trap is generated when the instance is disconnected
from the controller.  The disconnection reason is
hh3cOfpTrapDisconnectReason.
Variables:
  1: hh3cOfpInstanceID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow instance"
  2: hh3cOfpInstanceControllerID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow controller."
  3: hh3cOfpTrapDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Unknown reason.
             1: Undo commands executed
             2: Echo timeout.
             3: Hello failed.
             4: Receiving Hello packets timed out.
             5: Receiving messages failed.
             6: Epoll error.
             7: VRF deleted.
             8: VRF global port down.
             9: Failed to recycle the buffer.
             10: AP down."
EDESC
#
#
#
EVENT hh3cOfpControllerConnect .1.3.6.1.4.1.25506.2.167.2.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the instance is connected $*
SDESC
This trap is generated when the instance is connected
to the controller.
Variables:
  1: hh3cOfpInstanceID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow instance"
  2: hh3cOfpInstanceControllerID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow controller."
EDESC
#
#
#
#
MIB: HH3C-OID-MIB (file:./hh3c-oid.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OSPF-MIB (file:./hh3c-ospf.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PBR-MIB (file:./hh3c-pbr.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPBRNexthopFailedTrap .1.3.6.1.4.1.25506.2.113.1.2.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA When the next hop of PBR apply clause became $*
SDESC
When the next hop of PBR apply clause became
unreachable according to routing information, trap is generated
and is sent to the remote monitoring device.
Variables:
  1: hh3cPBRNexthopAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Indicating address type of hh3cPBRNexthopAddr, which can be IPv4
        or IPv6."
  2: hh3cPBRNexthopAddr
     Syntax="OCTETSTR"
     Descr="The involved next hop IP address of trap information."
EDESC
#
#
#
#
MIB: HH3C-PEX-MIB (file:./hh3c-pex.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPexPortOnline .1.3.6.1.4.1.25506.2.129.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPortOnline trap is sent when the PEX transitions to $*
SDESC
An hh3cPexPortOnline trap is sent when the PEX transitions to
online state.
Variables:
  1: hh3cPexPortId
     Syntax="INTEGER32"
     Descr="ID that can be used to uniquely identify a PEX port.  The value range
        is hh3cPexPortMinId to hh3cPexPortMaxId."
  2: hh3cPexPortDescr
     Syntax="OCTETSTR"
     Descr="Description for the PEX port.  The default value is
        'pex-port XXXX', where 'XXXX' is hh3cPexPortId.
        Writing a zero-length string to this object resets the value to the
        default."
EDESC
#
#
#
EVENT hh3cPexPortOffline .1.3.6.1.4.1.25506.2.129.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPortOnline trap is sent when the PEX transitions to $*
SDESC
An hh3cPexPortOnline trap is sent when the PEX transitions to
offline state.
Variables:
  1: hh3cPexPortId
     Syntax="INTEGER32"
     Descr="ID that can be used to uniquely identify a PEX port.  The value range
        is hh3cPexPortMinId to hh3cPexPortMaxId."
  2: hh3cPexPortDescr
     Syntax="OCTETSTR"
     Descr="Description for the PEX port.  The default value is
        'pex-port XXXX', where 'XXXX' is hh3cPexPortId.
        Writing a zero-length string to this object resets the value to the
        default."
EDESC
#
#
#
EVENT hh3cPexPhyPortForwarding .1.3.6.1.4.1.25506.2.129.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPhyPortForwarding trap is sent when the PEX physical port $*
SDESC
An hh3cPexPhyPortForwarding trap is sent when the PEX physical port
transitions to forwarding state.
Variables:
  1: hh3cPexEntPhysicalIndexBind
     Syntax="INTEGER32"
     Descr="This index is identical to entPhysicalIndex in ENTITY-MIB."
  2: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
EVENT hh3cPexPhyPortBlocked .1.3.6.1.4.1.25506.2.129.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cPexPhyPortBlocked trap is sent when the PEX physical port $*
SDESC
An hh3cPexPhyPortBlocked trap is sent when the PEX physical port
transitions from forwarding state to blocked state.
Variables:
  1: hh3cPexEntPhysicalIndexBind
     Syntax="INTEGER32"
     Descr="This index is identical to entPhysicalIndex in ENTITY-MIB."
  2: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
#
MIB: HH3C-PORTAL-MIB (file:./hh3c-portal.mib) converted on Fri Mar 18 23:14:03 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPortalServerLost .1.3.6.1.4.1.25506.2.99.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the portal server $*
SDESC
This trap is generated when the device finds that the portal server
is unreachable, the portal server's name is hh3cPortalServerName, and
the portal server's IP is hh3cPortalServerIP, and the portal server's
port is hh3cPortalServerPort, and the portal server has been enabled.
Variables:
  1: hh3cPortalServerName
     Syntax="OCTETSTR"
     Descr="It is the index of the table of hh3cPortalServerTable, it shows
        the name of the portal server."
  2: hh3cPortalFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  3: hh3cPortalServerIP
     Syntax="OCTETSTR"
     Descr="The portal server's IP."
  4: hh3cPortalServerPort
     Syntax="INTEGER32"
     Descr="It shows the UDP port of the portal server.

        The port will be used when client sends packets to portal server.
        Default value is 50100.

        It is not configurable when the portal server has been enabled."
EDESC
#
#
#
EVENT hh3cPortalServerGet .1.3.6.1.4.1.25506.2.99.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of portal $*
SDESC
This trap is generated when the device finds that the state of portal
server changes from unreachable state to reachable,
the portal server's name is hh3cPortalServerName, and the portal server's
IP is hh3cPortalServerIP, and the portal server's port is hh3cPortalServerPort,
and the portal server has been enabled.
Variables:
  1: hh3cPortalServerName
     Syntax="OCTETSTR"
     Descr="It is the index of the table of hh3cPortalServerTable, it shows
        the name of the portal server."
  2: hh3cPortalFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  3: hh3cPortalServerIP
     Syntax="OCTETSTR"
     Descr="The portal server's IP."
  4: hh3cPortalServerPort
     Syntax="INTEGER32"
     Descr="It shows the UDP port of the portal server.

        The port will be used when client sends packets to portal server.
        Default value is 50100.

        It is not configurable when the portal server has been enabled."
EDESC
#
#
#
#
MIB: HH3C-PORT-SECURITY-MIB (file:./hh3c-port-security.mib) converted on Fri Mar 18 23:14:04 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSecureAddressLearned .1.3.6.1.4.1.25506.2.26.1.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new station has been learned.  The $*
SDESC
This trap is sent when a new station has been learned.  The
port on which the address was received is the first object,
and the MAC address of the learned station is in the second object.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
EDESC
#
#
#
EVENT hh3cSecureViolation .1.3.6.1.4.1.25506.2.26.1.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent whenever a security violation has occurred. $*
SDESC
This trap is sent whenever a security violation has occurred.
The port on which the violation occured is the first object,
and the MAC address of the offending station is in the second object.
ifAdminStatus indicates if the port has been disabled because of the violation.
The implementation may not send violation traps from the same port
at intervals of less than 5 seconds.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: ifAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the interface.  The testing(3) state
            indicates that no operational packets can be passed.  When a
            managed system initializes, all interfaces start with
            ifAdminStatus in the down(2) state.  As a result of either
            explicit management action or per configuration information
            retained by the managed system, ifAdminStatus is then
            changed to either the up(1) or testing(3) states (or remains
            in the down(2) state)."
EDESC
#
#
#
EVENT hh3cSecureLoginFailure .1.3.6.1.4.1.25506.2.26.1.3.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent whenever a user network access $*
SDESC
This trap is sent whenever a user network access
authentication has failed.  The port on which the violation occured is
the first object, and the MAC address of the offending station is in
the second object.  The dot1xAuthSessionUserName is the identity supplied
during the user authentication.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax="OCTETSTR"
     Descr="The User-Name representing the identity of the
        Supplicant PAE."
EDESC
#
#
#
EVENT hh3cSecureLogon .1.3.6.1.4.1.25506.2.26.1.3.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation occured is
the first object, and the MAC address of the offending station is in
the second object.
The dot1xAuthSessionUserName is the identity supplied during the user
authentication.  The dot1xAuthSessionAuthenticMethod indicates how the
user was authorised.  The hh3cSecurePortVlanMembershipList object
identifies the VLAN membership assigned to the port on session
activation.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax="OCTETSTR"
     Descr="The User-Name representing the identity of the
        Supplicant PAE."
  4: dot1xAuthSessionAuthenticMethod
     Syntax="INTEGER"
       1: remoteAuthServer
       2: localAuthServer
     Descr="The authentication method used to establish the
        session."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureLogoff .1.3.6.1.4.1.25506.2.26.1.3.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a user session is terminated. $*
SDESC
This trap is sent when a user session is terminated.
The port on which the violation occured is the first object,
and the MAC address of the offending station is in the second object.
The dot1xAuthSessionUserName is the identity supplied during the user
authentication.  The dot1xAuthSessionTerminateCause indicates the
reason why the session was terminated.
The hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session termination.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax="OCTETSTR"
     Descr="The User-Name representing the identity of the
        Supplicant PAE."
  4: dot1xAuthSessionTerminateCause
     Syntax="INTEGER"
       1: supplicantLogoff
       2: portFailure
       3: supplicantRestart
       4: reauthFailed
       5: authControlForceUnauth
       6: portReInit
       7: portAdminDisabled
       999: notTerminatedYet
     Descr="The reason for the session termination."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureRalmLoginFailure .1.3.6.1.4.1.25506.2.26.1.3.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent whenever a user network access $*
SDESC
This trap is sent whenever a user network access
authentication has failed.  The port on which the violation
occured is the first object, and the MAC address of the
offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername
is the identity supplied during the user authentication.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
EDESC
#
#
#
EVENT hh3cSecureRalmLogon .1.3.6.1.4.1.25506.2.26.1.3.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation
occured is the first object, and the MAC address of
the offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername is
the identity supplied during the user authentication. The
hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session activation.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureRalmLogoff .1.3.6.1.4.1.25506.2.26.1.3.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation
occured is the first object, and the MAC address of the
offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername is
the identity supplied during the user authentication. The
hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session activation.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
#
MIB: HH3C-POSA-MIB (file:./hh3c-posa.mib) converted on Fri Mar 18 23:14:04 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPosaServerStatusChange .1.3.6.1.4.1.25506.2.92.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the POS function is started or stopped. $*
SDESC
This trap is generated when the POS function is started or stopped.
Variables:
  1: hh3cPosaServerEnable
     Syntax="INTEGER"
       1: disabled
       2: enabled
     Descr="This attribute controls the starting or stoppage of POS access function.
        The defalut value is disabled(1)."
EDESC
#
#
#
EVENT hh3cPosaAppStateChange .1.3.6.1.4.1.25506.2.92.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the availability of application server $*
SDESC
This trap is generated whenever the availability of application server
changes.
Variables:
  1: hh3cPosaAppID
     Syntax="INTEGER32"
     Descr="The identification of a POS application."
  2: hh3cPosaAppStateChangeObject
     Syntax="INTEGER"
       1: available
       2: unavailable
     Descr="This is a dummy MIB object referenced by the hh3cPosaAppStateChange trap.
        This object shows the availability changing of corresponding application
        server."
EDESC
#
#
#
EVENT hh3cPosaTerminalHangUp .1.3.6.1.4.1.25506.2.92.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the POS connection through a FCM (Fast $*
SDESC
This trap is generated whenever the POS connection through a FCM (Fast
Connection Modem) interface is hanged up by POS terminal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaFcmLinkNegoFailed .1.3.6.1.4.1.25506.2.92.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the link layer negotiation is failed $*
SDESC
This trap is generated whenever the link layer negotiation is failed
between the POS terminal and router through a FCM (Fast Connection
Modem) interface.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaFcmPhyNegoFailed .1.3.6.1.4.1.25506.2.92.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the physical layer negotiation is failed $*
SDESC
This trap is generated whenever the physical layer negotiation is failed
between the POS terminal and router through a FCM (Fast Connection
Modem) interface.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaTcpConnectionExceed .1.3.6.1.4.1.25506.2.92.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the number of connections exceeds the threshold. $*
SDESC
This trap is generated whenever the number of connections exceeds the threshold.
Variables:
  1: hh3cPosaTcpConnectionThreshold
     Syntax="INTEGER32"
     Descr="The threshold of TCP connections."
EDESC
#
#
#
EVENT hh3cPosaFcmConnectionExceed .1.3.6.1.4.1.25506.2.92.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the number of connections exceeds the threshold. $*
SDESC
This trap is generated whenever the number of connections exceeds the threshold.
Variables:
  1: hh3cPosaFcmConnectionThreshold
     Syntax="INTEGER32"
     Descr="The threshold of FCM connections."
EDESC
#
#
#
EVENT hh3cPosaTcpTradeExceed .1.3.6.1.4.1.25506.2.92.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the number of trades in any TCP connect exceeds $*
SDESC
This trap is generated whenever the number of trades in any TCP connect exceeds
the limit.
Variables:
  1: hh3cPosaTcpTradeLimit
     Syntax="INTEGER32"
     Descr="The limit of concurrent trades in one TCP connection.  The value 0
        means unlimited."
  2: hh3cPosaTerminalID
     Syntax="INTEGER32"
     Descr="The identification of a POS terminal."
EDESC
#
#
#
EVENT hh3cPosaTradeSuccessFalling .1.3.6.1.4.1.25506.2.92.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the transaction success rate of bank server is smaller than or equal to the threshold. $*
SDESC
This trap is generated whenever the transaction success rate of bank server is smaller than or equal to the threshold.
Variables:
  1: hh3cPosaNiiStatIndex
     Syntax="OCTETSTR"
     Descr="The index of entity."
  2: hh3cPosaTradeSuccessFallingThreshold
     Syntax="INTEGER32"
     Descr="The threshold of transaction success rate ."
EDESC
#
#
#
EVENT hh3cPosaE1DialFalling .1.3.6.1.4.1.25506.2.92.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the dialing success rate of E1-controller is smaller than or equal to the threshold. $*
SDESC
This trap is generated whenever the dialing success rate of E1-controller is smaller than or equal to the threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaE1DialFallingThreshold
     Syntax="INTEGER32"
     Descr="The threshold of dialing success rate ."
EDESC
#
#
#
EVENT hh3cPosaFcmTradeAbnormal .1.3.6.1.4.1.25506.2.92.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated whenever the dialing link is abnormal. $*
SDESC
This trap is generated whenever the dialing link is abnormal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
#
MIB: HH3C-POS-MIB (file:./hh3c-pos.mib) converted on Fri Mar 18 23:14:04 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-POWER-ETH-EXT-MIB (file:./hh3c-power-eth-ext.mib) converted on Fri Mar 18 23:14:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpsePDChangeNotification .1.3.6.1.4.1.25506.2.14.6.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates if PD has been inserted or pulled out. $*
SDESC
This notification indicates if PD has been inserted or pulled out.
Variables:
  1: pethPsePortDetectionStatus
     Syntax="INTEGER"
       1: disabled
       2: searching
       3: deliveringPower
       4: fault
       5: test
       6: otherFault
     Descr="Describes the operational status of the port PD detection.
         A value of disabled(1)- indicates that the PSE State diagram
         is in the state DISABLED.
         A value of deliveringPower(3) - indicates that the PSE State
         diagram is in the state POWER_ON for a duration greater than
         tlim max (see IEEE Std 802.3af Table 33-5 tlim).
         A value of fault(4) - indicates that the PSE State diagram is
         in the state TEST_ERROR.
         A value of test(5) - indicates that the PSE State diagram is
         in the state TEST_MODE.
         A value of otherFault(6) - indicates that the PSE State
         diagram is in the state IDLE due to the variable
         error_conditions.
         A value of searching(2)- indicates the PSE State diagram is
         in a state other than those listed above."
EDESC
#
#
#
EVENT hh3cPOEDisconnectNotification .1.3.6.1.4.1.25506.2.14.6.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module does not disconnect. $*
SDESC
This notification indicates the POE power module does not disconnect.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleDisconnect
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
             The module does not link.
             The value of this node is one of the following values:
                              normal (1),
                              alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEInputErrorNotification .1.3.6.1.4.1.25506.2.14.6.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module input error. $*
SDESC
This notification indicates the POE power module input error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleInputError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 Input error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOutputErrorNotification .1.3.6.1.4.1.25506.2.14.6.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module output error. $*
SDESC
This notification indicates the POE power module output error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOutputError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 Output error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOverVoltageNotification .1.3.6.1.4.1.25506.2.14.6.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module overruns the $*
SDESC
This notification indicates the POE power module overruns the
voltage limit.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOverVoltage
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The voltage is too high.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOverTempNotification .1.3.6.1.4.1.25506.2.14.6.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module overruns the $*
SDESC
This notification indicates the POE power module overruns the
temperature limit.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOverTemp
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The temperature is too high.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEFanErrorNotification .1.3.6.1.4.1.25506.2.14.6.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module fan error. $*
SDESC
This notification indicates the POE power module fan error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleFanError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The fan error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEModuleShutdownNotification .1.3.6.1.4.1.25506.2.14.6.8 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module is closed. $*
SDESC
This notification indicates the POE power module is closed.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleShutdown
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The module is shutdown.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOECurRestrictedNotification .1.3.6.1.4.1.25506.2.14.6.9 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the POE power module current is restricted. $*
SDESC
This notification indicates the POE power module current is restricted.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleCurRestricted
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The module limit the current.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchNotification .1.3.6.1.4.1.25506.2.14.6.10 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input switch alarm of this POE power. $*
SDESC
This notification indicates the AC input switch alarm of this POE power.
Variables:
  1: hh3cPOEACSwitchStateIndex
     Syntax="INTEGER32"
     Descr="The index of the AC switch state on this POE power.
             The range of this node is from 1 to hh3cPOEACSwitchStateModuleNum."
  2: hh3cPOEACSwitchState
     Syntax="INTEGER"
       1: on
       2: off
       3: highVoltInput
       4: lowVoltInput
     Descr="The AC switch state on this POE power.
             The value of this node will be one of the following values:
                                 on             (1),
                                 off            (2),
                                 highVoltInput  (3),
                                 lowVoltInput   (4)"
EDESC
#
#
#
EVENT hh3cPOEACInCurANotification .1.3.6.1.4.1.25506.2.14.6.11 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input current A alarm state of $*
SDESC
This notification indicates the AC input current A alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurAState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current A state in the DC input on this POE power.
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACInCurBNotification .1.3.6.1.4.1.25506.2.14.6.12 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input current B alarm state of $*
SDESC
This notification indicates the AC input current B alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurBState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current B state in the DC input on this POE power.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACInCurCNotification .1.3.6.1.4.1.25506.2.14.6.13 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input current C alarm state of $*
SDESC
This notification indicates the AC input current C alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurCState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current C state in the DC input on this POE power.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolABNotification .1.3.6.1.4.1.25506.2.14.6.14 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input voltage AB alarm state of $*
SDESC
This notification indicates the AC input voltage AB alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolAB
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL AB alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolBCNotification .1.3.6.1.4.1.25506.2.14.6.15 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input voltage BC alarm state of $*
SDESC
This notification indicates the AC input voltage BC alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolBC
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL BC alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolCANotification .1.3.6.1.4.1.25506.2.14.6.16 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the AC input voltage CA alarm state of $*
SDESC
This notification indicates the AC input voltage CA alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolCA
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL CA alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEDCOutVolNotification .1.3.6.1.4.1.25506.2.14.6.17 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the DC output alarm of this POE power. $*
SDESC
This notification indicates the DC output alarm of this POE power.
Variables:
  1: hh3cPOEDCOutStateIndex
     Syntax="INTEGER32"
     Descr="The index of the DC output power state on this POE power.
             The range of this node is from 1 to hh3cPOEDCOutStateModuleNum."
  2: hh3cPOEDCOutDCVolAlarm
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: fuseBroken
       5: switchOff
       6: otherError
     Descr="The DC output alarm of the DC output power state on this POE power.
             The value of this node will be the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 fuseBroken (4),
                                 switchOff  (5),
                                 otherError (6)."
EDESC
#
#
#
EVENT hh3cPOEShutdownNotification .1.3.6.1.4.1.25506.2.14.6.18 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification indicates the whole POE power has been shutdown. $*
SDESC
This notification indicates the whole POE power has been shutdown.
EDESC
#
#
#
EVENT hh3cPsePDDisableNotification .1.3.6.1.4.1.25506.2.14.11.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The PD has been powered off. $*
SDESC
The PD has been powered off.
Variables:
  1: hh3cPsePortGroupIndex
     Syntax="INTEGER32"
     Descr="This variable uniquely identifies the group
            containing the port to which a power Ethernet PSE is
            connected."
  2: hh3cPsePortIndex
     Syntax="INTEGER32"
     Descr="This variable uniquely identifies the power Ethernet PSE
            port within group pethPsePortGroupIndex to which the
            power Ethernet PSE entry is connected."
  3: hh3cPsePortDisableInfo
     Syntax="INTEGER"
       0: unknown
       1: overInrush
       2: lessMPSCurrent
       3: peakPower
       4: overVoltage
       5: underVoltage
       6: overTemperature
       7: shortCircuit
     Descr="
              Reason that caused PSE port power failure.
              The calue of this node is one of the following values:
              unknown(0),
              overInrush(1),
              lessMPSCurrent(2),
              peakPower(3),
              overVoltage(4),
              underVoltage(5),
              overTemperature(6),
              shortCircuit(7).
              "
EDESC
#
#
#
#
MIB: HH3C-REDUNDANCY-POWER-MIB (file:./hh3c-power.mib) converted on Fri Mar 18 23:14:05 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPP-MIB (file:./hh3c-ppp.mib) converted on Fri Mar 18 23:14:05 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPPOE-SERVER-MIB (file:./hh3c-pppoe-server.mib) converted on Fri Mar 18 23:14:05 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPP-OVER-SONET-MIB (file:./hh3c-ppp-over-sonet.mib) converted on Fri Mar 18 23:14:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPosLOSAlarm .1.3.6.1.4.1.25506.2.19.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates loss of signal $*
SDESC
Alarm indicates loss of signal
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLOFAlarm .1.3.6.1.4.1.25506.2.19.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates loss of frame $*
SDESC
Alarm indicates loss of frame
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosOOFAlarm .1.3.6.1.4.1.25506.2.19.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates out of frame $*
SDESC
Alarm indicates out of frame
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLAISAlarm .1.3.6.1.4.1.25506.2.19.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when LAIS(Line  Alarm  Indication  Signal) arrives $*
SDESC
Alarm when LAIS(Line  Alarm  Indication  Signal) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLRDIAlarm .1.3.6.1.4.1.25506.2.19.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when LRDI(Line  Remote  Defect  Indication) arrives $*
SDESC
Alarm when LRDI(Line  Remote  Defect  Indication) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPRDIAlarm .1.3.6.1.4.1.25506.2.19.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when PRDI(Path  Remote  Defect  Indication) arrives $*
SDESC
Alarm when PRDI(Path  Remote  Defect  Indication) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPAISAlarm .1.3.6.1.4.1.25506.2.19.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm when PAIS(Path  Alarm  Indication  Signal) arrives $*
SDESC
Alarm when PAIS(Path  Alarm  Indication  Signal) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLOPAlarm .1.3.6.1.4.1.25506.2.19.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates loss of pointer $*
SDESC
Alarm indicates loss of pointer
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosSTIMAlarm .1.3.6.1.4.1.25506.2.19.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates inconsistency between sent and received J0 bytes. $*
SDESC
Alarm indicates inconsistency between sent and received J0 bytes.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPTIMAlarm .1.3.6.1.4.1.25506.2.19.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates inconsistency between sent and received J1 bytes. $*
SDESC
Alarm indicates inconsistency between sent and received J1 bytes.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPSLMAlarm .1.3.6.1.4.1.25506.2.19.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates a mismatched C2 byte. $*
SDESC
Alarm indicates a mismatched C2 byte.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLSDAlarm .1.3.6.1.4.1.25506.2.19.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates that the B2 bit-error rate exceeds SD threshold. $*
SDESC
Alarm indicates that the B2 bit-error rate exceeds SD threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLSFAlarm .1.3.6.1.4.1.25506.2.19.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates that the B2 bit-error rate exceeds SF threshold. $*
SDESC
Alarm indicates that the B2 bit-error rate exceeds SF threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosNormalAlarm .1.3.6.1.4.1.25506.2.19.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm indicates that the Pos interface state returns normal. $*
SDESC
Alarm indicates that the Pos interface state returns normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosB1TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Threshold crossing alarms for B1. $*
SDESC
Threshold crossing alarms for B1.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cPosB2TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Threshold crossing alarms for B2. $*
SDESC
Threshold crossing alarms for B2.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cPosB3TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA Threshold crossing alarms for B3. $*
SDESC
Threshold crossing alarms for B3.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-PRODUCT-ID-MIB (file:./hh3c-product-id.mib) converted on Fri Mar 18 23:14:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PROTOCOL-VLAN-MIB (file:./hh3c-protocol-vlan.mib) converted on Fri Mar 18 23:14:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PROT-PRIORITY-MIB (file:./hh3c-prot-priority.mib) converted on Fri Mar 18 23:14:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PU-MAN-MIB (file:./hh3c-pu-man.mib) converted on Fri Mar 18 23:14:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PVST-MIB (file:./hh3c-pvst.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QINQ-MIB (file:./hh3c-qinq.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QINQV2-MIB (file:./hh3c-qinqv2.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QOS-CAPABILITY-MIB (file:./hh3c-qos-capability.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QOS-PROFILE-MIB (file:./hh3c-qos-profile.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RADIUS-MIB (file:./hh3c-radius.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRadiusAuthServerDownTrap .1.3.6.1.4.1.25506.2.13.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the authentication RADIUS server $*
SDESC
This trap is generated when the authentication RADIUS server
does not respond to the client's requests for a period of time.
This node is replaced by hh3cRadiusAuthenticationServerDownTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccServerDownTrap .1.3.6.1.4.1.25506.2.13.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the accounting RADIUS server $*
SDESC
This trap is generated when the accounting RADIUS server
does not respond to the client's requests for a period of time.
This node is replaced by hh3cRadiusAccountingServerDownTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS authentication server changes from unreachable to reachable.
This node is replaced by hh3cRadiusAuthenticationServerUpTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS accounting server changes from unreachable to unreachable.
This node is replaced by hh3cRadiusAccountingServerUpTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthErrTrap .1.3.6.1.4.1.25506.2.13.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the percent of $*
SDESC
This trap is generated when the device finds that the percent of
unsuccessful authentication exceeds a threshold, and the threshold
is the value of node hh3cRadiusAuthErrThreshold.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
EDESC
#
#
#
EVENT hh3cRadiusAuthenticationServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS authentication server changes from unreachable to reachable.
The node replaces hh3cRadiusAuthServerUpTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccountingServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS accounting server changes from unreachable to reachable.
The node replaces hh3cRadiusAccServerUpTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthenticationServerDownTrap .1.3.6.1.4.1.25506.2.13.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the authentication RADIUS server $*
SDESC
This trap is generated when the authentication RADIUS server
does not respond to the client's requests for a period of time.
The node replaces hh3cRadiusAuthServerDownTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccountingServerDownTrap .1.3.6.1.4.1.25506.2.13.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is generated when the accounting RADIUS server $*
SDESC
This trap is generated when the accounting RADIUS server
does not respond to the client's requests for a period of time.
The node replaces hh3cRadiusAccServerDownTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
#
MIB: HH3C-RAID-MIB (file:./hh3c-raid.mib) converted on Fri Mar 18 23:14:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RBAC-MIB (file:./hh3c-rbac.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RBM-MIB (file:./hh3c-rbm.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RCP-MIB (file:./hh3c-rcp.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RCR-MIB (file:./hh3c-rcr.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RDDC-MIB (file:./hh3c-rddc.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRddcSwitchoverTrap .1.3.6.1.4.1.25506.2.151.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Notification to signal switchover/failover. $*
SDESC
Notification to signal switchover/failover.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: hh3cRddcNodeInfo
     Syntax="OCTETSTR"
     Descr="This object contains node identification information
        where the switchover occurred."
  4: hh3cRddcSwitchReason
     Syntax="OCTETSTR"
     Descr="This object contains the cause for switchover."
EDESC
#
#
#
EVENT hh3cRddcFailIfRecoverTrap .1.3.6.1.4.1.25506.2.151.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Notification to signal the failed interface recovered. $*
SDESC
Notification to signal the failed interface recovered.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  4: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cRddcFailIfGenerateTrap .1.3.6.1.4.1.25506.2.151.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Notification to signal the failed interface generated. $*
SDESC
Notification to signal the failed interface generated.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  4: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-RES-MON-MIB (file:./hh3c-res-mon.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RMON-EXT2-MIB (file:./hh3c-rmon-ext2.mib) converted on Fri Mar 18 23:14:08 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRmonExtRisingAlarm .1.3.6.1.4.1.25506.2.125.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cRmonExtAlarmIndex
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the
        alarm table.  Each such entry defines a
        diagnostic sample at a particular interval
        for an object on the device."
  2: hh3cRmonExtAlarmSympol
     Syntax="OCTETSTR"
     Descr="A comment describing this alarm entry.
        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  3: hh3cRmonExtAlarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
        calculating the value to be compared against the
        thresholds.  If the value of this object is
        absoluteValue, the value of the selected variable
        will be compared directly with the thresholds at the
        end of the sampling interval.  If the value of this
        object is deltaValue, the value of the selected
        variable at the last sample will be subtracted from
        the current value, and the difference compared with
        the thresholds.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  4: hh3cRmonExtAlarmValue
     Syntax="INTEGER32"
     Descr="The value of the statistic during the last sampling
        period.  For example, if the sample type is deltaValue,
        this value will be the difference between the samples
        at the beginning and end of the period.  If the sample
        type is absoluteValue, this value will be the sampled
        value at the end of the period.
        This is the value that is compared with the rising and
        falling thresholds.

        The value during the current sampling period is not
        made available until the period is completed and will
        remain available until the next period completes."
  5: hh3cRmonExtAlarmRisingThreshold
     Syntax="INTEGER32"
     Descr="A threshold for the sampled statistic.  When the current
        sampled value is greater than or equal to this threshold,
        and the value at the last sampling interval was less than
        this threshold, a single event will be generated.
        A single event will also be generated if the first
        sample after this entry becomes valid is greater than or
        equal to this threshold and the associated
        alarmStartupAlarm is equal to risingAlarm or
        risingOrFallingAlarm.

        After a rising event is generated, another such event
        will not be generated until the sampled value
        falls below this threshold and reaches the
        alarmFallingThreshold.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
EDESC
#
#
#
EVENT hh3cRmonExtFallingAlarm .1.3.6.1.4.1.25506.2.125.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cRmonExtAlarmIndex
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the
        alarm table.  Each such entry defines a
        diagnostic sample at a particular interval
        for an object on the device."
  2: hh3cRmonExtAlarmSympol
     Syntax="OCTETSTR"
     Descr="A comment describing this alarm entry.
        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  3: hh3cRmonExtAlarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
        calculating the value to be compared against the
        thresholds.  If the value of this object is
        absoluteValue, the value of the selected variable
        will be compared directly with the thresholds at the
        end of the sampling interval.  If the value of this
        object is deltaValue, the value of the selected
        variable at the last sample will be subtracted from
        the current value, and the difference compared with
        the thresholds.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  4: hh3cRmonExtAlarmValue
     Syntax="INTEGER32"
     Descr="The value of the statistic during the last sampling
        period.  For example, if the sample type is deltaValue,
        this value will be the difference between the samples
        at the beginning and end of the period.  If the sample
        type is absoluteValue, this value will be the sampled
        value at the end of the period.
        This is the value that is compared with the rising and
        falling thresholds.

        The value during the current sampling period is not
        made available until the period is completed and will
        remain available until the next period completes."
  5: hh3cRmonExtAlarmFallingThreshold
     Syntax="INTEGER32"
     Descr="A threshold for the sampled statistic.  When the current
        sampled value is less than or equal to this threshold,
        and the value at the last sampling interval was greater than
        this threshold, a single event will be generated.
        A single event will also be generated if the first
        sample after this entry becomes valid is less than or
        equal to this threshold and the associated
        alarmStartupAlarm is equal to fallingAlarm or
        risingOrFallingAlarm.

        After a falling event is generated, another such event
        will not be generated until the sampled value
        rises above this threshold and reaches the
        alarmRisingThreshold.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
EDESC
#
#
#
#
MIB: HH3C-RMON-EXT-MIB (file:./hh3c-rmon-ext.mib) converted on Fri Mar 18 23:14:09 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpririsingAlarm .1.3.6.1.4.1.25506.8.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cprialarmIndex
     Syntax="INTEGER"
     Descr="An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
  2: hh3cprialarmSympol
     Syntax="OCTETSTR"
  3: hh3cprialarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
  4: hh3cprialarmValue
     Syntax="INTEGER"
     Descr="The value of the statistic during the last sampling
                  period.  For example, if the sample type is deltaValue,
                  this value will be the difference between the samples
                  at the beginning and end of the period.  If the sample
                  type is absoluteValue, this value will be the sampled
                  value at the end of the period.
                  This is the value that is compared with the rising and
                  falling thresholds.

                  The value during the current sampling period is not
                  made available until the period is completed and will
                  remain available until the next period completes."
  5: hh3cprialarmRisingThreshold
     Syntax="INTEGER"
     Descr="A threshold for the sampled statistic.  When the current
                  sampled value is greater than or equal to this threshold,
                  and the value at the last sampling interval was less than
                  this threshold, a single event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is greater than or
                  equal to this threshold and the associated
                  alarmStartupAlarm is equal to risingAlarm(1) or
                  risingOrFallingAlarm(3).

                  After a rising event is generated, another such event
                  will not be generated until the sampled value
                  falls below this threshold and reaches the
                  alarmFallingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
EDESC
#
#
#
EVENT hh3cprifallingAlarm .1.3.6.1.4.1.25506.8.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cprialarmIndex
     Syntax="INTEGER"
     Descr="An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
  2: hh3cprialarmSympol
     Syntax="OCTETSTR"
  3: hh3cprialarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
  4: hh3cprialarmValue
     Syntax="INTEGER"
     Descr="The value of the statistic during the last sampling
                  period.  For example, if the sample type is deltaValue,
                  this value will be the difference between the samples
                  at the beginning and end of the period.  If the sample
                  type is absoluteValue, this value will be the sampled
                  value at the end of the period.
                  This is the value that is compared with the rising and
                  falling thresholds.

                  The value during the current sampling period is not
                  made available until the period is completed and will
                  remain available until the next period completes."
  5: hh3cprialarmFallingThreshold
     Syntax="INTEGER"
     Descr="A threshold for the sampled statistic.  When the current
                  sampled value is less than or equal to this threshold,
                  and the value at the last sampling interval was greater than
                  this threshold, a single event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is less than or
                  equal to this threshold and the associated
                  alarmStartupAlarm is equal to fallingAlarm(2) or
                  risingOrFallingAlarm(3).

                  After a falling event is generated, another such event
                  will not be generated until the sampled value
                  rises above this threshold and reaches the
                  alarmRisingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
EDESC
#
#
#
#
MIB: HH3C-RPR-MIB (file:./hh3c-rpr.mib) converted on Fri Mar 18 23:14:09 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRprTopologyOpenRing .1.3.6.1.4.1.25506.2.60.1.10.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology openRing trap indicates that the RPR ring is opened. $*
SDESC
The topology openRing trap indicates that the RPR ring is opened.
REFERENCE
IEEE 802.17 Subclause 3.2.77 open ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyCloseRing .1.3.6.1.4.1.25506.2.60.1.10.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology openRing trap indicates that the RPR ring is closed. $*
SDESC
The topology openRing trap indicates that the RPR ring is closed.
REFERENCE
IEEE 802.17 Subclause 3.2.77 close ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyInconsistent .1.3.6.1.4.1.25506.2.60.1.10.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology inconsistent trap indicates that the topology of $*
SDESC
The topology inconsistent trap indicates that the topology of
RPR is inconsistent.
REFERENCE
IEEE 802.17 Subclause 11.6.6.1 topology consistency.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyInstability .1.3.6.1.4.1.25506.2.60.1.10.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The topology instability trap indicates that the topology of $*
SDESC
The topology instability trap indicates that the topology of
RPR is instability.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprDuplicateMacAddress .1.3.6.1.4.1.25506.2.60.1.10.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The duplicate MAC address trap indicates that the mac address $*
SDESC
The duplicate MAC address trap indicates that the mac address
of the station on the ring is dulplicate. That means there is the
same MAC address between two stations on the ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapTopoMacAddress
     Syntax="OCTETSTR"
     Descr="The MAC address of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprDulplicateIPAddress .1.3.6.1.4.1.25506.2.60.1.10.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The dulplicate IP address trap indicates that the IP address of $*
SDESC
The dulplicate IP address trap indicates that the IP address of
the station on the ring is dulplicate. That means there is the same
IP address between two stations on the ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapIpAddress
     Syntax="OCTETSTR"
     Descr="The IP address of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprIncompleteLRTT .1.3.6.1.4.1.25506.2.60.1.10.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The incomplete LRTT trap indicates that LRTT is not completed. $*
SDESC
The incomplete LRTT trap indicates that LRTT is not completed.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprProtecConfigInconsistent .1.3.6.1.4.1.25506.2.60.1.10.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The protection configuration inconsistent trap indicates that $*
SDESC
The protection configuration inconsistent trap indicates that
the configuration of protection mode on the ring is inconsistent.
That is one station is configured steer mode while the other is
configured wrap mode.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprJumboConfigInconsistent .1.3.6.1.4.1.25506.2.60.1.10.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The jumbo configuration inconsistent trap indicates that the $*
SDESC
The jumbo configuration inconsistent trap indicates that the
configuration of jumbo mode on the ring is inconsistent.
That is one station supports jumbo frame while the other
doesn't support jumbo frame.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprExceedMaxReservRate .1.3.6.1.4.1.25506.2.60.1.10.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The exceeded max reserved rate trap indicates that the rate $*
SDESC
The exceeded max reserved rate trap indicates that the rate
on the ringlet exceeded the max reserved rate. The operator can
configure reserved rate for every station, but the sum of all
stations' reserved rate of each RPR ringlet can't exceed maximum.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprExceedMaxStationNum .1.3.6.1.4.1.25506.2.60.1.10.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The exceeded max station number trap indicates that the number $*
SDESC
The exceeded max station number trap indicates that the number
of the stations on the ring exceeded the max station number.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprMiscabling .1.3.6.1.4.1.25506.2.60.1.10.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The miscabling trap indicates that the miscabling event occurred. $*
SDESC
The miscabling trap indicates that the miscabling event occurred.
REFERENCE
IEEE 802.17 V3.0 Subclause 11.9.2.1 miscabling defect.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprBackPressure .1.3.6.1.4.1.25506.2.60.1.10.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The back pressure trap indicates that the backpressure is generated $*
SDESC
The back pressure trap indicates that the backpressure is generated
on the ringlet. That is the data flow on the ringlet exceeded
the range of rate-limit configured.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
  3: hh3cRprPriority2ClassMap
     Syntax="INTEGER"
       1: classC
       2: classB
       3: classA1
       4: classA0
     Descr="The RPR service class."
EDESC
#
#
#
EVENT hh3cRprBackPressureOver .1.3.6.1.4.1.25506.2.60.1.10.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The back pressure over trap indicates that the backpressure is $*
SDESC
The back pressure over trap indicates that the backpressure is
disappeared on the ringlet.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
  3: hh3cRprPriority2ClassMap
     Syntax="INTEGER"
       1: classC
       2: classB
       3: classA1
       4: classA0
     Descr="The RPR service class."
EDESC
#
#
#
#
MIB: HH3C-RRPP-MIB (file:./hh3c-rrpp.mib) converted on Fri Mar 18 23:14:09 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RS485-MIB (file:./hh3c-rs485.mib) converted on Fri Mar 18 23:14:09 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RSA-MIB (file:./hh3c-rsa.mib) converted on Fri Mar 18 23:14:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SAN-AGG-MIB (file:./hh3c-san-agg.mib) converted on Fri Mar 18 23:14:10 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSanAggGroupSpeedChange .1.3.6.1.4.1.25506.2.127.2.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever a SAN $*
SDESC
This event will be triggered whenever a SAN
aggregation group changes its speed.
Variables:
  1: hh3cSanAggGroupNumber
     Syntax="INTEGER32"
     Descr="The serial number of the current SAN aggregation group."
  2: hh3cSanAggGroupPreviousSpeed
     Syntax="INTEGER32"
     Descr="The previous speed of the SAN aggregation group."
  3: hh3cSanAggGroupCurrentSpeed
     Syntax="INTEGER32"
     Descr="The current speed of the SAN aggregation group."
EDESC
#
#
#
EVENT hh3cSanAggMemberInactive .1.3.6.1.4.1.25506.2.127.2.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever any member $*
SDESC
This event will be triggered whenever any member
in a SAN aggregation group is made inactive.
Variables:
  1: hh3cSanAggGroupNumber
     Syntax="INTEGER32"
     Descr="The serial number of the current SAN aggregation group."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cSanAggMemberActive .1.3.6.1.4.1.25506.2.127.2.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered whenever any member $*
SDESC
This event will be triggered whenever any member
in a SAN aggregation group is made active.
Variables:
  1: hh3cSanAggGroupNumber
     Syntax="INTEGER32"
     Descr="The serial number of the current SAN aggregation group."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-SAVA-MIB (file:./hh3c-sava.mib) converted on Fri Mar 18 23:14:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SECHIGH-MIB (file:./hh3c-sechigh.mib) converted on Fri Mar 18 23:14:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SECP-MIB (file:./hh3c-secp.mib) converted on Fri Mar 18 23:14:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SESSION-MIB (file:./hh3c-session.mib) converted on Fri Mar 18 23:14:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SLBG-MIB (file:./hh3c-slbg.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SMLK-MIB (file:./hh3c-smlk.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSmlkGroupLinkActive .1.3.6.1.4.1.25506.2.147.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A trap message is generated when the status of a port $*
SDESC
A trap message is generated when the status of a port
in a smart link group changes to active.
Variables:
  1: hh3cSmlkGroupID
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the smart link
        group table."
  2: hh3cSmlkPortIfIndex
     Syntax="INTEGER32"
     Descr="IfIndex of a port in a smart link group."
EDESC
#
#
#
#
MIB: HH3C-SNA-DLSW-EXT-MIB (file:./hh3c-sna-dlsw-ext.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SNA-DLSW-MIB (file:./hh3c-sna-dlsw.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SNMP-EXT-MIB (file:./hh3c-snmp-ext.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SPB-MIB (file:./hh3c-spb.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSpbSPSourceConflictTrap .1.3.6.1.4.1.25506.2.128.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the SPSourceID is conflict $*
SDESC
This notification will be generated when the SPSourceID is conflict
with another bridge.
Variables:
  1: hh3cSpbConflictSysID
     Syntax="OCTETSTR"
     Descr="The bridge's SPSourceID is conflict with this bridge."
  2: hh3cSpbConflictSPSourceID
     Syntax="OCTETSTR"
     Descr="The Shortest Path Source Identifier which is conflict."
EDESC
#
#
#
EVENT hh3cSpbBMacConflictTrap .1.3.6.1.4.1.25506.2.128.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification will be generated when the BMAC is conflict $*
SDESC
This notification will be generated when the BMAC is conflict
with another bridge.
Variables:
  1: hh3cSpbConflictSysID
     Syntax="OCTETSTR"
     Descr="The bridge's SPSourceID is conflict with this bridge."
  2: hh3cSpbConflictBMac
     Syntax="OCTETSTR"
     Descr="The BMAC which is conflict."
EDESC
#
#
#
#
MIB: HH3C-LswARP-MIB (file:./hh3c-splat-arp.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswDEVM-MIB (file:./hh3c-splat-devm.mib) converted on Fri Mar 18 23:14:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswDHCP-MIB (file:./hh3c-splat-dhcp.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswIGSP-MIB (file:./hh3c-splat-igsp.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswINF-MIB (file:./hh3c-splat-inf.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswMAM-MIB (file:./hh3c-splat-mam.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswMix-MIB (file:./hh3c-splat-mix.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSlaveSwitchOver .1.3.6.1.4.1.25506.8.35.17.10.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSlaveSwitchOver trap signifies that the action of $*
SDESC
An hh3cSlaveSwitchOver trap signifies that the action of
standby mpu switching to master has completed. 
EDESC
#
#
#
#
MIB: HH3C-LswMSTP-MIB (file:./hh3c-splat-mstp.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswQos-MIB (file:./hh3c-splat-qos.mib) converted on Fri Mar 18 23:14:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswRSTP-MIB (file:./hh3c-splat-rstp.mib) converted on Fri Mar 18 23:14:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswSMON-MIB (file:./hh3c-splat-smonext.mib) converted on Fri Mar 18 23:14:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswTRAP-MIB (file:./hh3c-splat-trap.mib) converted on Fri Mar 18 23:14:14 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpowerfailure .1.3.6.1.4.1.25506.8.35.12.1.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Power supply failure $*
SDESC
Power supply failure
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
  2: hh3cDevMFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cPowerNormal .1.3.6.1.4.1.25506.8.35.12.1.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Power supply normal $*
SDESC
Power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
  2: hh3cDevMFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cMasterPowerNormal .1.3.6.1.4.1.25506.8.35.12.1.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Master power supply normal $*
SDESC
Master power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cSlavePowerNormal .1.3.6.1.4.1.25506.8.35.12.1.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Slave power supply normal $*
SDESC
Slave power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cPowerRemoved .1.3.6.1.4.1.25506.8.35.12.1.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Power removed $*
SDESC
Power removed
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cfanfailure .1.3.6.1.4.1.25506.8.35.12.1.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Fan failure $*
SDESC
Fan failure
Variables:
  1: hh3cDevMFanNum
     Syntax="INTEGER32"
     Descr=" Fan number "
EDESC
#
#
#
EVENT hh3cFanNormal .1.3.6.1.4.1.25506.8.35.12.1.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Fan normal $*
SDESC
Fan normal
Variables:
  1: hh3cDevMFanNum
     Syntax="INTEGER32"
     Descr=" Fan number "
EDESC
#
#
#
EVENT hh3cBoardRemoved .1.3.6.1.4.1.25506.8.35.12.1.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Board removed $*
SDESC
Board removed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardInserted .1.3.6.1.4.1.25506.8.35.12.1.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Board inserted $*
SDESC
Board inserted
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardFailure .1.3.6.1.4.1.25506.8.35.12.1.10 "Status Events" Normal
FORMAT ZBXTRAP $aA Board failed $*
SDESC
Board failed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardNormal .1.3.6.1.4.1.25506.8.35.12.1.11 "Status Events" Normal
FORMAT ZBXTRAP $aA Board normal $*
SDESC
Board normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cSubcardRemove .1.3.6.1.4.1.25506.8.35.12.1.12 "Status Events" Normal
FORMAT ZBXTRAP $aA Sub card removed $*
SDESC
Sub card removed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswSubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
EDESC
#
#
#
EVENT hh3cSubcardInsert .1.3.6.1.4.1.25506.8.35.12.1.13 "Status Events" Normal
FORMAT ZBXTRAP $aA Sub card inserted $*
SDESC
Sub card inserted
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswSubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
EDESC
#
#
#
EVENT hh3cBoardTemperatureLower .1.3.6.1.4.1.25506.8.35.12.1.14 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature low $*
SDESC
Board temperature low
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardTemperatureFromLowerToNormal .1.3.6.1.4.1.25506.8.35.12.1.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature form lower to normal $*
SDESC
Board temperature form lower to normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardTemperatureHigher .1.3.6.1.4.1.25506.8.35.12.1.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature high $*
SDESC
Board temperature high
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardTemperatureFormHigherToNormal .1.3.6.1.4.1.25506.8.35.12.1.17 "Status Events" Normal
FORMAT ZBXTRAP $aA Board temperature from higher to normal $*
SDESC
Board temperature from higher to normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cRequestLoading .1.3.6.1.4.1.25506.8.35.12.1.18 "Status Events" Normal
FORMAT ZBXTRAP $aA Board request load $*
SDESC
Board request load
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cLoadFailure .1.3.6.1.4.1.25506.8.35.12.1.19 "Status Events" Normal
FORMAT ZBXTRAP $aA Board load failure $*
SDESC
Board load failure
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cLoadFinished .1.3.6.1.4.1.25506.8.35.12.1.20 "Status Events" Normal
FORMAT ZBXTRAP $aA Board load finished $*
SDESC
Board load finished
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBackBoardModeSetFuilure .1.3.6.1.4.1.25506.8.35.12.1.21 "Status Events" Normal
FORMAT ZBXTRAP $aA Back board mode set failure $*
SDESC
Back board mode set failure
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
EDESC
#
#
#
EVENT hh3cBackBoardModeSetOK .1.3.6.1.4.1.25506.8.35.12.1.22 "Status Events" Normal
FORMAT ZBXTRAP $aA Back board mode set OK $*
SDESC
Back board mode set OK
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
EDESC
#
#
#
EVENT hh3cPowerInserted .1.3.6.1.4.1.25506.8.35.12.1.23 "Status Events" Normal
FORMAT ZBXTRAP $aA Power inserted $*
SDESC
Power inserted
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cBootImageUpdated .1.3.6.1.4.1.25506.8.35.12.1.24 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap node indicates that the boot image of specified board $*
SDESC
This trap node indicates that the boot image of specified board
is updated.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cCpuRemoved .1.3.6.1.4.1.25506.8.35.12.1.25 "Status Events" Normal
FORMAT ZBXTRAP $aA Node removed $*
SDESC
Node removed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
EDESC
#
#
#
EVENT hh3cCpuFailure .1.3.6.1.4.1.25506.8.35.12.1.26 "Status Events" Normal
FORMAT ZBXTRAP $aA Node failed $*
SDESC
Node failed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
EDESC
#
#
#
EVENT hh3cCpuNormal .1.3.6.1.4.1.25506.8.35.12.1.27 "Status Events" Normal
FORMAT ZBXTRAP $aA Node normal $*
SDESC
Node normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
EDESC
#
#
#
EVENT hh3cPowerIncompatible .1.3.6.1.4.1.25506.8.35.12.1.28 "Status Events" Normal
FORMAT ZBXTRAP $aA Power module is incompatible with the device $*
SDESC
Power module is incompatible with the device
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cCpuUsageSevereNotification .1.3.6.1.4.1.25506.8.35.12.1.29 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the CPU usage increased to or above $*
SDESC
The trap indicates that the CPU usage increased to or above
the hh3cLswCpuUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageSevereRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.30 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product does not support hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageSevereThreshold.
When the product supports hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageMinorThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.1.31 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the CPU usage increased to or above $*
SDESC
The trap indicates that the CPU usage increased to or above
the hh3cLswCpuUsageMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageMinorRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.32 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product dose not support hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageMinorThreshold.
When the product supports hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageRecoverThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageEarlyWarningNotification .1.3.6.1.4.1.25506.8.35.12.1.33 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageEarlyWarningThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageEarlyWarningRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.34 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageSecureThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.1.35 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cLswCpuMemoryMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageMinorRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.36 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cLswCpuMemoryNormalThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageSevereNotification .1.3.6.1.4.1.25506.8.35.12.1.37 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageSevereRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.38 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageCriticalNotification .1.3.6.1.4.1.25506.8.35.12.1.39 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageCriticalThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageCriticalRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.40 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cCoreUsageNotification .1.3.6.1.4.1.25506.8.35.12.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the amount of core usage increased to or above $*
SDESC
The trap indicates that the amount of core usage increased to or above
the hh3cLswCoreThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cBoardPowerNotEnough .1.3.6.1.4.1.25506.8.35.12.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Not enough power for the board. $*
SDESC
Not enough power for the board.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cBoardAvailablePower
     Syntax="INTEGER32"
     Descr="Available power of power supply."
  4: hh3cBoardRequiredPower
     Syntax="INTEGER32"
     Descr="Power required for a single board."
EDESC
#
#
#
EVENT hh3cAlarmInPortIn .1.3.6.1.4.1.25506.8.35.12.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm reported on the alarm-in port. $*
SDESC
Alarm reported on the alarm-in port.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswAlarmInPortInNum
     Syntax="UNSIGNED32"
     Descr="Alarm-in port-in num."
EDESC
#
#
#
EVENT hh3cAlarmInPortRecover .1.3.6.1.4.1.25506.8.35.12.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Alarm removed on the alarm-in port. $*
SDESC
Alarm removed on the alarm-in port.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswAlarmInPortInNum
     Syntax="UNSIGNED32"
     Descr="Alarm-in port-in num."
EDESC
#
#
#
EVENT hh3cCoreUsageSevereRecoveryNotification .1.3.6.1.4.1.25506.8.35.12.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product does not support hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreThreshold.
When the product supports hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreMinorThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cCoreUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the core usage increased to or above $*
SDESC
The trap indicates that the core usage increased to or above
the hh3cLswCoreMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cCoreUsageMinorRecoveryNotification .1.3.6.1.4.1.25506.8.35.12.3.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

When the product does not support hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreMinorThreshold.
When the product supports hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreRecoveryThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cDMAMemoryUsageCriticalNotification .1.3.6.1.4.1.25506.8.35.12.3.0.41 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the free DMA-memory space decreased to or below $*
SDESC
The trap indicates that the free DMA-memory space decreased to or below
the critical alarm threshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cDMAMemoryTotal
     Syntax="COUNTER64"
     Descr="The total DMA-memory space on the node."
  5: hh3cDMAMemoryUsed
     Syntax="COUNTER64"
     Descr="The used DMA-memory space on the node."
  6: hh3cDMAMemoryFree
     Syntax="COUNTER64"
     Descr="The free memory space on the node."
  7: hh3cDMAMemoryCurrentState
     Syntax="INTEGER"
       1: normal
       2: critical
     Descr="Current status of free DMA-memory.

             Normal
             Critical"
  8: hh3cDMAMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free DMA-memory space on the node."
  9: hh3cDMAMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free DMA-memory,
             MB or percentage."
EDESC
#
#
#
EVENT hh3cDMAMemoryUsageRecoverNotification .1.3.6.1.4.1.25506.8.35.12.3.0.42 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the of free DMA-memory space increased to or above $*
SDESC
The trap indicates that the of free DMA-memory space increased to or above
the normal state threshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cDMAMemoryTotal
     Syntax="COUNTER64"
     Descr="The total DMA-memory space on the node."
  5: hh3cDMAMemoryUsed
     Syntax="COUNTER64"
     Descr="The used DMA-memory space on the node."
  6: hh3cDMAMemoryFree
     Syntax="COUNTER64"
     Descr="The free memory space on the node."
  7: hh3cDMAMemoryCurrentState
     Syntax="INTEGER"
       1: normal
       2: critical
     Descr="Current status of free DMA-memory.

             Normal
             Critical"
  8: hh3cDMAMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free DMA-memory space on the node."
  9: hh3cDMAMemoryRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free DMA-memory,
             MB or percentage.

             When the free DMA-memory space exceeds this threshold, a recovery notification will be sent.
             The normal state threshold cannot be smaller than the critical alarm threshold."
EDESC
#
#
#
EVENT hh3cRemainingPowerNotEnough .1.3.6.1.4.1.25506.8.35.12.3.0.43 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap indicates that the remaining power of the chassis is not enouth. $*
SDESC
The trap indicates that the remaining power of the chassis is not enouth.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cFrameRemainingPower
     Syntax="UNSIGNED32"
     Descr="Remaining power of the frame."
EDESC
#
#
#
#
MIB: HH3C-LswVLAN-MIB (file:./hh3c-splat-vlan.mib) converted on Fri Mar 18 23:14:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SRPOLICY-MIB (file:./hh3c-srpolicy.mib) converted on Fri Mar 18 23:14:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrpolicyStatusChange .1.3.6.1.4.1.25506.2.186.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrpolicyStatusChange trap signifies that there $*
SDESC
An hh3cSrpolicyStatusChange trap signifies that there
has been a change in the state of a policy.
This trap should be generated when the policy
state regresses (e.g., goes from active to Down)
or progresses to a terminal state
(i.e., down).
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyStatus
     Syntax="OCTETSTR"
     Descr="Status of the SR-TE policy."
  4: hh3cSrpolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicyBsidConflict .1.3.6.1.4.1.25506.2.186.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts. $*
SDESC
BSID conflicts.
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyBsid
     Syntax="INTEGER32"
     Descr="Bound segment ID value of the SR policy."
  4: hh3cSrpolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrpolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrpolicyBsidConflictClear .1.3.6.1.4.1.25506.2.186.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts resolved $*
SDESC
BSID conflicts resolved
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyBsid
     Syntax="INTEGER32"
     Descr="Bound segment ID value of the SR policy."
  4: hh3cSrpolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrpolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrpolicyDown .1.3.6.1.4.1.25506.2.186.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down $*
SDESC
Policy down
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicyDownClear .1.3.6.1.4.1.25506.2.186.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down cleared $*
SDESC
Policy down cleared
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
EDESC
#
#
#
EVENT hh3cSrpolicyPathDown .1.3.6.1.4.1.25506.2.186.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrpolicyPathDown trap signifies that there $*
SDESC
An hh3cSrpolicyPathDown trap signifies that there
has been a change in the state of a policy primary
or backup path.
Variables:
  1: hh3cSrpolicyPathColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE policy with certain intent."
  2: hh3cSrpolicyPathEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpolicyPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpolicyPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrpolicyPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpolicyPathPref
     Syntax="UNSIGNED32"
     Descr="The preference of the SR-TE policy candidate path."
  8: hh3cSrpolicyPathPreviousRole
     Syntax="OCTETSTR"
     Descr="The previous role of an SR-TE policy candidate path.
         The value may be primary or backup."
  9: hh3cSrpolicyPathDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy candidate path
         is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicySeglistDown .1.3.6.1.4.1.25506.2.186.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrpSeglistDown trap signifies that there $*
SDESC
An hh3cSrpSeglistDown trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrpSeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpSeglistEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpSeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpSeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpSeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or signalled
         the candidate path on the headend."
  6: hh3cSrpSeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpSeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrpSeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
  9: hh3cSrpSeglistDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why segment list is down."
EDESC
#
#
#
EVENT hh3cSrpolicySeglistDownClear .1.3.6.1.4.1.25506.2.186.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrSeglistDownClear trap signifies that there $*
SDESC
An hh3cSrSeglistDownClear trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrpSeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpSeglistEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpSeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpSeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpSeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or signalled
         the candidate path on the headend."
  6: hh3cSrpSeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpSeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrpSeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
EDESC
#
#
#
#
MIB: HH3C-SRV6-MIB (file:./hh3c-srv6.mib) converted on Fri Mar 18 23:14:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrv6SidRouteConflict .1.3.6.1.4.1.25506.2.197.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSrv6SidRouteConflict notification signifies that an $*
SDESC
A hh3cSrv6SidRouteConflict notification signifies that an
local SRv6 SID is conflicted with routes in routing table.
Variables:
  1: hh3cSrv6NotificationSid
     Syntax="OCTETSTR"
     Descr="The local SRv6 SID."
  2: hh3cSrv6NotificationSidPrefixLen
     Syntax="UNSIGNED32"
     Descr="The prefix length of the local SRv6 SID."
EDESC
#
#
#
EVENT hh3cSrv6SidRouteConflictClear .1.3.6.1.4.1.25506.2.197.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA A hh3cSrv6SidRouteConflictClear notification signifies that $*
SDESC
A hh3cSrv6SidRouteConflictClear notification signifies that
the conflict between the local SRv6 SID and routes in routing table
has been resolved.
Variables:
  1: hh3cSrv6NotificationSid
     Syntax="OCTETSTR"
     Descr="The local SRv6 SID."
  2: hh3cSrv6NotificationSidPrefixLen
     Syntax="UNSIGNED32"
     Descr="The prefix length of the local SRv6 SID."
EDESC
#
#
#
#
MIB: HH3C-SRV6POLICY-MIB (file:./hh3c-srv6policy.mib) converted on Fri Mar 18 23:14:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrv6PolicyStatusChange .1.3.6.1.4.1.25506.2.189.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6PolicyStatusChange trap signifies that there $*
SDESC
An hh3cSrv6PolicyStatusChange trap signifies that there
has been a change in the state of a policy.
This trap should be generated when the policy
state regresses (e.g., goes from active to Down)
or progresses to a terminal state
(i.e., down).
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyStatus
     Syntax="OCTETSTR"
     Descr="Status of the SRv6-TE policy."
  4: hh3cSrv6PolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicyBsidConflict .1.3.6.1.4.1.25506.2.189.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts. $*
SDESC
BSID conflicts.
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyBsid
     Syntax="OCTETSTR"
     Descr="Binding segment ID value of the SRv6-TE policy."
  4: hh3cSrv6PolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrv6PolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrv6PolicyBsidConflictClear .1.3.6.1.4.1.25506.2.189.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA BSID conflicts resolved $*
SDESC
BSID conflicts resolved
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyBsid
     Syntax="OCTETSTR"
     Descr="Binding segment ID value of the SRv6-TE policy."
  4: hh3cSrv6PolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrv6PolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrv6PolicyDown .1.3.6.1.4.1.25506.2.189.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down $*
SDESC
Policy down
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicyDownClear .1.3.6.1.4.1.25506.2.189.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Policy down cleared $*
SDESC
Policy down cleared
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
EDESC
#
#
#
EVENT hh3cSrv6PolicyResExdUppLimit .1.3.6.1.4.1.25506.2.189.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of used SRv6-TE policy resources exceeded the upper $*
SDESC
The number of used SRv6-TE policy resources exceeded the upper
threshold.
Variables:
  1: hh3cSrv6PolicyResourceType
     Syntax="INTEGER"
       1: unknown
       2: srv6Policy
       3: srv6PolicySegmentList
       4: srv6PolicyGroup
       5: srv6PolicyFwdPath
     Descr="SRv6-TE policy resource type."
  2: hh3cSrv6PolicyResCurrentCnt
     Syntax="UNSIGNED32"
     Descr="Number of used SRv6-TE policy resources."
  3: hh3cSrv6PolicyResUpperLimit
     Syntax="UNSIGNED32"
     Descr="The upper threshold of SRv6-TE policy resources."
  4: hh3cSrv6PolicyResLowerLimit
     Syntax="UNSIGNED32"
     Descr="The lower threshold of SRv6-TE policy resources."
  5: hh3cSrv6PolicyResourceTotalCnt
     Syntax="UNSIGNED32"
     Descr="The maximum number of SRv6-TE policy resources
         that can be used."
EDESC
#
#
#
EVENT hh3cSrv6PolicyResExceedClear .1.3.6.1.4.1.25506.2.189.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The number of used SRv6-TE policy resources fell below the lower $*
SDESC
The number of used SRv6-TE policy resources fell below the lower
threshold.
Variables:
  1: hh3cSrv6PolicyResourceType
     Syntax="INTEGER"
       1: unknown
       2: srv6Policy
       3: srv6PolicySegmentList
       4: srv6PolicyGroup
       5: srv6PolicyFwdPath
     Descr="SRv6-TE policy resource type."
  2: hh3cSrv6PolicyResCurrentCnt
     Syntax="UNSIGNED32"
     Descr="Number of used SRv6-TE policy resources."
  3: hh3cSrv6PolicyResUpperLimit
     Syntax="UNSIGNED32"
     Descr="The upper threshold of SRv6-TE policy resources."
  4: hh3cSrv6PolicyResLowerLimit
     Syntax="UNSIGNED32"
     Descr="The lower threshold of SRv6-TE policy resources."
  5: hh3cSrv6PolicyResourceTotalCnt
     Syntax="UNSIGNED32"
     Descr="The maximum number of SRv6-TE policy resources
         that can be used."
EDESC
#
#
#
EVENT hh3cSrv6PathDown .1.3.6.1.4.1.25506.2.189.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6PathDown trap signifies that there $*
SDESC
An hh3cSrv6PathDown trap signifies that there
has been a change in the state of a policy primary
or backup path.
Variables:
  1: hh3cSrv6PolicyPathColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyPathEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicyPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicyPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicyPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicyPathPref
     Syntax="UNSIGNED32"
     Descr="The preference of the SRv6-TE policy candidate path."
  8: hh3cSrv6PolicyPathPreviousRole
     Syntax="OCTETSTR"
     Descr="The previous role of an SRv6-TE policy candidate path.
         The value may be primary or backup."
  9: hh3cSrv6PolicyPathDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy candidate path
         is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicySeglistDown .1.3.6.1.4.1.25506.2.189.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6PolicySeglistDown trap signifies that there $*
SDESC
An hh3cSrv6PolicySeglistDown trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrv6PolicySeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicySeglistEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicySeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicySeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a BGP instance number when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicySeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicySeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicySeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrv6PolicySeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
  9: hh3cSrv6PolicySeglistDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why segment list is down."
EDESC
#
#
#
EVENT hh3cSrv6SeglistDownClear .1.3.6.1.4.1.25506.2.189.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA An hh3cSrv6SeglistDownClear trap signifies that there $*
SDESC
An hh3cSrv6SeglistDownClear trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrv6PolicySeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicySeglistEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicySeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicySeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a BGP instance number when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicySeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicySeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicySeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrv6PolicySeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
EDESC
#
#
#
#
MIB: HH3C-SSH-MIB (file:./hh3c-ssh.mib) converted on Fri Mar 18 23:14:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSSHUserAuthFailure .1.3.6.1.4.1.25506.2.22.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user fails to authentication. $*
SDESC
The trap is generated when a user fails to authentication.
Variables:
  1: hh3cSSHAttemptUserName
     Syntax="OCTETSTR"
     Descr="The user name of the attacker who attempted to log in."
  2: hh3cSSHAttemptIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the attacker who attempted to log in."
  3: hh3cSSHAttemptIpAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the attacker who attempted to log in."
  4: hh3cSSHUserAuthFailureReason
     Syntax="INTEGER"
       1: exceedRetries
       2: authTimeout
       3: otherReason
     Descr="The reason for that a user failed to log in."
EDESC
#
#
#
EVENT hh3cSSHVersionNegotiationFailure .1.3.6.1.4.1.25506.2.22.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user fails to negotiate SSH $*
SDESC
The trap is generated when a user fails to negotiate SSH
protocol version.
Variables:
  1: hh3cSSHAttemptIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the attacker who attempted to log in."
  2: hh3cSSHAttemptIpAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the attacker who attempted to log in."
EDESC
#
#
#
EVENT hh3cSSHUserLogin .1.3.6.1.4.1.25506.2.22.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user logs in successfully. user $1 userIP $3 userIpType $2
SDESC
The trap is generated when a user logs in successfully.
Variables:
  1: hh3cSSHSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of SSH session."
  2: hh3cSSHSessionUserIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The user IP address type of SSH session."
  3: hh3cSSHSessionUserIpAddr
     Syntax="OCTETSTR"
     Descr="The user IP address of SSH session."
EDESC
#
#
#
EVENT hh3cSSHUserLogoff .1.3.6.1.4.1.25506.2.22.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The trap is generated when a user logs off. $*
SDESC
The trap is generated when a user logs off.
Variables:
  1: hh3cSSHSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of SSH session."
  2: hh3cSSHSessionUserIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The user IP address type of SSH session."
  3: hh3cSSHSessionUserIpAddr
     Syntax="OCTETSTR"
     Descr="The user IP address of SSH session."
EDESC
#
#
#
#
MIB: HH3C-SSLVPN-MIB (file:./hh3c-sslvpn.mib) converted on Fri Mar 18 23:14:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STACK-MIB (file:./hh3c-stack.mib) converted on Fri Mar 18 23:14:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStackPortLinkStatusChange .1.3.6.1.4.1.25506.2.91.6.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPortLinkStatusChange trap indicates that the link status $*
SDESC
The hh3cStackPortLinkStatusChange trap indicates that the link status
of the stack port has changed.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPortStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: silent
       4: disabled
     Descr="The link status of a stack port on the device.

        up: A physical link is present on the stack port.
        down: No physical link is present on the stack port.
        silent: The link state of the stack port is up,
                but the port can't transmit or receive traffic.
        disabled: The stack port doesn't contain physical links."
EDESC
#
#
#
EVENT hh3cStackTopologyChange .1.3.6.1.4.1.25506.2.91.6.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackTopologyChange trap indicates that the topology type of $*
SDESC
The hh3cStackTopologyChange trap indicates that the topology type of
the IRF stack has changed.
Variables:
  1: hh3cStackTopology
     Syntax="INTEGER"
       1: chainConn
       2: ringConn
     Descr="Stack topology.

        chainConn: daisy-chain connection
        ringConn: ring connection"
EDESC
#
#
#
EVENT hh3cStackMadBfdChangeNormal .1.3.6.1.4.1.25506.2.91.6.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadBfdChangeNormal trap indicates that the BFD MAD function $*
SDESC
The hh3cStackMadBfdChangeNormal trap indicates that the BFD MAD function
changed to the normal state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadBfdChangeFailure .1.3.6.1.4.1.25506.2.91.6.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadBfdChangeFailure trap indicates that the BFD MAD function $*
SDESC
The hh3cStackMadBfdChangeFailure trap indicates that the BFD MAD function
changed to the failure state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadLacpChangeNormal .1.3.6.1.4.1.25506.2.91.6.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadLacpChangeNormal trap indicates that the LACP MAD function $*
SDESC
The hh3cStackMadLacpChangeNormal trap indicates that the LACP MAD function
changed to the normal state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadLacpChangeFailure .1.3.6.1.4.1.25506.2.91.6.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackMadLacpChangeFailure trap indicates that the LACP MAD function $*
SDESC
The hh3cStackMadLacpChangeFailure trap indicates that the LACP MAD function
changed to the failure state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfLinkUp .1.3.6.1.4.1.25506.2.91.6.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPhysicalIntfLinkUp trap indicates that the status $*
SDESC
The hh3cStackPhysicalIntfLinkUp trap indicates that the status
of the stack physical interface has changed to the up state.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfLinkDown .1.3.6.1.4.1.25506.2.91.6.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPhysicalIntfLinkDown trap indicates that the status $*
SDESC
The hh3cStackPhysicalIntfLinkDown trap indicates that the status
of the stack physical interface has changed to the down state.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfRxTimeout .1.3.6.1.4.1.25506.2.91.6.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStackPhysicalIntfRxTimeout trap indicates that the timer for the stack $*
SDESC
The hh3cStackPhysicalIntfRxTimeout trap indicates that the timer for the stack
physical interface to receive packets has timed out.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
#
MIB: HH3C-STORAGE-MIB (file:./hh3c-storage.mib) converted on Fri Mar 18 23:14:17 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStorCriticalLowerTemperatureThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStorCriticalLowerTemperatureThresholdNotification indicates $*
SDESC
The hh3cStorCriticalLowerTemperatureThresholdNotification indicates
the temperature is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtCriticalLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the critical Temperature.  When temperature
            exceeds the critical lower temperature, a notification will be sent."
EDESC
#
#
#
EVENT hh3cStorTemperatureTooLow .1.3.6.1.4.1.25506.10.1.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStorTemperatureTooLow indicates the temperature is $*
SDESC
The hh3cStorTemperatureTooLow indicates the temperature is
lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity halts now.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature.  When temperature
            exceeds the lower threshold, a notification will be sent and the entity
            will be shutdown."
EDESC
#
#
#
EVENT hh3cExtVoltageLowThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtVoltageLowThresholdNotification indicates $*
SDESC
The hh3cExtVoltageLowThresholdNotification indicates
the Voltage is lower than the low-threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
EDESC
#
#
#
EVENT hh3cExtVoltageHighThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtVoltageHighThresholdNotification indicates $*
SDESC
The hh3cExtVoltageHighThresholdNotification indicates
the Voltage is lower than the high-threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage is higher than high-threshold, a notification will be
            sent."
EDESC
#
#
#
EVENT hh3cExtCriticalVoltageLowThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtCriticalVoltageLowThresholdNotification indicates $*
SDESC
The hh3cExtCriticalVoltageLowThresholdNotification indicates
the Voltage is lower than the critical low threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtCriticalVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The critical low threshold for voltage.
            If the voltage is lower too much than the entity needs,
            the entity will halt."
EDESC
#
#
#
EVENT hh3cExtCriticalVoltageHighThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtCriticalVoltageHighThresholdNotification indicates $*
SDESC
The hh3cExtCriticalVoltageHighThresholdNotification indicates
the Voltage is higher than the critical high threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtCriticalVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The critical high threshold for voltage.
            If the voltage is higher too much than the entity needs,
            the entity will halt."
EDESC
#
#
#
EVENT hh3cExtVoltageTooLow .1.3.6.1.4.1.25506.10.1.1.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtVoltageTooLowNotification indicates $*
SDESC
The hh3cExtVoltageTooLowNotification indicates
the Voltage is lower than the critical low threshold,
and the entity halt now!
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtShutdownVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The voltage is lower than the critical low threshold.
            If the voltage is lower too much than the entity needs,
            the entity halts now."
EDESC
#
#
#
EVENT hh3cExtVoltageTooHigh .1.3.6.1.4.1.25506.10.1.1.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtVoltageTooHighNotification indicates $*
SDESC
The hh3cExtVoltageTooHighNotification indicates
the Voltage is higher than the critical high threshold,
and the entity halt now!
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtShutdownVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The voltage is higher than the critical high threshold.
            If the voltage is higher too much than the entity needs,
            the entity halts now."
EDESC
#
#
#
EVENT hh3cExtBatteryStateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cExtBatteryStateNotification indicates $*
SDESC
The hh3cExtBatteryStateNotification indicates
the raid battery entity's state changes.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cDiskIOErrorNotification .1.3.6.1.4.1.25506.10.1.1.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cDiskIOErrorNotification indicates that a disk occurred I/O error. $*
SDESC
The hh3cDiskIOErrorNotification indicates that a disk occurred I/O error.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
EVENT hh3cRaidCreateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidCreateNotification indicates that a array is created. $*
SDESC
The hh3cRaidCreateNotification indicates that a array is created.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidDeleteNotification .1.3.6.1.4.1.25506.10.1.1.3.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidDeleteStateNotification indicates that a array is deleted. $*
SDESC
The hh3cRaidDeleteStateNotification indicates that a array is deleted.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidHideStateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidFailedNotification indicates that a array hide or unhide. $*
SDESC
The hh3cRaidFailedNotification indicates that a array hide or unhide.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
  3: hh3cRaidHideState
     Syntax="INTEGER"
       1: enable
       2: disable
     Descr="This object identifies if the array is hided. When the value of
        this object is equal to 'enable', the array will be hided and the
        files on it can not be accessed by any user."
EDESC
#
#
#
EVENT hh3cRaidRunStateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidDegradeNotification indicates that a array state change. $*
SDESC
The hh3cRaidDegradeNotification indicates that a array state change.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
  3: hh3cRaidRunState
     Syntax="INTEGER"
       1: normal
       2: degraded
       3: failed
     Descr="This object identifies the state of the array.
        The value 'normal' means array works well.
        The value 'degraded' means array has degraded.
        The value 'failed' means some disks met failure and array has failed."
EDESC
#
#
#
EVENT hh3cRaidImportNotification .1.3.6.1.4.1.25506.10.1.1.3.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidFailedNotification indicates that a thrid array is imported. $*
SDESC
The hh3cRaidFailedNotification indicates that a thrid array is imported.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildStartNotification .1.3.6.1.4.1.25506.10.1.1.3.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidRebuildStartNotification indicates that $*
SDESC
The hh3cRaidRebuildStartNotification indicates that
a array start to rebuild.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildFinishNotification .1.3.6.1.4.1.25506.10.1.1.3.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidRebuildStartNotification indicates that $*
SDESC
The hh3cRaidRebuildStartNotification indicates that
a array fininsh rebuild.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildPauseNotification .1.3.6.1.4.1.25506.10.1.1.3.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidRebuildPauseNotification indicates that $*
SDESC
The hh3cRaidRebuildPauseNotification indicates that
pause a array rebuilding.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildInterruptNotification .1.3.6.1.4.1.25506.10.1.1.3.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidRebuildInterruptNotification indicates that $*
SDESC
The hh3cRaidRebuildInterruptNotification indicates that
interrupt a array rebuilding.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cSoftwareModuleFailNotification .1.3.6.1.4.1.25506.10.1.1.3.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cSoftwareModuleFailNotification indicates that software module(s) fail. $*
SDESC
The hh3cSoftwareModuleFailNotification indicates that software module(s) fail.
Variables:
  1: hh3cSoftwareInfoString
     Syntax="OCTETSTR"
     Descr="This object identifies if the software's information."
EDESC
#
#
#
EVENT hh3cRaidBatteryExpiredNotification .1.3.6.1.4.1.25506.10.1.1.3.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidBatteryExpiredNotification indicates $*
SDESC
The hh3cRaidBatteryExpiredNotification indicates
RAID Battery lifetime had expired.
EDESC
#
#
#
EVENT hh3cRaidBatteryWillExpireNotification .1.3.6.1.4.1.25506.10.1.1.3.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidBatteryWillExpireNotification indicates $*
SDESC
The hh3cRaidBatteryWillExpireNotification indicates
RAID Battery lifetime will expire.
EDESC
#
#
#
EVENT hh3cLvOnlineFailNotification .1.3.6.1.4.1.25506.10.1.1.3.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cLvOnlineFailNotification indicates lv(s) on vd fail to online. $*
SDESC
The hh3cLvOnlineFailNotification indicates lv(s) on vd fail to online.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cLvOfflineFailNotification .1.3.6.1.4.1.25506.10.1.1.3.0.24 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cLvOfflineFailNotification indicates lv(s) on vd fail to offline. $*
SDESC
The hh3cLvOfflineFailNotification indicates lv(s) on vd fail to offline.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRunNotification .1.3.6.1.4.1.25506.10.1.1.3.0.25 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cRaidRunNotification indicates that a array is running. $*
SDESC
The hh3cRaidRunNotification indicates that a array is running.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cExtVoltageNormal .1.3.6.1.4.1.25506.10.1.1.3.0.26 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cStorVoltageRecoveryNotification indicates $*
SDESC
The hh3cStorVoltageRecoveryNotification indicates
the Voltage has recovered in reference.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
  5: hh3cExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage is higher than high-threshold, a notification will be
            sent."
EDESC
#
#
#
EVENT hh3cDiskPowerOnNotification .1.3.6.1.4.1.25506.10.1.1.3.0.27 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cDiskPowerOnNotification indicates that $*
SDESC
The hh3cDiskPowerOnNotification indicates that
a disk is power on.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
EVENT hh3cDiskPowerOffNotification .1.3.6.1.4.1.25506.10.1.1.3.0.28 "Status Events" Normal
FORMAT ZBXTRAP $aA The hh3cDiskPowerOffNotification indicates that $*
SDESC
The hh3cDiskPowerOffNotification indicates that
a disk is power off.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
  2: hh3cDiskPowerOffReason
     Syntax="INTEGER"
       1: environmentUnstable
       2: mediumError
       3: smartCheckError
       4: generalError
     Descr="This object describes the reason of disk poweroff.
        The value 'environmentUnstable' means disk poweroff and may poweron again.
        The value 'mediumError' means disk poweroff and never poweron.
        The value 'smartCheckError' means disk's SMART check failed and poweroff.
        The value 'generalError' means disk poweroff because of general error."
EDESC
#
#
#
#
MIB: HH3C-STORAGE-REF-MIB (file:./hh3c-storage-ref.mib) converted on Fri Mar 18 23:14:17 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORAGE-SNAP-MIB (file:./hh3c-storage-snap.mib) converted on Fri Mar 18 23:14:17 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORM-CONSTRAIN-MIB (file:./hh3c-storm-constrain.mib) converted on Fri Mar 18 23:14:17 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStormRising .1.3.6.1.4.1.25506.2.66.3.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap message is generated when any type of the $*
SDESC
This trap message is generated when any type of the
flux exceeds its upper limit on a port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cStormTrapType
     Syntax="INTEGER"
       1: broadcast
       2: multicast
       3: unicast
       4: knownUnicast
     Descr="This value is used to identify the type of trap.
         broadcast: Trap message generated when broadcast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         multicast: Trap message generated when multicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         unicast  : Trap message generated when unknown unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         knownUnicast: Trap message generated when known unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port."
  3: hh3cStormTrapThreshold
     Syntax="INTEGER32"
     Descr="This value is used to figure the threshold of flux in
         trap message.
         For example, when the trap is generated for broadcast
         flux exceeds upper limit on a port, this value is
         equal to upper limit value configured.  And when the
         trap is generated for broadcast flux fell under lower
         limit, this value is equal to lower limit value configured."
  4: hh3cStormCtrlPortStatus
     Syntax="INTEGER"
       1: controlled
       2: normal
     Descr="Status of the port:
         controlled: indicate that the port is in controlled status.
                     Port which is in this status will not forward some type
                     of packet.
         normal    : indicate that the port is in normal status."
EDESC
#
#
#
EVENT hh3cStormFalling .1.3.6.1.4.1.25506.2.66.3.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap message is generated when a flux which used $*
SDESC
This trap message is generated when a flux which used
to overflow its upper limit, falls below its lower
limit on a port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cStormTrapType
     Syntax="INTEGER"
       1: broadcast
       2: multicast
       3: unicast
       4: knownUnicast
     Descr="This value is used to identify the type of trap.
         broadcast: Trap message generated when broadcast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         multicast: Trap message generated when multicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         unicast  : Trap message generated when unknown unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         knownUnicast: Trap message generated when known unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port."
  3: hh3cStormTrapThreshold
     Syntax="INTEGER32"
     Descr="This value is used to figure the threshold of flux in
         trap message.
         For example, when the trap is generated for broadcast
         flux exceeds upper limit on a port, this value is
         equal to upper limit value configured.  And when the
         trap is generated for broadcast flux fell under lower
         limit, this value is equal to lower limit value configured."
  4: hh3cStormCtrlPortStatus
     Syntax="INTEGER"
       1: controlled
       2: normal
     Descr="Status of the port:
         controlled: indicate that the port is in controlled status.
                     Port which is in this status will not forward some type
                     of packet.
         normal    : indicate that the port is in normal status."
EDESC
#
#
#
#
MIB: HH3C-STRUNK-MIB (file:./hh3c-strunk.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SUBNET-VLAN-MIB (file:./hh3c-subnet-vlan.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SYSLOG-MIB (file:./hh3c-syslog.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SYS-MAN-MIB (file:./hh3c-sys-man.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSysClockChangedNotification .1.3.6.1.4.1.25506.2.3.2.1 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A clock changed notification is generated when the current
local date and time for the system has been manually changed.
The value of hh3cSysLocalClock reflects new date and time.

Variables:
  1: hh3cSysLocalClock
     Syntax="OCTETSTR"
     Descr="
        This node gives the current local time of the system.
        The unit of it is DateAndTime.
        "
EDESC
#
#
#
EVENT hh3cSysReloadNotification .1.3.6.1.4.1.25506.2.3.2.2 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

A hh3cSysReloadNotification will be sent before the corresponding entity is
rebooted. It will also be sent if the entity fails to reboot because the clock
has changed.

Variables:
  1: hh3cSysReloadImage
     Syntax="INTEGER32"
     Descr="
        The value indicates an entry in hh3cSysImageTable.
        It defines an image file for reload action.
        It is the value of corresponding hh3cSysImageIndex in hh3cSysImageTable.

        If dual image is supported, the main image attribute can be
        set through this object or by hh3cSysImageType of hh3cSysImageTable
        of the entity. It is strongly suggested to set this attribute by
        the latter.

        If main image attribute is set here, the hh3cSysImageType in hh3cSysImageTable
        of the corresponding entity will be updated, and vice versa.

        Before reboot, the device will check the validation of the entry. If the file does
        not exist, the device will not reboot and a trap will be send to NMS.
        "
  2: hh3cSysReloadCfgFile
     Syntax="INTEGER32"
     Descr="
        The value indicates an entry in hh3cSysCFGFileTable.
        It defines a configuration file for reload action.
        It is the value of corresponding hh3cSysCFGFileIndex in hh3cSysCFGFileTable.
        The zero value means no configuration file has been set for this entry, and
        no configuration file is used during system reloading.
        "
  3: hh3cSysReloadReason
     Syntax="OCTETSTR"
     Descr="
        The reason of system's reloading.
        It is a zero length octet string when not set.
        "
  4: hh3cSysReloadScheduleTime
     Syntax="OCTETSTR"
     Descr="
        Specify the local time at which the reload action will
        occur. we will only take octet strings
        with length 8 for this object which indicates the
        local time of the switch. The maximum scheduled
        interval between the specified time and the current
        system clock time is 24 days .

            field  octets  contents                  range
            -----  ------  --------                  -----
              1      1-2   year                      0..65536
              2       3    month                     1..12
              3       4    day                       1..31
              4       5    hour                      0..23
              5       6    minutes                   0..59
              6       7    seconds                   0..60

         For example, Tuesday May 26, 1992 at 1:30:15 PM would be
         displayed as:

                    1992-5-26,13:30:15

        If the set value is less than the value of hh3cSysLocalClock
        or beyond the maximum scheduled time limit, a bad value error
        occurred.
        The value of all-zero octet strings indicates system reload
        at once if the reload action is reloadOnSchedule(2).
        "
  5: hh3cSysReloadAction
     Syntax="INTEGER"
       1: reloadUnavailable
       2: reloadOnSchedule
       3: reloadAtOnce
       4: reloadCancel
     Descr="
        Writing reloadOnSchedule(2) to this object performs the reload operation on schedule.
        If hh3cSysReloadScheduleTime is not set, the value of hh3cSysReloadAction can't be set to
        'reloadOnSchedule(2)'.

        Writing reloadAtOnce(3)to this object performs the reload operation at once,
        regardless of the hh3cSysReloadScheduleTime.

        When reloadCancel(4)is set, the scheduled reload action will be cancelled and the value of
        hh3cSysReloadAction will be 'reloadUnavailable(1)',the value of hh3cSysReloadSchedule will be
        0, hh3cSysReloadTag will be given a value of zero length, but the content of
        hh3cSysReloadScheduleTable will remain.


        The hh3cSysReloadSchedule and hh3cSysReloadTag  determine the reload entity(ies) in mutually
        exclusive way. And the hh3cSysReloadSchedule will be handled at first. If the value of
        hh3cSysReloadSchedule is invalid, then the hh3cSysReloadTag will be handled.

        If the value of hh3cSysReloadSchedule is valid, the value of hh3cSysReloadTag is ignored and a
        reload action will be implemented to the entity specified by hh3cSysReloadEntity in the entry
        pointed by hh3cSysReloadSchedule.

        If hh3cSysReloadSchedule is valid, but the entry hh3cSysReloadSchedule pointing to is not active,
        the reload action will be ignored , and an inconsistent value will be returned.


        If multiple entities are required to be reloaded at the same time, the value of hh3cSysReloadTag
        must be specified to select the reload parameters in the hh3cSysReloadSceduelTable, and
        hh3cSysReloadSchedule must have the value of '0'.

        If the whole fabric is to be reloaded in an XRN device, all the units in the fabric must
        have at least one entry in the hh3cSysReloadSceduelTable with the same tag in hh3cSysReloadSceduelTagList.

        When a reload action is done, or there is no reload action, the value
        should be reloadUnavailable(1).
        "
EDESC
#
#
#
EVENT hh3cSysStartUpNotification .1.3.6.1.4.1.25506.2.3.2.3 "Status Events" Normal
FORMAT ZBXTRAP $aA $*
SDESC

a hh3cSysStartUpNotification trap will be sent when the system starts up with 'main' image file failed,
a trap will be sent to indicate which type the current image file (I.e backup or secure)is.

Variables:
  1: hh3cSysImageType
     Syntax="INTEGER"
       1: main
       2: backup
       3: none
       4: secure
       5: main-backup
       6: main-secure
       7: backup-secure
       8: main-backup-secure
     Descr="
        It indicates the reloading sequence attribute of the image.

        For devices which support dual image:

        If the value is 'main(1)',the image will be the first image
        in the next reloading procedure. If the value is 'backup(2)',
        the image will be used if the main image fails. If the value
        is 'secure(4)', the image will be used if the main image and
        backup image both fail. If the value is 'none(3)',the image will
        not be used in the next reloading procedure.

        At the same time,you also can specify the main image by
        hh3cSysReloadImage in hh3cSysReloadScheduleTable. If the
        image is different from previous main image, the previous main image
        will not be main image again. And the image table will update with
        this variation. Vice versa, if you have defined the reload schedule,
        and then you define a new main image through hh3cSysImageType when you
        are waiting the reload schedule to be executed, the real main image
        will be the latest one.


        It is strongly suggested to define the main image here, not by hh3cSysReloadImage
        in hh3cSysReloadScheduleTable.

        There are some rules for setting the value of hh3cSysImageType:

        a)When a new image file is defined as 'main' or 'backup' file,the hh3cSysImageType
          of old 'main' or 'backup' file will automatically be 'none'.
        b)It is forbidden to set 'none' attribute manually.
        c)It is forbidden to set 'secure' attribute manually.
        d)If 'main' image is set to 'backup', the file keeps 'main'. And vice versa.
          At this time, the file has 'main-backup' property.
        e)If the secure image is set to 'main' or 'backup', the file has 'main-secure' or 'backup-secure'property.
        f)If the secure image is set to 'main' and 'backup', the file has the 'main-backup-secure' property.
        g)If the none image is set to 'main' or 'backup', the file has the 'main' or 'backup' property.

        The following table describes whether it is ok to set to another state
        directly from original state.

                        +--------------+-----------+-------------+-------------+
                        |   set to     | set to    |  set to     |   set to    |
                        |              |           |             |             |
             original   |    'main'    | 'backup'  |  'none'     |  'secure'   |
             state      |              |           |             |             |
          --------------+--------------+-----------+-------------+-------------+
                        |              |           |             |             |
             main       |     ---      |   yes     |   no        |   no        |
                        |              |           |             |             |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------|-------------+
                        |              |           |             |             |
             backup     |     yes      |   ---     |   no        |   no        |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------|-------------+
                        |              |           |             |             |
                        |              |           |             |             |
              none      |     yes      |   yes     |   ---       |   no        |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------+-------------+
                        |              |           |             |             |
              secure    |     yes      |   yes     |   no        |   ---       |
                        |              |           |             |             |
                        |              |           |             |             |
    "
EDESC
#
#
#
#
MIB: HH3C-T1-MIB (file:./hh3c-t1.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TE-TUNNEL-MIB (file:./hh3c-te-tunnel.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cTeTunnelPsSwitchWtoP .1.3.6.1.4.1.25506.2.115.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when protect workgroup switch from $*
SDESC
This notification is generated when protect workgroup switch from
work tunnel to protect tunnel.
Variables:
  1: hh3cTeTunnelPsWorkPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates work path status.  none, noDefect, inDefect
        will be used."
  2: hh3cTeTunnelPsProtectPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates protect path status.  none, noDefect,
        inDefect(3) will be used."
EDESC
#
#
#
EVENT hh3cTeTunnelPsSwitchPtoW .1.3.6.1.4.1.25506.2.115.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This notification is generated when protect workgroup switch from $*
SDESC
This notification is generated when protect workgroup switch from
protect tunnel to work tunnel.
Variables:
  1: hh3cTeTunnelPsWorkPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates work path status.  none, noDefect, inDefect
        will be used."
  2: hh3cTeTunnelPsProtectPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates protect path status.  none, noDefect,
        inDefect(3) will be used."
EDESC
#
#
#
#
MIB: HH3C-TRANSCEIVER-INFO-MIB (file:./hh3c-transceiver-info.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TRAP-MIB (file:./hh3c-trap.mib) converted on Fri Mar 18 23:14:18 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMacTabFullTrap .1.3.6.1.4.1.25506.2.38.1.1.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MAC table is filled.  The $*
SDESC
Send this trap when the MAC table is filled.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval.
Variables:
  1: hh3cMacTabLen
     Syntax="INTEGER32"
     Descr="The length of the MAC table."
EDESC
#
#
#
EVENT hh3cMacTabAlmostFullTrap .1.3.6.1.4.1.25506.2.38.1.1.4.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the MAC table is almost full.  The $*
SDESC
Send this trap when the MAC table is almost full.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval.
EDESC
#
#
#
EVENT hh3cArpTabFullTrap .1.3.6.1.4.1.25506.2.38.1.2.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the ARP table is filled.  The $*
SDESC
Send this trap when the ARP table is filled.  The
interval between two traps generated should be longer
than hh3cArpTabTrapInterval.
Variables:
  1: hh3cArpTabLen
     Syntax="INTEGER32"
     Descr="The length of the ARP table."
EDESC
#
#
#
EVENT hh3cArpPortDynamicEntryFullTrap .1.3.6.1.4.1.25506.2.38.1.2.4.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the dynamic ARP number of the $*
SDESC
Send this trap when the dynamic ARP number of the
port exceeds the limitation. The object hh3cArpTabLen
describes the limitation of the max dynamic ARP number
of this port. The interval between two traps should be
longer than hh3cArpTabTrapInterval.
Variables:
  1: hh3cArpTabLen
     Syntax="INTEGER32"
     Descr="The length of the ARP table."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cRtTabFullTrap .1.3.6.1.4.1.25506.2.38.1.3.5.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the routing table is filled.  The $*
SDESC
Send this trap when the routing table is filled.  The
interval between two traps generated should be longer
than hh3cRtTabTrapInterval.
Variables:
  1: hh3cRtTabLen
     Syntax="INTEGER32"
     Descr="The length of the routing table.  The detail
            routing tables also use the same object."
EDESC
#
#
#
EVENT hh3cDetailRtTabFullTrap .1.3.6.1.4.1.25506.2.38.1.3.5.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the detail routing table is filled.  The $*
SDESC
Send this trap when the detail routing table is filled.  The
interval between two traps generated should be longer than
hh3cRtTabTrapInterval.
Variables:
  1: hh3cDetailRtProType
     Syntax="INTEGER"
       1: other
       2: local
       3: rip
       4: isis
       5: ospf
       6: bgp
     Descr="The index value which uniquely identifies an entry
            in the hh3cDetailRtTrapTable."
  2: hh3cRtTabLen
     Syntax="INTEGER32"
     Descr="The length of the routing table.  The detail
            routing tables also use the same object."
EDESC
#
#
#
EVENT hh3cDefaultRtDelTrap .1.3.6.1.4.1.25506.2.38.1.3.5.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the default route is deleted. $*
SDESC
Send this trap when the default route is deleted.
Variables:
  1: hh3cDetailRtProType
     Syntax="INTEGER"
       1: other
       2: local
       3: rip
       4: isis
       5: ospf
       6: bgp
     Descr="The index value which uniquely identifies an entry
            in the hh3cDetailRtTrapTable."
  2: hh3cDefaultRtNextHopType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the next hop of the default route.
            The value must be ipv4 or ipv6"
  3: hh3cDefaultRtNextHop
     Syntax="OCTETSTR"
     Descr="The IP address of the next hop of the default route."
  4: hh3cDefaultRtOutIf
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the
             local interface through which the next hop of this
             route should be reached.  The interface identified
             by a particular value of this index is the same
             interface as identified by the same value of
             ifIndex."
EDESC
#
#
#
EVENT hh3cMulticastTabFullTrap .1.3.6.1.4.1.25506.2.38.1.4.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the multicast table is filled.  The $*
SDESC
Send this trap when the multicast table is filled.  The
interval between two traps generated should be longer
than hh3cMulticastTabTrapInterval.
Variables:
  1: hh3cMulticastTabType
     Syntax="INTEGER"
       1: lay2
       2: lay3
     Descr="Defining the type of the multicast table, layer2 or layer3."
  2: hh3cMulticastTabLen
     Syntax="INTEGER32"
     Descr="The length of the multicast table."
EDESC
#
#
#
EVENT hh3cNdTabFullTrap .1.3.6.1.4.1.25506.2.38.1.5.4.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send this trap when the ND table is filled.  The $*
SDESC
Send this trap when the ND table is filled.  The
interval between two traps generated should be longer
than hh3cNdTabTrapInterval.
Variables:
  1: hh3cNdTabLen
     Syntax="INTEGER32"
     Descr="The length of the ND table."
EDESC
#
#
#
EVENT hh3cPeriodicalTrap .1.3.6.1.4.1.25506.2.38.1.6.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA If no trap occurs during the interval spicified by $*
SDESC
If no trap occurs during the interval spicified by
hh3cPeriodicalTrapInterval, an hh3cPeriodicalTrap
will be generated. If the interval is set to 0, no
hh3cPeriodicalTrap will be generated.
EDESC
#
#
#
#
MIB: HH3C-TRNG2-MIB (file:./hh3c-trng2.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TRNG-MIB (file:./hh3c-trng.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TUNNEL-MIB (file:./hh3c-tunnel.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TWAMP-MIB (file:./hh3c-twamp.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UI-MAN-MIB (file:./hh3c-ui-man.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UNICAST-MIB (file:./hh3c-unicast.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UPS-MIB (file:./hh3c-ups.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-USERLOG-MIB (file:./hh3c-userlog.mib) converted on Fri Mar 18 23:14:19 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-USER-MIB (file:./hh3c-user.mib) converted on Fri Mar 18 23:14:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VBR-MIB (file:./hh3c-vbr.mib) converted on Fri Mar 18 23:14:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VLANGROUP-MIB (file:./hh3c-vlangroup.mib) converted on Fri Mar 18 23:14:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VLANTERM-MIB (file:./hh3c-vlanterm.mib) converted on Fri Mar 18 23:14:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VMAP-MIB (file:./hh3c-vmap.mib) converted on Fri Mar 18 23:14:20 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VM-MAN-MIB (file:./hh3c-vm-man.mib) converted on Fri Mar 18 23:14:20 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVMManDeviceOnlineTrap .1.3.6.1.4.1.25506.9.1.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the device having been registered to VM. $*
SDESC
Send a trap about the device having been registered to VM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
EDESC
#
#
#
EVENT hh3cVMManDeviceOfflineTrap .1.3.6.1.4.1.25506.9.1.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the device having been unregistered to VM. $*
SDESC
Send a trap about the device having been unregistered to VM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceExternalSemaphoreTrap .1.3.6.1.4.1.25506.9.1.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about external semaphore alarm, which is created $*
SDESC
Forward a trap about external semaphore alarm, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUExternalInputAlarmChannelID
     Syntax="UNSIGNED32"
     Descr="The ID of the external input alarm channel."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceVideoLossTrap .1.3.6.1.4.1.25506.9.1.2.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about video loss, which is created by the third $*
SDESC
Forward a trap about video loss, which is created by the third
party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceVideoRecoverTrap .1.3.6.1.4.1.25506.9.1.2.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about video recovery after loss, which is created $*
SDESC
Forward a trap about video recovery after loss, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceMotionDetectTrap .1.3.6.1.4.1.25506.9.1.2.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about motion detection, which is created by the $*
SDESC
Forward a trap about motion detection, which is created by the
third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  5: hh3cVMManRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion detection region."
  6: hh3cVMManRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion detection region."
  7: hh3cVMManRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
  8: hh3cVMManRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceCoverTrap .1.3.6.1.4.1.25506.9.1.2.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about video cover, which is created by the third $*
SDESC
Forward a trap about video cover, which is created by the third
party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  5: hh3cVMManRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion detection region."
  6: hh3cVMManRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion detection region."
  7: hh3cVMManRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
  8: hh3cVMManRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceCpuUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about cpu usage exceeding its threshold, which is $*
SDESC
Forward a trap about cpu usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManCpuUsage
     Syntax="UNSIGNED32"
     Descr="The CPU usage for this entity. Generally, the CPU usage
        will caculate the overall CPU usage on the entity, and it
        is not sensible with the number of CPU on the entity. "
  5: hh3cVMManCpuUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
        the threshold, a notification will be sent."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceMemUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about memory usage exceeding its threshold, which is $*
SDESC
Forward a trap about memory usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManMemUsage
     Syntax="UNSIGNED32"
     Descr="The memory usage for the entity. This object indicates what
        percent of memory are used. "
  5: hh3cVMManMemUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the Memory usage. When the memory usage
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceHardDiskUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about harddisk usage exceeding its threshold, which is $*
SDESC
Forward a trap about harddisk usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManHardDiskUsage
     Syntax="UNSIGNED32"
     Descr="The hard disk usage for the entity. This object indicates what
        percent of hard disk are used. "
  5: hh3cVMManHardDiskUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the hard disk usage. When the hard disk usage
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceTemperatureThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about temperature exceeding its threshold, which is created $*
SDESC
Forward a trap about temperature exceeding its threshold, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity. "
  5: hh3cVMManTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceStartKinescopeTrap .1.3.6.1.4.1.25506.9.1.2.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about starting kinescope, which is created by the third party $*
SDESC
Forward a trap about starting kinescope, which is created by the third party
device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceStopKinescopeTrap .1.3.6.1.4.1.25506.9.1.2.0.13 "Status Events" Normal
FORMAT ZBXTRAP $aA Forward a trap about stopping kinescope, which is created by the third party $*
SDESC
Forward a trap about stopping kinescope, which is created by the third party
device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManClientReportTrap .1.3.6.1.4.1.25506.9.1.2.0.14 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the fault which is reported by clients. $*
SDESC
Send a trap about the fault which is reported by clients.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManReportContent
     Syntax="OCTETSTR"
     Descr="The details of the fault which reported by clients"
EDESC
#
#
#
EVENT hh3cVMManClientRealtimeSurveillanceNoVideoTrap .1.3.6.1.4.1.25506.9.1.2.0.15 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about no realtime surveillance video stream which is reported by clients. $*
SDESC
Send a trap about no realtime surveillance video stream which is reported by clients.
hh3cVMManRegDevIP, entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName
describe an EC's relative information. 
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManClientVODNoVideoTrap .1.3.6.1.4.1.25506.9.1.2.0.16 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about no VOD video stream which is reported by clients. hh3cVMManRegDevIP, $*
SDESC
Send a trap about no VOD video stream which is reported by clients. hh3cVMManRegDevIP,
entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName describe an EC's relative information.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVODStart
     Syntax="OCTETSTR"
     Descr="The start time for VOD."
  8: hh3cVMManClientVODEnd
     Syntax="OCTETSTR"
     Descr="The end time for VOD."
  9: hh3cVMManIPSANDevIP
     Syntax="IPADDR"
     Descr="IP address of IPSAN Device which can store video data."
EDESC
#
#
#
EVENT hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap .1.3.6.1.4.1.25506.9.1.2.0.17 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the realtime surveillance video stream discontinuity which is reported by clients. $*
SDESC
Send a trap about the realtime surveillance video stream discontinuity which is reported by clients.
entPhysicalAssetID, hh3cVMManRegDevIP, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName describe an EC's relative
information.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVideoStreamDiscontinuityInterval
     Syntax="UNSIGNED32"
     Descr="Video stream discontinuity interval. "
  8: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the video stream discontinuity interval. When the
        discontinuity interval exceeds the threshold, a notification will be sent. "
  9: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientVODVideoStreamDiscontinuityTrap .1.3.6.1.4.1.25506.9.1.2.0.18 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the VOD video stream discontinuity which is reported by clients. $*
SDESC
Send a trap about the VOD video stream discontinuity which is reported by clients.
hh3cVMManRegDevIP, entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName
describe an EC's relative information.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVODStart
     Syntax="OCTETSTR"
     Descr="The start time for VOD."
  8: hh3cVMManClientVODEnd
     Syntax="OCTETSTR"
     Descr="The end time for VOD."
  9: hh3cVMManIPSANDevIP
     Syntax="IPADDR"
     Descr="IP address of IPSAN Device which can store video data."
 10: hh3cVMManClientVideoStreamDiscontinuityInterval
     Syntax="UNSIGNED32"
     Descr="Video stream discontinuity interval. "
 11: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the video stream discontinuity interval. When the
        discontinuity interval exceeds the threshold, a notification will be sent. "
 12: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientCtlConnExceptionTerminationTrap .1.3.6.1.4.1.25506.9.1.2.0.19 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the exceptional termination for control connection.  $*
SDESC
Send a trap about the exceptional termination for control connection. 
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
EDESC
#
#
#
EVENT hh3cVMManClientFrequencyLoginFailTrap .1.3.6.1.4.1.25506.9.1.2.0.20 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the frequency of client login failure. $*
SDESC
Send a trap about the frequency of client login failure.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManClientLoginFailNum
     Syntax="UNSIGNED32"
     Descr="The total number of client login failure in last statistic period which is
        defined by hh3cVMManClientStatPeriod entity."
  5: hh3cVMManClientLoginFailNumThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the total number of client login failure in last statistic
        period. When the number exceeds the threshold, a notification will be sent. "
  6: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientFrequencyVODFailTrap .1.3.6.1.4.1.25506.9.1.2.0.21 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about the frequency of client VOD failure. $*
SDESC
Send a trap about the frequency of client VOD failure.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManClientVODFailNum
     Syntax="UNSIGNED32"
     Descr="The total number of client VOD failure in last statistic period which is
        defined by hh3cVMManClientStatPeriod entity."
  5: hh3cVMManClientVODFailNumThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the total number of client VOD failure in last statistic
        period. When the number exceeds the threshold, a notification will be sent. "
  6: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManDMECDisobeyStorageScheduleTrap .1.3.6.1.4.1.25506.9.1.2.0.22 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about EC disobeying storage schedule created by DM. $*
SDESC
Send a trap about EC disobeying storage schedule created by DM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManDMECDisobeyStorageScheduleRecoverTrap .1.3.6.1.4.1.25506.9.1.2.0.23 "Status Events" Normal
FORMAT ZBXTRAP $aA Send a trap about recovery after EC disobeying storage schedule created by DM. $*
SDESC
Send a trap about recovery after EC disobeying storage schedule created by DM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
#
MIB: HH3C-VNF-DEVICE-MIB (file:./hh3c-vnf-device.mib) converted on Fri Mar 18 23:14:21 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVnfmConnectionFault .1.3.6.1.4.1.25506.2.196.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA Cp and so communication failure. $*
SDESC
Cp and so communication failure.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVnfmConnectionFaultResume .1.3.6.1.4.1.25506.2.196.2.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA Cp and so communication recovery. $*
SDESC
Cp and so communication recovery.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVnvmAuthenFault .1.3.6.1.4.1.25506.2.196.2.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Cp and so authentication failed. $*
SDESC
Cp and so authentication failed.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVmCreate .1.3.6.1.4.1.25506.2.196.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The event of create VM. $*
SDESC
The event of create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmDelete .1.3.6.1.4.1.25506.2.196.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The event of delete VM. $*
SDESC
The event of delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmCreateSuccess .1.3.6.1.4.1.25506.2.196.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA Success to create VM. $*
SDESC
Success to create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
EDESC
#
#
#
EVENT hh3cVmCreateFail .1.3.6.1.4.1.25506.2.196.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to create VM. $*
SDESC
Failed to create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
  6: hh3cVmCreateFailReason
     Syntax="OCTETSTR"
     Descr="The VM create failed reason."
EDESC
#
#
#
EVENT hh3cVmDeleteSuccess .1.3.6.1.4.1.25506.2.196.3.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA Success to delete VM. $*
SDESC
Success to delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
EDESC
#
#
#
EVENT hh3cVmDeleteFail .1.3.6.1.4.1.25506.2.196.3.0.6 "Status Events" Normal
FORMAT ZBXTRAP $aA Failed to delete VM. $*
SDESC
Failed to delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
  6: hh3cVmDeleteFailReason
     Syntax="OCTETSTR"
     Descr="The VM delete failed reason."
EDESC
#
#
#
EVENT hh3cVmInconsist .1.3.6.1.4.1.25506.2.196.3.0.7 "Status Events" Normal
FORMAT ZBXTRAP $aA The local virtual machine resources are inconsistent with the resources on vnf. $*
SDESC
The local virtual machine resources are inconsistent with the resources on vnf.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmStatusOnVnfm
     Syntax="INTEGER"
       1: building
       2: active
       3: error
       4: unknown
     Descr="The status of the virtual machine on VNFM(virtualized network function managers)."
  4: hh3cVmInconsistFaultReason
     Syntax="INTEGER"
       1: exisitOnLocal
       2: existOnVnfm
     Descr="Reasons for VM inconsistency."
EDESC
#
#
#
EVENT hh3cVmInconsistResume .1.3.6.1.4.1.25506.2.196.3.0.8 "Status Events" Normal
FORMAT ZBXTRAP $aA The local virtual machine resources are the same as those on vnf. $*
SDESC
The local virtual machine resources are the same as those on vnf.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmStatusOnVnfm
     Syntax="INTEGER"
       1: building
       2: active
       3: error
       4: unknown
     Descr="The status of the virtual machine on VNFM(virtualized network function managers)."
  4: hh3cVmInconsistFaultReason
     Syntax="INTEGER"
       1: exisitOnLocal
       2: existOnVnfm
     Descr="Reasons for VM inconsistency."
EDESC
#
#
#
EVENT hh3cVmAcceptInconsistVm .1.3.6.1.4.1.25506.2.196.3.0.9 "Status Events" Normal
FORMAT ZBXTRAP $aA Unconfigured VM claimed on vbras-cp. $*
SDESC
Unconfigured VM claimed on vbras-cp.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmReset .1.3.6.1.4.1.25506.2.196.3.0.10 "Status Events" Normal
FORMAT ZBXTRAP $aA VM restarts via VNFM. $*
SDESC
VM restarts via VNFM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  4: hh3cVmResetResult
     Syntax="OCTETSTR"
     Descr="Reasons for the failure to restart the virtual machine."
EDESC
#
#
#
EVENT hh3cVmUnregisterLongtime .1.3.6.1.4.1.25506.2.196.3.0.11 "Status Events" Normal
FORMAT ZBXTRAP $aA VNFM has been allocated but will not be online for a long time. $*
SDESC
VNFM has been allocated but will not be online for a long time.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmIsolate .1.3.6.1.4.1.25506.2.196.3.0.12 "Status Events" Normal
FORMAT ZBXTRAP $aA During the shrinking operation, it does not communicate with VNFM, VNFM isolates VM. $*
SDESC
During the shrinking operation, it does not communicate with VNFM, VNFM isolates VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmChannelHealthNormal .1.3.6.1.4.1.25506.2.196.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA The health check result of the control channel or data channel on the specified VM is normal. $*
SDESC
The health check result of the control channel or data channel on the specified VM is normal.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelHealthMinor .1.3.6.1.4.1.25506.2.196.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA The control channel or data channel on the specified VM is in the minor sub-health state. $*
SDESC
The control channel or data channel on the specified VM is in the minor sub-health state.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelHealthSevere .1.3.6.1.4.1.25506.2.196.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA The control channel or data channel on the specified VM is in the severe sub-health state. $*
SDESC
The control channel or data channel on the specified VM is in the severe sub-health state.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelLinkSwitch .1.3.6.1.4.1.25506.2.196.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA Link switching event. $*
SDESC
Link switching event.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  3: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
  4: hh3cVmChannelLinkMacAddress
     Syntax="OCTETSTR"
     Descr="The mac address of the fault port."
EDESC
#
#
#
#
MIB: HH3C-VOICE-CALL-ACTIVE-MIB (file:./hh3c-voice-call-active.mib) converted on Fri Mar 18 23:14:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-CALL-HISTORY-MIB (file:./hh3c-voice-call-history.mib) converted on Fri Mar 18 23:14:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-DIAL-CONTROL-MIB (file:./hh3c-voice-dial-control.mib) converted on Fri Mar 18 23:14:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-IF-MIB (file:./hh3c-voice-if.mib) converted on Fri Mar 18 23:14:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-VLAN-MIB (file:./hh3c-voice-vlan.mib) converted on Fri Mar 18 23:14:21 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VPN-PEER-MIB (file:./hh3c-vpn-peer.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VRRP-EXT-MIB (file:./hh3c-vrrp-ext.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVrrpExtStateChange .1.3.6.1.4.1.25506.2.24.2.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap indicates that the sending agent VRRP state has changed. $*
SDESC
This trap indicates that the sending agent VRRP state has changed.
Variables:
  1: hh3cVrrpExtVrId
     Syntax="INTEGER32"
     Descr="This object contains the Virtual Router Identifier (VRID)."
  2: hh3cVrrpExtIpAddressType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
     Descr="IP address type of VRRP.
         ipv4: IPv4 type.
         ipv6: IPv6 type."
  3: hh3cVrrpExtIfIndex
     Syntax="INTEGER32"
     Descr="This value is the ifIndex that identifies the interface configured for
         the virtual router."
  4: hh3cVrrpExtIfDescr
     Syntax="OCTETSTR"
     Descr="This value is the interface decription that identifies the interface
        configured for the virtual router."
  5: hh3cVrrpExtOldState
     Syntax="INTEGER"
       1: initialize
       2: backup
       3: master
     Descr="The current state of the virtual router. This object has
        three defined values:

        - `initialize', which indicates that the
         virtual router is waiting for a startup event.

        - `backup', which indicates the virtual router is
         monitoring the availability of the master router.

        - `master', which indicates that the virtual router
         is forwarding packets for IP addresses that are
         associated with this router."
  6: hh3cVrrpExtNewState
     Syntax="INTEGER"
       1: initialize
       2: backup
       3: master
     Descr="The current state of the virtual router. This object has
        three defined values:

        - `initialize', which indicates that the
         virtual router is waiting for a startup event.

        - `backup', which indicates the virtual router is
         monitoring the availability of the master router.

        - `master', which indicates that the virtual router
         is forwarding packets for IP addresses that are
         associated with this router."
  7: hh3cVrrpExtStateChangeReason
     Syntax="INTEGER32"
     Descr="Reason why VRRP state changed,
         0: other reason.
         1: Timer expired.
         2: Adding virtual MAC address failed.
         3: Interface event received.
         4: IP address deleted.
         5: The status of the tracked object changed.
         6: VRRP packet received.
         7: Current device has changed to IP address owner.
         8: Insufficient hardware resources.
         9: Master-down-timer expired.
         10: Zero priority packet received.
         11: Preempt.
         12: Master group drove."
EDESC
#
#
#
#
MIB: HH3C-VSAN-MIB (file:./hh3c-vsan.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVsanDmDomainIdNotAssignedNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered if a Domain ID is not $*
SDESC
This event will be triggered if a Domain ID is not
assigned or configured, then the E_ports may be isolated
in the VSAN. The conditions are listed as follows:
1. If the switch has enabled the fabric configuration and
a request for a configured static Domain ID is rejected
or no other Domain ID is assigned, the E_ports will be
isolated in the particular VSAN.
2. If the switch does not enable the fabric configuration
and a Domain ID is not configured, all of its E_ports
will be isolated in the particular VSAN.
The notification contains the WWN of the Switch and
the index of the VSAN in which the event occurred.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmNewPrincipalSwitchNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA If a switch becomes the new Principal Switch in a VSAN, this $*
SDESC
If a switch becomes the new Principal Switch in a VSAN, this
notification is sent immediately after the election.
The notification contains the WWN of the new Principal Switch
and the index of the VSAN in which the transition occurred.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmFabricChangeNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered if a switch sends or receives a $*
SDESC
This event will be triggered if a switch sends or receives a
Build Fabric (BF) or a Reconfigure Fabric (RCF) message in a
VSAN.
The conditions a switch can receive or send a BF or a RCF are
listed as follows:
1. Two isolated fabrics in a VSAN merge into one fabric.  If
the Domain ID lists do not overlap, the sent or received
message is BF, other cases, it is RCF.
2. If an upstream principal link which connects to principal
switch and other switches become disconnected, the sent or
received message is BF.
3. A BF or RCF process is triggered manually by configuration.
The notification contains the index of the VSAN in which a BF
or a RCF was sent or received.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmDomainIdChangeNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This event will be triggered if the Domain ID of the local switch $*
SDESC
This event will be triggered if the Domain ID of the local switch
changed in a VSAN.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmDomainIdAssigned
     Syntax="INTEGER32"
     Descr="Indicates the Domain ID of the local switch in this
         VSAN or zero if no Domain ID has been assigned."
  3: hh3cVsanDmLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
#
MIB: HH3C-VSI-MIB (file:./hh3c-vsi.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VXLAN-MIB (file:./hh3c-vxlan.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WAPI-MIB (file:./hh3c-wapi.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cwapiUserwithInvalidCertificate .1.3.6.1.4.1.25506.2.77.4.0.1 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a user intrudes upon network with invalid $*
SDESC
This trap is sent when a user intrudes upon network with invalid
certificate.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiStationReplayAttack .1.3.6.1.4.1.25506.2.77.4.0.2 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when an attacker records and replays network $*
SDESC
This trap is sent when an attacker records and replays network
transactions.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiTamperAttack .1.3.6.1.4.1.25506.2.77.4.0.3 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when an attacker monitors network traffic and $*
SDESC
This trap is sent when an attacker monitors network traffic and
maliciously changes data in transit(for example, an attacker may
modify the contents of a WAI message).
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiLowSafeLevelAttack .1.3.6.1.4.1.25506.2.77.4.0.4 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when a station associates AP(Access Point), $*
SDESC
This trap is sent when a station associates AP(Access Point),
creates packet of Unicast Key Negotiation Response with wrong
WIE(WAPI Information Element) of ASUE(Authentication Supplicant
Entity).
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiAddressRedirectionAttack .1.3.6.1.4.1.25506.2.77.4.0.5 "Status Events" Normal
FORMAT ZBXTRAP $aA This trap is sent when an attacker maliciously changes destination $*
SDESC
This trap is sent when an attacker maliciously changes destination
MAC address of WPI(WLAN Privacy Infrastructure) frame.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
#
MIB: HH3C-WEB-AUTHENTICATION-MIB (file:./hh3c-web-authentication.mib) converted on Fri Mar 18 23:14:22 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WIPS-MIB (file:./hh3c-wips.mib) converted on Fri Mar 18 23:14:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WLAN-FLEXAPP-CFG-MIB (file:./hh3c-wlan-flexapp-cfg.mib) converted on Fri Mar 18 23:14:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WLANMT-MIB (file:./hh3c-wlanmt.mib) converted on Fri Mar 18 23:14:23 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-3GMODEM-MIB (file:./hh3c-3gmodem.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWirelessCardInserted .1.3.6.1.4.1.25506.2.98.3.0.1 "Status Events" Normal
FORMAT A hh3cWirelessCardInserted notification is generated when a wireless $*
SDESC
A hh3cWirelessCardInserted notification is generated when a wireless
card is inserted.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cWirelessCardPulledOut .1.3.6.1.4.1.25506.2.98.3.0.2 "Status Events" Normal
FORMAT A hh3cWirelessCardPulledOut notification is generated when a wireless $*
SDESC
A hh3cWirelessCardPulledOut notification is generated when a wireless
card is pulled out.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cUIMPinInvalid .1.3.6.1.4.1.25506.2.98.3.0.3 "Status Events" Normal
FORMAT A hh3cUIMPinInvalid notification is generated when UIM PIN is invalid. $*
SDESC
A hh3cUIMPinInvalid notification is generated when UIM PIN is invalid.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cUIMPinChanged .1.3.6.1.4.1.25506.2.98.3.0.4 "Status Events" Normal
FORMAT A hh3cUIMPinInvalid notification is generated when UIM PIN is changed. $*
SDESC
A hh3cUIMPinInvalid notification is generated when UIM PIN is changed.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
  5: hh3cUIMOldPin
     Syntax="OCTETSTR"
     Descr="The old PIN for this UIM."
  6: hh3cUIMPin
     Syntax="OCTETSTR"
     Descr="The PIN about this UIM.  If this information is unknown to the agent,
        then this object will be returned a zero-length string."
EDESC
#
#
#
EVENT hh3cAccessMediaChanged .1.3.6.1.4.1.25506.2.98.3.0.5 "Status Events" Normal
FORMAT A hh3cAccessMediaChanged notification is generated when access media $*
SDESC
A hh3cAccessMediaChanged notification is generated when access media
is changed.
Variables:
  1: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  2: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  3: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  4: hh3cUIMImsi
     Syntax="OCTETSTR"
     Descr="The IMSI (International Mobile Subscriber Identification Number) about
        this UIM.  If this information is unknown to the agent, then this object
        will be returned a zero-length string."
  5: hh3cAccessMedia
     Syntax="INTEGER"
       1: unknown
       2: air
       3: cable
     Descr="The current access media."
EDESC
#
#
#
EVENT hh3c3GRssiStrongSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.6 "Status Events" Normal
FORMAT A hh3c3GRssiStrongSignalTrap notification is generated when current RSSI $*
SDESC
A hh3c3GRssiStrongSignalTrap notification is generated when current RSSI
exceeds the medium signal threshold.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3c3GRssiMediumSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.7 "Status Events" Normal
FORMAT A hh3c3GRssiMediumSignalTrap notification is generated when the current RSSI $*
SDESC
A hh3c3GRssiMediumSignalTrap notification is generated when the current RSSI
falls or rises to a value between the medium and weak signal thresholds.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3c3GRssiWeakSignalTrap .1.3.6.1.4.1.25506.2.98.3.0.8 "Status Events" Normal
FORMAT A hh3c3GRssiWeakSignalTrap notification is generated when current RSSI $*
SDESC
A hh3c3GRssiWeakSignalTrap notification is generated when current RSSI
falls below the weak signal threshold.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cDeviceOUI
     Syntax="OCTETSTR"
     Descr="The OUI (Organizational Unique Identifier) of the current device."
  3: hh3cDevSerialNumber
     Syntax="OCTETSTR"
     Descr="The serial number of the current device."
  4: hh3cWirelessCardSerialNumber
     Syntax="OCTETSTR"
     Descr="The vendor-specific serial number string for this card."
  5: hh3c3GCurrentService
     Syntax="INTEGER"
       1: unknown
       2: oneXRtt
       3: evDo
       4: gsm
       5: lte
     Descr="The current service type that is bound in the notifications."
  6: hh3c3GCurrentRssiBind
     Syntax="INTEGER32"
     Descr="The current RSSI that is bound in the notifications."
  7: hh3c3GImsiBind
     Syntax="OCTETSTR"
     Descr="The IMSI that is bound in the notifications."
EDESC
#
#
#
EVENT hh3cSmsTxNotification .1.3.6.1.4.1.25506.2.98.3.0.9 "Status Events" Normal
FORMAT A hh3cSmsTxNotification notification is generated $*
SDESC
A hh3cSmsTxNotification notification is generated
when a short message is sent.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cSmsSendStatus
     Syntax="INTEGER"
       1: set2Send
       10: busy
       11: notPresent
       12: notSupport
       13: initializing
       14: noCenterNum
       15: noSim
       16: simNotReady
       17: sendAtFailed
       18: sendDisable
       2: ready2Send
       3: sending
       4: sentAlready
       5: telnumberInvalid
       6: paramInvalid
       7: contentTooLong
       8: codeError
       9: unknown
     Descr="Status of the short message sent."
EDESC
#
#
#
EVENT hh3cSmsRxNotification .1.3.6.1.4.1.25506.2.98.3.0.10 "Status Events" Normal
FORMAT A hh3cSmsRxNotification notification is generated $*
SDESC
A hh3cSmsRxNotification notification is generated
when a short message is received.
Variables:
  1: hh3cWirelessCardIndex
     Syntax="INTEGER32"
     Descr="The index for this entry."
  2: hh3cSmsSrcNumberBind
     Syntax="OCTETSTR"
     Descr="The source number that is bound in the notifications."
  3: hh3cSmsTimeBind
     Syntax="OCTETSTR"
     Descr="The sending time that is bound in the notifications."
  4: hh3cSmsEncodeBind
     Syntax="INTEGER"
       1: ascii
       2: ucs2
     Descr="The encoded type that is bound in the notifications."
  5: hh3cSmsContentBind
     Syntax="OCTETSTR"
     Descr="The content of short message that is bound in the notifications."
EDESC
#
#
#
#
MIB: HH3C-8021X-EXT2-MIB (file:./hh3c-8021x-ext2.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-8021PAE-MIB (file:./hh3c-8021x-ext.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3csupplicantproxycheck .1.3.6.1.4.1.25506.8.6.1.0.1 "Status Events" Normal
FORMAT $*
SDESC

Variables:
  1: hh3cproxycheckVlanId
     Syntax="INTEGER"
     Descr="."
  2: hh3cproxycheckPortName
     Syntax="OCTETSTR"
     Descr="."
  3: hh3cproxycheckMacAddr
     Syntax="OCTETSTR"
     Descr="."
  4: hh3cproxycheckIpaddr
     Syntax="IPADDR"
     Descr="."
  5: hh3cproxycheckUsrName
     Syntax="OCTETSTR"
     Descr="."
EDESC
#
#
#
#
MIB: HH3C-AAA-MIB (file:./hh3c-aaa.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-AAA-NASID-MIB (file:./hh3c-aaa-nasid.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-AAL5-MIB (file:./hh3c-aal5.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ACFP-MIB (file:./hh3c-acfp.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAcfpCurContextChanged .1.3.6.1.4.1.25506.2.74.1.1.5.1 "Status Events" Normal
FORMAT This notification is sent when router or switch changed $*
SDESC
This notification is sent when router or switch changed
hh3cAcfpServerCurContextType.
Variables:
  1: hh3cAcfpServerCurContextType
     Syntax="INTEGER"
       1: no-context
       2: context-VLANID
       3: context-HG
       4: context-FlowID
       5: context-HGPlus
     Descr="In some circumstances, it's necessary that packets go to
        ACFP client with context from ACFP server.  However, the context
        perhaps is different.  hh3cAcfpServerCurContextType is
        used to distinguish this difference, ACFP client may
        process distinctively."
EDESC
#
#
#
EVENT hh3cAcfpClientRegister .1.3.6.1.4.1.25506.2.74.1.1.5.2 "Status Events" Normal
FORMAT This notification is sent when the ACFP client is registered. $*
SDESC
This notification is sent when the ACFP client is registered.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpClientUnRegister .1.3.6.1.4.1.25506.2.74.1.1.5.3 "Status Events" Normal
FORMAT This notification is sent when the ACFP client is unregistered. $*
SDESC
This notification is sent when the ACFP client is unregistered.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpClientDead .1.3.6.1.4.1.25506.2.74.1.1.5.4 "Status Events" Normal
FORMAT This notification is sent when the ACFP client is not responding. $*
SDESC
This notification is sent when the ACFP client is not responding.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
EDESC
#
#
#
EVENT hh3cAcfpNotSupportedOAPMode .1.3.6.1.4.1.25506.2.74.1.1.5.5 "Status Events" Normal
FORMAT This notification is sent when router or switch cannot support OAP $*
SDESC
This notification is sent when router or switch cannot support OAP
mode that ACFP client wants to operate on.
Variables:
  1: hh3cAcfpClientID
     Syntax="INTEGER32"
     Descr="The identifier of ACFP client."
  2: hh3cAcfpClientMode
     Syntax="BITS"
     Descr="ACFP client informs Router or switch which mode it is operating.
        Router or switch checks hh3cAcfpServerInfo to see whether it is
        capable of fulfilling this function.  If not, router or switch
        generates a trap informing ACFP client such OAP mode is not
        supported."
  3: hh3cAcfpServerInfo
     Syntax="BITS"
     Descr="When retrieved, this object returns a set of bits
        indicating the capabilities (or configuration) of the
        switch or router.  The set bit is indication that a
        router or switch can support the action for
        security rule."
EDESC
#
#
#
EVENT hh3cAcfpLifetimeChangeEvent .1.3.6.1.4.1.25506.2.74.1.1.5.6 "Status Events" Normal
FORMAT This notification can be generated for indicating that $*
SDESC
This notification can be generated for indicating that
The lifetime of all member rules of the was
changed by successfully writing to object
hh3cAcfpPolicyLifetime.  Note that this notification
is only sent if the lifetime of a policy was changed by
successfully writing to object hh3cAcfpPolicyLifetime.
Variables:
  1: hh3cAcfpPolicyLifetime
     Syntax="INTEGER32"
     Descr="When retrieved, this object delivers the maximum lifetime (seconds)
        of all the rules of this, i.e., of all the rows in hh3cAcfpRuleTable
        that have the same values of hh3cAcfpRulePolicyIndex and
        hh3cAcfpClientID.  Successfully writing to this object modifies the
        lifetime of all the rules of this.  Successfully writing a value
        of 0 terminates all the rules and implicitly deletes this as soon as
        all member entries are removed from the hh3cAcfpRuleTable. Note that
        after a lifetime expired, all the corresponding entry in the
        hh3cAcfpRuleTable will be removed and this will be deleted
        implicitly.  Writing to this object is processed by the ACFP MIB
        implementation by choosing a lifetime value that is greater than
        or equal to zero and less than or equal to the minimum of the requested
        value and the value specified by object hh3cAcfpServerMaxLifetime:

            0 <= lt_granted <= MINIMUM(lt_requested, lt_maximum)

        whereas:
        lt_granted is the actually granted lifetime by the ACFP MIB
        implementation.
        lt_requested is the requested lifetime of the ACFP client.
        lt_maximum is the value of object hh3cAcfpServerMaxLifetime.
        SNMP set requests to this object may be rejected or the value of
        the object after an accepted set operation may be less than the
        value that was contained in the SNMP set request."
EDESC
#
#
#
EVENT hh3cAcfpRuleCreatedEvent .1.3.6.1.4.1.25506.2.74.1.1.5.7 "Status Events" Normal
FORMAT This notification is sent when a new rule is created. $*
SDESC
This notification is sent when a new rule is created.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpRuleDeletedEvent .1.3.6.1.4.1.25506.2.74.1.1.5.8 "Status Events" Normal
FORMAT This notification is sent when a rule is deleted. $*
SDESC
This notification is sent when a rule is deleted.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpRuleErrorEvent .1.3.6.1.4.1.25506.2.74.1.1.5.9 "Status Events" Normal
FORMAT This notification is sent when rule cannot be applied. $*
SDESC
This notification is sent when rule cannot be applied.
Variables:
  1: hh3cAcfpRuleIndex
     Syntax="INTEGER32"
     Descr="The identifier of the rules which have the same hh3cAcfpPolicyIndex
        and hh3cAcfpClientID.hh3cAcfpRuleIndex indicates rule sequence in the
        same policy."
EDESC
#
#
#
EVENT hh3cAcfpLifetimeExpireEvent .1.3.6.1.4.1.25506.2.74.1.1.5.10 "Status Events" Normal
FORMAT This notification is sent $*
SDESC
This notification is sent
when the time of the policy existed exceeds its lifetime.
Variables:
  1: hh3cAcfpPolicyLifetime
     Syntax="INTEGER32"
     Descr="When retrieved, this object delivers the maximum lifetime (seconds)
        of all the rules of this, i.e., of all the rows in hh3cAcfpRuleTable
        that have the same values of hh3cAcfpRulePolicyIndex and
        hh3cAcfpClientID.  Successfully writing to this object modifies the
        lifetime of all the rules of this.  Successfully writing a value
        of 0 terminates all the rules and implicitly deletes this as soon as
        all member entries are removed from the hh3cAcfpRuleTable. Note that
        after a lifetime expired, all the corresponding entry in the
        hh3cAcfpRuleTable will be removed and this will be deleted
        implicitly.  Writing to this object is processed by the ACFP MIB
        implementation by choosing a lifetime value that is greater than
        or equal to zero and less than or equal to the minimum of the requested
        value and the value specified by object hh3cAcfpServerMaxLifetime:

            0 <= lt_granted <= MINIMUM(lt_requested, lt_maximum)

        whereas:
        lt_granted is the actually granted lifetime by the ACFP MIB
        implementation.
        lt_requested is the requested lifetime of the ACFP client.
        lt_maximum is the value of object hh3cAcfpServerMaxLifetime.
        SNMP set requests to this object may be rejected or the value of
        the object after an accepted set operation may be less than the
        value that was contained in the SNMP set request."
EDESC
#
#
#
#
MIB: HH3C-ACL-MIB (file:./hh3c-acl.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMACfilterTrap .1.3.6.1.4.1.25506.2.8.5.0.1 "Status Events" Normal
FORMAT This notification is generated when a packet was processed $*
SDESC
This notification is generated when a packet was processed
by MAC address filter, but not every packet will generate one
notification, the same notification only generate once in 30
seconds.

Variables:
  1: hh3cPfilterInterface
     Syntax="OCTETSTR"
     Descr="The interface which policy apply."
  2: hh3cPfilterDirection
     Syntax="OCTETSTR"
     Descr="Inbound or outbound."
  3: hh3cPfilterACLNumber
     Syntax="INTEGER32"
     Descr="ACL number."
  4: hh3cPfilterAction
     Syntax="OCTETSTR"
     Descr="Permit or deny."
  5: hh3cMACfilterSourceMac
     Syntax="OCTETSTR"
     Descr="Source MAC address."
  6: hh3cMACfilterDestinationMac
     Syntax="OCTETSTR"
     Descr="Destination MAC address."
  7: hh3cPfilterPacketNumber
     Syntax="INTEGER32"
     Descr="The number of packets permitted or denied by ACL."
  8: hh3cPfilterReceiveInterface
     Syntax="OCTETSTR"
     Descr="The interface where packet come from."
EDESC
#
#
#
EVENT hh3cAclRuleMatchCount .1.3.6.1.4.1.25506.2.8.5.0.2 "Status Events" Normal
FORMAT This notification is generated periodically due to a timer. $*
SDESC
This notification is generated periodically due to a timer.
The interval of the timer is configured in hh3cAclIntervalTable.
The notification details the entries about the packet-filter
object, the matched ACL rule and the number of matching packets.

Variables:
  1: hh3cPfilter2ApplyObjType
     Syntax="INTEGER"
       1: interface
       2: vlan
       3: global
     Descr="The object type of packet filter application.
                interface: Apply an ACL to the interface to filter packets.
                vlan: Apply an ACL to the VLAN to filter packets.
                global: Apply an ACL globally to filter packets.
                "
  2: hh3cPfilter2ApplyObjIndex
     Syntax="INTEGER32"
     Descr="The object ID of packet filter application.
                Interface: interface index, equal to ifIndex
                VLAN: VLAN ID, 1..4094
                Global: 0
                "
  3: hh3cPfilter2ApplyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction of packet filter application."
  4: hh3cPfilter2ApplyAclType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
       3: default
       4: mac
       5: user
     Descr="ACL Type: IPv4, IPv6, default action, MAC, and user.
                Take default action as a special ACL group.
                "
  5: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  6: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  7: hh3cPfilter2AclRuleMatchPackets
     Syntax="COUNTER64"
     Descr="The number of packets matched."
EDESC
#
#
#
EVENT hh3cAclFirstIPv4PktCaptured .1.3.6.1.4.1.25506.2.8.5.0.3 "Status Events" Normal
FORMAT This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched IPv4 flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcIP
     Syntax="OCTETSTR"
     Descr="Source IP address of IPv4/IPv6 packet."
  8: hh3cAclPacketDstIP
     Syntax="OCTETSTR"
     Descr="Destination IP address of IPv4/IPv6 packet."
  9: hh3cAclPacketProtocol
     Syntax="INTEGER32"
     Descr="The protocol of IPv4/IPv6 packet.
                icmp(1),
                tcp(6),
                udp(17),
                igmp(2),
                gre(47),
                ospf(89),
                ipinip(4),
                icmp6(58),
                ipv6_ah(51),
                ipv6_esp(50)
                "
 10: hh3cAclPacketDscp
     Syntax="INTEGER32"
     Descr="DSCP of IPv4/IPv6 packet."
 11: hh3cAclPacketIcmpIgmpType
     Syntax="INTEGER32"
     Descr="The type of ICMP or IGMP packet."
 12: hh3cAclPacketIcmpIgmpCode
     Syntax="INTEGER32"
     Descr="The code of ICMP or IGMP packet."
 13: hh3cAclPacketTcpFlags
     Syntax="INTEGER"
       1: tcpack
       2: tcpfin
       255: invalid
       3: tcppsh
       4: tcprst
       5: tcpsyn
       6: tcpurg
     Descr="The flags of TCP packet.
                tcpack(1),
                tcpfin(2),
                tcppsh(3),
                tcprst(4),
                tcpsyn(5),
                tcpurg(6),
                invalid(255)
                "
 14: hh3cAclPacketSrcPort
     Syntax="INTEGER32"
     Descr="Source port of TCP or UDP packet."
 15: hh3cAclPacketDstPort
     Syntax="INTEGER32"
     Descr="Destination port of TCP or UDP packet."
EDESC
#
#
#
EVENT hh3cAclFirstIPv6PktCaptured .1.3.6.1.4.1.25506.2.8.5.0.4 "Status Events" Normal
FORMAT This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched IPv6 flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcIP
     Syntax="OCTETSTR"
     Descr="Source IP address of IPv4/IPv6 packet."
  8: hh3cAclPacketDstIP
     Syntax="OCTETSTR"
     Descr="Destination IP address of IPv4/IPv6 packet."
  9: hh3cAclPacketProtocol
     Syntax="INTEGER32"
     Descr="The protocol of IPv4/IPv6 packet.
                icmp(1),
                tcp(6),
                udp(17),
                igmp(2),
                gre(47),
                ospf(89),
                ipinip(4),
                icmp6(58),
                ipv6_ah(51),
                ipv6_esp(50)
                "
 10: hh3cAclPacketDscp
     Syntax="INTEGER32"
     Descr="DSCP of IPv4/IPv6 packet."
 11: hh3cAclPacketFlowLabel
     Syntax="UNSIGNED32"
     Descr="Flow label value of IPv6 packet."
 12: hh3cAclPacketIcmpIgmpType
     Syntax="INTEGER32"
     Descr="The type of ICMP or IGMP packet."
 13: hh3cAclPacketIcmpIgmpCode
     Syntax="INTEGER32"
     Descr="The code of ICMP or IGMP packet."
 14: hh3cAclPacketTcpFlags
     Syntax="INTEGER"
       1: tcpack
       2: tcpfin
       255: invalid
       3: tcppsh
       4: tcprst
       5: tcpsyn
       6: tcpurg
     Descr="The flags of TCP packet.
                tcpack(1),
                tcpfin(2),
                tcppsh(3),
                tcprst(4),
                tcpsyn(5),
                tcpurg(6),
                invalid(255)
                "
 15: hh3cAclPacketSrcPort
     Syntax="INTEGER32"
     Descr="Source port of TCP or UDP packet."
 16: hh3cAclPacketDstPort
     Syntax="INTEGER32"
     Descr="Destination port of TCP or UDP packet."
EDESC
#
#
#
EVENT hh3cAclFirstEthernetPktCaptured .1.3.6.1.4.1.25506.2.8.5.0.5 "Status Events" Normal
FORMAT This notification is generated immediately when the first $*
SDESC
This notification is generated immediately when the first
packet of the matched Ethernet flow is captured.  Other packets
of the matched flow won't be captured.

Variables:
  1: hh3cPfilter2ApplyAclIndex
     Syntax="OCTETSTR"
     Descr="The index of ACL group used by packet-filter.
                If the specified string comprises only digits, it is converted
                into a numerical sequence in decimal notation, and regarded as
                an ACL group index or a default action.  If the string is a
                character string beginning with an English letter, it is
                regarded as an ACL group name.

                Group index range and default action:
                    Basic type: 2000..2999
                    Advanced type: 3000..3999
                    MAC type: 4000..4999
                    User type: 5000..5999
                    Default action type: 0
                "
  2: hh3cPfilter2AclRuleIndex
     Syntax="INTEGER32"
     Descr="The ACL rule index."
  3: hh3cAclPacketIfName
     Syntax="OCTETSTR"
     Descr="The name of the interface on which the packet is matched."
  4: hh3cAclPacketDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="The direction the packet is going."
  5: hh3cAclPacketBAGG
     Syntax="INTEGER32"
     Descr="The bridge-aggregation-interface ID the interface belongs to.
                "
  6: hh3cAclPacketVlanID
     Syntax="INTEGER32"
     Descr="The vlan the interface belongs to."
  7: hh3cAclPacketSrcMacAddr
     Syntax="OCTETSTR"
     Descr="Source MAC address of Ethernet packet."
  8: hh3cAclPacketDstMacAddr
     Syntax="OCTETSTR"
     Descr="Destination MAC address of Ethernet packet."
  9: hh3cAclPacketMacTypeLen
     Syntax="INTEGER32"
     Descr="The Ethertype or 802.3 length of Ethernet packet."
 10: hh3cAclPacketVlanPCP
     Syntax="INTEGER32"
     Descr="802.1p priority code point of Ethernet packet."
EDESC
#
#
#
EVENT hh3cAclResourceTrap .1.3.6.1.4.1.25506.2.8.7.0.1 "Status Events" Normal
FORMAT This notification is generated when the number of entries on TCAM $*
SDESC
This notification is generated when the number of entries on TCAM
becomes equal to or greater than a preset threshold level
Variables:
  1: hh3cAclResourceTypeName
     Syntax="OCTETSTR"
     Descr="The name of TCAM resources."
  2: hh3cAclResourceUsage
     Syntax="INTEGER32"
     Descr="The current usage of TCAM resources."
  3: hh3cAclResourceUsedEntries
     Syntax="INTEGER32"
     Descr="The used number of entries on TCAM."
  4: hh3cAclResourceTotalEntries
     Syntax="INTEGER32"
     Descr="The total number of entries on TCAM."
  5: hh3cAclMib2ResourceThreshold
     Syntax="INTEGER32"
     Descr="The threshold of TCAM resources.
                 The value 0 indicates that cancelling the TCAM resource notification function."
  6: hh3cAclResourceChassisID
     Syntax="INTEGER32"
     Descr="The chassis number.  On a centralized or distributed device,
                 the value for this node is always zero."
  7: hh3cAclResourceSlotID
     Syntax="INTEGER32"
     Descr="The slot number.  On a centralized device, the value for
                 this node is always zero."
EDESC
#
#
#
#
MIB: HH3C-AFC-MIB (file:./hh3c-afc.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ARP-ENTRY-MIB (file:./hh3c-arp-entry.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ARP-RATELIMIT-MIB (file:./hh3c-arp-ratelimit.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cARPRatelimitOverspeedTrap .1.3.6.1.4.1.25506.2.110.1.1.0.1 "Status Events" Normal
FORMAT If the rate of ARP packets delivered to the CPU on a device $*
SDESC
If the rate of ARP packets delivered to the CPU on a device
exceeds the threshold, a trap message is generated and sent
to the remote monitoring device.
Variables:
  1: hh3cARPRatelimitTrapVer
     Syntax="UNSIGNED32"
     Descr="The version of trap information."
  2: hh3cARPRatelimitTrapCount
     Syntax="UNSIGNED32"
     Descr="Number of cells in the trap message.  A trap message may contain
        multiple cells, each of which indicates that the rate information of
        ARP packets exceeds the threshold."
  3: hh3cARPRatelimitTrapMsg
     Syntax="OCTETSTR"
     Descr="This object is the cell section in a trap message sent from a
        monitored device.  This object can contain multiple cells.
        This object is in the format of '<cell1><cell2>...'.  Each cell
        consists of 17 octets in the format of
        '<TrapOrigin><IfIndex><OverSpeedValue><Threshold><Interval>'.

        <TrapOrigin> indicates the source of the trap message and has
        size of 1 octet.  It only supports the following values.
        1 - Global.
        2 - Interface.

        <IfIndex> is the index of the interface where the rate of ARP packet
        exceeds the threshold and has size of 4 octets.  It is 0xFFFFFFFF
        when <TrapOrigin> is 1(Global).

        <OverSpeedValue> indicates the rate that ARP packets are actually
        delivered and has size of 4 octets.

        <Threshold> indicates the threshold that ARP packets can be delivered
        to CPU and has size of 4 octets.

        <Interval> indicates the interval that a trap message is sent out
        and has size of 4 octets."
EDESC
#
#
#
#
MIB: HH3C-ARP-SOURCE-SUPPRESSION-MIB (file:./hh3c-arp-source-suppression.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ATM-DXI-MIB (file:./hh3c-atm-dxi.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BFD-STD-MIB (file:./hh3c-bfd-std.mib) converted on Sat Apr  2 10:27:40 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBfdSessStateChange .1.3.6.1.4.1.25506.2.72.0.1 "Status Events" Normal
FORMAT A notification sent when a session changes $*
SDESC
A notification sent when a session changes
state, entering state up or entering state down.
The session will enter state up finishing three times handshakes
, and will enter state down when the communication path is out
of work.
When the hh3cBfdSessState's value is state up, the session enters
state up, and the session enters state down when the
hh3cBfdSessState's value is state down.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
EDESC
#
#
#
EVENT hh3cBfdSessAuthFail .1.3.6.1.4.1.25506.2.72.0.2 "Status Events" Normal
FORMAT A notification sent when receiving a session $*
SDESC
A notification sent when receiving a session
with an authentication fail.
The hh3cBfdIfIndex is an index which represents a unique BFD
interface on this device.

Variables:
  1: hh3cBfdIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an index that represents a
         unique BFD interface on this device."
EDESC
#
#
#
EVENT hh3cBfdSessStateUp .1.3.6.1.4.1.25506.2.72.0.3 "Status Events" Normal
FORMAT A notification sent when a session changes state to up. $*
SDESC
A notification sent when a session changes state to up.
The session will enter state up finishing three times handshakes.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.
The hh3cBfdSessName is the name of the running BFD session.
The hh3cBfdVpnInstanceName contains a VPN's name under which
the BFD session runs.
The hh3cBfdLocalAddr contains an IP address of the local interface
from which the BFD packets is transmitted.
The hh3cBfdRemoteAddr contains an IP address of the remote interface
from which the BFD packets is transmitted.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
  4: hh3cBfdSessName
     Syntax="OCTETSTR"
     Descr="A name used to uniquely identify BFD sessions."
  5: hh3cBfdVpnInstanceName
     Syntax="OCTETSTR"
     Descr="The human-readable name of this VPN.  This MAY
         be equivalent to the [RFC2685] VPN-ID, but may
         also vary.  If it is set to the VPN ID, it MUST
         be equivalent to the value of mplsL3VpnVrfVpnId.
         It is strongly recommended that all sites supporting
         VRFs that are part of the same VPN use the same
         naming convention for VRFs as well as the same VPN
         ID."
  6: hh3cBfdLocalAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
  7: hh3cBfdRemoteAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
EDESC
#
#
#
EVENT hh3cBfdSessStateDown .1.3.6.1.4.1.25506.2.72.0.4 "Status Events" Normal
FORMAT A notification sent when a session changes state to down. $*
SDESC
A notification sent when a session changes state to down.
The session will enter state down when the communication path is out
of work.
The hh3cBfdSessIfIndex contains an interface's index under which
the BFD session runs.
The hh3cBfdSessIndex contains an index which represents a
unique BFD session on this device.
The hh3cBfdSessState is the state of the running BFD session.
The hh3cBfdSessName is the name of the running BFD session.
The hh3cBfdVpnInstanceName contains a VPN's name under which
the BFD session runs.
The hh3cBfdLocalAddr contains an IP address of the local interface
from which the BFD packets is transmitted.
The hh3cBfdRemoteAddr contains an IP address of the remote interface
from which the BFD packets is transmitted.

Variables:
  1: hh3cBfdSessIfIndex
     Syntax="INTEGER32"
     Descr="This variable contains an interface's index under which the BFD
         session runs."
  2: hh3cBfdSessIndex
     Syntax="UNSIGNED32"
     Descr="This variable contains an index which represents a
         unique BFD session on this device."
  3: hh3cBfdSessState
     Syntax="INTEGER"
       0: adminDown
       1: down
       2: init
       3: up
     Descr="The state of the running BFD session.

         There are three states through which a session normally
         proceeds, two for establishing a session (Init and Up)
         and one for tearing down a session (Down.)  This allows
         a three-way handshake for both session establishment and
         session teardown (assuring that both systems are aware of
         all session state changes.)  A fourth state (AdminDown)
         exists so that a session can be administratively put down
         indefinitely.

         The Down state means that the session is down (or has just been
         created.) A session remains in Down state until the remote
         system indicates that it agrees that the session is down by
         sending a BFD Control packet with the State field set to
         anything other than Up.  If that packet signals Down state,
         the session advances to Init state;  if that packet signals
         Init state, the session advances to Up state.

         Init state means that the remote system is 0communicating,
         and the local system desires to bring the session up, but
         the remote system does not yet realize it.  A session will
         remain in Init state until either a BFD Control Packet is
         received that is signaling Init or Up state (in which case
         the session advances to Up state) or until the detection time
         expires, meaning that communication with the remote system
         has been lost (in which case the session advances to Down
         state.)

         Up state means that the BFD session has successfully been
         established, and implies that connectivity between the systems
         is working.  The session will remain in the Up state until either
         connectivity fails, or the session is taken down administratively.
         If either the remote system signals Down state, or the detection
         time expires, the session advances to Down state.

         AdminDown state means that the session is being held
         administratively down.  This causes the remote system to enter
         Down state, and remain there until the local system exits
         AdminDown state."
  4: hh3cBfdSessName
     Syntax="OCTETSTR"
     Descr="A name used to uniquely identify BFD sessions."
  5: hh3cBfdVpnInstanceName
     Syntax="OCTETSTR"
     Descr="The human-readable name of this VPN.  This MAY
         be equivalent to the [RFC2685] VPN-ID, but may
         also vary.  If it is set to the VPN ID, it MUST
         be equivalent to the value of mplsL3VpnVrfVpnId.
         It is strongly recommended that all sites supporting
         VRFs that are part of the same VPN use the same
         naming convention for VRFs as well as the same VPN
         ID."
  6: hh3cBfdLocalAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
  7: hh3cBfdRemoteAddr
     Syntax="OCTETSTR"
     Descr="This variable defines IP address of the local interface
         from which the BFD packets is transmitted.
         It can also be used to enabled BFD on a specific
         interface. The value is set to zero when BFD session is not
         associated with a specific interface."
EDESC
#
#
#
EVENT hh3cBfdSessReachLimit .1.3.6.1.4.1.25506.2.72.0.5 "Status Events" Normal
FORMAT A notification would be sent when the number of active BFD sessions $*
SDESC
A notification would be sent when the number of active BFD sessions
reached this device's upper limit and no more session could be
activated.
The hh3cBfdSessNumberLimit is the active session limit of this device.
Variables:
  1: hh3cBfdSessNumberLimit
     Syntax="UNSIGNED32"
     Descr="This variable is the active session limit of this device."
EDESC
#
#
#
#
MIB: HH3C-BGP4V2-MIB (file:./hh3c-bgp4v2.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBgp4v2Established .1.3.6.1.4.1.25506.2.183.0.1 "Status Events" Normal
FORMAT The hh3cBgp4v2Established event is generated when the BGP4+ $*
SDESC
The hh3cBgp4v2Established event is generated when the BGP4+
FSM enters the ESTABLISHED state.
Variables:
  1: hh3cBgp4v2PeerRemoteAddr
     Syntax="OCTETSTR"
     Descr="The remote IPv6 address of this entry's BGP
        peer."
  2: hh3cBgp4v2PeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
        peer on this connection.  If no error has
        occurred, this field is zero.  Otherwise, the
        first byte of this two byte OCTET STRING
        contains the error code, and the second byte
        contains the subcode."
  3: hh3cBgp4v2PeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: opensent
       5: openconfirm
       6: established
     Descr="The BGP peer connection state."
EDESC
#
#
#
EVENT hh3cBgp4v2BackwardTransition .1.3.6.1.4.1.25506.2.183.0.2 "Status Events" Normal
FORMAT The hh3cBgp4v2BackwardTransition event is generated when $*
SDESC
The hh3cBgp4v2BackwardTransition event is generated when
the BGP4+ FSM moves from a higher numbered state to a lower
numbered state.
Due to the nature of the BGP state machine, an
implementation MAY rate limit the generation of this event.
An implementation MAY also generate this notification ONLY
when the state machine moves out of the established state.
An implementation should document its specific behavior.
Variables:
  1: hh3cBgp4v2PeerRemoteAddr
     Syntax="OCTETSTR"
     Descr="The remote IPv6 address of this entry's BGP
        peer."
  2: hh3cBgp4v2PeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
        peer on this connection.  If no error has
        occurred, this field is zero.  Otherwise, the
        first byte of this two byte OCTET STRING
        contains the error code, and the second byte
        contains the subcode."
  3: hh3cBgp4v2PeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: opensent
       5: openconfirm
       6: established
     Descr="The BGP peer connection state."
EDESC
#
#
#
#
MIB: HH3C-BGP-EVPN-MIB (file:./hh3c-bgp-evpn.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BGP-VPN-MIB (file:./hh3c-bgp-vpn.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cBgpVpnRpkiSessionRoaExceed .1.3.6.1.4.1.25506.2.202.3.2.0.1 "Status Events" Normal
FORMAT The RPKI SessionRoaExceed event will be generated when the number of rpki session ROA exceeds. $*
SDESC
The RPKI SessionRoaExceed event will be generated when the number of rpki session ROA exceeds.
Variables:
  1: hh3cBgpVpnRpkiSessionRoaLimitNum
     Syntax="UNSIGNED32"
     Descr="Restriction number of rpki session ROA."
EDESC
#
#
#
EVENT hh3cBgpVpnRpkiSessionRoaExceedClear .1.3.6.1.4.1.25506.2.202.3.2.0.2 "Status Events" Normal
FORMAT Generate rpki sessionroaedeclear event when the number of rpki session ROAs exceeds clear. $*
SDESC
Generate rpki sessionroaedeclear event when the number of rpki session ROAs exceeds clear.
Variables:
  1: hh3cBgpVpnRpkiSessionRoaLimitNum
     Syntax="UNSIGNED32"
     Descr="Restriction number of rpki session ROA."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteNumThresholdExceed .1.3.6.1.4.1.25506.2.202.4.0.1 "Status Events" Normal
FORMAT This notification is generated when the number of routes received from the BGP peer exceeds the alarm threshold. $*
SDESC
This notification is generated when the number of routes received from the BGP peer exceeds the alarm threshold.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteNumThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.2 "Status Events" Normal
FORMAT This notification is generated when the number of routes received from the BGP peer decreases below the alarm threshold. $*
SDESC
This notification is generated when the number of routes received from the BGP peer decreases below the alarm threshold.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteExceed .1.3.6.1.4.1.25506.2.202.4.0.3 "Status Events" Normal
FORMAT This notification is generated when bgp peer session route number exceed. $*
SDESC
This notification is generated when bgp peer session route number exceed.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerRouteExceedClear .1.3.6.1.4.1.25506.2.202.4.0.4 "Status Events" Normal
FORMAT This notification is generated when bgp peer session route number exceed clear. $*
SDESC
This notification is generated when bgp peer session route number exceed clear.
Variables:
  1: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  2: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
EDESC
#
#
#
EVENT hh3cBgpPeerEstablished .1.3.6.1.4.1.25506.2.202.4.0.5 "Status Events" Normal
FORMAT When the BGP FSM enters the established state, the BGP established event is generated. $*
SDESC
When the BGP FSM enters the established state, the BGP established event is generated.
Variables:
  1: hh3cBgpPeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
          peer on this connection.  If no error has
          occurred, this field is zero.  Otherwise, the
          first byte of this two byte OCTET STRING
          contains the error code, and the second byte
          contains the subcode."
  2: hh3cBgpPeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: openSent
       5: openConfirm
       6: established
     Descr="The status of the remote BGP peer, including:
            1: Idle(1)
            2: Connect(2)
            3: Active(3)
            4: OpenSent(4)
            5: OpenConfirm(5)
            6: Established(6)"
EDESC
#
#
#
EVENT hh3cBgpPeerBackwardTransition .1.3.6.1.4.1.25506.2.202.4.0.6 "Status Events" Normal
FORMAT The BGPBackwardTransition Event is generated $*
SDESC
The BGPBackwardTransition Event is generated
when the BGP FSM number moves from a higher
state to a lower state.
Variables:
  1: hh3cBgpPeerLastError
     Syntax="OCTETSTR"
     Descr="The last error code and subcode seen by this
          peer on this connection.  If no error has
          occurred, this field is zero.  Otherwise, the
          first byte of this two byte OCTET STRING
          contains the error code, and the second byte
          contains the subcode."
  2: hh3cBgpPeerState
     Syntax="INTEGER"
       1: idle
       2: connect
       3: active
       4: openSent
       5: openConfirm
       6: established
     Descr="The status of the remote BGP peer, including:
            1: Idle(1)
            2: Connect(2)
            3: Active(3)
            4: OpenSent(4)
            5: OpenConfirm(5)
            6: Established(6)"
  3: hh3cBgpPeerUnAvaiReason
     Syntax="INTEGER"
       1: otherErrCode
       10: unsupportedOptionalParameter
       11: authenticationFailure
       12: unacceptableHoldTime
       13: unsupportedCapability
       14: malformedAttributeList
       15: unrecognizedWellknownAttr
       16: missingWellknownAttribute
       17: attributeFlagsError
       18: attributeLengthError
       19: invalidORIGINAttribute
       2: errSubCodeUnspecified
       20: asRoutingLoop
       21: invalidNEXTHOPAttribute
       22: optionalAttributeError
       23: invalidNetworkField
       24: malformedASPATH
       25: receiveUnexpectedMessageinOpenSent
       26: receiveUnexpectedMessageinOpenConfirm
       27: receiveUnexpectedMessageinEstablished
       28: maximumNumberofPrefixesReached
       29: administrativeShutdown
       3: unknownErrSubcode
       30: peerDeconfigured
       31: administrativeReset
       32: connectionRejected
       33: otherConfigurationChange
       34: connectionCollisionResolution
       35: outofResources
       4: connectionNoSynchronized
       5: badMessageLength
       6: badMessageType
       7: unsupportedVersionNumber
       8: badPeerAS
       9: badBGPIdentifier
     Descr="The reason of BGP states change."
EDESC
#
#
#
EVENT hh3cBgpVrfRouteNumReachThreshold .1.3.6.1.4.1.25506.2.202.4.0.7 "Status Events" Normal
FORMAT The VPN instance routes reached the alarm threshould. $*
SDESC
The VPN instance routes reached the alarm threshould.
Variables:
  1: hh3cBgpVpnRouteType
     Syntax="UNSIGNED32"
     Descr="Route type."
  2: hh3cBgpVpnInstName
     Syntax="OCTETSTR"
     Descr="VPN instance name."
  3: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  4: hh3cBgpVpnCurrRouteNum
     Syntax="UNSIGNED32"
     Descr="Current number of BGP peer routes."
  5: hh3cBgpVpnThresholdValue
     Syntax="UNSIGNED32"
     Descr="Total threshold value."
EDESC
#
#
#
EVENT hh3cBgpVrfRouteNumReachThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.8 "Status Events" Normal
FORMAT The VPN instance routes fell below the clear alarm threshold. $*
SDESC
The VPN instance routes fell below the clear alarm threshold.
Variables:
  1: hh3cBgpVpnRouteType
     Syntax="UNSIGNED32"
     Descr="Route type."
  2: hh3cBgpVpnInstName
     Syntax="OCTETSTR"
     Descr="VPN instance name."
  3: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  4: hh3cBgpVpnCurrRouteNum
     Syntax="UNSIGNED32"
     Descr="Current number of BGP peer routes."
  5: hh3cBgpVpnThresholdValue
     Syntax="UNSIGNED32"
     Descr="Total threshold value."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteThresholdExceed .1.3.6.1.4.1.25506.2.202.4.0.9 "Status Events" Normal
FORMAT This notification is generated when when the number of $*
SDESC
This notification is generated when when the number of
routes received by the neighbor under the BGP address family
reaches an alarm threshold state.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
  4: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteThresholdClear .1.3.6.1.4.1.25506.2.202.4.0.10 "Status Events" Normal
FORMAT This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbor below the BGP address
family drops below the alert threshold.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpPeerConfigRouteLimitThreshold
     Syntax="UNSIGNED32"
     Descr="Denotes the alarm threshold (%) of the maximum routes received from the BGP peer."
  4: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteExceed .1.3.6.1.4.1.25506.2.202.4.0.11 "Status Events" Normal
FORMAT This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbor under the BGP address
family reaches a maximum state.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
EVENT hh3cBgpPeerAFRouteExceedClear .1.3.6.1.4.1.25506.2.202.4.0.12 "Status Events" Normal
FORMAT This notification is generated when the number of $*
SDESC
This notification is generated when the number of
routes received by the neighbors below the BGP address
family drops below a maximum.
Variables:
  1: hh3cBgpVpnAddressFamily
     Syntax="UNSIGNED32"
     Descr="Address family."
  2: hh3cBgpPeerConfigRouteLimitNum
     Syntax="UNSIGNED32"
     Descr="Denotes the maximum routes received from the BGP peer."
  3: hh3cBgpInstanceName
     Syntax="OCTETSTR"
     Descr="The parameter of BGP instance name."
EDESC
#
#
#
#
MIB: HH3C-BLG-MIB (file:./hh3c-blg.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BPA-MIB (file:./hh3c-bpa.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-BRAS-ACCESS-MIB (file:./hh3c-bras-access.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CATV-TRANSCEIVER-MIB (file:./hh3c-catv-transceiver.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CBQOS2-MIB (file:./hh3c-cbqos2.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCBQoSIfPolicyChanged .1.3.6.1.4.1.25506.2.65.2.1.7.0.1 "Status Events" Normal
FORMAT This notification will be sent when the applying status $*
SDESC
This notification will be sent when the applying status
of the policy on the interface is changed.
Variables:
  1: hh3cCBQoSIfApplyPolicyIfIndex
     Syntax="INTEGER32"
     Descr="Interface Index, equal to ifIndex."
  2: hh3cCBQoSIfApplyPolicyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)
        "
EDESC
#
#
#
EVENT hh3cCBQoSVlanPolicyChanged .1.3.6.1.4.1.25506.2.65.2.1.7.0.2 "Status Events" Normal
FORMAT This notification will be sent when the applying status $*
SDESC
This notification will be sent when the applying status
of the policy on the VLAN is changed.
Variables:
  1: hh3cCBQoSVlanApplyPolicyVlanid
     Syntax="INTEGER32"
     Descr="Vlan of Ethernet Interface."
  2: hh3cCBQoSVlanApplyPolicyDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
EVENT hh3cCBQoSGlobalAclNotSupport .1.3.6.1.4.1.25506.2.65.2.1.7.0.3 "Status Events" Normal
FORMAT The global ACL configuration cannot work. $*
SDESC
The global ACL configuration cannot work.
Variables:
  1: hh3cCBQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cCBQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cCBQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cCBQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
EVENT hh3cCBQoSGlobalQPPBNotSupport .1.3.6.1.4.1.25506.2.65.2.1.7.0.4 "Status Events" Normal
FORMAT The global QPPB will not be effective. $*
SDESC
The global QPPB will not be effective.
Variables:
  1: hh3cCBQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cCBQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cCBQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cCBQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Policy direction:
         inbound (1)
         outbound (2)"
EDESC
#
#
#
#
MIB: HH3C-CFCARD-MIB (file:./hh3c-cfcard.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CFD-MIB (file:./hh3c-cfd.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-COMMON-SYSTEM-MIB (file:./hh3c-common-system.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cWriteSuccessTrap .1.3.6.1.4.1.25506.6.8.1 "Status Events" Normal
FORMAT Send a trap about write success. $*
SDESC
Send a trap about write success.
EDESC
#
#
#
EVENT hh3cWriteFailureTrap .1.3.6.1.4.1.25506.6.8.2 "Status Events" Normal
FORMAT Send a trap about write failure. $*
SDESC
Send a trap about write failure.
EDESC
#
#
#
EVENT hh3cRebootSendTrap .1.3.6.1.4.1.25506.6.8.3 "Status Events" Normal
FORMAT If a user restarts the device with command $*
SDESC
If a user restarts the device with command
'reboot', this trap will be sent two seconds
before the device reboots.
EDESC
#
#
#
EVENT hh3cSysColdStartTrap .1.3.6.1.4.1.25506.6.8.4 "Status Events" Normal
FORMAT System cold start trap. $*
SDESC
System cold start trap.
Variables:
  1: hh3cSysFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
EVENT hh3cSysWarmStartTrap .1.3.6.1.4.1.25506.6.8.5 "Status Events" Normal
FORMAT System warm start trap. $*
SDESC
System warm start trap.
Variables:
  1: hh3cSysFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
EVENT hh3cSysLoghostUnreachableTrap .1.3.6.1.4.1.25506.6.8.6 "Status Events" Normal
FORMAT This notification will be sent when a loghost becomes unreachable. $*
SDESC
This notification will be sent when a loghost becomes unreachable.
Variables:
  1: hh3cSysLoghostIndex
     Syntax="INTEGER32"
     Descr="Index of loghost."
  2: hh3cSysLoghostIpaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP address type of the loghost."
  3: hh3cSysLoghostIpaddress
     Syntax="OCTETSTR"
     Descr="IP address of the loghost."
  4: hh3cSysLoghostTrapVpnName
     Syntax="OCTETSTR"
     Descr="VPN name of the loghost."
EDESC
#
#
#
EVENT hh3cSysDyingGaspTrap .1.3.6.1.4.1.25506.6.8.7 "Status Events" Normal
FORMAT This notification will be sent upon loss of power. $*
SDESC
This notification will be sent upon loss of power.
EDESC
#
#
#
#
MIB: HH3C-CONFIG-MAN-MIB (file:./hh3c-config-man.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCfgManEventlog .1.3.6.1.4.1.25506.2.4.2.1 "Status Events" Normal
FORMAT The object calculates the checksum on the current config per 10 minutes and $*
SDESC
The object calculates the checksum on the current config per 10 minutes and
even if it is different from the saved config but if a trap has been sent
with the same checksum then don't send again until the checksum is different.
Variables:
  1: hh3cCfgLogSrcCmd
     Syntax="INTEGER"
       1: cmdLine
       2: snmp
       3: other
     Descr="Specify the source command which brought the log.
        Currently, we provide the following types of sources:
        1.cmdLine(1):configure log instigated by command line.
        2.snmp(2):configure log instigated by SNMPS.
        3.other(3):configure log instigated by other source unknown."
  2: hh3cCfgLogSrcData
     Syntax="INTEGER"
       1: erase
       2: runningData
       3: commandSource
       4: startupData
       5: local
       6: netFtp
       7: hotPlugging
     Descr="The source of the configuration data event.
        erase           erasing destination
        runningData     operational data alive
        commandSource   the command source itself
        startupData     what the system will use next reboot
        local           local NVRAM or flash
        netFtp          FTP network transfer
        hotPlugging     board is inserted or pulled out on line
        "
  3: hh3cCfgLogDesData
     Syntax="INTEGER"
       1: unknown
       2: runningData
       3: commandSource
       4: startupData
       5: local
       6: netFtp
       7: hotPlugging
     Descr="The destination for the configuration data event.
        unknown          unknown
        runningData     operational data alive
        commandSource   the command source itself
        startupData     what the system will use next reboot
        local           local NVRAM or flash
        netFtp          FTP network transfer
        hotPlugging     board is inserted or pulled out on line"
EDESC
#
#
#
EVENT hh3cCfgOperateCompletion .1.3.6.1.4.1.25506.2.4.2.2 "Status Events" Normal
FORMAT When create hh3cCfgOperateTable successfully, a $*
SDESC
When create hh3cCfgOperateTable successfully, a
notification may be generated.
Variables:
  1: hh3cCfgOperateType
     Syntax="INTEGER"
       1: running2Startup
       2: startup2Running
       3: running2Net
       4: net2Running
       5: net2Startup
       6: startup2Net
       7: running2File
       8: file2Running
     Descr="Specify the type of operation on configuration."
  2: hh3cCfgOperateTime
     Syntax="TICKS"
     Descr="Record the time taken for the operation.  This object will
        be like a stopwatch, starting when the operation
        starts, and stopping when the operation completes."
  3: hh3cCfgOperateState
     Syntax="INTEGER"
       1: opInProgress
       10: opDeviceError
       11: opDeviceNotProgrammable
       12: opDeviceFull
       13: opFileOpenError
       14: opFileTransferError
       15: opFileChecksumError
       16: opNoMemory
       17: opAuthFail
       18: opTimeOut
       19: opUnknownFailure
       2: opSuccess
       20: opInvalidConfigFile
       21: opSlaveFull
       22: opCopyToSlaveFailure
       3: opInvalidOperation
       4: opInvalidProtocol
       5: opInvalidSourceName
       6: opInvalidDestName
       7: opInvalidServerAddress
       8: opDeviceBusy
       9: opDeviceOpenError
     Descr="The operation state type in the hh3cCfgOperateTable."
  4: hh3cCfgOperateEndTime
     Syntax="TICKS"
     Descr="The value of sysUpTime when the configuration operation is finished."
  5: hh3cCfgOperFailReason
     Syntax="OCTETSTR"
     Descr="The failure reasons of configuration operation."
EDESC
#
#
#
EVENT hh3cCfgInvalidConfigFile .1.3.6.1.4.1.25506.2.4.2.3 "Status Events" Normal
FORMAT When the configuration file is invalid, this $*
SDESC
When the configuration file is invalid, this
notification will be generated.
Variables:
  1: hh3cCfgOperateType
     Syntax="INTEGER"
       1: running2Startup
       2: startup2Running
       3: running2Net
       4: net2Running
       5: net2Startup
       6: startup2Net
       7: running2File
       8: file2Running
     Descr="Specify the type of operation on configuration."
  2: hh3cCfgOperateFileName
     Syntax="OCTETSTR"
     Descr="When the object of hh3cCfgOperateType has the value of net2Startup, net2running,
        running2Net, running2File or file2Running, the value must be specified.

        The file name may include the path if applicable.

        If the value of hh3cCfgOperateType is net2Startup or net2running, this node specify the
        source file name of transfers.

        If the value of hh3cCfgOperateType is running2Net,
        this node specify the destination file name of transfers.

        When hh3cCfgOperateType has the value of startup2net, the object may not be
        created instead of using the file name of startup configuration file.

        If the value of hh3cCfgOperateType is running2File or file2Running,
        this node specifies the file name to be written or loaded."
  3: hh3cCfgFirstTrapTime
     Syntax="TICKS"
     Descr="Time when the first trap is sent."
EDESC
#
#
#
#
MIB: HH3C-CONTEXT-MIB (file:./hh3c-context.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CPDR-MIB (file:./hh3c-cpdr.mib) converted on Sat Apr  2 10:27:41 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-CUPM-CP-MIB (file:./hh3c-cupm-cp.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCupmCpProtoTnlUp .1.3.6.1.4.1.25506.2.194.0.1 "Status Events" Normal
FORMAT The notification is generated when $*
SDESC
The notification is generated when
CP device connects to VXLAN tunnel.
Variables:
  1: hh3cCupmCpVbUpID
     Syntax="INTEGER32"
     Descr="The number of UP device."
  2: hh3cCupmCpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  3: hh3cCupmCpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  4: hh3cCupmCpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  5: hh3cCupmCpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmCpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  7: hh3cCupmCpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
  8: hh3cCupmCpVbVxlanState
     Syntax="INTEGER"
       0: unknown
       1: up
       2: down
     Descr="The state of VXLAN protocol tunnel.
         0 (unknown) The VXLAN protocol tunnel is in unknown state.
         1 (up) The VXLAN protocol tunnel is in connected state.
         2 (down) The VXLAN protocol tunnel is in disconnected state."
EDESC
#
#
#
EVENT hh3cCupmCpProtoTnlDown .1.3.6.1.4.1.25506.2.194.0.2 "Status Events" Normal
FORMAT The notification is generated when $*
SDESC
The notification is generated when
CP device disconnects to VXLAN tunnel.
Variables:
  1: hh3cCupmCpVbUpID
     Syntax="INTEGER32"
     Descr="The number of UP device."
  2: hh3cCupmCpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  3: hh3cCupmCpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  4: hh3cCupmCpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  5: hh3cCupmCpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmCpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  7: hh3cCupmCpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
  8: hh3cCupmCpVbVxlanState
     Syntax="INTEGER"
       0: unknown
       1: up
       2: down
     Descr="The state of VXLAN protocol tunnel.
         0 (unknown) The VXLAN protocol tunnel is in unknown state.
         1 (up) The VXLAN protocol tunnel is in connected state.
         2 (down) The VXLAN protocol tunnel is in disconnected state."
EDESC
#
#
#
#
MIB: HH3C-CUPM-UP-MIB (file:./hh3c-cupm-up.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCupmUpProtoTnlUp .1.3.6.1.4.1.25506.2.195.0.1 "Status Events" Normal
FORMAT The notification is generated when $*
SDESC
The notification is generated when
UP device connects to VXLAN tunnel.
Variables:
  1: hh3cCupmUpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  2: hh3cCupmUpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  3: hh3cCupmUpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  4: hh3cCupmUpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  5: hh3cCupmUpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmUpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
EDESC
#
#
#
EVENT hh3cCupmUpProtoTnlDown .1.3.6.1.4.1.25506.2.195.0.2 "Status Events" Normal
FORMAT The notification is generated when $*
SDESC
The notification is generated when
UP device disconnects to VXLAN tunnel.
Variables:
  1: hh3cCupmUpVbVxlanID
     Syntax="INTEGER32"
     Descr="Part of the index for this table, this value
         identifies the VXLAN protocol tunnel."
  2: hh3cCupmUpVbSrcAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of local address to be used at a remote
         host for connecting VXLAN protocol tunnel."
  3: hh3cCupmUpVbSrcAddr
     Syntax="OCTETSTR"
     Descr="Specifies the local address to be used at a remote
         host for connecting VXLAN protocol tunnel.  The host
         address type is determined by the object value of corresponding
         hh3cCupmCpProtoTnlSrcAddrType."
  4: hh3cCupmUpVbDestAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Specifies the type of remote host for connecting the VXLAN
         protocol tunnel."
  5: hh3cCupmUpVbDestAddr
     Syntax="OCTETSTR"
     Descr="Specifies the remote host for connecting the VXLAN
         protocol tunnel."
  6: hh3cCupmUpVbVpnName
     Syntax="OCTETSTR"
     Descr="The VPN name, to which the rule will be applied.
         Default value is zero-length."
EDESC
#
#
#
#
MIB: HH3C-CUSP-MIB (file:./hh3c-cusp.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cCuspServerDisconnect .1.3.6.1.4.1.25506.2.190.1.2.0.1 "Status Events" Normal
FORMAT This trap is generated when the controller is disconnected $*
SDESC
This trap is generated when the controller is disconnected
from the agent. The disconnection reason is
hh3cCuspServerDisconnectReason.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
  6: hh3cCuspServerDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Connection became abnormal.
             1: An SSL connection became abnormal.
             2: BFD timed out.
             3: Version negotiation failed.
             4: Protocol disabled.
             5: Connection became abnormal when messages were being sent.
             6: Connection recovery failed.
             7: Received invalid packets or incorrectly processed received packets.
             8: Connection became abnormal when messages were being received.
             9: VPN instance deleted.
             10: A TCP connection became abnormal.
             11: Heartbeat packets sending failed.
             12: Heartbeat packets timed out.
             13: Configuration changes.
             14: Not enough memory."
EDESC
#
#
#
EVENT hh3cCuspServerConnect .1.3.6.1.4.1.25506.2.190.1.2.0.2 "Status Events" Normal
FORMAT This trap is generated when the controller is connected $*
SDESC
This trap is generated when the controller is connected
to the agent.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
EDESC
#
#
#
EVENT hh3cCuspClientDisconnect .1.3.6.1.4.1.25506.2.190.1.2.0.3 "Status Events" Normal
FORMAT This trap is generated when the agent is disconnected $*
SDESC
This trap is generated when the agent is disconnected
from the controller. The disconnection reason is
hh3cCuspClientDisconnectReason.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
  6: hh3cCuspClientDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Connection became abnormal.
             1: Configuration changes.
             2: Heartbeat packets timed out.
             3: Version negotiation failed.
             4: Receiving Hello packets timed out.
             5: A TCP connection became abnormal.
             6: VPN instance deleted.
             7: VRF service disabled.
             8: Resource request failed.
             9: BFD timed out.
             10: Not enough memory."
EDESC
#
#
#
EVENT hh3cCuspClientConnect .1.3.6.1.4.1.25506.2.190.1.2.0.4 "Status Events" Normal
FORMAT This trap is generated when the agent is connected $*
SDESC
This trap is generated when the agent is connected
to the controller.
Variables:
  1: hh3cCuspLocalIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection local IP address."
  2: hh3cCuspLocalIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection local IP address.
         The type of this address is determined by the value of
         hh3cCuspLocalIPaddressType.
        "
  3: hh3cCuspRemoteIPaddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="IP addresses type of the CUSP connection remote IP address."
  4: hh3cCuspRemoteIPaddress
     Syntax="OCTETSTR"
     Descr="CUSP connection remote IP address.
         The type of this address is determined by the value of
         hh3cCuspRemoteIPaddressType.
        "
  5: hh3cCuspVpnInstanceName
     Syntax="OCTETSTR"
     Descr="VPN name for a CUSP connection."
EDESC
#
#
#
#
MIB: HH3C-DAR-MIB (file:./hh3c-dar.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP4-MIB (file:./hh3c-dhcp4.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcpServer2AddrExhaust .1.3.6.1.4.1.25506.2.122.5.0.1 "Status Events" Normal
FORMAT This trap is generated when addresses are exhausted $*
SDESC
This trap is generated when addresses are exhausted
in the DHCP pool.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2AddrExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.2 "Status Events" Normal
FORMAT This trap is generated when the DHCP pool recovers from $*
SDESC
This trap is generated when the DHCP pool recovers from
address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2IpUsageOverflow .1.3.6.1.4.1.25506.2.122.5.0.3 "Status Events" Normal
FORMAT This trap is generated when the IP address usage of DHCP $*
SDESC
This trap is generated when the IP address usage of DHCP
server pool above the threshold.  The value of the IP address
usage is sampled for every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2AllocOverflow .1.3.6.1.4.1.25506.2.122.5.0.4 "Status Events" Normal
FORMAT This trap is generated when the success rate of allocation $*
SDESC
This trap is generated when the success rate of allocation
of DHCP server IP address in 5 minutes below the threshold.
EDESC
#
#
#
EVENT hh3cDhcpServer2IpUsageOverflowRecov .1.3.6.1.4.1.25506.2.122.5.0.5 "Status Events" Normal
FORMAT This trap is generated when the IP address usage of DHCP $*
SDESC
This trap is generated when the IP address usage of DHCP
server pool reduced to 90% of the threshold.
The value of the IP address usage is sampled for every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetUsageOverflow .1.3.6.1.4.1.25506.2.122.5.0.6 "Status Events" Normal
FORMAT This trap is generated when the subnet usage of DHCP $*
SDESC
This trap is generated when the subnet usage of DHCP
server pool has reached or exceeded the threshold. The IP address usage
data is polled every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetUsageOverflowRecov .1.3.6.1.4.1.25506.2.122.5.0.7 "Status Events" Normal
FORMAT This trap is generated when the subnet usage in the DHCP $*
SDESC
This trap is generated when the subnet usage in the DHCP
server pool has dropped to or below 90% of the threshold.
The IP address usage data is polled every 5 minutes.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetExhaust .1.3.6.1.4.1.25506.2.122.5.0.8 "Status Events" Normal
FORMAT This trap is generated when all IP addresses $*
SDESC
This trap is generated when all IP addresses
in the DHCP pool are exhausted.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2NetExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.9 "Status Events" Normal
FORMAT This trap is generated when the DHCP pool recovers from $*
SDESC
This trap is generated when the DHCP pool recovers from
IP address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCP server pool index."
  2: hh3cDhcpServer2PoolName
     Syntax="OCTETSTR"
     Descr="DHCP server pool name.

         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcpServer2GpNetExhaust .1.3.6.1.4.1.25506.2.122.5.0.10 "Status Events" Normal
FORMAT This trap is generated when all IP addresses $*
SDESC
This trap is generated when all IP addresses
in the DHCP pool group are exhausted.
Variables:
  1: hh3cDhcpServer2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCP server pool group name."
EDESC
#
#
#
EVENT hh3cDhcpServer2GpNetExhaustRecov .1.3.6.1.4.1.25506.2.122.5.0.11 "Status Events" Normal
FORMAT This trap is generated when the DHCP pool group recovers from $*
SDESC
This trap is generated when the DHCP pool group recovers from
IP address exhaustion.
Variables:
  1: hh3cDhcpServer2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCP server pool group name."
EDESC
#
#
#
#
MIB: HH3C-DHCP6-MIB (file:./hh3c-dhcp6.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcp6Server2AddrExhaust .1.3.6.1.4.1.25506.2.179.2.0.1 "Status Events" Normal
FORMAT This trap is generated when IPv6 addresses are exhausted $*
SDESC
This trap is generated when IPv6 addresses are exhausted
in the DHCPv6 address pool.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2AddrExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.2 "Status Events" Normal
FORMAT This trap is generated when the DHCPv6 address pool recovers from $*
SDESC
This trap is generated when the DHCPv6 address pool recovers from
IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.3 "Status Events" Normal
FORMAT This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool is above the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.4 "Status Events" Normal
FORMAT This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool drops down to 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdExhaust .1.3.6.1.4.1.25506.2.179.2.0.5 "Status Events" Normal
FORMAT This trap is generated when IPv6 prefixes are exhausted $*
SDESC
This trap is generated when IPv6 prefixes are exhausted
in the DHCPv6 address pool.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.6 "Status Events" Normal
FORMAT This trap is generated when the DHCPv6 prefixes pool recovers from $*
SDESC
This trap is generated when the DHCPv6 prefixes pool recovers from
IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.7 "Status Events" Normal
FORMAT This trap is generated when the IPv6 prefixes usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 prefixes usage of DHCPv6
address pool is above the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.8 "Status Events" Normal
FORMAT This trap is generated when the IPv6 prefixes usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 prefixes usage of DHCPv6
address pool drops down to 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.9 "Status Events" Normal
FORMAT This trap is generated when the IPv6 address usage in the DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage in the DHCPv6
address pool has reached or exceeded the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.10 "Status Events" Normal
FORMAT This trap is generated when the IPv6 address usage in the DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage in the DHCPv6
address pool has dropped to or below 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.11 "Status Events" Normal
FORMAT This trap is generated when all addresses $*
SDESC
This trap is generated when all addresses
in the DHCPv6 address pool are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2IpNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.12 "Status Events" Normal
FORMAT This trap is generated when the DHCPv6 address pool has recovered $*
SDESC
This trap is generated when the DHCPv6 address pool has recovered
from IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetUsageOverflow .1.3.6.1.4.1.25506.2.179.2.0.13 "Status Events" Normal
FORMAT This trap is generated when the IPv6 address usage of DHCPv6 $*
SDESC
This trap is generated when the IPv6 address usage of DHCPv6
address pool has reached or exceeded the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetUsageOverflowRecov .1.3.6.1.4.1.25506.2.179.2.0.14 "Status Events" Normal
FORMAT This trap is generated when the prefix usage in the DHCPv6 $*
SDESC
This trap is generated when the prefix usage in the DHCPv6
address pool has dropped to or below 90% of the threshold.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.15 "Status Events" Normal
FORMAT This trap is generated when all prefixes $*
SDESC
This trap is generated when all prefixes
in the DHCPv6 address pool are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2PdNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.16 "Status Events" Normal
FORMAT This trap is generated when the IPv6 prefix pool recovers from $*
SDESC
This trap is generated when the IPv6 prefix pool recovers from
prefix exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolIndex
     Syntax="UNSIGNED32"
     Descr="DHCPv6 server pool index."
  2: hh3cDhcp6Server2PoolName
     Syntax="OCTETSTR"
     Descr="DHCPv6 pool name.
         Once this object is created, the value of this object cannot
         be modified."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpIpNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.17 "Status Events" Normal
FORMAT This trap is generated when all addresses $*
SDESC
This trap is generated when all addresses
in the DHCPv6 address pool group are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpIpNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.18 "Status Events" Normal
FORMAT This trap is generated when the DHCPv6 address pool group has recovered $*
SDESC
This trap is generated when the DHCPv6 address pool group has recovered
from IPv6 address exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpPdNetExhaust .1.3.6.1.4.1.25506.2.179.2.0.19 "Status Events" Normal
FORMAT This trap is generated when all prefixes $*
SDESC
This trap is generated when all prefixes
in the DHCPv6 address pool group are exhausted.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
EVENT hh3cDhcp6Server2GpPdNetExhaustRecov .1.3.6.1.4.1.25506.2.179.2.0.20 "Status Events" Normal
FORMAT This trap is generated when the IPv6 prefix pool group recovers from $*
SDESC
This trap is generated when the IPv6 prefix pool group recovers from
prefix exhaustion.
Variables:
  1: hh3cDhcp6Server2PoolGpName
     Syntax="OCTETSTR"
     Descr="DHCPv6 server pool group name."
EDESC
#
#
#
#
MIB: HH3C-DHCP6-SERVER-MIB (file:./hh3c-dhcp6-server.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPRELAY-MIB (file:./hh3c-dhcprelay.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPR-MIB (file:./hh3c-dhcpr.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP-SERVER-MIB (file:./hh3c-dhcp-server.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPS-MIB (file:./hh3c-dhcps.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCP-SNOOP2-MIB (file:./hh3c-dhcp-snoop2.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DHCPSNOOP-MIB (file:./hh3c-dhcpsnoop.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDhcpSnoopSpoofServerDetected .1.3.6.1.4.1.25506.2.36.2.0.1 "Status Events" Normal
FORMAT To detect unauthorized DHCP servers on a network, the DHCP snooping $*
SDESC
To detect unauthorized DHCP servers on a network, the DHCP snooping
device sends DHCP-DISCOVER messages through its downstream port
(which is connected to the DHCP clients).
If any response (DHCP-OFFER message) is received from the downstream port,
an unauthorized DHCP server is considered present, and then the device
sends a trap.
With unauthorized DHCP server detection enabled, the interface sends a
DHCP-DISCOVER message to detect unauthorized DHCP servers on the network.
If this interface receives a DHCP-OFFER  message,  the DHCP server which
sent it is considered unauthorized. 
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cdot1qVlanIndex
     Syntax="INTEGER32"
     Descr="The VLAN-ID."
  3: hh3cDhcpSnoopSpoofServerMac
     Syntax="OCTETSTR"
     Descr="MAC address of the spoofing server and it is derived from
          link-layer header of offer packet. If the offer packet is relayed
          by dhcp relay entity, it may be the MAC address of relay entity.
          "
  4: hh3cDhcpSnoopSpoofServerIP
     Syntax="IPADDR"
     Descr="IP address of the spoofing server and it is derived from
          IP header of offer packet. A tricksy host may send offer packet use
          other host's address, so this address can not always be  trust.
          "
EDESC
#
#
#
EVENT hh3cDhcpSnoopNewBinding .1.3.6.1.4.1.25506.2.36.2.0.2 "Status Events" Normal
FORMAT The device sends a trap when adding a new binding. $*
SDESC
The device sends a trap when adding a new binding.
Variables:
  1: hh3cDhcpSnoopBindingIP
     Syntax="IPADDR"
     Descr="IP address of a new binding. "
  2: hh3cDhcpSnoopBindingMac
     Syntax="OCTETSTR"
     Descr="MAC address of a new binding. "
EDESC
#
#
#
#
MIB: HH3C-DISK-MIB (file:./hh3c-disk.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DLDP2-MIB (file:./hh3c-dldp2.mib) converted on Sat Apr  2 10:27:42 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDldp2TrapUniLink .1.3.6.1.4.1.25506.2.117.4.0.1 "Status Events" Normal
FORMAT This trap is generated when DLDP detects a unidirectional link, $*
SDESC
This trap is generated when DLDP detects a unidirectional link,
ifIndex and ifDescr identify the port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cDldp2TrapBidLink .1.3.6.1.4.1.25506.2.117.4.0.2 "Status Events" Normal
FORMAT This trap is generated when DLDP detects a bidirectional link, $*
SDESC
This trap is generated when DLDP detects a bidirectional link,
ifIndex and ifDescr identify the port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-DLDP-MIB (file:./hh3c-dldp.mib) converted on Sat Apr  2 10:27:43 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDLDPUnidirectionalPort .1.3.6.1.4.1.25506.2.43.2.1.1 "Status Events" Normal
FORMAT It will send a SNMP trap when the state of a port $*
SDESC
It will send a SNMP trap when the state of a port
has changed to unidirectional-link.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
#
MIB: HH3C-DNS-MIB (file:./hh3c-dns.mib) converted on Sat Apr  2 10:27:43 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOMAIN-MIB (file:./hh3c-domain.mib) converted on Sat Apr  2 10:27:43 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cUserIPAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.1 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IP address allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IP pool
Add new IP pool to this domain.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.2 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Overallocated IP address recovery
2 Notice/Trap generation cause:  Recover from a state where IP address allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPLowerlimitWarningAlarm .1.3.6.1.4.1.25506.2.46.5.0.3 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IP address allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set in domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPLowerlimitWarningResume .1.3.6.1.4.1.25506.2.46.5.0.4 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Less-allocated IP address recovery
2 Notice/Trap generation cause:  Recover from a state where IP address allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPUsedPercent
     Syntax="OCTETSTR"
     Descr="Address occupancy rate in the IP pool."
  2: hh3cDomainIPv4PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv4 address usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv4 address usage."
  3: hh3cDomainIPv4PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv4 address usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv4 address usage."
EDESC
#
#
#
EVENT hh3cUserIPv6AllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.5 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IPv6 address allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 address pool
Add new IPv6 address pool to this domain .

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6AllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.6 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Overallocated IPv6 address recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 address allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6LowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.7 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IPv6 address allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserIPv6LowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.8 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Less-allocated IPv6 address recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 address allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainIPv6AddressUsedPercent
     Syntax="OCTETSTR"
     Descr="IPv6 Address occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the IPv6 Address occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.9 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IPv6 NDRA prefix allocable threshold
2 Notice/Trap generation cause: Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 NDRA prefix pool
Add new IPv6 NDRA prefix pool to this domain .

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.10 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Overallocated NDRA prefix recovery
2 Notice/Trap generation cause:  Recover from a state where NDRA prefix allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfLowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.11 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach NDRA prefix allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserNDRAPfLowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.12 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Less-allocated NDRA prefix recovery
2 Notice/Trap generation cause:  Recover from a state where NDRA Prefix allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainNDRAPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="NDRA prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the NDRA prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfAllocAlarm .1.3.6.1.4.1.25506.2.46.5.0.13 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IPv6 DHCPv6-PD prefix allocable threshold
2 Notice/Trap generation cause:  Reach the threshold set in domain
3 Repair suggestions:
Check whether to renew the configuration of the BAS IPv6 DHCPv6-PD prefix pool
Add new IPv6 DHCPv6-PD prefix pool to this domain .

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfAllocAlarmResume .1.3.6.1.4.1.25506.2.46.5.0.14 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Overallocated IPv6 DHCPv6-PD prefix recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 DHCPv6-PD Prefix allocable threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfLowlimitWarnAlarm .1.3.6.1.4.1.25506.2.46.5.0.15 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Reach IPv6 DHCPv6-PD prefix allocable lower limit threshold
2 Notice/Trap generation cause:  Reach the lower limit threshold set at domain
3 Repair suggestions:
Check the domain.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserPDPfLowlimitWarnResume .1.3.6.1.4.1.25506.2.46.5.0.16 "Status Events" Normal
FORMAT $*
SDESC

1 Notice/Trap name:  Less-allocated IPv6 DHCPv6-PD prefix recovery
2 Notice/Trap generation cause:  Recover from a state where IPv6 DHCPv6-PD Prefix allocable lower limit threshold are reached.
3 Repair suggestions: NA.

Variables:
  1: hh3cDomainPDPrefixUsedPercent
     Syntax="OCTETSTR"
     Descr="PD prefix occupancy rate in the IP pool.
        The value is in percentage.
        For example: 0.79 means the PD prefix occupancy rate in the IP pool is 0.79%."
  2: hh3cDomainIPv6PoolUpperValue
     Syntax="INTEGER32"
     Descr="High alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 0 indicates that no alarm notifications will be generated for high
        authorization IPv6 address or prefix usage."
  3: hh3cDomainIPv6PoolLowerValue
     Syntax="INTEGER32"
     Descr="Low alarm threshold for authorization IPv6 address or prefix usage, in percentage.
        Value 100 indicates that no alarm notifications will be generated for low
        authorization IPv6 address or prefix usage."
EDESC
#
#
#
EVENT hh3cUserWebServerDownAlarm .1.3.6.1.4.1.25506.2.46.5.0.17 "Status Events" Normal
FORMAT $*
SDESC

This trap is generated when the Web server is not reachable.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserWebServerUpAlarm .1.3.6.1.4.1.25506.2.46.5.0.18 "Status Events" Normal
FORMAT $*
SDESC

This trap is generated when the Web server becomes reachable.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserWebServerChangeAlarm .1.3.6.1.4.1.25506.2.46.5.0.19 "Status Events" Normal
FORMAT $*
SDESC

This trap is generated when the valid URL of the Web Server changes.

Variables:
  1: hh3cDomainActiveWebServerUrl
     Syntax="OCTETSTR"
     Descr="Active URL(Uniform Resource Locator) of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerDownAlarm .1.3.6.1.4.1.25506.2.46.5.0.20 "Status Events" Normal
FORMAT $*
SDESC

This trap is generated when the IPv6 Web server is not reachable.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerUpAlarm .1.3.6.1.4.1.25506.2.46.5.0.21 "Status Events" Normal
FORMAT $*
SDESC

This trap is generated when the IPv6 Web server becomes reachable.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
EVENT hh3cUserIPv6WebServerChangeAlarm .1.3.6.1.4.1.25506.2.46.5.0.22 "Status Events" Normal
FORMAT $*
SDESC

This trap is generated when the valid IPv6 URL of the Web Server changes.

Variables:
  1: hh3cDomainActiveWebServerIpv6Url
     Syntax="OCTETSTR"
     Descr="Active IPv6 URL of the Web server in ISP domain."
EDESC
#
#
#
#
MIB: HH3C-DOT11-ACMT-MIB (file:./hh3c-dot11-acmt.mib) converted on Sat Apr  2 10:27:43 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot11ACMtTunnelSetupTrap .1.3.6.1.4.1.25506.2.75.1.3.0.1 "Status Events" Normal
FORMAT This notification is sent by AC when CAPWAP tunnel becomes up. $*
SDESC
This notification is sent by AC when CAPWAP tunnel becomes up.
By this way, NMS will immediately know tunnel up event.
It is unnecessary to identify whether it is control or data
tunnel.
Variables:
  1: hh3cDot11CurrTunnelAPID
     Syntax="OCTETSTR"
     Descr="To uniquely identify the CAPWAP tunnel set up between the AP
        identified by APID and a specific AC."
  2: hh3cDot11ACMtTrapTunlUpInfo
     Syntax="INTEGER"
       1: up
     Descr="Represents the reason for tunnel up.
        The following values are supported:
        up(1)  - The AP joined AC.
        "
  3: hh3cDot11ACMtTrapTnlAPName
     Syntax="OCTETSTR"
     Descr="Represents name of the AP which sets up the tunnel with the AC.
        "
  4: hh3cDot11ACMtTrapTnlAPIPAddr
     Syntax="IPADDR"
     Descr="Represents IP address of the AP which sets up the tunnel with the AC.
        "
  5: hh3cDot11ACMtTrapAPIPv6Addr
     Syntax="OCTETSTR"
     Descr="Represents IPv6 address of the AP which sets up the tunnel with
        the AC."
  6: hh3cDot11ACMtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  7: hh3cDot11ACMtTrapAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of an AP."
EDESC
#
#
#
EVENT hh3cDot11ACMtTunnelDownTrap .1.3.6.1.4.1.25506.2.75.1.3.0.2 "Status Events" Normal
FORMAT This notification is sent by AC when CAPWAP tunnel becomes down. $*
SDESC
This notification is sent by AC when CAPWAP tunnel becomes down.
By this way, NMS will immediately know tunnel down event.
It is unnecessary to identify whether it is control or data
tunnel.
Variables:
  1: hh3cDot11CurrTunnelAPID
     Syntax="OCTETSTR"
     Descr="To uniquely identify the CAPWAP tunnel set up between the AP
        identified by APID and a specific AC."
  2: hh3cDot11ACMtTrapTunlDwnInfo
     Syntax="INTEGER"
       1: tunnelTimeout
       2: keyUpdateFailure
       3: apReset
       4: apCrash
       5: apDeleted
       6: apCfgChange
     Descr="Represents the reason for tunnel down.
        The following values are supported:
        tunnelTimeout     - When AC detects the tunnel is broken,
        - it will notify NMS.
        keyUpdateFailure  - rekey process is failed, tunnel will be broken.
        apReset           - Administrator reset AP.
        apCrash           - AP reboot for system crash.
        apDeleted         - Delete AP from AC and trigger tunnel down.
        apCfgChange       - The configuration for AP was changed."
  3: hh3cDot11ACMtTrapTnlAPName
     Syntax="OCTETSTR"
     Descr="Represents name of the AP which sets up the tunnel with the AC.
        "
  4: hh3cDot11ACMtTrapTnlAPIPAddr
     Syntax="IPADDR"
     Descr="Represents IP address of the AP which sets up the tunnel with the AC.
        "
  5: hh3cDot11ACMtTrapAPIPv6Addr
     Syntax="OCTETSTR"
     Descr="Represents IPv6 address of the AP which sets up the tunnel with
        the AC."
  6: hh3cDot11ACMtTrapTunlDwnCount
     Syntax="INTEGER32"
     Descr="Represents how many times that the tunnel between AC and AP has down."
  7: hh3cDot11ACMtTrapTnlAPSysName
     Syntax="OCTETSTR"
     Descr="Represents system name of the AP which sets up the tunnel with the AC."
  8: hh3cDot11ACMtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  9: hh3cDot11ACMtTrapAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of an AP."
EDESC
#
#
#
EVENT hh3cDot11ACMtBackupSwtTrap .1.3.6.1.4.1.25506.2.75.1.3.0.3 "Status Events" Normal
FORMAT This trap is sent by AC when AC switches from master to slave $*
SDESC
This trap is sent by AC when AC switches from master to slave
or from slave to master.
Variables:
  1: hh3cDot11ACMtTrapACMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of the AC."
  2: hh3cDot11ACMtTrapBackupSwitchInfo
     Syntax="INTEGER"
       1: masterToSlave
       2: slaveToMaster
     Descr="Represents status which the AC switches to.
        The following values are supported:
        masterToSlave  - The AC switches from master to slave.
        slaveToMaster  - The AC switches from slave to master.
        "
  3: hh3cDot11ACMtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cDot11ACLoadBalanceTrap .1.3.6.1.4.1.25506.2.75.1.3.0.4 "Status Events" Normal
FORMAT This trap is sent by AC when load-balance is enabled on AC. $*
SDESC
This trap is sent by AC when load-balance is enabled on AC.
Variables:
  1: hh3cDot11LoadBalanceType
     Syntax="INTEGER"
       1: traffic
       2: session
     Descr="Represents which kind load balance is enabled by AC.
         The following values are supported:
         traffic mode load-balancing: traffic snapshot is considered.
         session mode load-balancing: the number of users associated
                                      with the AP/radio is considered.
        "
  2: hh3cDot11LoadBalanceThreshold
     Syntax="INTEGER32"
     Descr="Represents the value of load balance threshold.
        "
EDESC
#
#
#
EVENT hh3cDot11ACStaFullTrap .1.3.6.1.4.1.25506.2.75.1.3.0.5 "Status Events" Normal
FORMAT This notification will be sent when STA is full on AC. $*
SDESC
This notification will be sent when STA is full on AC.
Variables:
  1: hh3cDot11ACMaxStaNum
     Syntax="INTEGER32"
     Descr="Represents the max number of STA on AC."
EDESC
#
#
#
EVENT hh3cDot11ACStatusSwitchTrap .1.3.6.1.4.1.25506.2.75.1.3.0.6 "Status Events" Normal
FORMAT This notification will be sent when AC switches from standby to active $*
SDESC
This notification will be sent when AC switches from standby to active
or from standby to active.
Variables:
  1: hh3cDot11ACStatusSwitchInfo
     Syntax="INTEGER"
       1: activeToStandby
       2: standbyToActive
     Descr="Represents status which the AC switches to.
        The following values are supported:
        activeToStandby  - The AC switches from active to standby.
        standbyToActive  - The AC switches from standby to active.
        "
  2: hh3cDot11SourceACNmsIP
     Syntax="IPADDR"
     Descr="Represents the NMS IP address of master AC.
        "
EDESC
#
#
#
EVENT hh3cDot11RunAPNumOverload .1.3.6.1.4.1.25506.2.75.1.3.0.7 "Status Events" Normal
FORMAT The notification will be sent by AC when run AP number exceeds the threshold. $*
SDESC
The notification will be sent by AC when run AP number exceeds the threshold.
Variables:
  1: hh3cDot11MaxAPNumPermitted
     Syntax="INTEGER32"
     Descr="Represents the maximum number of AP connection permitted
        for one AC."
  2: hh3cDot11APConnectCount
     Syntax="INTEGER32"
     Descr="Represents the total number of APs which are connecting to AC."
EDESC
#
#
#
EVENT hh3cDot11RunAPNumOverloadRecover .1.3.6.1.4.1.25506.2.75.1.3.0.8 "Status Events" Normal
FORMAT The notification will be sent by AC when run AP number $*
SDESC
The notification will be sent by AC when run AP number
recover normal from overload state.
Variables:
  1: hh3cDot11MaxAPNumPermitted
     Syntax="INTEGER32"
     Descr="Represents the maximum number of AP connection permitted
        for one AC."
  2: hh3cDot11APConnectCount
     Syntax="INTEGER32"
     Descr="Represents the total number of APs which are connecting to AC."
EDESC
#
#
#
EVENT hh3cDot11APInvalidCertificateTrap .1.3.6.1.4.1.25506.2.75.1.3.0.9 "Status Events" Normal
FORMAT The AC sends the notification once the certificate of an AP expires. $*
SDESC
The AC sends the notification once the certificate of an AP expires.
Variables:
  1: hh3cDot11ACMtTrapACMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of the AC."
  2: hh3cDot11ACMtTrapAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents the MAC address of an AP."
EDESC
#
#
#
#
MIB: HH3C-DOT11-APMT-MIB (file:./hh3c-dot11-apmt.mib) converted on Sat Apr  2 10:27:43 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-CFGEXT-MIB (file:./hh3c-dot11-cfgext.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-CFG-MIB (file:./hh3c-dot11-cfg.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot11CfgCipherChange .1.3.6.1.4.1.25506.2.75.4.9.0.1 "Status Events" Normal
FORMAT This notification is sent when cipher type of corresponding service $*
SDESC
This notification is sent when cipher type of corresponding service
template is changed.
Variables:
  1: hh3cDot11SSIDName
     Syntax="OCTETSTR"
     Descr="Represents the ESS.  As per CLI, the value of
        service policy name will be SSID."
  2: hh3cDot11SecurityCiphers
     Syntax="INTEGER32"
     Descr="The WLAN system support the following cipher type for data frame
        encryption.
        wep40(2)
        tkip(4)
        aesccmp(16)
        wep104(32)
        wpisms4(64)
        wep128(128)
        For each service policy, it could support multiple cipher types at
        the same time.  So the value of object could combine multiple value
        of cipher type above.
        When the value of node equals to zero, it means no configuration or
        undo operation."
EDESC
#
#
#
EVENT hh3cDot11CfgPSKChange .1.3.6.1.4.1.25506.2.75.4.9.0.2 "Status Events" Normal
FORMAT This notification is sent when pre-shared key of corresponding $*
SDESC
This notification is sent when pre-shared key of corresponding
service template is changed.
Variables:
  1: hh3cDot11SSIDName
     Syntax="OCTETSTR"
     Descr="Represents the ESS.  As per CLI, the value of
        service policy name will be SSID."
EDESC
#
#
#
EVENT hh3cDot11SSIDWepIDConflictTrap .1.3.6.1.4.1.25506.2.75.4.9.0.3 "Status Events" Normal
FORMAT This notification will be sent when the same wep ID is configured $*
SDESC
This notification will be sent when the same wep ID is configured
on two service policies.
Variables:
  1: hh3cDot11PreConflictTemplateNum
     Syntax="INTEGER32"
     Descr="Represents previous service policy ID when radio bind service policy
         and current service policy conflict with previous service policy
         in cipher configuration."
  2: hh3cDot11CurrConflictTemplateNum
     Syntax="INTEGER32"
     Descr="Represents current service policy ID when radio bind service policy
         and current service policy conflict with previous service policy
         in cipher configuration."
  3: hh3cDot11ConflictCipherIdx
     Syntax="INTEGER32"
     Descr="Represents wep ID that conflicted with."
  4: hh3cDot11ConfigureAPID
     Syntax="OCTETSTR"
     Descr="Represents which AP is configured."
  5: hh3cDot11ConfigureRadioID
     Syntax="INTEGER32"
     Descr="Represents which radio in AP is configured."
  6: hh3cDot11ConfigureAPMacAddress
     Syntax="OCTETSTR"
     Descr="Represents MAC Address of AP."
  7: hh3cDot11PreConflictTemplateSSID
     Syntax="OCTETSTR"
     Descr="Represents the previous SSID of the AP."
  8: hh3cDot11CurrConflictTemplateSSID
     Syntax="OCTETSTR"
     Descr="Represents the current SSID of the AP."
EDESC
#
#
#
#
MIB: HH3C-DOT11-LIC-MIB (file:./hh3c-dot11-lic.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-PROBE-MIB (file:./hh3c-dot11-probe.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-QOS-MIB (file:./hh3c-dot11-qos.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-REF-MIB (file:./hh3c-dot11-ref.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-ROAM-MIB (file:./hh3c-dot11-roam.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-RRM-MIB (file:./hh3c-dot11-rrm.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-SA-MIB (file:./hh3c-dot11-sa.mib) converted on Sat Apr  2 10:27:49 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-SAVI-MIB (file:./hh3c-dot11-savi.mib) converted on Sat Apr  2 10:27:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11S-MESH-MIB (file:./hh3c-dot11s-mesh.mib) converted on Sat Apr  2 10:27:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-STATION-MIB (file:./hh3c-dot11-station.mib) converted on Sat Apr  2 10:27:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WIDS-MIB (file:./hh3c-dot11-wids.mib) converted on Sat Apr  2 10:27:51 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WIPS-MIB (file:./hh3c-dot11-wips.mib) converted on Sat Apr  2 10:27:53 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WLANEXT-MIB (file:./hh3c-dot11-wlanext.mib) converted on Sat Apr  2 10:27:53 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT11-WM2U-MIB (file:./hh3c-dot11-wm2u.mib) converted on Sat Apr  2 10:27:53 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DOT3-EFM-EPON-MIB (file:./hh3c-dot3-efm-epon.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DRNI-MIB (file:./hh3c-drni.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-DSP-MIB (file:./hh3c-dsp.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVPMStateChange .1.3.6.1.4.1.25506.2.89.3.0.1 "Status Events" Normal
FORMAT This trap is sent when VPM state changes. $*
SDESC
This trap is sent when VPM state changes.
Variables:
  1: hh3cVPMIndex
     Syntax="INTEGER32"
     Descr="The index for this entry. The sequence of VPM card in the chassis is
        from the top to bottom."
  2: hh3cVPMEnPhysicalIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to PhysicalIndex in the chassis."
  3: hh3cVPMState
     Syntax="INTEGER"
       1: normal
       2: warning
       3: fatal
       4: offLine
     Descr="The object indicates the current state of VPM card being monitored.
        normal(1)  - VPM card in normal condition.
        warning(2) - VPM card has some problem and need attention.
        fatal(3)   - VPM card is not functional.
        offLine(4) - VPM card is in off-line maintenance state."
EDESC
#
#
#
EVENT hh3cDSPStateChange .1.3.6.1.4.1.25506.2.89.3.0.2 "Status Events" Normal
FORMAT This trap is sent when DSP state changes. $*
SDESC
This trap is sent when DSP state changes.
Variables:
  1: hh3cDSPIndex
     Syntax="INTEGER32"
     Descr="The index for this entry. DSP is fixed on VPM card or chassis card.
        The sequence of DSP in the VPM card or chassis card is from right to left."
  2: hh3cDSPVPMIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to VPMIndex in the chassis.
        If value of this object is non-zero, it is the index of VPM card.(DSP is in
        this VPM card.) If value of this object is 0, then the DSP is fixed in the
        chassis card."
  3: hh3cDSPEnPhysicalIndex
     Syntax="INTEGER32"
     Descr="The object corresponds to PhysicalIndex in the chassis."
  4: hh3cDSPState
     Syntax="INTEGER"
       1: normal
       3: fatal
       4: offLine
     Descr="The object indicates the current state of DSP being monitored.
        normal(1)  - DSP in normal condition.
        fatal(3)   - DSP is not functional.
        offLine(4) - DSP is in off-line maintenance state."
EDESC
#
#
#
#
MIB: HH3C-DVPN-MIB (file:./hh3c-dvpn.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDvpnSessionBuildNotification .1.3.6.1.4.1.25506.2.57.1.3.0.1 "Status Events" Normal
FORMAT $*
SDESC

Dvpn session build notification.

Variables:
  1: hh3cDvpnSessionDvpnId
     Syntax="INTEGER32"
     Descr="
                The ID of the dvpn domain which the session belongs to.
            "
  2: hh3cDvpnSessionPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session peer device.
            "
  3: hh3cDvpnSessionPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of the session peer device.
            "
  4: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  5: hh3cDvpnSessionLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session local device.
            "
  6: hh3cDvpnSessionLocalPriIp
     Syntax="OCTETSTR"
     Descr="
               The private ip of session local device.
            "
  7: hh3cDvpnSessionLocalPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The public ip type (ipv4, ipv6) of session local device.
            "
  8: hh3cDvpnSessionLocalPubIp
     Syntax="OCTETSTR"
     Descr="
               The public ip of session local device.
            "
  9: hh3cDvpnSessionPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID of session peer device.
                It is a string.
            "
 10: hh3cDvpnSessionPeerPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of session peer device.
            "
 11: hh3cDvpnSessionPeerPubIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of session peer device.
            "
 12: hh3cDvpnSessionPeerUdpPort
     Syntax="INTEGER32"
     Descr="
               The udp port used by session peer device .
            "
 13: hh3cDvpnSessionPeerType
     Syntax="INTEGER"
       1: router
       2: pcClient
     Descr="
                The type of the session peer device.
                It may be client software or a router.
            "
 14: hh3cDvpnSessionUserName
     Syntax="OCTETSTR"
     Descr="
                The user's name.
                If the session type is client to client,
                the value of this object is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnSessionDelNotification .1.3.6.1.4.1.25506.2.57.1.3.0.2 "Status Events" Normal
FORMAT $*
SDESC

Dvpn session deleted notification.

Variables:
  1: hh3cDvpnSessionDvpnId
     Syntax="INTEGER32"
     Descr="
                The ID of the dvpn domain which the session belongs to.
            "
  2: hh3cDvpnSessionPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session peer device.
            "
  3: hh3cDvpnSessionPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of the session peer device.
            "
  4: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  5: hh3cDvpnSessionLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The private ip type (ipv4, ipv6) of session local device.
            "
  6: hh3cDvpnSessionLocalPriIp
     Syntax="OCTETSTR"
     Descr="
               The private ip of session local device.
            "
  7: hh3cDvpnSessionLocalPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
               The public ip type (ipv4, ipv6) of session local device.
            "
  8: hh3cDvpnSessionLocalPubIp
     Syntax="OCTETSTR"
     Descr="
               The public ip of session local device.
            "
  9: hh3cDvpnSessionPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID of session peer device.
                It is a string.
            "
 10: hh3cDvpnSessionPeerPubIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of session peer device.
            "
 11: hh3cDvpnSessionPeerPubIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of session peer device.
            "
 12: hh3cDvpnSessionPeerUdpPort
     Syntax="INTEGER32"
     Descr="
               The udp port used by session peer device .
            "
 13: hh3cDvpnSessionPeerType
     Syntax="INTEGER"
       1: router
       2: pcClient
     Descr="
                The type of the session peer device.
                It may be client software or a router.
            "
 14: hh3cDvpnSessionUserName
     Syntax="OCTETSTR"
     Descr="
                The user's name.
                If the session type is client to client,
                the value of this object is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnMapBuildNotification .1.3.6.1.4.1.25506.2.57.1.3.0.3 "Status Events" Normal
FORMAT $*
SDESC

Dvpn map build notification.

Variables:
  1: hh3cDvpnMapIndex
     Syntax="UNSIGNED32"
     Descr="
                The index of hh3cDvpnMapTable.
            "
  2: hh3cDvpnMapDvpnId
     Syntax="UNSIGNED32"
     Descr="
                The ID of the dvpn domain which the map belongs to.
                The dvpn ID is 0 means that the map has not been built.
                It has not gotten the dvpn ID at that time.
            "
  3: hh3cDvpnMapPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The identifier of peer device.
                It is a string.
            "
  4: hh3cDvpnMapPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map peer device.
            "
  5: hh3cDvpnMapPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map peer device.
            "
  6: hh3cDvpnMapPeerPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map peer device.
            "
  7: hh3cDvpnMapPeerPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map peer device.
            "
  8: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  9: hh3cDvpnMapLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map local device.
            "
 10: hh3cDvpnMapLocalPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map local device.
            "
 11: hh3cDvpnMapLocalPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map local device.
            "
 12: hh3cDvpnMapLocalPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map local device.
            "
 13: hh3cDvpnMapUserName
     Syntax="OCTETSTR"
     Descr="
                The user name used by the client registering to server.
                If the client is not been authenticated, this is a null string.
            "
EDESC
#
#
#
EVENT hh3cDvpnMapDelNotification .1.3.6.1.4.1.25506.2.57.1.3.0.4 "Status Events" Normal
FORMAT $*
SDESC

Dvpn map deleted notification.

Variables:
  1: hh3cDvpnMapIndex
     Syntax="UNSIGNED32"
     Descr="
                The index of hh3cDvpnMapTable.
            "
  2: hh3cDvpnMapDvpnId
     Syntax="UNSIGNED32"
     Descr="
                The ID of the dvpn domain which the map belongs to.
                The dvpn ID is 0 means that the map has not been built.
                It has not gotten the dvpn ID at that time.
            "
  3: hh3cDvpnMapPeerDeviceId
     Syntax="OCTETSTR"
     Descr="
                The identifier of peer device.
                It is a string.
            "
  4: hh3cDvpnMapPeerPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map peer device.
            "
  5: hh3cDvpnMapPeerPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map peer device.
            "
  6: hh3cDvpnMapPeerPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map peer device.
            "
  7: hh3cDvpnMapPeerPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map peer device.
            "
  8: hh3cDvpnLocalDeviceId
     Syntax="OCTETSTR"
     Descr="
                The device ID, it is a string.
            "
  9: hh3cDvpnMapLocalPriIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The private ip type (ipv4, ipv6) of map local device.
            "
 10: hh3cDvpnMapLocalPriIp
     Syntax="OCTETSTR"
     Descr="
                The private ip of map local device.
            "
 11: hh3cDvpnMapLocalPublicIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="
                The public ip type (ipv4, ipv6) of map local device.
            "
 12: hh3cDvpnMapLocalPublicIp
     Syntax="OCTETSTR"
     Descr="
                The public ip of map local device.
            "
 13: hh3cDvpnMapUserName
     Syntax="OCTETSTR"
     Descr="
                The user name used by the client registering to server.
                If the client is not been authenticated, this is a null string.
            "
EDESC
#
#
#
#
MIB: HH3C-E1-MIB (file:./hh3c-e1.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-E1T1VI-MIB (file:./hh3c-e1t1vi.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cE1T1VITrapTimeSlot .1.3.6.1.4.1.25506.2.76.2.0.1 "Status Events" Normal
FORMAT This trap is sent to the manager under the following $*
SDESC
This trap is sent to the manager under the following
condition: The number of used time slots of an E1/T1
interface reaches the threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-EFM-COMMON-MIB (file:./hh3c-efm-common.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cDot3OamThresholdEvent .1.3.6.1.4.1.25506.2.42.3.1.7.0.1 "Status Events" Normal
FORMAT A hh3cDot3OamThresholdEvent notification is sent when a local or $*
SDESC
A hh3cDot3OamThresholdEvent notification is sent when a local or
remote threshold crossing event is detected.  A local
threshold crossing event is detected by the local entity,
while a remote threshold crossing event is detected by the
reception of an Ethernet OAM Event Notification OAMPDU
indicating a threshold event.
This notification should not be sent more than once per
second.
The management entity should periodically check
hh3cDot3OamEventLogTable to detect any missed events.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cDot3OamEventLogTimestamp
     Syntax="OCTETSTR"
     Descr="The date and time that this event instance occurred."
  3: hh3cDot3OamEventLogOui
     Syntax="OCTETSTR"
     Descr="The OUI of the entity defining the object type.  All IEEE
          802.3 defined events (as appearing in [802.3ah] except for the
          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of
          0x0180C2.  Organizations defining their own Event Notification
          TLVs include their OUI in the Event Notification TLV which
          gets reflected here."
  4: hh3cDot3OamEventLogType
     Syntax="UNSIGNED32"
     Descr="The type of event that generated this entry in the event log.

          When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following
          event types are defined:
              erroredSymbolEvent(1),
              erroredFramePeriodEvent (2),
              erroredFrameEvent(3),
              erroredFrameSecondsEvent(4),
              linkFault(256),
              dyingGaspEvent(257),
              criticalLinkEvent(258)
          The first four are considered threshold crossing events as
          they are generated when a metric exceeds a given value within
          a specified window.  The other three are not threshold
          crossing events.

          When the OUI is not 0x0180C2, then some other organization has
          defined the event space.  If event subtyping is known to the
          implementation, it may be reflected here.  Otherwise, this
          value should return all Fs (0xFFFFFFFF).
          "
  5: hh3cDot3OamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="Whether this event occurred locally, or was received from the
          OAM peer via Ethernet OAM."
  6: hh3cDot3OamEventLogWindowHi
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventWindowHi and hh3cDot3OamEventWindowLo form an
          unsigned 64-bit integer yielding the window over which the
          value was measured for the threshold crossing event (e.g. 5,
          when 11 occurrences happened in 5 seconds while the threshold
          was 10).   The two objects are combined as:

          hh3cDot3OamEventLogWindow = ((2^32) * hh3cDot3OamEventLogWindowHi)
                                          + hh3cDot3OamEventLogWindowLo


          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  7: hh3cDot3OamEventLogWindowLo
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventWindowHi and hh3cDot3OamEventWindowLo form an
          unsigned 64-bit integer yielding the window over which the
          value was measured for the threshold crossing event (e.g. 5,
          when 11 occurrences happened in 5 seconds while the threshold
          was 10).   The two objects are combined as:
          hh3cDot3OamEventLogWindow = ((2^32) * hh3cDot3OamEventLogWindowHi)
                                          + hh3cDot3OamEventLogWindowLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  8: hh3cDot3OamEventLogThresholdHi
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventThresholdHi and hh3cDot3OamEventThresholdLo
          form an unsigned 64-bit integer yielding the value that was
          crossed for the threshold crossing event (e.g. 10, when 11
          occurrences happened in 5 seconds while the threshold was 10).
          The two objects are combined as:

        hh3cDot3OamEventLogThreshold = ((2^32) * hh3cDot3OamEventLogThresholdHi)
                                           + hh3cDot3OamEventLogThresholdLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
  9: hh3cDot3OamEventLogThresholdLo
     Syntax="UNSIGNED32"
     Descr="If the event represents a threshold crossing event, the two
          objects hh3cDot3OamEventThresholdHi and hh3cDot3OamEventThresholdLo
          form an unsigned 64-bit integer yielding the value that was
          crossed for the threshold crossing event (e.g. 10, when 11
          occurrences happened in 5 seconds while the threshold was 10).
          The two objects are combined as:

        hh3cDot3OamEventLogThreshold = ((2^32) * hh3cDot3OamEventLogThresholdHi)
                                           + hh3cDot3OamEventLogThresholdLo

          Otherwise, this value is returned as all F's (0xFFFFFFFF) and
          adds no useful information."
 10: hh3cDot3OamEventLogValue
     Syntax="COUNTER64"
     Descr="If the event represents a threshold crossing event, this
          value indicates the value of the parameter within the given
          window that generated this event (e.g. 11, when 11 occurrences
          happened in 5 seconds while the threshold was 10).

          Otherwise, this value is returned as all F's
          (0xFFFFFFFFFFFFFFFF) and adds no useful information.
          "
 11: hh3cDot3OamEventLogRunningTotal
     Syntax="COUNTER64"
     Descr="This value respresents the total number of times this
          occurence has happened since the last reset (e.g. 3253, when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
 12: hh3cDot3OamEventLogEventTotal
     Syntax="UNSIGNED32"
     Descr="This value respresents the total number of times one or more
          of these occurences have resulted in an event (e.g. 51 when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
EDESC
#
#
#
EVENT hh3cDot3OamNonThresholdEvent .1.3.6.1.4.1.25506.2.42.3.1.7.0.2 "Status Events" Normal
FORMAT A hh3cDot3OamNonThresholdEvent notification is sent when a local $*
SDESC
A hh3cDot3OamNonThresholdEvent notification is sent when a local
or remote non-threshold crossing event is detected.  A local
event is detected by the local entity, while a remote event is
detected by the reception of an Ethernet OAM Event
Notification OAMPDU indicating a non-threshold crossing event.
This notification should not be sent more than once per
second.
The management entity should periodically check
hh3cDot3OamEventLogTable to detect any missed events.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cDot3OamEventLogTimestamp
     Syntax="OCTETSTR"
     Descr="The date and time that this event instance occurred."
  3: hh3cDot3OamEventLogOui
     Syntax="OCTETSTR"
     Descr="The OUI of the entity defining the object type.  All IEEE
          802.3 defined events (as appearing in [802.3ah] except for the
          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of
          0x0180C2.  Organizations defining their own Event Notification
          TLVs include their OUI in the Event Notification TLV which
          gets reflected here."
  4: hh3cDot3OamEventLogType
     Syntax="UNSIGNED32"
     Descr="The type of event that generated this entry in the event log.

          When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following
          event types are defined:
              erroredSymbolEvent(1),
              erroredFramePeriodEvent (2),
              erroredFrameEvent(3),
              erroredFrameSecondsEvent(4),
              linkFault(256),
              dyingGaspEvent(257),
              criticalLinkEvent(258)
          The first four are considered threshold crossing events as
          they are generated when a metric exceeds a given value within
          a specified window.  The other three are not threshold
          crossing events.

          When the OUI is not 0x0180C2, then some other organization has
          defined the event space.  If event subtyping is known to the
          implementation, it may be reflected here.  Otherwise, this
          value should return all Fs (0xFFFFFFFF).
          "
  5: hh3cDot3OamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="Whether this event occurred locally, or was received from the
          OAM peer via Ethernet OAM."
  6: hh3cDot3OamEventLogEventTotal
     Syntax="UNSIGNED32"
     Descr="This value respresents the total number of times one or more
          of these occurences have resulted in an event (e.g. 51 when
          3253 symbol errors have occurred since the last reset, which
          has resulted in 51 symbol error threshold crossing events
          since the last reset)."
EDESC
#
#
#
#
MIB: HH3C-ENTITY-EXT-MIB (file:./hh3c-entity-ext.mib) converted on Sat Apr  2 10:27:54 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEntityExtTemperatureThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.1 "Status Events" Normal
FORMAT The hh3cEntityExtTemperatureThresholdNotification $*
SDESC
The hh3cEntityExtTemperatureThresholdNotification
indicates the temperature exceeded the threshold.
In this condition, user should check the status and the
environment of the entity, sometimes it happens because
of the failure of air-condition.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  3: hh3cEntityExtTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageLowThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.2 "Status Events" Normal
FORMAT The hh3cEntityExtVoltageLowThresholdNotification indicates $*
SDESC
The hh3cEntityExtVoltageLowThresholdNotification indicates
the voltage is lower than the threshold.
If the voltage is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  3: hh3cEntityExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageHighThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.3 "Status Events" Normal
FORMAT The hh3cEntityExtVoltageHighThresholdNotification indicates $*
SDESC
The hh3cEntityExtVoltageHighThresholdNotification indicates
the voltage is higher than the threshold.
If the voltage is higher too much than the entity needs,
The entity may be damaged by the high voltage.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  3: hh3cEntityExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage greater than high-threshold, a notification will be
            sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtCpuUsageThresholdNotfication .1.3.6.1.4.1.25506.2.6.2.0.4 "Status Events" Normal
FORMAT The hh3cEntityExtCpuUsageThresholdNotfication indicates $*
SDESC
The hh3cEntityExtCpuUsageThresholdNotfication indicates
the entity is overloaded.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCpuUsage
     Syntax="INTEGER32"
     Descr="The CPU usage for this entity. Generally, the overall
            CPU usage on the entity is calculated, independent of
            the number of CPUs on the entity."
  3: hh3cEntityExtCpuUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
            the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  6: hh3cEntityExtCpuUsageRecoverThreshold
     Syntax="INTEGER32"
     Descr="The recover threshold for the CPU usage.  When the CPU usage falls down to
            the threshold, a notification is sent.  The hh3cEntityExtCpuUsageRecoverThreshold
            must be less than or equal to the hh3cEntityExtCpuUsageThreshold."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.5 "Status Events" Normal
FORMAT The hh3cEntityExtMemUsageThresholdNotification indicates $*
SDESC
The hh3cEntityExtMemUsageThresholdNotification indicates
the entity is overloaded.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSize
     Syntax="UNSIGNED32"
     Descr="The size of memory for the entity.

            If the amount of memory exceeds 4,294,967,295 bytes,
            the value remains 4,294,967,295 bytes."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtOperEnabled .1.3.6.1.4.1.25506.2.6.2.0.6 "Status Events" Normal
FORMAT The trap indicates the entity is operable at present. $*
SDESC
The trap indicates the entity is operable at present.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtOperDisabled .1.3.6.1.4.1.25506.2.6.2.0.7 "Status Events" Normal
FORMAT The trap indicates the entity is not operable at present. $*
SDESC
The trap indicates the entity is not operable at present.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtCriticalTemperatureThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.8 "Status Events" Normal
FORMAT The hh3cEntityExtCriticalTemperatureThresholdNotification $*
SDESC
The hh3cEntityExtCriticalTemperatureThresholdNotification
indicates the temperature exceeds the critical temperature.
In this condition, user should check the status and the
environment of the entity, sometimes it happens because
of the failure of air-condition.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  3: hh3cEntityExtCriticalTemperatureThreshold
     Syntax="INTEGER32"
     Descr=" The threshold for the critical Temperature. When temperature
            exceeds the critical temperature, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOn .1.3.6.1.4.1.25506.2.6.2.0.9 "Status Events" Normal
FORMAT The trap is generated when the SFP module fails $*
SDESC
The trap is generated when the SFP module fails
or runs abnormally for some particular reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOff .1.3.6.1.4.1.25506.2.6.2.0.10 "Status Events" Normal
FORMAT The trap is generated when the SFP module restores to $*
SDESC
The trap is generated when the SFP module restores to
normal status.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtSFPPhony .1.3.6.1.4.1.25506.2.6.2.0.11 "Status Events" Normal
FORMAT This module is NOT sold by authorized manufacturer. $*
SDESC
This module is NOT sold by authorized manufacturer.
The normal function of the device or assume the maintenance
responsibility thereof will NOT be guaranteed.
The trap is generated periodically after a phony module has been
found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityInsert .1.3.6.1.4.1.25506.2.6.2.0.12 "Status Events" Normal
FORMAT The trap is generated when a removable entity inserting to $*
SDESC
The trap is generated when a removable entity inserting to
device.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cEntityRemove .1.3.6.1.4.1.25506.2.6.2.0.13 "Status Events" Normal
FORMAT The trap is generated when a removable entity removing from $*
SDESC
The trap is generated when a removable entity removing from
device.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
  2: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtForcedPowerOff .1.3.6.1.4.1.25506.2.6.2.0.14 "Status Events" Normal
FORMAT The trap indicates the entity is forced to power off. $*
SDESC
The trap indicates the entity is forced to power off.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtForcedPowerOn .1.3.6.1.4.1.25506.2.6.2.0.15 "Status Events" Normal
FORMAT The trap indicates the entity is forced to power on. $*
SDESC
The trap indicates the entity is forced to power on.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtFaultAlarmOn .1.3.6.1.4.1.25506.2.6.2.0.16 "Status Events" Normal
FORMAT The trap indicates a fault occurs on the specified entity. $*
SDESC
The trap indicates a fault occurs on the specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtFaultAlarmOff .1.3.6.1.4.1.25506.2.6.2.0.17 "Status Events" Normal
FORMAT The trap indicates a fault disappears on the specified entity. $*
SDESC
The trap indicates a fault disappears on the specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtResourceLack .1.3.6.1.4.1.25506.2.6.2.0.18 "Status Events" Normal
FORMAT The trap indicates that a kind of resource is not enough on the $*
SDESC
The trap indicates that a kind of resource is not enough on the
specified entity.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtResourceEnough .1.3.6.1.4.1.25506.2.6.2.0.19 "Status Events" Normal
FORMAT The trap indicates that the entity recovers from the status of no $*
SDESC
The trap indicates that the entity recovers from the status of no
enough resource.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureLower .1.3.6.1.4.1.25506.2.6.2.0.20 "Status Events" Normal
FORMAT The trap indicates the temperature of a specified entity is under $*
SDESC
The trap indicates the temperature of a specified entity is under
the lower threshold. In this condition, user should check the
status and the environment of the entity, sometimes it goes wrong
for some reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the lower Temperature. When temperature runs
            under the threshold, a notification will be sent."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureTooUp .1.3.6.1.4.1.25506.2.6.2.0.21 "Status Events" Normal
FORMAT The trap indicates the temperature of a specified entity exceeded $*
SDESC
The trap indicates the temperature of a specified entity exceeded
the shutdown threshold. In this condition, user should check the
status and the environment of the entity, sometimes it goes wrong
for some reason.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature. When temperature
            exceeds the threshold, a notification will be sent and the entity
            will be shutdown."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureNormal .1.3.6.1.4.1.25506.2.6.2.0.22 "Status Events" Normal
FORMAT The trap indicates the temperature of a specified entity recover $*
SDESC
The trap indicates the temperature of a specified entity recover
from abnormal status.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the lower Temperature. When temperature runs
            under the threshold, a notification will be sent."
  5: hh3cEntityExtTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
            exceeds the threshold, a notification will be sent."
  6: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
EDESC
#
#
#
EVENT hh3cEntityExternalAlarmOccur .1.3.6.1.4.1.25506.2.6.2.0.23 "Status Events" Normal
FORMAT The trap is generated when the monitored device connected to the $*
SDESC
The trap is generated when the monitored device connected to the
specified entity fails.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExternalAlarmRecover .1.3.6.1.4.1.25506.2.6.2.0.24 "Status Events" Normal
FORMAT The trap is generated when the failed device connected to the $*
SDESC
The trap is generated when the failed device connected to the
specified entity returns to normal.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtCpuUsageThresholdRecover .1.3.6.1.4.1.25506.2.6.2.0.25 "Status Events" Normal
FORMAT The trap indicates the CPU usage descends the threshold. $*
SDESC
The trap indicates the CPU usage descends the threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCpuUsage
     Syntax="INTEGER32"
     Descr="The CPU usage for this entity. Generally, the overall
            CPU usage on the entity is calculated, independent of
            the number of CPUs on the entity."
  3: hh3cEntityExtCpuUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
            the threshold, a notification will be sent."
  4: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  5: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  6: hh3cEntityExtCpuUsageRecoverThreshold
     Syntax="INTEGER32"
     Descr="The recover threshold for the CPU usage.  When the CPU usage falls down to
            the threshold, a notification is sent.  The hh3cEntityExtCpuUsageRecoverThreshold
            must be less than or equal to the hh3cEntityExtCpuUsageThreshold."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdRecover .1.3.6.1.4.1.25506.2.6.2.0.26 "Status Events" Normal
FORMAT The trap indicates the memory usage descends the threshold. $*
SDESC
The trap indicates the memory usage descends the threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSize
     Syntax="UNSIGNED32"
     Descr="The size of memory for the entity.

            If the amount of memory exceeds 4,294,967,295 bytes,
            the value remains 4,294,967,295 bytes."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  7: hh3cEntityExtFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cEntityExtMemAllocatedFailed .1.3.6.1.4.1.25506.2.6.2.0.27 "Status Events" Normal
FORMAT The trap indicates the memory allocated failed. $*
SDESC
The trap indicates the memory allocated failed.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtTrapDescription
     Syntax="OCTETSTR"
     Descr="The information of trap."
EDESC
#
#
#
EVENT hh3cEntityExtECCParityAlarm .1.3.6.1.4.1.25506.2.6.2.0.28 "Status Events" Normal
FORMAT The trap indicates the ECC(Error Correction Code) parity error alarm. $*
SDESC
The trap indicates the ECC(Error Correction Code) parity error alarm.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtECCParityAlarmStatus
     Syntax="INTEGER"
       1: other
       10: controlmemory
       2: l1cache
       3: l2cache
       4: sdram
       5: mac
       6: tcam
       7: ingressbuffer
       8: egressbuffer
       9: lpm
     Descr="ECC parity error."
  3: hh3cEntityExtTrapDescription
     Syntax="OCTETSTR"
     Descr="The information of trap."
EDESC
#
#
#
EVENT hh3cEntityExtCritLowerTempThresholdNotification .1.3.6.1.4.1.25506.2.6.2.0.29 "Status Events" Normal
FORMAT The hh3cEntityExtCritLowerTempThresholdNotification $*
SDESC
The hh3cEntityExtCritLowerTempThresholdNotification
indicates the temperature is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtCriticalLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the critical Temperature.  When temperature
            exceeds the critical lower temperature, a notification will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureTooLow .1.3.6.1.4.1.25506.2.6.2.0.30 "Status Events" Normal
FORMAT The hh3cEntityExtTemperatureTooLow indicates the temperature $*
SDESC
The hh3cEntityExtTemperatureTooLow indicates the temperature
is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity halts now.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature.  When temperature
            exceeds the lower threshold, a notification will be sent and the entity
            will be shutdown."
EDESC
#
#
#
EVENT hh3cEntityExtFanDirectionNotPreferred .1.3.6.1.4.1.25506.2.6.2.0.31 "Status Events" Normal
FORMAT This trap indicates the specified fan's direction does not $*
SDESC
This trap indicates the specified fan's direction does not
accord with preferred. The two parameters indicate the entity
index and physical name of fan.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtFanDirectionNotAccord .1.3.6.1.4.1.25506.2.6.2.0.32 "Status Events" Normal
FORMAT This trap indicates the direction of fans does not accord $*
SDESC
This trap indicates the direction of fans does not accord
with each other. The two parameters indicate the parent
entity of the fans.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtSFPInvalid .1.3.6.1.4.1.25506.2.6.2.0.33 "Status Events" Normal
FORMAT The transceiver module is not compatible with the interface card. $*
SDESC
The transceiver module is not compatible with the interface card.
The authorized manufacturer therefore shall NOT guarantee
the normal function of the transceiver.
The transceiver module will be invalidated in days.
Please replace it with a compatible one as soon as possible.
The trap is generated periodically after a phony transceiver module
has been found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtSFPInvalidInDays
     Syntax="INTEGER32"
     Descr="The days when the transceiver module is still valid,
            but after those days, it will be invalidated."
EDESC
#
#
#
EVENT hh3cEntityExtSFPInvalidNow .1.3.6.1.4.1.25506.2.6.2.0.34 "Status Events" Normal
FORMAT This transceiver module is not compatible with the interface card. $*
SDESC
This transceiver module is not compatible with the interface card.
The authorized manufacturer therefore shall NOT guarantee
the normal function of the transceiver.
The trap is generated after a phony transceiver module
has been found.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdOverTrap .1.3.6.1.4.1.25506.2.6.2.0.35 "Status Events" Normal
FORMAT This trap indicates that the memory usage of the entity is $*
SDESC
This trap indicates that the memory usage of the entity is
overloaded.
This trap is used to replace
hh3cEntityExtMemUsageThresholdNotification.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSizeRev
     Syntax="COUNTER64"
     Descr="Size of memory space for the entity.

            This node is used to replace hh3cEntityExtMemSize."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtMemUsageThresholdRecoverTrap .1.3.6.1.4.1.25506.2.6.2.0.36 "Status Events" Normal
FORMAT This trap indicates that the memory usage decreased below $*
SDESC
This trap indicates that the memory usage decreased below
the threshold.
This trap is used to replace
hh3cEntityExtMemUsageThresholdRecover.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtMemUsage
     Syntax="INTEGER32"
     Descr="The memory usage for the entity. This object indicates what
            percent of memory are used."
  3: hh3cEntityExtMemUsageThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the Memory usage, When the memory usage
            exceeds the threshold, a notification will be sent."
  4: hh3cEntityExtMemSizeRev
     Syntax="COUNTER64"
     Descr="Size of memory space for the entity.

            This node is used to replace hh3cEntityExtMemSize."
  5: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  6: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageNormal .1.3.6.1.4.1.25506.2.6.2.0.37 "Status Events" Normal
FORMAT This trap indicates that the voltage recovers to normal. $*
SDESC
This trap indicates that the voltage recovers to normal.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorLowThreshold
     Syntax="INTEGER32"
     Descr="The low threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
  5: hh3cEntityExtVoltageMajorHighThreshold
     Syntax="INTEGER32"
     Descr="The high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageLower .1.3.6.1.4.1.25506.2.6.2.0.38 "Status Events" Normal
FORMAT This trap indicates that the voltage is lower than the $*
SDESC
This trap indicates that the voltage is lower than the
low threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorLowThreshold
     Syntax="INTEGER32"
     Descr="The low threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageTooLow .1.3.6.1.4.1.25506.2.6.2.0.39 "Status Events" Normal
FORMAT This trap indicates that the voltage is lower than the $*
SDESC
This trap indicates that the voltage is lower than the
fatal low threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageFatalLowThreshold
     Syntax="INTEGER32"
     Descr="The fatal low voltage threshold for the voltage sensor entity.

            When the voltage is lower than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageHigher .1.3.6.1.4.1.25506.2.6.2.0.40 "Status Events" Normal
FORMAT This trap indicates that the voltage is higher than the $*
SDESC
This trap indicates that the voltage is higher than the
high threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageMajorHighThreshold
     Syntax="INTEGER32"
     Descr="The high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageTooHigh .1.3.6.1.4.1.25506.2.6.2.0.41 "Status Events" Normal
FORMAT This trap indicates that the voltage is higher than the $*
SDESC
This trap indicates that the voltage is higher than the
fatal high threshold.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: hh3cEntityExtCurrentVoltage
     Syntax="INTEGER32"
     Descr="The current voltage in millivolts of the voltage
            sensor entity."
  3: hh3cEntityExtNominalVoltage
     Syntax="INTEGER32"
     Descr="The nominal voltage in millivolts of the voltage
            sensor entity."
  4: hh3cEntityExtVoltageFatalHighThreshold
     Syntax="INTEGER32"
     Descr="The fatal high threshold for the voltage sensor entity.

            When the voltage is higher than the threshold, a notification
            will be sent."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOnEx .1.3.6.1.4.1.25506.2.6.2.0.42 "Status Events" Normal
FORMAT The trap is generated when the SFP module fails $*
SDESC
The trap is generated when the SFP module fails
or runs abnormally for some particular reason.
This trap is used to replace hh3cEntityExtSFPAlarmOn.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  5: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
EDESC
#
#
#
EVENT hh3cEntityExtSFPAlarmOffEx .1.3.6.1.4.1.25506.2.6.2.0.43 "Status Events" Normal
FORMAT The trap is generated when the SFP module is restored to $*
SDESC
The trap is generated when the SFP module is restored to
normal status.
This trap is used to replace hh3cEntityExtSFPAlarmOff.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtAdminStatus
     Syntax="INTEGER"
       1: notSupported
       2: locked
       3: shuttingDown
       4: unlocked
     Descr="The administrative state for this object."
  4: hh3cEntityExtAlarmLight
     Syntax="BITS"
     Descr="The alarm status for this entity. It does not include
            the severity of alarms raised on child components. In
            this condition, there will be a alarm light on the entity,
            the object should have the same status with it."
  5: hh3cEntityExtErrorStatus
     Syntax="INTEGER"
       1: notSupported
       11: poeError
       2: normal
       21: stackError
       22: stackPortBlocked
       23: stackPortFailed
       3: postFailure
       31: sfpRecvError
       32: sfpSendError
       33: sfpBothError
       4: entityAbsent
       41: fanError
       5: nearThresholdError
       51: psuError
       61: rpsError
       71: moduleFaulty
       81: sensorError
       91: hardwareFaulty
     Descr="Indicate the error state of this entity object. Now it only
            supports Port, general power supply, RPS power supply and
            board/Subcard. It may have one of these values.
            The following four values  can be used for all kinds of entities.

            notSupported(1) means this entity cannot support this function.
            normal(2) means the statement of this entity is normal. for ports,
            it doesn't differentiate 10M/s, 100M/s, 1000M/s, duplex and
            half-duplex. For fan, power supply and board-Subcard, it means
            their states are normal.
            postFailure(3)  means the entity fails to POST.
            entityAbsent(4) means the entity is absent now.
            nearThresholdError(5) means the transceiver power reaches 3dB to the threshold.


            The following values is depended on the entity.

            For Port entities, it may have the following  values. If its POST
            is failure,
            then the value of the instance will be postFailure(3), otherwise
            the value will be normal(2).

            If enable power supply over Ethernet on this port is failure,
            the value of this instance will be poeError(11), otherwise it will
            be normal(2).

            For stack port, if it connects to another stack port normally, and
            these two units merge into one stack, then the value of this
            instance will be normal(2).
            If something wrong occurs and the unit cannot merge into stack,
            the value of this instance will be stackPortFailed(23).  If the
            stack port forms resilient daisy chain with another stack port
            on the other unit, the value of this instance will be
            stackPortBlocked(22).


            For SFP ports, if it fail to receive, the value of this instance
            will be sfpRecvError(31), if it fail to send, the value is
            sfpSendError(32), if it fail to send and receive, the value is
            sfpBothError(33), otherwise it will be normal(2).

            fanError(41) means that the fan stops working.

            psuError(51) means that the Power Supply Unit is in the state of
            fault.

            rpsError(61) means the RPS is in the state of fault.

            moduleFaulty(71) means the Module is in the state of fault.

            sensorError(81) means the sensor is in the state of fault.

            hardwareFaulty(91) means the hardware of specified entity is in the state of fault.

            NMS must be compatible with the states which may be added
            in the future."
EDESC
#
#
#
EVENT hh3cEntityExtSystemFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.1 "Status Events" Normal
FORMAT The trap is generated when a system fatal alarm occurred. $*
SDESC
The trap is generated when a system fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.2 "Status Events" Normal
FORMAT The trap is generated when a system fatal alarm cleared. $*
SDESC
The trap is generated when a system fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.3 "Status Events" Normal
FORMAT The trap is generated when a system alarm occurred. $*
SDESC
The trap is generated when a system alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.4 "Status Events" Normal
FORMAT The trap is generated when a system alarm cleared. $*
SDESC
The trap is generated when a system alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.5 "Status Events" Normal
FORMAT The trap is generated when a system warning occurred. $*
SDESC
The trap is generated when a system warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtSystemWarningClear .1.3.6.1.4.1.25506.2.6.4.0.6 "Status Events" Normal
FORMAT The trap is generated when a system warning cleared. $*
SDESC
The trap is generated when a system warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.7 "Status Events" Normal
FORMAT The trap is generated when a board fatal alarm occurred. $*
SDESC
The trap is generated when a board fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.8 "Status Events" Normal
FORMAT The trap is generated when a board fatal alarm cleared. $*
SDESC
The trap is generated when a board fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.9 "Status Events" Normal
FORMAT The trap is generated when a board alarm occurred. $*
SDESC
The trap is generated when a board alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.10 "Status Events" Normal
FORMAT The trap is generated when a board alarm cleared. $*
SDESC
The trap is generated when a board alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.11 "Status Events" Normal
FORMAT The trap is generated when a board warning occurred. $*
SDESC
The trap is generated when a board warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtBoardWarningClear .1.3.6.1.4.1.25506.2.6.4.0.12 "Status Events" Normal
FORMAT The trap is generated when a board warning cleared. $*
SDESC
The trap is generated when a board warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.13 "Status Events" Normal
FORMAT The trap is generated when a power fatal alarm occurred. $*
SDESC
The trap is generated when a power fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.14 "Status Events" Normal
FORMAT The trap is generated when a power fatal alarm cleared. $*
SDESC
The trap is generated when a power fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.15 "Status Events" Normal
FORMAT The trap is generated when a power alarm occurred. $*
SDESC
The trap is generated when a power alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.16 "Status Events" Normal
FORMAT The trap is generated when a power alarm cleared. $*
SDESC
The trap is generated when a power alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.17 "Status Events" Normal
FORMAT The trap is generated when a power warning occurred. $*
SDESC
The trap is generated when a power warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtPowerWarningClear .1.3.6.1.4.1.25506.2.6.4.0.18 "Status Events" Normal
FORMAT The trap is generated when a power warning cleared. $*
SDESC
The trap is generated when a power warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.19 "Status Events" Normal
FORMAT The trap is generated when a fan fatal alarm occurred. $*
SDESC
The trap is generated when a fan fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.20 "Status Events" Normal
FORMAT The trap is generated when a fan fatal alarm cleared. $*
SDESC
The trap is generated when a fan fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.21 "Status Events" Normal
FORMAT The trap is generated when a fan alarm occurred. $*
SDESC
The trap is generated when a fan alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.22 "Status Events" Normal
FORMAT The trap is generated when a fan alarm cleared. $*
SDESC
The trap is generated when a fan alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.23 "Status Events" Normal
FORMAT The trap is generated when a fan warning occurred. $*
SDESC
The trap is generated when a fan warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtFanWarningClear .1.3.6.1.4.1.25506.2.6.4.0.24 "Status Events" Normal
FORMAT The trap is generated when a fan warning cleared. $*
SDESC
The trap is generated when a fan warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.25 "Status Events" Normal
FORMAT The trap is generated when a voltage fatal alarm occurred. $*
SDESC
The trap is generated when a voltage fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.26 "Status Events" Normal
FORMAT The trap is generated when a voltage fatal alarm cleared. $*
SDESC
The trap is generated when a voltage fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.27 "Status Events" Normal
FORMAT The trap is generated when a voltage alarm occurred. $*
SDESC
The trap is generated when a voltage alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.28 "Status Events" Normal
FORMAT The trap is generated when a voltage alarm cleared. $*
SDESC
The trap is generated when a voltage alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.29 "Status Events" Normal
FORMAT The trap is generated when a voltage warning occurred. $*
SDESC
The trap is generated when a voltage warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtVoltageWarningClear .1.3.6.1.4.1.25506.2.6.4.0.30 "Status Events" Normal
FORMAT The trap is generated when a voltage warning cleared. $*
SDESC
The trap is generated when a voltage warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.31 "Status Events" Normal
FORMAT The trap is generated when a temperature fatal alarm occurred. $*
SDESC
The trap is generated when a temperature fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.32 "Status Events" Normal
FORMAT The trap is generated when a temperature fatal alarm cleared. $*
SDESC
The trap is generated when a temperature fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.33 "Status Events" Normal
FORMAT The trap is generated when a temperature alarm occurred. $*
SDESC
The trap is generated when a temperature alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.34 "Status Events" Normal
FORMAT The trap is generated when a temperature alarm cleared. $*
SDESC
The trap is generated when a temperature alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.35 "Status Events" Normal
FORMAT The trap is generated when a temperature warning occurred. $*
SDESC
The trap is generated when a temperature warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtTemperatureWarningClear .1.3.6.1.4.1.25506.2.6.4.0.36 "Status Events" Normal
FORMAT The trap is generated when a temperature warning cleared. $*
SDESC
The trap is generated when a temperature warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
  6: hh3cEntityExtThresholdType
     Syntax="OCTETSTR"
     Descr="The threshold type of RAS trap."
  7: hh3cEntityExtThresholdVal
     Syntax="OCTETSTR"
     Descr="The threshold value with unit of RAS trap."
  8: hh3cEntityExtCurrentVal
     Syntax="OCTETSTR"
     Descr="The current value with unit of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.37 "Status Events" Normal
FORMAT The trap is generated when a clock fatal alarm occurred. $*
SDESC
The trap is generated when a clock fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.38 "Status Events" Normal
FORMAT The trap is generated when a clock fatal alarm cleared. $*
SDESC
The trap is generated when a clock fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.39 "Status Events" Normal
FORMAT The trap is generated when a clock alarm occurred. $*
SDESC
The trap is generated when a clock alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.40 "Status Events" Normal
FORMAT The trap is generated when a clock alarm cleared. $*
SDESC
The trap is generated when a clock alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.41 "Status Events" Normal
FORMAT The trap is generated when a clock warning occurred. $*
SDESC
The trap is generated when a clock warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtClockWarningClear .1.3.6.1.4.1.25506.2.6.4.0.42 "Status Events" Normal
FORMAT The trap is generated when a clock warning cleared. $*
SDESC
The trap is generated when a clock warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.43 "Status Events" Normal
FORMAT The trap is generated when a disk fatal alarm occurred. $*
SDESC
The trap is generated when a disk fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.44 "Status Events" Normal
FORMAT The trap is generated when a disk fatal alarm cleared. $*
SDESC
The trap is generated when a disk fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.45 "Status Events" Normal
FORMAT The trap is generated when a disk alarm occurred. $*
SDESC
The trap is generated when a disk alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.46 "Status Events" Normal
FORMAT The trap is generated when a disk alarm cleared. $*
SDESC
The trap is generated when a disk alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.47 "Status Events" Normal
FORMAT The trap is generated when a disk warning occurred. $*
SDESC
The trap is generated when a disk warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtDiskWarningClear .1.3.6.1.4.1.25506.2.6.4.0.48 "Status Events" Normal
FORMAT The trap is generated when a disk warning cleared. $*
SDESC
The trap is generated when a disk warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.49 "Status Events" Normal
FORMAT The trap is generated when an optical fatal alarm occurred. $*
SDESC
The trap is generated when an optical fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.50 "Status Events" Normal
FORMAT The trap is generated when an optical fatal alarm cleared. $*
SDESC
The trap is generated when an optical fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.51 "Status Events" Normal
FORMAT The trap is generated when an optical alarm occurred. $*
SDESC
The trap is generated when an optical alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.52 "Status Events" Normal
FORMAT The trap is generated when an optical alarm cleared. $*
SDESC
The trap is generated when an optical alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.53 "Status Events" Normal
FORMAT The trap is generated when an optical warning occurred. $*
SDESC
The trap is generated when an optical warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtOpticalWarningClear .1.3.6.1.4.1.25506.2.6.4.0.54 "Status Events" Normal
FORMAT The trap is generated when an optical warning cleared. $*
SDESC
The trap is generated when an optical warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkFatalAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.55 "Status Events" Normal
FORMAT The trap is generated when an internal link fatal alarm occurred. $*
SDESC
The trap is generated when an internal link fatal alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkFatalAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.56 "Status Events" Normal
FORMAT The trap is generated when an internal link fatal alarm cleared. $*
SDESC
The trap is generated when an internal link fatal alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkAlarmOccur .1.3.6.1.4.1.25506.2.6.4.0.57 "Status Events" Normal
FORMAT The trap is generated when an internal link alarm occurred. $*
SDESC
The trap is generated when an internal link alarm occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkAlarmClear .1.3.6.1.4.1.25506.2.6.4.0.58 "Status Events" Normal
FORMAT The trap is generated when an internal link alarm cleared. $*
SDESC
The trap is generated when an internal link alarm cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkWarningOccur .1.3.6.1.4.1.25506.2.6.4.0.59 "Status Events" Normal
FORMAT The trap is generated when an internal link warning occurred. $*
SDESC
The trap is generated when an internal link warning occurred.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
EVENT hh3cEntityExtInternalLinkWarningClear .1.3.6.1.4.1.25506.2.6.4.0.60 "Status Events" Normal
FORMAT The trap is generated when an internal link warning cleared. $*
SDESC
The trap is generated when an internal link warning cleared.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtRelativeResource
     Syntax="OCTETSTR"
     Descr="The relative resource of RAS trap."
  4: hh3cEntityExtErrorCode
     Syntax="INTEGER32"
     Descr="The error code of RAS trap."
  5: hh3cEntityExtReason
     Syntax="OCTETSTR"
     Descr="The reason of RAS trap."
EDESC
#
#
#
#
MIB: HH3C-ENTITY-VENDORTYPE-OID-MIB (file:./hh3c-entity-vendortype-oid.mib) converted on Sat Apr  2 10:27:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ENTRELATION-MIB (file:./hh3c-entrelation.mib) converted on Sat Apr  2 10:27:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EOC-COMMON-MIB (file:./hh3c-eoc-common.mib) converted on Sat Apr  2 10:27:55 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEOCCnuRegExcessTrap .1.3.6.1.4.1.25506.2.83.5.0.1 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuRegExcessTrap notification is sent when the
number of registered CNUs exceeds the limit.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuRegExcessRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.2 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuRegExcessRecoverTrap notification is sent when
hh3cEOCCnuRegExcessTrap is detected and then recoverd.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuRegSuccTrap .1.3.6.1.4.1.25506.2.83.5.0.3 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuRegSuccTrap notification is sent when a
CNU registers successful.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuOffLineTrap .1.3.6.1.4.1.25506.2.83.5.0.4 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuOffLineTrap notification is sent when a
CNU offline.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuLinkupTrap .1.3.6.1.4.1.25506.2.83.5.0.5 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuLinkupTrap notification is sent when a
CNU linkup.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCOamDisconnectTrap .1.3.6.1.4.1.25506.2.83.5.0.6 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCOamDisconnectionTrap notification is sent when
LLID's OAM link is disconnected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCOamDisconnectRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.7 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCOamDisconnectionRecoverTrap notification is sent when
LLID's OAM link is disconnected and then connected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCBandwidthNotEnoughTrap .1.3.6.1.4.1.25506.2.83.5.0.8 "Status Events" Normal
FORMAT $*
SDESC

Bandwidth is not enough, cnu can not bind now.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuAttenuationTrap .1.3.6.1.4.1.25506.2.83.5.0.9 "Status Events" Normal
FORMAT $*
SDESC

A hh3cHPEOCCnuAttenuationTrap notification is sent when a
CNU's attenuation is changing.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuAttenuation
     Syntax="INTEGER32"
     Descr="
        The cnu's average attenuation.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRegFailTrap .1.3.6.1.4.1.25506.2.83.5.0.10 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuRegFailTrap notification is sent when a
CNU registers fail.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCLTCablePortErrorTrap .1.3.6.1.4.1.25506.2.83.5.0.11 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCLTCablePortErrorTrap notification is sent when the
hardware of cable port occurs error or CLT's vlan is configged
error.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCLTCablePortErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.12 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCLTCablePortErrReTrap notification is sent when cable port
error and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEOCCnuTxRateDropTrap .1.3.6.1.4.1.25506.2.83.5.0.13 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuTxRateDropTrap notification is sent when cable port
rate of TX capability drop exceeded threshold.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuTxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of tx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuTxRateDropRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.14 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuTxRateDropRecoverTrap notification is sent when cable port
rate of TX capability recover from the recent rate-drop trap.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuTxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of tx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRxRateDropTrap .1.3.6.1.4.1.25506.2.83.5.0.15 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuRxRateDropTrap notification is sent when cable port
rate of RX capability drop exceeded threshold.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuRxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of rx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuRxRateDropRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.16 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuRxRateDropRecoverTrap notification is sent when cable port
rate of RX capability recover from the recent rate-drop trap.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuRxRateDrop
     Syntax="INTEGER32"
     Descr="
        The cnu's capability droping of rx
        speed from it's history max value in unit of %.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuFWDownLoadErrTrap .1.3.6.1.4.1.25506.2.83.5.0.17 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuFWDownLoadErrTrap notification is sent when CLT can't
download CNU firmware from the server successfully.

Variables:
  1: hh3cHPEOCDownLoadCNUFWResult
     Syntax="OCTETSTR"
     Descr="
        Download CNU firmware result.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuFWDownLoadErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.18 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuFWDownLoadErrReTrap notification is sent when CLT recover
from the download CNU firmware error.

EDESC
#
#
#
EVENT hh3cEOCCnuDeviceTypeErrTrap .1.3.6.1.4.1.25506.2.83.5.0.19 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuDeviceTypeErrTrap notification is sent when the online CNU
doesn't match the type which user defined earlier.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
  4: hh3cEOCComCnuDeviceType
     Syntax="OCTETSTR"
     Descr="
        The type of the EOC CNU(Coax Network Unit).
        "
EDESC
#
#
#
EVENT hh3cEOCCnuDeviceTypeErrReTrap .1.3.6.1.4.1.25506.2.83.5.0.20 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuDeviceTypeErrReTrap notification is sent when the online CNU
doesn't match the type which user defined earlier and then recover.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuAutoUpdateErrTrap .1.3.6.1.4.1.25506.2.83.5.0.21 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuAutoUpdateErrTrap notification is sent when the online CNU
doesn't auto update successfully.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCCnuAutoUpdateSuccTrap .1.3.6.1.4.1.25506.2.83.5.0.22 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCCnuAutoUpdateSuccTrap notification is sent when the online CNU
auto update successfully.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCLoopbackDetectTrap .1.3.6.1.4.1.25506.2.83.5.0.23 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCLoopbackDetectTrap notification is sent when the loopback between
the ethernet ports of CNU or CLT is found.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
EVENT hh3cEOCLoopbackRecoverTrap .1.3.6.1.4.1.25506.2.83.5.0.24 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEOCLoopbackRecoverTrap notification is sent when the loopback between
the ethernet ports of CNU or CLT is recover.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEOCComCnuMacAddress
     Syntax="OCTETSTR"
     Descr="
        EOC CNU's MAC address.
        "
EDESC
#
#
#
#
MIB: HH3C-EPON-DEVICE-MIB (file:./hh3c-epon-device.mib) converted on Sat Apr  2 10:27:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EPON-FB-MIB (file:./hh3c-epon-fb.mib) converted on Sat Apr  2 10:27:55 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EPON-MIB (file:./hh3c-epon.mib) converted on Sat Apr  2 10:27:55 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEponPortAlarmBerTrap .1.3.6.1.4.1.25506.2.42.1.8.0.1 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponPortAlarmBerTrap notification is sent when
a BER threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmBerDirect
     Syntax="INTEGER"
       1: berUplink
       2: berDownlink
       3: berAll
     Descr="
        Traffic direction to monitor for BER alarm.
        "
  4: hh3cOltPortAlarmBer
     Syntax="UNSIGNED32"
     Descr="
        error bit rate.
        "
  5: hh3cOltPortAlarmBerThreshold
     Syntax="INTEGER32"
     Descr="
        BER threshold exceed which the alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmFerTrap .1.3.6.1.4.1.25506.2.42.1.8.0.2 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponPortAlarmFerTrap notification is sent when
a frame error rate threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmFerDirect
     Syntax="INTEGER"
       1: ferUplink
       2: ferDownlink
       3: ferAll
     Descr="
        Traffic direction to monitor for FER alarm.
        "
  4: hh3cOltPortAlarmFer
     Syntax="UNSIGNED32"
     Descr="
        error frames rate.
        "
  5: hh3cOltPortAlarmFerThreshold
     Syntax="INTEGER32"
     Descr="
        Frame error rate exceed threshold then the alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponErrorLLIDFrameTrap .1.3.6.1.4.1.25506.2.42.1.8.0.3 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponErrorLLIDFrameTrap notification is sent when a
LLID mismatched frames rate threshold crossing event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmLlidMisFrames
     Syntax="UNSIGNED32"
     Descr="
        the amount of mismatched frames about the LLID mismatch alarm.
        "
  4: hh3cOltPortAlarmLlidMismatchThreshold
     Syntax="INTEGER32"
     Descr="
        The minimal number of mismatched frames exceed threshold then
        LLID mismatch alarm is raised.
        "
EDESC
#
#
#
EVENT hh3cEponLoopBackEnableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.4 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponLoopBackEnableTrap notification is sent when
the loop back command is committed.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponLoopbackPortIndex
     Syntax="INTEGER32"
     Descr="
        The index of port which generate loop back event.
        "
  4: hh3cEponLoopbackPortDescr
     Syntax="OCTETSTR"
     Descr="
        A textual string containing information about the
        port generated loop back event.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegistrationErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.5 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuRegistrationErrTrap notification is sent when a
ONU register failed.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorMacAddr
     Syntax="OCTETSTR"
     Descr="
        The MAC of ONU registered error.
        "
EDESC
#
#
#
EVENT hh3cEponOamDisconnectionTrap .1.3.6.1.4.1.25506.2.42.1.8.0.6 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOamDisconnectionTrap notification is sent when
LLID's OAM link is disconnected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponEncryptionKeyErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.7 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponEncryptionKeyErrTrap notification is sent when
LLID's encryption key is bad.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponRemoteStableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.8 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponRemoteStableTrap notification is sent when
remote Data Terminal Equipment(DTE) has not seen or
is unsatisfied with local state information.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLocalStableTrap .1.3.6.1.4.1.25506.2.42.1.8.0.9 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponLocalStableTrap notification is sent when
DTE has not seen or is unsatisfied with remote state
information.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOamVendorSpecificTrap .1.3.6.1.4.1.25506.2.42.1.8.0.10 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOamVendorSpecificTrap notification is sent when
system vendor specific OAM alarm raised.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOamVendorSpecificAlarmCode
     Syntax="INTEGER32"
     Descr="
        Alarm code of the vendor.
        "
EDESC
#
#
#
EVENT hh3cEponSoftwareErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.11 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponSoftwareErrTrap notification is sent when
a PAS-SOFT internal error occurs.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cEponSoftwareErrorCode
     Syntax="INTEGER32"
     Descr="
        OLT software error code.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmBerRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.12 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponPortAlarmBerRecoverTrap notification is sent when
a BER threshold crossing event is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmBerDirect
     Syntax="INTEGER"
       1: berUplink
       2: berDownlink
       3: berAll
     Descr="
        Traffic direction to monitor for BER alarm.
        "
EDESC
#
#
#
EVENT hh3cEponPortAlarmFerRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.13 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponPortAlarmFerRecoverTrap notification is sent when
a frame error rate threshold crossing event is detected and then
recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOltPortAlarmFerDirect
     Syntax="INTEGER"
       1: ferUplink
       2: ferDownlink
       3: ferAll
     Descr="
        Traffic direction to monitor for FER alarm.
        "
EDESC
#
#
#
EVENT hh3cEponErrorLLIDFrameRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.14 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponErrorLLIDFrameRecoverTrap notification is sent when a
LLID mismatched frames rate threshold crossing event is detected
and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLoopBackEnableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.15 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponLoopBackEnableRecoverTrap notification is sent when
the loop back is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuRegistrationErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.16 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuRegistrationErrRecoverTrap notification is sent when an
ONU register failed and then register successful again.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorMacAddr
     Syntax="OCTETSTR"
     Descr="
        The MAC of ONU registered error.
        "
EDESC
#
#
#
EVENT hh3cEponOamDisconnectionRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.17 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOamDisconnectionRecoverTrap notification is sent when
LLID's OAM link is disconnected and then connected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponEncryptionKeyErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.18 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponEncryptionKeyErrRecoverTrap notification is sent when
LLID's encryption key is bad and then right.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponRemoteStableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.19 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponRemoteStableRecoverTrap notification is sent when
remote DTE has not seen or is unsatisfied with local
state information and then is realized.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponLocalStableRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.20 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponLocalStableRecoverTrap notification is sent when
DTE has not seen or is unsatisfied with remote state
information and then is realized.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOamVendorSpecificRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.21 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOamVendorSpecificRecoverTrap notification is sent when
system vendor specific OAM alarm is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOamVendorSpecificAlarmCode
     Syntax="INTEGER32"
     Descr="
        Alarm code of the vendor.
        "
EDESC
#
#
#
EVENT hh3cEponSoftwareErrRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.22 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponSoftwareErrRecoverTrap notification is sent when
a PAS-SOFT internal error is detected and then recovered.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cEponSoftwareErrorCode
     Syntax="INTEGER32"
     Descr="
        OLT software error code.
        "
EDESC
#
#
#
EVENT hh3cDot3OamThresholdRecoverEvent .1.3.6.1.4.1.25506.2.42.1.8.0.23 "Status Events" Normal
FORMAT $*
SDESC

A hh3cDot3OamThresholdRecoverEvent notification is sent when
hh3cDot3OamThresholdEvent is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cOamEventLogType
     Syntax="UNSIGNED32"
     Descr="
        The type of event that generated this entry in the event log.
        "
  3: hh3cOamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="
        Whether this event occurred locally, or was received from the
        OAM peer via Ethernet OAM.
        "
EDESC
#
#
#
EVENT hh3cDot3OamNonThresholdRecoverEvent .1.3.6.1.4.1.25506.2.42.1.8.0.24 "Status Events" Normal
FORMAT $*
SDESC

A hh3cDot3OamNonThresholdRecoverEvent notification is sent when
hh3cDot3OamNonThresholdEvent is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cOamEventLogType
     Syntax="UNSIGNED32"
     Descr="
        The type of event that generated this entry in the event log.
        "
  3: hh3cOamEventLogLocation
     Syntax="INTEGER"
       1: local
       2: remote
     Descr="
        Whether this event occurred locally, or was received from the
        OAM peer via Ethernet OAM.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegExcessTrap .1.3.6.1.4.1.25506.2.42.1.8.0.25 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuRegExcessTrap notification is sent when the
number of registered ONUs exceeds the limit.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuRegExcessRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.26 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuRegExcessRecoverTrap notification is sent when
hh3cEponOnuRegExcessTrap is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuPowerOffTrap .1.3.6.1.4.1.25506.2.42.1.8.0.27 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when ONU is power off.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltSwitchoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.28 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOltSwithoverTrap notification is sent when OLT switchover
is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltDFETrap .1.3.6.1.4.1.25506.2.42.1.8.0.29 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOltDFETrap notification is sent when there was
a serious problem(device fatal error) on OLT.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOltDFERecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.30 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOltDFERecoverTrap notification is sent when
device fatal error is detected and then recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuSilenceTrap .1.3.6.1.4.1.25506.2.42.1.8.0.31 "Status Events" Normal
FORMAT $*
SDESC

The hh3cEponOnuSilenceTrap notification is sent when an
unbound ONU try to register to an OLT.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.32 "Status Events" Normal
FORMAT $*
SDESC

The hh3cEponOnuSilenceRecoverTrap notification is sent when
a silent ONU is bound in the OLT or the aging onu mac
address is timeout.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
EDESC
#
#
#
EVENT hh3cEponOnuUpdateResultTrap .1.3.6.1.4.1.25506.2.42.1.8.0.33 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponUpdateResultTrap notification is sent when
an ONU reported its firmware update result.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindMacAddress
     Syntax="OCTETSTR"
     Descr="
        Bind the MAC of ONU.
        While the MAC is not bound, the ONU can not go into
        effect and configurations can not be set.
        Set 0-0-0 (MAC address) to the EPON device port will
        unbind the relationship with the original MAC and
        configurations will be set to default values.
        "
  4: hh3cOnuUpdateResult
     Syntax="INTEGER"
       1: updating
       2: ok
       3: fail
       4: fileNotExist
       5: notSetFilename
       6: fileNotMatchONU
       7: timeout
       8: otherError
     Descr="
        The ONU firmware update result.
        updating  - The ONU is updating firmware right now.
        ok     - The ONU update result is OK.
        fail   - The ONU update result is fail.
        fileNotExist - The ONU update failed because the file does not exist.
        notSetFilename - The ONU firmware filename is not set.
        fileNotMatchONU - The ONU firmware does not match the ONU.
        timeout - The ONU responses timeout.
        otherError - The ONU update result is unknown.
        "
  5: hh3cOnuRegType
     Syntax="OCTETSTR"
     Descr="
        ONU registered type.
        "
  6: hh3cOnuUpdateFileName
     Syntax="OCTETSTR"
     Descr="
        The filename of the ONU firmware to be updated.
        Note that the filename must contain the file path.
        "
EDESC
#
#
#
EVENT hh3cEponOnuAutoBindTrap .1.3.6.1.4.1.25506.2.42.1.8.0.34 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuAutoBindTrap notification is sent
when a silent ONU is bound automatically.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindMacAddress
     Syntax="OCTETSTR"
     Descr="
        Bind the MAC of ONU.
        While the MAC is not bound, the ONU can not go into
        effect and configurations can not be set.
        Set 0-0-0 (MAC address) to the EPON device port will
        unbind the relationship with the original MAC and
        configurations will be set to default values.
        "
  4: hh3cEponOperationResult
     Syntax="OCTETSTR"
     Descr="
        The result of EPON operation.
        "
EDESC
#
#
#
EVENT hh3cEponOnuPortStpStateTrap .1.3.6.1.4.1.25506.2.42.1.8.0.35 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuPortStpStateTrap notification is sent when
a port turns into another state in STP environment.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponStpPortIndex
     Syntax="INTEGER32"
     Descr="The index of the STP ports."
  4: hh3cEponStpPortDescr
     Syntax="OCTETSTR"
     Descr="The description of the STP ports."
  5: hh3cEponStpPortState
     Syntax="INTEGER"
       1: disabled
       2: discarding
       3: learning
       4: forwarding
     Descr="The current state of the port (i.e. disabled, discarding,
         learning and forwarding)."
EDESC
#
#
#
EVENT hh3cEponOnuLaserFailedTrap .1.3.6.1.4.1.25506.2.42.1.8.0.36 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuLaserFailedTrap notification is sent when
an ONU has trouble with laser, such as laser constantly turned on,
signal degradation or optics EOL (End of Life).

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuLaserState
     Syntax="INTEGER"
       1: normal
       2: laserAlwaysOn
       3: signalDegradation
       4: endOfLife
     Descr="
        The state of ONU laser.
        "
EDESC
#
#
#
EVENT hh3cOnuSmlkSwitchoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.37 "Status Events" Normal
FORMAT $*
SDESC

A hh3cOnuSmlkSwitchoverTrap notification is sent when
an ONU SMLK switchover is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuSmlkGroupID
     Syntax="INTEGER32"
     Descr="
        The SMLK group ID of ONU.
        "
  4: hh3cOnuSmlkFirstPonStatus
     Syntax="INTEGER"
       1: active
       2: standby
       3: down
       4: null
     Descr="
        The transmitting status of ONU first PON port in a SMLK group.
        "
  5: hh3cOnuSmlkSecondPonStatus
     Syntax="INTEGER"
       1: active
       2: standby
       3: down
       4: null
     Descr="
        The transmitting status of ONU second PON port in a SMLK group.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegLoidErrTrap .1.3.6.1.4.1.25506.2.42.1.8.0.38 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuRegLoidErrTrap notification is sent when an
ONU failed to register identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of an ONU with registration error.
        "
  4: hh3cEponOnuRegErrorLoidCode
     Syntax="INTEGER"
       1: loidNotExist
       2: wrongPassword
       3: conflictLoid
       4: notSupport
       5: mismatch
     Descr="
        The reason of ONU registration failure.
        "
EDESC
#
#
#
EVENT hh3cEponOnuRegLoidErrRecTrap .1.3.6.1.4.1.25506.2.42.1.8.0.39 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuRegLoidErrRecTrap notification is sent when an
ONU failed to register and then registered successful again identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegErrorLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of an ONU with registration error.
        "
  4: hh3cEponOnuRegErrorLoidCode
     Syntax="INTEGER"
       1: loidNotExist
       2: wrongPassword
       3: conflictLoid
       4: notSupport
       5: mismatch
     Descr="
        The reason of ONU registration failure.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceLoidTrap .1.3.6.1.4.1.25506.2.42.1.8.0.40 "Status Events" Normal
FORMAT $*
SDESC

The hh3cEponOnuSilenceLoidTrap notification is sent when an
unbound ONU try to register to an OLT identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentBindType
     Syntax="BITS"
     Descr="
        The binding type of a silent ONU.
        "
  4: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
  5: hh3cEponOnuRegSilentLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of a silent ONU.
        "
  6: hh3cEponOnuRegSilentLoidPwd
     Syntax="OCTETSTR"
     Descr="
        The LOID's password of a silent ONU.
        A zero-length string will be returned when reading.
        "
EDESC
#
#
#
EVENT hh3cEponOnuSilenceLoidRecTrap .1.3.6.1.4.1.25506.2.42.1.8.0.41 "Status Events" Normal
FORMAT $*
SDESC

The hh3cEponOnuSilenceLoidRecTrap notification is sent when
a silent ONU is bound in the OLT or the aging ONU MAC
address times out identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponOnuRegSilentBindType
     Syntax="BITS"
     Descr="
        The binding type of a silent ONU.
        "
  4: hh3cEponOnuRegSilentMac
     Syntax="OCTETSTR"
     Descr="
        The MAC of silent ONU.
        "
  5: hh3cEponOnuRegSilentLoid
     Syntax="OCTETSTR"
     Descr="
        The LOID of a silent ONU.
        "
  6: hh3cEponOnuRegSilentLoidPwd
     Syntax="OCTETSTR"
     Descr="
        The LOID's password of a silent ONU.
        A zero-length string will be returned when reading.
        "
EDESC
#
#
#
EVENT hh3cEponOnuUpdateLoidRetTrap .1.3.6.1.4.1.25506.2.42.1.8.0.42 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuUpdateLoidRetTrap notification is sent when
an ONU reported its firmware update result identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindLoid
     Syntax="OCTETSTR"
     Descr="
        Bind the LOID of ONU.
        While the LOID is not bound, the ONU can not go into
        effect and configurations can not be set.
        "
  4: hh3cOnuUpdateResult
     Syntax="INTEGER"
       1: updating
       2: ok
       3: fail
       4: fileNotExist
       5: notSetFilename
       6: fileNotMatchONU
       7: timeout
       8: otherError
     Descr="
        The ONU firmware update result.
        updating  - The ONU is updating firmware right now.
        ok     - The ONU update result is OK.
        fail   - The ONU update result is fail.
        fileNotExist - The ONU update failed because the file does not exist.
        notSetFilename - The ONU firmware filename is not set.
        fileNotMatchONU - The ONU firmware does not match the ONU.
        timeout - The ONU responses timeout.
        otherError - The ONU update result is unknown.
        "
  5: hh3cOnuRegType
     Syntax="OCTETSTR"
     Descr="
        ONU registered type.
        "
  6: hh3cOnuUpdateFileName
     Syntax="OCTETSTR"
     Descr="
        The filename of the ONU firmware to be updated.
        Note that the filename must contain the file path.
        "
EDESC
#
#
#
EVENT hh3cEponOnuAutoBindLoidTrap .1.3.6.1.4.1.25506.2.42.1.8.0.43 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuAutoBindLoidTrap notification is sent
when a silent ONU is bound automatically identified by LOID.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cOnuBindLoid
     Syntax="OCTETSTR"
     Descr="
        Bind the LOID of ONU.
        While the LOID is not bound, the ONU can not go into
        effect and configurations can not be set.
        "
  4: hh3cEponOperationResult
     Syntax="OCTETSTR"
     Descr="
        The result of EPON operation.
        "
EDESC
#
#
#
EVENT hh3cEponOnuPowerOnTrap .1.3.6.1.4.1.25506.2.42.1.8.0.44 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when ONU is powered on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOpticalSignalLosTrap .1.3.6.1.4.1.25506.2.42.1.8.0.45 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOpticalSignalLosTrap notification is sent when optical signals are lost.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOpticalSignalLosRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.46 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOpticalSignalLosTrap notification is sent when optical signal loss recovers.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuFiberFailTrap .1.3.6.1.4.1.25506.2.42.1.8.0.47 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when the ONU fiber fails.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cEponOnuFiberFailRecoverTrap .1.3.6.1.4.1.25506.2.42.1.8.0.48 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponOnuPowerOffTrap notification is sent when the ONU fiber failure recovers.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-EPON-UNI-MIB (file:./hh3c-epon-uni.mib) converted on Sat Apr  2 10:27:56 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEponUniLinkUpTrap .1.3.6.1.4.1.25506.2.42.5.2.0.1 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponUniLinkUpTrap notification is sent
when the UNI up event is detected
and the transmitting switch is turned on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the user network interface. When a managed
        system initializes, all user network interfaces start with down(2)
        state. The testing(3)state indicates that no operational packets
        can be passed. As a result of either explicit management action or
        per configuration information retained by the managed system,
        hh3cEponUniAdminStatus is then changed to either the up(1) or
        testing(3) states (or remains in the down(2) state)."
EDESC
#
#
#
EVENT hh3cEponUniLinkDownTrap .1.3.6.1.4.1.25506.2.42.5.2.0.2 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponUniLinkDownTrap notification is sent
when the UNI down event is detected
and the transmitting switch is turned on.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the user network interface. When a managed
        system initializes, all user network interfaces start with down(2)
        state. The testing(3)state indicates that no operational packets
        can be passed. As a result of either explicit management action or
        per configuration information retained by the managed system,
        hh3cEponUniAdminStatus is then changed to either the up(1) or
        testing(3) states (or remains in the down(2) state)."
EDESC
#
#
#
EVENT hh3cEponUniLoopBackDetectedTrap .1.3.6.1.4.1.25506.2.42.5.2.0.3 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponUniLoopBackDetectedTrap notification is sent
when the UNI loopback event is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniVlan
     Syntax="INTEGER32"
     Descr="
        If the function is not supported,
        the default value 0 will be returned.
        Unit:decibel(db).
        "
EDESC
#
#
#
EVENT hh3cEponUniLoopBackRecoveredTrap .1.3.6.1.4.1.25506.2.42.5.2.0.4 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponUniLoopBackRecoveredTrap notification is sent
when the UNI loopback is recovered.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  4: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  5: hh3cEponUniVlan
     Syntax="INTEGER32"
     Descr="
        If the function is not supported,
        the default value 0 will be returned.
        Unit:decibel(db).
        "
EDESC
#
#
#
EVENT hh3cEponCTCAlarmTrap .1.3.6.1.4.1.25506.2.42.5.2.0.5 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponCTCAlarmTrap notification is sent
when an ONU CTC alarm is detected.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponCTCAlarmID
     Syntax="INTEGER"
       1: onuEquipmentAlarm
       10: onuONUTempLowAlarm
       1025: uniPOTSPortFailure
       11: onuIADConnectionFailure
       12: onuPonIFSwitch
       1281: uniE1PortFailure
       1282: uniE1TimingUnlock
       1283: uniE1LOS
       13: onuSleepStatusUpdate
       2: onuPowerAlarm
       257: ponRXPowerHighAlarm
       258: ponRXPowerLowAlarm
       259: ponTXPowerHighAlarm
       260: ponTXPowerLowAlarm
       261: ponTXBiasHighAlarm
       262: ponTXBiasLowAlarm
       263: ponVccHighAlarm
       264: ponVccLowAlarm
       265: ponTempHighAlarm
       266: ponTempLowAlarm
       267: ponRXPowerHighWarning
       268: ponRXPowerLowWarning
       269: ponTXPowerHighWarning
       270: ponTXPowerLowWarning
       271: ponTXBiasHighWarning
       272: ponTXBiasLowWarning
       273: ponVccHighWarning
       274: ponVccLowWarning
       275: ponTempHighWarning
       276: ponTempLowWarning
       277: ponDownstreamDropEventsAlarm
       278: ponUpstreamDropEventsAlarm
       279: ponDownstreamCRCErrorFramesAlarm
       280: ponUpstreamCRCErrorFramesAlarm
       281: ponDownstreamUndersizeFramesAlarm
       282: ponUpstreamUndersizeFramesAlarm
       283: ponDownstreamOversizeFramesAlarm
       284: ponUpstreamOversizeFramesAlarm
       285: ponDownstreamFragmentsAlarm
       286: ponUpstreamFragmentsAlarm
       287: ponDownstreamJabbersAlarm
       288: ponUpstreamJabbersAlarm
       289: ponDownstreamDiscardsAlarm
       290: ponUpstreamDiscardsAlarm
       291: ponDownstreamErrorsAlarm
       292: ponUpstreamErrorsAlarm
       293: ponDownstreamDropEventsWarning
       294: ponUpstreamDropEventsWarning
       295: ponDownstreamCRCErrorFramesWarning
       296: ponUpstreamCRCErrorFramesWarning
       297: ponDownstreamUndersizeFramesWarning
       298: ponUpstreamUndersizeFramesWarning
       299: ponDownstreamOversizeFramesWarning
       3: onuBatteryMissing
       300: ponUpstreamOversizeFramesWarning
       301: ponDownstreamFragmentsWarning
       302: ponUpstreamFragmentsWarning
       303: ponDownstreamJabbersWarning
       304: ponUpstreamJabbersWarning
       305: ponDownstreamDiscardsWarning
       306: ponUpstreamDiscardsWarning
       307: ponDownstreamErrorsWarning
       308: ponUpstreamErrorsWarning
       4: onuBatteryFailure
       5: onuBatteryVoltLow
       6: onuPhysicalIntrusionAlarm
       7: onuONUSelfTestFailure
       769: uniEthPortAutoNegFailure
       770: uniEthPortLOS
       771: uniEthPortFailure
       772: uniEthPortLoopback
       773: uniEthPortCongestion
       774: uniDownstreamDropEventsAlarm
       775: uniUpstreamDropEventsAlarm
       776: uniDownstreamCRCErrorFramesAlarm
       777: uniUpstreamCRCErrorFramesAlarm
       778: uniDownstreamUndersizeFramesAlarm
       779: uniUpstreamUndersizeFramesAlarm
       780: uniDownstreamOversizeFramesAlarm
       781: uniUpstreamOversizeFramesAlarm
       782: uniDownstreamFragmentsAlarm
       783: uniUpstreamFragmentsAlarm
       784: uniDownstreamJabbersAlarm
       785: uniUpstreamJabbersAlarm
       786: uniDownstreamDiscardsAlarm
       787: uniUpstreamDiscardsAlarm
       788: uniDownstreamErrorsAlarm
       789: uniUpstreamErrorsAlarm
       790: uniStatusChangeTimesAlarm
       791: uniDownstreamDropEventsWarning
       792: uniUpstreamDropEventsWarning
       793: uniDownstreamCRCErrorFramesWarning
       794: uniUpstreamCRCErrorFramesWarning
       795: uniDownstreamUndersizeFramesWarning
       796: uniUpstreamUndersizeFramesWarning
       797: uniDownstreamOversizeFramesWarning
       798: uniUpstreamOversizeFramesWarning
       799: uniDownstreamFragmentsWarning
       800: uniUpstreamFragmentsWarning
       801: uniDownstreamJabbersWarning
       802: uniUpstreamJabbersWarning
       803: uniDownstreamDiscardsWarning
       804: uniUpstreamDiscardsWarning
       805: uniDownstreamErrorsWarning
       806: uniUpstreamErrorsWarning
       807: uniStatusChangeTimesWarning
       9: onuONUTempHighAlarm
     Descr="
        The CTC alarm ID. There are 3 types of CTC alarms.
        ONU alarm:   0x0001~0x00ff
        PON alarm:   0x0101~0x01ff
        UNI alarm:   0x0301~0x05ff
        "
  4: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  5: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  6: hh3cEponCTCAlarmInfo
     Syntax="OCTETSTR"
     Descr="
        The information of an ONU CTC alarm.
        "
EDESC
#
#
#
EVENT hh3cEponCTCAlarmRecoverTrap .1.3.6.1.4.1.25506.2.42.5.2.0.6 "Status Events" Normal
FORMAT $*
SDESC

A hh3cEponCTCAlarmRecoverTrap notification is sent
when an ONU CTC alarm is cleared.

Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cEponCTCAlarmID
     Syntax="INTEGER"
       1: onuEquipmentAlarm
       10: onuONUTempLowAlarm
       1025: uniPOTSPortFailure
       11: onuIADConnectionFailure
       12: onuPonIFSwitch
       1281: uniE1PortFailure
       1282: uniE1TimingUnlock
       1283: uniE1LOS
       13: onuSleepStatusUpdate
       2: onuPowerAlarm
       257: ponRXPowerHighAlarm
       258: ponRXPowerLowAlarm
       259: ponTXPowerHighAlarm
       260: ponTXPowerLowAlarm
       261: ponTXBiasHighAlarm
       262: ponTXBiasLowAlarm
       263: ponVccHighAlarm
       264: ponVccLowAlarm
       265: ponTempHighAlarm
       266: ponTempLowAlarm
       267: ponRXPowerHighWarning
       268: ponRXPowerLowWarning
       269: ponTXPowerHighWarning
       270: ponTXPowerLowWarning
       271: ponTXBiasHighWarning
       272: ponTXBiasLowWarning
       273: ponVccHighWarning
       274: ponVccLowWarning
       275: ponTempHighWarning
       276: ponTempLowWarning
       277: ponDownstreamDropEventsAlarm
       278: ponUpstreamDropEventsAlarm
       279: ponDownstreamCRCErrorFramesAlarm
       280: ponUpstreamCRCErrorFramesAlarm
       281: ponDownstreamUndersizeFramesAlarm
       282: ponUpstreamUndersizeFramesAlarm
       283: ponDownstreamOversizeFramesAlarm
       284: ponUpstreamOversizeFramesAlarm
       285: ponDownstreamFragmentsAlarm
       286: ponUpstreamFragmentsAlarm
       287: ponDownstreamJabbersAlarm
       288: ponUpstreamJabbersAlarm
       289: ponDownstreamDiscardsAlarm
       290: ponUpstreamDiscardsAlarm
       291: ponDownstreamErrorsAlarm
       292: ponUpstreamErrorsAlarm
       293: ponDownstreamDropEventsWarning
       294: ponUpstreamDropEventsWarning
       295: ponDownstreamCRCErrorFramesWarning
       296: ponUpstreamCRCErrorFramesWarning
       297: ponDownstreamUndersizeFramesWarning
       298: ponUpstreamUndersizeFramesWarning
       299: ponDownstreamOversizeFramesWarning
       3: onuBatteryMissing
       300: ponUpstreamOversizeFramesWarning
       301: ponDownstreamFragmentsWarning
       302: ponUpstreamFragmentsWarning
       303: ponDownstreamJabbersWarning
       304: ponUpstreamJabbersWarning
       305: ponDownstreamDiscardsWarning
       306: ponUpstreamDiscardsWarning
       307: ponDownstreamErrorsWarning
       308: ponUpstreamErrorsWarning
       4: onuBatteryFailure
       5: onuBatteryVoltLow
       6: onuPhysicalIntrusionAlarm
       7: onuONUSelfTestFailure
       769: uniEthPortAutoNegFailure
       770: uniEthPortLOS
       771: uniEthPortFailure
       772: uniEthPortLoopback
       773: uniEthPortCongestion
       774: uniDownstreamDropEventsAlarm
       775: uniUpstreamDropEventsAlarm
       776: uniDownstreamCRCErrorFramesAlarm
       777: uniUpstreamCRCErrorFramesAlarm
       778: uniDownstreamUndersizeFramesAlarm
       779: uniUpstreamUndersizeFramesAlarm
       780: uniDownstreamOversizeFramesAlarm
       781: uniUpstreamOversizeFramesAlarm
       782: uniDownstreamFragmentsAlarm
       783: uniUpstreamFragmentsAlarm
       784: uniDownstreamJabbersAlarm
       785: uniUpstreamJabbersAlarm
       786: uniDownstreamDiscardsAlarm
       787: uniUpstreamDiscardsAlarm
       788: uniDownstreamErrorsAlarm
       789: uniUpstreamErrorsAlarm
       790: uniStatusChangeTimesAlarm
       791: uniDownstreamDropEventsWarning
       792: uniUpstreamDropEventsWarning
       793: uniDownstreamCRCErrorFramesWarning
       794: uniUpstreamCRCErrorFramesWarning
       795: uniDownstreamUndersizeFramesWarning
       796: uniUpstreamUndersizeFramesWarning
       797: uniDownstreamOversizeFramesWarning
       798: uniUpstreamOversizeFramesWarning
       799: uniDownstreamFragmentsWarning
       800: uniUpstreamFragmentsWarning
       801: uniDownstreamJabbersWarning
       802: uniUpstreamJabbersWarning
       803: uniDownstreamDiscardsWarning
       804: uniUpstreamDiscardsWarning
       805: uniDownstreamErrorsWarning
       806: uniUpstreamErrorsWarning
       807: uniStatusChangeTimesWarning
       9: onuONUTempHighAlarm
     Descr="
        The CTC alarm ID. There are 3 types of CTC alarms.
        ONU alarm:   0x0001~0x00ff
        PON alarm:   0x0101~0x01ff
        UNI alarm:   0x0301~0x05ff
        "
  4: hh3cEponUniIndex
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the FE(fast Ethernet)
        interface of the ONU."
  5: hh3cEponUniDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the interface.  This
        string should include the name of the manufacturer, the product name
        and the version of the interface hardware and software."
  6: hh3cEponCTCAlarmInfo
     Syntax="OCTETSTR"
     Descr="
        The information of an ONU CTC alarm.
        "
EDESC
#
#
#
#
MIB: HH3C-EVB-MIB (file:./hh3c-evb.mib) converted on Sat Apr  2 10:27:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EVC-MIB (file:./hh3c-evc.mib) converted on Sat Apr  2 10:27:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-EVI-MIB (file:./hh3c-evi.mib) converted on Sat Apr  2 10:27:56 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cEviNewDed .1.3.6.1.4.1.25506.2.132.0.1 "Status Events" Normal
FORMAT Notifies that a new DED has been elected. $*
SDESC
Notifies that a new DED has been elected.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
  3: hh3cEviISISNbrSysId
     Syntax="OCTETSTR"
     Descr="System ID of the neighbor."
EDESC
#
#
#
EVENT hh3cEviSiteEDTopoChange .1.3.6.1.4.1.25506.2.132.0.2 "Status Events" Normal
FORMAT Notifies that the EVI network topology has changed. $*
SDESC
Notifies that the EVI network topology has changed.
Variables:
  1: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
  2: hh3cEviISISNbrSiteNbrs
     Syntax="UNSIGNED32"
     Descr="The count of neighbors that belong to the same site."
EDESC
#
#
#
EVENT hh3cEviEDLinkDisconnect .1.3.6.1.4.1.25506.2.132.0.3 "Status Events" Normal
FORMAT Notifies that all the EVI links on a tunnel are down. $*
SDESC
Notifies that all the EVI links on a tunnel are down.
Variables:
  1: hh3cEviProcessId
     Syntax="UNSIGNED32"
     Descr="EVI IS-IS process ID."
EDESC
#
#
#
#
MIB: HH3C-EVPN-MIB (file:./hh3c-evpn.mib) converted on Sat Apr  2 10:27:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FAILOVER-MIB (file:./hh3c-failover.mib) converted on Sat Apr  2 10:27:56 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-FLOGIN-MIB (file:./hh3c-fc-flogin.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-NAME-SERVER-MIB (file:./hh3c-fc-name-server.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcNsPortLoginNotify .1.3.6.1.4.1.25506.2.127.10.1.1.0.1 "Status Events" Normal
FORMAT This notification will be generated when an entry is added to the $*
SDESC
This notification will be generated when an entry is added to the
Name Server database by Nx_Port locally logging in.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcNsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local switch."
  3: hh3cFcNsFloginPortWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local logged-in Nx_Port."
EDESC
#
#
#
EVENT hh3cFcNsPortLogoutNotify .1.3.6.1.4.1.25506.2.127.10.1.1.0.2 "Status Events" Normal
FORMAT This notification will be generated when an entry is deleted from $*
SDESC
This notification will be generated when an entry is deleted from
the Name Server database by Nx_Port locally logging out.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcNsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local switch."
  3: hh3cFcNsFloginPortWWN
     Syntax="OCTETSTR"
     Descr="The world wide name of the local logged-in Nx_Port."
EDESC
#
#
#
#
MIB: HH3C-FCOE-MIB (file:./hh3c-fcoe.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FCOE-MODE-MIB (file:./hh3c-fcoe-mode.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-PING-MIB (file:./hh3c-fc-ping.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcPingCompletionNotify .1.3.6.1.4.1.25506.2.127.5.1.3.0.1 "Status Events" Normal
FORMAT When a FC ping test is finished and the instance of $*
SDESC
When a FC ping test is finished and the instance of
hh3cFcPingTrapOnCompletion associated with the test
is set to 'true', this notification occurred.
Variables:
  1: hh3cFcPingIndex
     Syntax="UNSIGNED32"
     Descr="The index of the current FC ping entry.  This object
         identifies a FC ping request entry uniquely in a
         specified VSAN (Virtual Storage Area Network)."
  2: hh3cFcPingVsan
     Syntax="UNSIGNED32"
     Descr="The VSAN on which the FC ping request will be
         performed.  If the corresponding instance value of
         hh3cFcPingOperStatus is 'inProgress', the object
         cannot be modified."
  3: hh3cFcPingAddressType
     Syntax="INTEGER"
       1: wwn
       2: fcid
     Descr="The type of the corresponding instance of
         hh3cFcPingAddress object."
  4: hh3cFcPingAddress
     Syntax="OCTETSTR"
     Descr="The address to which the route will be pinged.

         This object will contain an 8 octet long WWN(World Wide Name),
         if the value of the associated instance of hh3cFcPingAddressType
         object is 'wwn'.

         This object will contain a 3 octet long Fibre Channel Address ID,
         if the value of the associated instance of hh3cFcPingAddressType
         object is 'fcid'."
  5: hh3cFcPingReqPackets
     Syntax="UNSIGNED32"
     Descr="The number of FC ping packets request in this sequence."
  6: hh3cFcPingResPackets
     Syntax="UNSIGNED32"
     Descr="The number of FC ping packets response in this sequence."
EDESC
#
#
#
#
MIB: HH3C-FC-PSM-MIB (file:./hh3c-fc-psm.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcPsmFPortDenyNotify .1.3.6.1.4.1.25506.2.127.8.0.1 "Status Events" Normal
FORMAT Notifies that a FLOGI is denied on an F port of the local device. $*
SDESC
Notifies that a FLOGI is denied on an F port of the local device.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cFcPsmLoginPWWN
     Syntax="OCTETSTR"
     Descr="The pWWN of the device whose FLOGI(Fabric Login) request had
        been denied.  If the device is an n-node, the value of the instance
        of hh3cFcPsmLoginSWWN should be zero-length string."
  3: hh3cFcPsmLoginIntf
     Syntax="INTEGER32"
     Descr="The ifindex of the port where the login was denied."
  4: hh3cFcPsmLoginTime
     Syntax="OCTETSTR"
     Descr="Specifies the date and time when the last denied login
         happened."
EDESC
#
#
#
EVENT hh3cFcPsmEPortDenyNotify .1.3.6.1.4.1.25506.2.127.8.0.2 "Status Events" Normal
FORMAT Notifies that a switch is denied on an E port of the local device. $*
SDESC
Notifies that a switch is denied on an E port of the local device.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cFcPsmLoginSWWN
     Syntax="OCTETSTR"
     Descr="The sWWN of the device whose FLOGI request had been denied.
         If the device is a switch, the values of the instance of
         hh3cFcPsmLoginPWWN and hh3cFcPsmLoginNWWN should be zero-length
         string."
  3: hh3cFcPsmLoginIntf
     Syntax="INTEGER32"
     Descr="The ifindex of the port where the login was denied."
  4: hh3cFcPsmLoginTime
     Syntax="OCTETSTR"
     Descr="Specifies the date and time when the last denied login
         happened."
EDESC
#
#
#
#
MIB: HH3C-FC-TC-MIB (file:./hh3c-fc-tc.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FC-TRACE-ROUTE-MIB (file:./hh3c-fc-trace-route.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcTraceRouteCompletionNotify .1.3.6.1.4.1.25506.2.127.4.1.3.0.1 "Status Events" Normal
FORMAT When a trace route test is finished and the instance of $*
SDESC
When a trace route test is finished and the instance of
hh3cFcTraceRouteTrapOnCompletion associated with the test
is set to 'true', this notification occurred.
Variables:
  1: hh3cFcTraceRouteIndex
     Syntax="UNSIGNED32"
     Descr="The index of the current trace route entry.  This object
         uniquely identifies a trace route request entry in a
         specified VSAN (Virtual Storage Area Network)."
  2: hh3cFcTraceRouteVsan
     Syntax="UNSIGNED32"
     Descr="The VSAN on which the trace route request will be
         executed.  If the corresponding instance value of
         hh3cFcTraceRouteOperStatus is 'inProgress', the
         object cannot be modified."
  3: hh3cFcTraceRouteAddressType
     Syntax="INTEGER"
       1: wwn
       2: fcid
     Descr="The type of the corresponding instance of
         hh3cFcTraceRouteAddress object."
  4: hh3cFcTraceRouteAddress
     Syntax="OCTETSTR"
     Descr="The address to which the route will be traced.
         This object will contain an 8-octet WWN (World Wide Name),
         if the value of the associated instance of
         hh3cFcTraceRouteAddressType object is 'wwn'.
         This object will contain a 3-octet Fibre Channel ID,
         if the value of the associated instance of
         hh3cFcTraceRouteAddressType object is 'fcid'."
  5: hh3cFcTraceRouteOperStatus
     Syntax="INTEGER"
       1: inProgress
       2: success
       3: partialSuccess
       4: failure
       5: disabled
     Descr="This object indicates the operational status
         of this hh3cFcTraceRouteEntry.

         The value specifications are listed as follows:
         inProgress     - Trace route is in progress.
         success        - Trace route has succeeded.
         partialSuccess - Trace route has partially succeeded.
         failure        - Trace route has failed due to resource limitations.
         disabled       - Trace route is disabled."
EDESC
#
#
#
#
MIB: HH3C-FC-ZONE-SERVER-MIB (file:./hh3c-fc-zone-server.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFcZsDefaultZoneChangedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.1 "Status Events" Normal
FORMAT A hh3cFcZsDefaultZoneChangedNotify notification is sent when $*
SDESC
A hh3cFcZsDefaultZoneChangedNotify notification is sent when
the Default Zone setting of a specified VSAN is changed.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  3: hh3cFcZsDefaultZoneSetting
     Syntax="INTEGER"
       1: deny
       2: permit
     Descr="This object controls the Zoning flag that governs the
         behavior of the Default Zone in this VSAN.

         If this object is set to 'permit', the members of the
         Default Zone in this VSAN can communicate with each
         other.

         If this object is set to 'deny', the members of the
         Default Zone in this VSAN cannot communicate with each
         other."
EDESC
#
#
#
EVENT hh3cFcZsHardZoneChangedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.2 "Status Events" Normal
FORMAT A hh3cFcZsHardZoneChangedNotify notification is sent when $*
SDESC
A hh3cFcZsHardZoneChangedNotify notification is sent when
the hard Zone configuration of a specified VSAN is changed.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  3: hh3cFcZsHardZoneStatus
     Syntax="INTEGER"
       1: enable
       2: adminDisable
       3: noResourceDisable
     Descr="The current status of Hard Zone Server.

        'enable'            - Hard Zone Server is enabled.
        'adminDisable'      - Hard Zone Server is disabled administratively.
        'noResourceDisable' - Hard Zone Server is disabled due to lack of
                              hardware resource."
EDESC
#
#
#
EVENT hh3cFcZsMergeFailedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.3 "Status Events" Normal
FORMAT A hh3cFcZsMergeFailedNotify notification is sent when a Zone merge $*
SDESC
A hh3cFcZsMergeFailedNotify notification is sent when a Zone merge
failure occurs.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  4: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  5: hh3cFcZsPeerSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the peer switch."
  6: hh3cFcZsMergeFailCause
     Syntax="INTEGER"
       1: zoneModeInconsistent
       10: other
       2: zonePolicyNotEqual
       3: hardZoneInconsistent
       4: dataNotEqualInRestrict
       5: activeZoneSetMergeFailed
       6: zoneMergeDataTooBig
       7: zoningObjectNumberTooBig
       8: zoneDbMergeFaildInBasic
       9: zoneDbMergeFaildInEnhanced
     Descr="Indicates the reason of a Zone merge failure.

         'zoneModeInconsistent'        - The zone mode is inconsistent.
         'zonePolicyNotEqual'          - Zone Merge-Control setting or
                                         Default-Zone doesn't match.
         'hardZoneInconsistent'        - The Hard Zone Attribute is
                                         inconsistent.
         'dataNotEqualInRestrict'      - The Merge-Control setting is
                                         Restrict and the peer zoning
                                         database is not equal.
         'activeZoneSetMergeFailed'    - The Active Zone Set merge failed.
         'zoneMergeDataTooBig'         - The merged packet was
                                         too large.
         'zoningObjectNumberTooBig'    - The number of zoning objects exceeded
                                         the limit.
         'zoneDbMergeFaildInBasic'     - The database merge failed in Basic
                                         mode.
         'zoneDbMergeFaildInEnhanced'  - The database merge failed in Enhanced
                                         mode.
         'other'                       - Unknown reason."
EDESC
#
#
#
EVENT hh3cFcZsMergeSucceededNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.4 "Status Events" Normal
FORMAT A hh3cFcZsMergeSucceededNotify notification is sent when a successful $*
SDESC
A hh3cFcZsMergeSucceededNotify notification is sent when a successful
Zone merge occurs.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  4: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  5: hh3cFcZsPeerSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the peer switch."
EDESC
#
#
#
EVENT hh3cFcZsActivationCompletedNotify .1.3.6.1.4.1.25506.2.127.9.1.4.0.5 "Status Events" Normal
FORMAT A hh3cFcZsActivationCompletedNotify notification is sent whenever a $*
SDESC
A hh3cFcZsActivationCompletedNotify notification is sent whenever a
activation/deactivation is completed.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cFcZsLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="This object indicates the WWN of the local switch."
  3: hh3cFcZsActivateResult
     Syntax="INTEGER"
       1: none
       2: inProgress
       3: activateSuccess
       4: activateFailure
       5: deactivateSuccess
       6: deactivateFailure
     Descr="As a result of the most recent activation/deactivation.

        'none'               - No activation/deactivation invoked since the
                               last restart of the management system.
        'inProcess'          - Activation/deactivation is still in progress.
        'activateSuccess'    - Activation completed successfully.
        'activateFailure'    - Activation failed due to some reason.
        'deactivateSuccess'  - Deactivation completed successfully.
        'deactivateFailure'  - Deactivation failed due to some reason."
EDESC
#
#
#
#
MIB: HH3C-FDMI-MIB (file:./hh3c-fdmi.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FIREWALL-MIB (file:./hh3c-firewall.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FLASH-MAN-MIB (file:./hh3c-flash-man.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFlhOperNotification .1.3.6.1.4.1.25506.2.5.1.3.1 "Status Events" Normal
FORMAT $*
SDESC

A hh3cFlhOperNotification is sent at the completion of a flash
copy operation if hh3cFlhOperEndNotification is true.

Variables:
  1: hh3cFlhOperStatus
     Syntax="INTEGER"
       1: opInProgress
       10: opDeviceError
       11: opDeviceNotProgrammable
       12: opDeviceFull
       13: opFileOpenError
       14: opFileTransferError
       15: opFileChecksumError
       16: opNoMemory
       17: opAuthFail
       18: opTimeout
       19: opUnknownFailure
       2: opSuccess
       20: opDeleteFileOpenError
       21: opDeleteInvalidDevice
       22: opDeleteInvalidFunction
       23: opDeleteOperationError
       24: opDeleteInvalidFileName
       25: opDeleteDeviceBusy
       26: opDeleteParaError
       27: opDeleteInvalidPath
       28: opDeleteFileNotExistInSlave
       29: opDeleteFileFailedInSlave
       3: opInvalid
       30: opSlaveFull
       31: opCopyToSlaveFailure
       4: opInvalidProtocol
       5: opInvalidSourceName
       6: opInvalidDestName
       7: opInvalidServerAddress
       8: opDeviceBusy
       9: opDeviceOpenError
     Descr="The status of operation."
EDESC
#
#
#
#
MIB: HH3C-FLEXE-MIB (file:./hh3c-flexe.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cFlexEPhyNumberMismatch .1.3.6.1.4.1.25506.2.177.5.0.1 "Status Events" Normal
FORMAT The notification is generated when the physical number of the FlexE interface doesn't $*
SDESC
The notification is generated when the physical number of the FlexE interface doesn't
match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyNumber
     Syntax="INTEGER32"
     Descr="Specify the physical number of the FlexE physical interface."
  4: hh3cFlexERemotePhyNumber
     Syntax="INTEGER32"
     Descr="The physical number of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyNumberMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.2 "Status Events" Normal
FORMAT The notification is generated when the physical number of the FlexE interface $*
SDESC
The notification is generated when the physical number of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyNumber
     Syntax="INTEGER32"
     Descr="Specify the physical number of the FlexE physical interface."
  4: hh3cFlexERemotePhyNumber
     Syntax="INTEGER32"
     Descr="The physical number of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyGroupMismatch .1.3.6.1.4.1.25506.2.177.5.0.3 "Status Events" Normal
FORMAT The notification is generated when the group ID of the FlexE interface doesn't $*
SDESC
The notification is generated when the group ID of the FlexE interface doesn't
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE physical interface."
  4: hh3cFlexERemotePhyGroupID
     Syntax="INTEGER32"
     Descr="The physical group ID of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEPhyGroupMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.4 "Status Events" Normal
FORMAT The notification is generated when the group ID of the FlexE interface $*
SDESC
The notification is generated when the group ID of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPhyGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE physical interface."
  4: hh3cFlexERemotePhyGroupID
     Syntax="INTEGER32"
     Descr="The physical group ID of Remote FLEXPhyIf."
EDESC
#
#
#
EVENT hh3cFlexEClientIDMismatch .1.3.6.1.4.1.25506.2.177.5.0.5 "Status Events" Normal
FORMAT The notification is generated when the client ID of the FlexE interface doesn't $*
SDESC
The notification is generated when the client ID of the FlexE interface doesn't
match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEClientIDMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.6 "Status Events" Normal
FORMAT The notification is generated when the client ID of the FlexE interface $*
SDESC
The notification is generated when the client ID of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthReduce .1.3.6.1.4.1.25506.2.177.5.0.7 "Status Events" Normal
FORMAT The notification is generated when the bandwidth of the FlexE interface becomes $*
SDESC
The notification is generated when the bandwidth of the FlexE interface becomes
smaller.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEBandwidth
     Syntax="INTEGER32"
     Descr="Specify the bandwidth of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthReduceRecover .1.3.6.1.4.1.25506.2.177.5.0.8 "Status Events" Normal
FORMAT The notification is generated when the bandwidth of the FlexE interface recovers. $*
SDESC
The notification is generated when the bandwidth of the FlexE interface recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEBandwidth
     Syntax="INTEGER32"
     Descr="Specify the bandwidth of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEPhyFcsSdAlarm .1.3.6.1.4.1.25506.2.177.5.0.9 "Status Events" Normal
FORMAT The notification is generated when the error code fault happens. $*
SDESC
The notification is generated when the error code fault happens.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyFcsSdAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.10 "Status Events" Normal
FORMAT The notification is generated when the error code fault recovers. $*
SDESC
The notification is generated when the error code fault recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyLocalFault .1.3.6.1.4.1.25506.2.177.5.0.11 "Status Events" Normal
FORMAT The notification is generated when the fault happens in the near_end. $*
SDESC
The notification is generated when the fault happens in the near_end.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyLocalFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.12 "Status Events" Normal
FORMAT The notification is generated when the fault in the near_end recovers. $*
SDESC
The notification is generated when the fault in the near_end recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyRemoteFault .1.3.6.1.4.1.25506.2.177.5.0.13 "Status Events" Normal
FORMAT The notification is generated when the fault happens in the far_end $*
SDESC
The notification is generated when the fault happens in the far_end
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyRemoteFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.14 "Status Events" Normal
FORMAT The notification is generated when the fault in the far_end recovers. $*
SDESC
The notification is generated when the fault in the far_end recovers.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthMismatch .1.3.6.1.4.1.25506.2.177.5.0.15 "Status Events" Normal
FORMAT The notification is generated when the bandwidth of the FlexE interface $*
SDESC
The notification is generated when the bandwidth of the FlexE interface
doesn't match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEBandwidthMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.16 "Status Events" Normal
FORMAT The notification is generated when the bandwidth of the FlexE interface $*
SDESC
The notification is generated when the bandwidth of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEPhyDelayOverAlarm .1.3.6.1.4.1.25506.2.177.5.0.17 "Status Events" Normal
FORMAT The notification is generated when the TimeDelay is oversize. $*
SDESC
The notification is generated when the TimeDelay is oversize.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPortList
     Syntax="OCTETSTR"
     Descr="The interface list."
EDESC
#
#
#
EVENT hh3cFlexEPhyDelayOverAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.18 "Status Events" Normal
FORMAT The notification is generated when the TimeDelay becomes normal. $*
SDESC
The notification is generated when the TimeDelay becomes normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexEPortList
     Syntax="OCTETSTR"
     Descr="The interface list."
EDESC
#
#
#
EVENT hh3cFlexESTSGMismatch .1.3.6.1.4.1.25506.2.177.5.0.19 "Status Events" Normal
FORMAT The notification is generated when the granularity of the FlexE interface $*
SDESC
The notification is generated when the granularity of the FlexE interface
doesn't match the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexESubTimeSlotGranular
     Syntax="INTEGER32"
     Descr="Specify the sub-time-slot granularity of the FlexE subslot."
EDESC
#
#
#
EVENT hh3cFlexESTSGMismatchRecover .1.3.6.1.4.1.25506.2.177.5.0.20 "Status Events" Normal
FORMAT The notification is generated when the granularity of the FlexE interface $*
SDESC
The notification is generated when the granularity of the FlexE interface
matches the other.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cFlexESubTimeSlotGranular
     Syntax="INTEGER32"
     Descr="Specify the sub-time-slot granularity of the FlexE subslot."
EDESC
#
#
#
EVENT hh3cFlexEGroupMemberFault .1.3.6.1.4.1.25506.2.177.5.0.21 "Status Events" Normal
FORMAT The notification is generated when the fault happens on group members. $*
SDESC
The notification is generated when the fault happens on group members.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
  5: hh3cFlexEGroupMemberCount
     Syntax="INTEGER32"
     Descr="The number of group members."
  6: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  7: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEGroupMemberFaultRecover .1.3.6.1.4.1.25506.2.177.5.0.22 "Status Events" Normal
FORMAT The notification is generated when the fault on group members recovers. $*
SDESC
The notification is generated when the fault on group members recovers.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
  5: hh3cFlexEGroupMemberCount
     Syntax="INTEGER32"
     Descr="The number of group members."
  6: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  7: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cFlexEGroupFaultAlarm .1.3.6.1.4.1.25506.2.177.5.0.23 "Status Events" Normal
FORMAT The notification is generated when the fault happens on the last group member. $*
SDESC
The notification is generated when the fault happens on the last group member.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
EDESC
#
#
#
EVENT hh3cFlexEGroupFaultAlarmRecover .1.3.6.1.4.1.25506.2.177.5.0.24 "Status Events" Normal
FORMAT The notification is generated when the fault on the first group member recovers. $*
SDESC
The notification is generated when the fault on the first group member recovers.
Variables:
  1: hh3cFlexEFrameIndex
     Syntax="INTEGER32"
     Descr="Frame index."
  2: hh3cFlexESlotIndex
     Syntax="INTEGER32"
     Descr="Slot index."
  3: hh3cFlexESubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
  4: hh3cFlexEGroupID
     Syntax="INTEGER32"
     Descr="Specify the group ID of the FlexE interface."
EDESC
#
#
#
#
MIB: HH3C-FLOWTEMPLATE-MIB (file:./hh3c-flowtemplate.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FR-QOS-MIB (file:./hh3c-fr-qos.mib) converted on Sat Apr  2 10:27:57 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-FTM-MIB (file:./hh3c-ftm.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GIR-MIB (file:./hh3c-gir.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GOLD-MIB (file:./hh3c-gold.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-GRE-MIB (file:./hh3c-gre.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-HGMP-MIB (file:./hh3c-hgmp.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-HPEOC-MIB (file:./hh3c-hpeoc.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IDS-MIB (file:./hh3c-ids.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIDSTrapIPFragQueueFull .1.3.6.1.4.1.25506.2.47.1.1.2.0.1 "Status Events" Normal
FORMAT This notification will be generated when the IP fragment $*
SDESC
This notification will be generated when the IP fragment
queue is full.  The hh3cIDSTrapIPFragmentQueueLen describes
the length of current fragment queue.
The hh3cIDSTrapReasonForError describes reason for error.
Variables:
  1: hh3cIDSTrapIPFragmentQueueLen
     Syntax="UNSIGNED32"
     Descr="The length of IP fragment queue."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapStatSessTabFull .1.3.6.1.4.1.25506.2.47.1.1.2.0.2 "Status Events" Normal
FORMAT This notification will be generated when the status session $*
SDESC
This notification will be generated when the status session
table is full.  The hh3cIDSTrapStatSessionTabLen describes the
length of current status session table.
The hh3cIDSTrapReasonForError describes reason for error.
Variables:
  1: hh3cIDSTrapStatSessionTabLen
     Syntax="UNSIGNED32"
     Descr="The length of status session table."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapDetectRuleParseFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.3 "Status Events" Normal
FORMAT This notification will be generated when failing to parse $*
SDESC
This notification will be generated when failing to parse
the rules for detecting.  The hh3cIDSTrapDetectRuleID object describes
rule ID. The hh3cIDSTrapEngineID object identifies an interface
the rule applies to. The hh3cIDSTrapReasonForError object
describes reason for error.
Variables:
  1: hh3cIDSTrapDetectRuleID
     Syntax="UNSIGNED32"
     Descr="The rule ID which is a unique identifier for a specified
                detect rule."
  2: hh3cIDSTrapEngineID
     Syntax="INTEGER32"
     Descr="A unique number used to identify an interface."
  3: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapDBConnLost .1.3.6.1.4.1.25506.2.47.1.1.2.0.4 "Status Events" Normal
FORMAT This notification will be generated when connecting with $*
SDESC
This notification will be generated when connecting with
database server fails. The hh3cIDSTrapIPAddressType object describes
the IP address type of database server.  The hh3cIDSTrapIPAddress
object describes the IP address of database server. The
hh3cIDSTrapReasonForError describes reason of connecting failure.
Variables:
  1: hh3cIDSTrapIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of IP Address."
  2: hh3cIDSTrapIPAddress
     Syntax="OCTETSTR"
     Descr="IP Address."
  3: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCRLNeedUpdate .1.3.6.1.4.1.25506.2.47.1.1.2.0.5 "Status Events" Normal
FORMAT This notification will be generated when IDS device detects $*
SDESC
This notification will be generated when IDS device detects
that CRL is out of date.  The hh3cIDSTrapCRLName object
describes the CRL(Certificate Revoke List) name.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapCRLName
     Syntax="OCTETSTR"
     Descr="CRL(Certificate Revoke List) name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCertOverdue .1.3.6.1.4.1.25506.2.47.1.1.2.0.6 "Status Events" Normal
FORMAT This notification will be generated when IDS device detects $*
SDESC
This notification will be generated when IDS device detects
that certificate is overdue.  The hh3cIDSTrapCertName object
describes the certificate name.  The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapCertName
     Syntax="OCTETSTR"
     Descr="Certificate name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapTooManyLoginFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.7 "Status Events" Normal
FORMAT This notification will be generated when the login $*
SDESC
This notification will be generated when the login
failure times of a user over a certain number.
The hh3cIDSTrapUserName object describes the user name
when logging in.  The hh3cIDSTrapIPAddressType object
describes the IP address type of client. The
hh3cIDSTrapIPAddress object describes the IP address of
client.  The hh3cIDSTrapLoginType object describes
login type, including: telnet, ssh, web.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapUserName
     Syntax="OCTETSTR"
     Descr="User name."
  2: hh3cIDSTrapIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of IP Address."
  3: hh3cIDSTrapIPAddress
     Syntax="OCTETSTR"
     Descr="IP Address."
  4: hh3cIDSTrapLoginType
     Syntax="INTEGER"
       1: telnet
       2: ssh
       3: web
     Descr="Login type, including telnet, ssh and web."
  5: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapUpgradeError .1.3.6.1.4.1.25506.2.47.1.1.2.0.8 "Status Events" Normal
FORMAT This notification will be generated when upgrading fails. $*
SDESC
This notification will be generated when upgrading fails.
The hh3cIDSTrapUpgradeType object describes upgrade type,
including: programme, vrb. The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapUpgradeType
     Syntax="INTEGER"
       1: programme
       2: crb
       3: vrb
     Descr="Upgrade type, including programme(system image),
                crb(custom rule base, one kind of configuration file),
                vrb(vendor rule base, one kind of configuration file)."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapFileAccessError .1.3.6.1.4.1.25506.2.47.1.1.2.0.9 "Status Events" Normal
FORMAT This notification will be generated when accessing file $*
SDESC
This notification will be generated when accessing file
fails.  The hh3cIDSTrapFileName object describes the name
of file accessed. The hh3cIDSTrapReasonForError object describes
reason for error.
Variables:
  1: hh3cIDSTrapFileName
     Syntax="OCTETSTR"
     Descr="The file name."
  2: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapConsArithMemLow .1.3.6.1.4.1.25506.2.47.1.1.2.0.10 "Status Events" Normal
FORMAT This notification will be generated when memory used by $*
SDESC
This notification will be generated when memory used by
constructing the arithmetic to seek content is lacking.
The hh3cIDSTrapReasonForError object describes reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapSSRAMOperFail .1.3.6.1.4.1.25506.2.47.1.1.2.0.11 "Status Events" Normal
FORMAT This notification will be generated when reading or $*
SDESC
This notification will be generated when reading or
writing SSRAM of CIE card fails. The hh3cIDSTrapReasonForError
object describes reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapPacketProcessDisorder .1.3.6.1.4.1.25506.2.47.1.1.2.0.12 "Status Events" Normal
FORMAT This notification will be generated when packets processed $*
SDESC
This notification will be generated when packets processed
is in disorder. The hh3cIDSTrapReasonForError object describes
reason for error.
Variables:
  1: hh3cIDSTrapReasonForError
     Syntax="OCTETSTR"
     Descr="The information of the notification. Although the format and
               content of this object are device specific, they should be
               defined uniformly in the device."
EDESC
#
#
#
EVENT hh3cIDSTrapCfgFileFormatError .1.3.6.1.4.1.25506.2.47.1.1.2.0.13 "Status Events" Normal
FORMAT When devices startup and load the configuration file, $*
SDESC
When devices startup and load the configuration file,
if format error is found, this notification will be generated.
The hh3cIDSTrapFileName object describes the name of
configuration file. The hh3cIDSTrapCfgLineInFile object
describes the line number in the file.
Variables:
  1: hh3cIDSTrapFileName
     Syntax="OCTETSTR"
     Descr="The file name."
  2: hh3cIDSTrapCfgLineInFile
     Syntax="UNSIGNED32"
     Descr="The line number in the configuration file."
EDESC
#
#
#
#
MIB: HH3C-IF-EXT-MIB (file:./hh3c-if-ext.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIfBandwidthUsageHigh .1.3.6.1.4.1.25506.2.40.3.0.1 "Status Events" Normal
FORMAT The notification is generated when the rate of the bandwidth for the $*
SDESC
The notification is generated when the rate of the bandwidth for the
interface exceeds the upper limit.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cIfBandwidthRate
     Syntax="INTEGER32"
     Descr="The rate of the bandwidth for an interface."
  3: hh3cIfBandwidthUpperLimit
     Syntax="INTEGER32"
     Descr="The rate of the bandwidth upper limit for an interface."
EDESC
#
#
#
EVENT hh3cIfDiscardPktRateHigh .1.3.6.1.4.1.25506.2.40.3.0.2 "Status Events" Normal
FORMAT The notification is generated when the rate of the discarded packets $*
SDESC
The notification is generated when the rate of the discarded packets
for the interface exceeds the upper limit.
Variables:
  1: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  2: hh3cIfDiscardPktRate
     Syntax="INTEGER32"
     Descr="The rate of the discarded packets for an interface."
  3: hh3cIfDiscardPktRateUpperLimit
     Syntax="INTEGER32"
     Descr="The rate of the discarded packets upper limit for an interface."
EDESC
#
#
#
EVENT hh3cIfDampeningSuppressed .1.3.6.1.4.1.25506.2.40.3.0.3 "Status Events" Normal
FORMAT The notification is generated when the interface is suppressed $*
SDESC
The notification is generated when the interface is suppressed
via dampening.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfDampeningNotSuppressed .1.3.6.1.4.1.25506.2.40.3.0.4 "Status Events" Normal
FORMAT The notification is generated when the interface is resumed to $*
SDESC
The notification is generated when the interface is resumed to
not suppressed via dampening.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPortUp .1.3.6.1.4.1.25506.2.40.3.0.5 "Status Events" Normal
FORMAT The notification is generated when physical state of the interface changes to up. $*
SDESC
The notification is generated when physical state of the interface changes to up.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPortDown .1.3.6.1.4.1.25506.2.40.3.0.6 "Status Events" Normal
FORMAT The notification is generated when physical state of the interface changes to down. $*
SDESC
The notification is generated when physical state of the interface changes to down.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfPfcOutRising .1.3.6.1.4.1.25506.2.40.3.0.7 "Status Events" Normal
FORMAT The notification is generated when the outbound rate exceeds the threshold for the dot1p value. $*
SDESC
The notification is generated when the outbound rate exceeds the threshold for the dot1p value.
If the hh3cIfPfcDot1pOutPpsThreshold is set to 0, no hh3cIfPfcOutRising will be generated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfPfcDot1pValue
     Syntax="INTEGER"
       1: pri0
       2: pri1
       3: pri2
       4: pri3
       5: pri4
       6: pri5
       7: pri6
       8: pri7
     Descr="The PFC dot1p value list."
  4: hh3cIfPfcDot1pOutPps
     Syntax="UNSIGNED32"
     Descr="The current outbound rate for the PFC dot1p. "
  5: hh3cIfPfcDot1pOutPpsThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the outbound rate.
         If the hh3cIfPfcDot1pOutPpsThreshold is set to 0, no hh3cIfPfcOutRising will be generated."
EDESC
#
#
#
EVENT hh3cIfPfcInRising .1.3.6.1.4.1.25506.2.40.3.0.8 "Status Events" Normal
FORMAT The notification is generated when the inbound rate exceeds the threshold for the dot1p value. $*
SDESC
The notification is generated when the inbound rate exceeds the threshold for the dot1p value.
If the hh3cIfPfcDot1pInPpsThreshold is set to 0, no hh3cIfPfcInRising will be generated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfPfcDot1pValue
     Syntax="INTEGER"
       1: pri0
       2: pri1
       3: pri2
       4: pri3
       5: pri4
       6: pri5
       7: pri6
       8: pri7
     Descr="The PFC dot1p value list."
  4: hh3cIfPfcDot1pInPps
     Syntax="UNSIGNED32"
     Descr="The current inbound rate for the PFC dot1p."
  5: hh3cIfPfcDot1pInPpsThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the inbound rate.
         If the hh3cIfPfcDot1pInPpsThreshold is set to 0, no hh3cIfPfcInRising will be generated."
EDESC
#
#
#
EVENT hh3cIfMappingIfStatusBackup .1.3.6.1.4.1.25506.2.40.3.0.9 "Status Events" Normal
FORMAT The notification is generated when the mapping status of the interface changes to backup. $*
SDESC
The notification is generated when the mapping status of the interface changes to backup.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfMappingIfStatusNormal .1.3.6.1.4.1.25506.2.40.3.0.10 "Status Events" Normal
FORMAT The notification is generated when the mapping status of the interface changes to normal. $*
SDESC
The notification is generated when the mapping status of the interface changes to normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cIfMonInputUsageRising .1.3.6.1.4.1.25506.2.40.6.0.1 "Status Events" Normal
FORMAT The notification is generated when the inbound bandwidth usage exceeds the $*
SDESC
The notification is generated when the inbound bandwidth usage exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the inbound bandwidth usage."
  4: hh3cIfMonInputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the inbound bandwidth usage."
  5: hh3cIfMonInputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the inbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonInputUsageResume .1.3.6.1.4.1.25506.2.40.6.0.2 "Status Events" Normal
FORMAT The notification is generated when the inbound bandwidth usage drops from $*
SDESC
The notification is generated when the inbound bandwidth usage drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the inbound bandwidth usage."
  4: hh3cIfMonInputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the inbound bandwidth usage."
  5: hh3cIfMonInputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the inbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonOutputUsageRising .1.3.6.1.4.1.25506.2.40.6.0.3 "Status Events" Normal
FORMAT The notification is generated when the outbound bandwidth usage exceeds the $*
SDESC
The notification is generated when the outbound bandwidth usage exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the outbound bandwidth usage."
  4: hh3cIfMonOutputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the outbound bandwidth usage."
  5: hh3cIfMonOutputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the outbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonOutputUsageResume .1.3.6.1.4.1.25506.2.40.6.0.4 "Status Events" Normal
FORMAT The notification is generated when the outbound bandwidth usage drops from $*
SDESC
The notification is generated when the outbound bandwidth usage drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputUsageLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the outbound bandwidth usage."
  4: hh3cIfMonOutputUsageHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the outbound bandwidth usage."
  5: hh3cIfMonOutputUsageStatistics
     Syntax="UNSIGNED32"
     Descr="Statistics about the outbound bandwidth usage."
EDESC
#
#
#
EVENT hh3cIfMonInputErrorAlarmRising .1.3.6.1.4.1.25506.2.40.6.0.5 "Status Events" Normal
FORMAT The notification is generated when the number of inbound error packets exceeds the $*
SDESC
The notification is generated when the number of inbound error packets exceeds the
upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of inbound error packets."
  4: hh3cIfMonInputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of inbound error packets."
  5: hh3cIfMonInputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of inbound error packets."
  6: hh3cIfMonInputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of inbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonInputErrorAlarmResume .1.3.6.1.4.1.25506.2.40.6.0.6 "Status Events" Normal
FORMAT The notification is generated when the number of inbound error packets drops from $*
SDESC
The notification is generated when the number of inbound error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonInputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of inbound error packets."
  4: hh3cIfMonInputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of inbound error packets."
  5: hh3cIfMonInputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of inbound error packets."
  6: hh3cIfMonInputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of inbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonOutputErrorAlarmRising .1.3.6.1.4.1.25506.2.40.6.0.7 "Status Events" Normal
FORMAT The notification is generated when the number of outbound error packets exceeds the $*
SDESC
The notification is generated when the number of outbound error packets exceeds the
upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of outbound error packets."
  4: hh3cIfMonOutputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of outbound error packets."
  5: hh3cIfMonOutputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics  about the number of outbound error packets."
  6: hh3cIfMonOutputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of outbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonOutputErrorAlarmResume .1.3.6.1.4.1.25506.2.40.6.0.8 "Status Events" Normal
FORMAT The notification is generated when the number of outbound error packets drops from $*
SDESC
The notification is generated when the number of outbound error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonOutputErrorAlarmHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of outbound error packets."
  4: hh3cIfMonOutputErrorAlarmLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of outbound error packets."
  5: hh3cIfMonOutputErrorAlarmStatistics
     Syntax="COUNTER64"
     Descr="Statistics  about the number of outbound error packets."
  6: hh3cIfMonOutputErrorAlarmInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of outbound error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhErrorRising .1.3.6.1.4.1.25506.2.40.6.0.9 "Status Events" Normal
FORMAT The notification is generated when the number of SDH error packets exceeds $*
SDESC
The notification is generated when the number of SDH error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH error packets."
  4: hh3cIfMonSdhErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH error packets."
  5: hh3cIfMonSdhErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH error packets."
  6: hh3cIfMonSdhErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhErrorResume .1.3.6.1.4.1.25506.2.40.6.0.10 "Status Events" Normal
FORMAT The notification is generated when the number of SDH error packets drops from $*
SDESC
The notification is generated when the number of SDH error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH error packets."
  4: hh3cIfMonSdhErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH error packets."
  5: hh3cIfMonSdhErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH error packets."
  6: hh3cIfMonSdhErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhB1ErrorRising .1.3.6.1.4.1.25506.2.40.6.0.11 "Status Events" Normal
FORMAT The notification is generated when the number of SDH B1 error packets exceeds $*
SDESC
The notification is generated when the number of SDH B1 error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB1ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B1 error packets."
  4: hh3cIfMonSdhB1ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B1 error packets."
  5: hh3cIfMonSdhB1ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B1 error packets."
  6: hh3cIfMonSdhB1ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B1 error packets. "
EDESC
#
#
#
EVENT hh3cIfMonSdhB1ErrorResume .1.3.6.1.4.1.25506.2.40.6.0.12 "Status Events" Normal
FORMAT The notification is generated when the number of SDH B1 error packets drops from $*
SDESC
The notification is generated when the number of SDH B1 error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB1ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B1 error packets."
  4: hh3cIfMonSdhB1ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B1 error packets."
  5: hh3cIfMonSdhB1ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B1 error packets."
  6: hh3cIfMonSdhB1ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B1 error packets. "
EDESC
#
#
#
EVENT hh3cIfMonSdhB2ErrorRising .1.3.6.1.4.1.25506.2.40.6.0.13 "Status Events" Normal
FORMAT The notification is generated when the number of SDH B2 error packets exceeds $*
SDESC
The notification is generated when the number of SDH B2 error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB2ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B2 error packets."
  4: hh3cIfMonSdhB2ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B2 error packets."
  5: hh3cIfMonSdhB2ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B2 error packets."
  6: hh3cIfMonSdhB2ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B2 error packets."
EDESC
#
#
#
EVENT hh3cIfMonSdhB2ErrorResume .1.3.6.1.4.1.25506.2.40.6.0.14 "Status Events" Normal
FORMAT The notification is generated when the number of SDH B2 error packets drops from $*
SDESC
The notification is generated when the number of SDH B2 error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonSdhB2ErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of SDH B2 error packets."
  4: hh3cIfMonSdhB2ErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of SDH B2 error packets."
  5: hh3cIfMonSdhB2ErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of SDH B2 error packets."
  6: hh3cIfMonSdhB2ErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of SDH B2 error packets."
EDESC
#
#
#
EVENT hh3cIfMonCRCErrorRising .1.3.6.1.4.1.25506.2.40.6.0.15 "Status Events" Normal
FORMAT The notification is generated when the number of CRC error packets exceeds $*
SDESC
The notification is generated when the number of CRC error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonCRCErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of CRC error packets."
  4: hh3cIfMonCRCErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of CRC error packets."
  5: hh3cIfMonCRCErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of CRC error packets. "
  6: hh3cIfMonCRCErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of CRC error packets."
  7: hh3cIfMonCRCErrType
     Syntax="INTEGER"
       1: absolute
       2: ratio
       65535: invalid
     Descr=" Inspection type for the CRC error packets."
EDESC
#
#
#
EVENT hh3cIfMonCRCErrorResume .1.3.6.1.4.1.25506.2.40.6.0.16 "Status Events" Normal
FORMAT The notification is generated when the number of CRC error packets drops from $*
SDESC
The notification is generated when the number of CRC error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonCRCErrorHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of CRC error packets."
  4: hh3cIfMonCRCErrorLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of CRC error packets."
  5: hh3cIfMonCRCErrorStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of CRC error packets. "
  6: hh3cIfMonCRCErrorInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of CRC error packets."
  7: hh3cIfMonCRCErrType
     Syntax="INTEGER"
       1: absolute
       2: ratio
       65535: invalid
     Descr=" Inspection type for the CRC error packets."
EDESC
#
#
#
EVENT hh3cIfMonRxPauseFrameRising .1.3.6.1.4.1.25506.2.40.6.0.17 "Status Events" Normal
FORMAT The notification is generated when the number of received pause frames exceeds the $*
SDESC
The notification is generated when the number of received pause frames exceeds the
upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of received pause frames."
  4: hh3cIfMonRxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of received pause frames."
  5: hh3cIfMonRxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of received pause frames."
  6: hh3cIfMonRxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of received pause frames."
EDESC
#
#
#
EVENT hh3cIfMonRxPauseFrameResume .1.3.6.1.4.1.25506.2.40.6.0.18 "Status Events" Normal
FORMAT The notification is generated when the number of received pause frames drops from $*
SDESC
The notification is generated when the number of received pause frames drops from
above the upper threshold to below the lower-threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of received pause frames."
  4: hh3cIfMonRxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of received pause frames."
  5: hh3cIfMonRxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of received pause frames."
  6: hh3cIfMonRxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of received pause frames."
EDESC
#
#
#
EVENT hh3cIfMonTxPauseFrameRising .1.3.6.1.4.1.25506.2.40.6.0.19 "Status Events" Normal
FORMAT The notification is generated when the number of transmitted pause frames exceeds $*
SDESC
The notification is generated when the number of transmitted pause frames exceeds
the upper threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonTxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of transmitted pause frames."
  4: hh3cIfMonTxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of transmitted pause frames."
  5: hh3cIfMonTxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of transmitted pause frames."
  6: hh3cIfMonTxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of transmitted pause frames."
EDESC
#
#
#
EVENT hh3cIfMonTxPauseFrameResume .1.3.6.1.4.1.25506.2.40.6.0.20 "Status Events" Normal
FORMAT The notification is generated when the number of transmitted pause frames  drops from $*
SDESC
The notification is generated when the number of transmitted pause frames  drops from
above the upper threshold to below the lower threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonTxPauseFrameHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of transmitted pause frames."
  4: hh3cIfMonTxPauseFrameLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of transmitted pause frames."
  5: hh3cIfMonTxPauseFrameStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the number of transmitted pause frames."
  6: hh3cIfMonTxPauseFrameInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of transmitted pause frames."
EDESC
#
#
#
EVENT hh3cIfMonGiantRising .1.3.6.1.4.1.25506.2.40.6.0.21 "Status Events" Normal
FORMAT The notification is generated when the number of Giant error packets exceeds $*
SDESC
The notification is generated when the number of Giant error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonGiantLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Giant error packets."
  4: hh3cIfMonGiantHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Giant error packets."
  5: hh3cIfMonGiantStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Giant packets."
  6: hh3cIfMonGiantInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Giant error packets."
EDESC
#
#
#
EVENT hh3cIfMonGiantResume .1.3.6.1.4.1.25506.2.40.6.0.22 "Status Events" Normal
FORMAT The notification is generated when the number of Giant error packets drops from $*
SDESC
The notification is generated when the number of Giant error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonGiantLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Giant error packets."
  4: hh3cIfMonGiantHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Giant error packets."
  5: hh3cIfMonGiantStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Giant packets."
  6: hh3cIfMonGiantInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Giant error packets."
EDESC
#
#
#
EVENT hh3cIfMonRuntRising .1.3.6.1.4.1.25506.2.40.6.0.23 "Status Events" Normal
FORMAT The notification is generated when the number of Runt error packets exceeds $*
SDESC
The notification is generated when the number of Runt error packets exceeds
the upper threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRuntLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Runt error packets."
  4: hh3cIfMonRuntHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Runt error packets."
  5: hh3cIfMonRuntStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Runt packets."
  6: hh3cIfMonRuntInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Runt packets."
EDESC
#
#
#
EVENT hh3cIfMonRuntResume .1.3.6.1.4.1.25506.2.40.6.0.24 "Status Events" Normal
FORMAT The notification is generated when the number of Runt error packets drops from $*
SDESC
The notification is generated when the number of Runt error packets drops from
above the upper threshold to below the lower threshold within the default interval.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cIfMonRuntLowThres
     Syntax="UNSIGNED32"
     Descr="Lower threshold for the number of Runt error packets."
  4: hh3cIfMonRuntHighThres
     Syntax="UNSIGNED32"
     Descr="Upper threshold for the number of Runt error packets."
  5: hh3cIfMonRuntStatistics
     Syntax="COUNTER64"
     Descr="Statistics about the Runt packets."
  6: hh3cIfMonRuntInterval
     Syntax="UNSIGNED32"
     Descr="Inspection interval for the number of Runt packets."
EDESC
#
#
#
#
MIB: HH3C-IFQOS2-MIB (file:./hh3c-ifqos2.mib) converted on Sat Apr  2 10:27:58 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIfQoS8QueueResouceOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.1 "Status Events" Normal
FORMAT The number of 8-queue user-queues exceeded the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues exceeded the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResouceOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.2 "Status Events" Normal
FORMAT The number of 8-queue user-queues dropped below the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues dropped below the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResoucePreAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.3 "Status Events" Normal
FORMAT The number of 8-queue user-queues exceeded 90 percent of the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues exceeded 90 percent of the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoS8QueueResoucePreRecover .1.3.6.1.4.1.25506.2.65.1.16.0.4 "Status Events" Normal
FORMAT The number of 8-queue user-queues dropped below 90 percent of the specification of the forwarding engine resources. $*
SDESC
The number of 8-queue user-queues dropped below 90 percent of the specification of the forwarding engine resources.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSBufferOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.5 "Status Events" Normal
FORMAT The buffer size has been reached. $*
SDESC
The buffer size has been reached.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSBufferOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.6 "Status Events" Normal
FORMAT The queue buffer alarm is cleared. $*
SDESC
The queue buffer alarm is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSChip
     Syntax="INTEGER32"
     Descr="The chip number."
  5: hh3cIfQoSDirection
     Syntax="INTEGER"
       1: inbound
       2: outbound
     Descr="Inbound or outbound."
EDESC
#
#
#
EVENT hh3cIfQoSModeChannelOverPortShapAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.7 "Status Events" Normal
FORMAT The channelization bandwidth configured on the interface exceeds the port shaping value. $*
SDESC
The channelization bandwidth configured on the interface exceeds the port shaping value.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSModeChannelOverPortShapRecover .1.3.6.1.4.1.25506.2.65.1.16.0.8 "Status Events" Normal
FORMAT The alarm generated when the channelization bandwidth configured on the interface exceeds the port shaping value is cleared. $*
SDESC
The alarm generated when the channelization bandwidth configured on the interface exceeds the port shaping value is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandApplyFailAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.9 "Status Events" Normal
FORMAT The exclusive bandwidth configured on the interface does not take effect. $*
SDESC
The exclusive bandwidth configured on the interface does not take effect.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandApplyFailRecover .1.3.6.1.4.1.25506.2.65.1.16.0.10 "Status Events" Normal
FORMAT The exclusive bandwidth service alarm on interface has cleared. $*
SDESC
The exclusive bandwidth service alarm on interface has cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandOverAlarm .1.3.6.1.4.1.25506.2.65.1.16.0.11 "Status Events" Normal
FORMAT The exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value. $*
SDESC
The exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
EVENT hh3cIfQoSExclusiveBandOverRecover .1.3.6.1.4.1.25506.2.65.1.16.0.12 "Status Events" Normal
FORMAT The alarm generated when the exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value is cleared. $*
SDESC
The alarm generated when the exclusive bandwidth configured on the interface exceeds the port bandwidth or port shaping value is cleared.
Variables:
  1: hh3cIfQoSChassis
     Syntax="INTEGER32"
     Descr="The chassis number."
  2: hh3cIfQoSSlot
     Syntax="INTEGER32"
     Descr="The slot number."
  3: hh3cIfQoSCPU
     Syntax="INTEGER32"
     Descr="The CPU number."
  4: hh3cIfQoSIfName
     Syntax="OCTETSTR"
     Descr="The interface name."
EDESC
#
#
#
#
MIB: HH3C-IKE-MONITOR-MIB (file:./hh3c-ike-monitor.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIKETunnelStart .1.3.6.1.4.1.25506.2.30.1.6.1.1 "Status Events" Normal
FORMAT This notification is generated when an IPsec Phase-1 $*
SDESC
This notification is generated when an IPsec Phase-1
IKE Tunnel is created.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunLifeTime
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPsec Phase-1
                 IKE Tunnel in seconds."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKETunnelStop .1.3.6.1.4.1.25506.2.30.1.6.1.2 "Status Events" Normal
FORMAT This notification is generated when an IPsec Phase-1 $*
SDESC
This notification is generated when an IPsec Phase-1
IKE Tunnel is deleted.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunActiveTime
     Syntax="INTEGER32"
     Descr="The duration the IPsec Phase-1 IKE tunnel
                 has been active in seconds."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKENoSaFailure .1.3.6.1.4.1.25506.2.30.1.6.1.3 "Status Events" Normal
FORMAT This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has a non-existent SA error.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEEncryFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.4 "Status Events" Normal
FORMAT This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has an encrypting failure.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEDecryFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.5 "Status Events" Normal
FORMAT This notification is generated when the IKE tunnel $*
SDESC
This notification is generated when the IKE tunnel
has a decrypting failure.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidProposalFailure .1.3.6.1.4.1.25506.2.30.1.6.1.6 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid proposal occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEAuthFailFailure .1.3.6.1.4.1.25506.2.30.1.6.1.7 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
authentication failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidCookieFailure .1.3.6.1.4.1.25506.2.30.1.6.1.8 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid cookie failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEAttrNotSuppFailure .1.3.6.1.4.1.25506.2.30.1.6.1.9 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 unsupported $*
SDESC
This notification is generated when the IPsec phase-1 unsupported
attribute failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEUnsportExchTypeFailure .1.3.6.1.4.1.25506.2.30.1.6.1.10 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
unsupported exchange type failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  4: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  5: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  6: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  7: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidIdFailure .1.3.6.1.4.1.25506.2.30.1.6.1.11 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid id failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKEIdInformation
     Syntax="OCTETSTR"
     Descr="The id information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidProtocolFailure .1.3.6.1.4.1.25506.2.30.1.6.1.12 "Status Events" Normal
FORMAT This notification is generated when the processing for $*
SDESC
This notification is generated when the processing for
an IPsec Phase-1 IKE Tunnel has a protocol related errors.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKEProtocolNum
     Syntax="INTEGER32"
     Descr="The protocol number with a trap"
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKECertTypeUnsuppFailure .1.3.6.1.4.1.25506.2.30.1.6.1.13 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
unsupported certificate type failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEInvalidCertAuthFailure .1.3.6.1.4.1.25506.2.30.1.6.1.14 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid certificate authorization failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKElInvalidSignFailure .1.3.6.1.4.1.25506.2.30.1.6.1.15 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
invalid signature failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKECertUnavailableFailure .1.3.6.1.4.1.25506.2.30.1.6.1.16 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-1 $*
SDESC
This notification is generated when the IPsec phase-1
certificate unavailable failure occurs.
Variables:
  1: hh3cIKETunLocalAddr
     Syntax="IPADDR"
     Descr="The IP address of the local endpoint for the IPsec
                 Phase-1 IKE Tunnel."
  2: hh3cIKETunRemoteAddr
     Syntax="IPADDR"
     Descr="The IP address of the remote peer for the IPsec
                Phase-1 IKE Tunnel."
  3: hh3cIKECertInformation
     Syntax="OCTETSTR"
     Descr="The certificate information with a trap."
  4: hh3cIKETunIndex
     Syntax="INTEGER32"
     Descr="The index of the IPsec Phase-1 IKE Tunnel Table.
                 The value of the index is a number which begins
                 at one and is incremented with each tunnel that
                 is created. The value of this object will wrap
                 at 2147483647."
  5: hh3cIKETunLocalInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the local peer's IP address."
  6: hh3cIKETunLocalInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-1 IKE Tunnel."
  7: hh3cIKETunRemoteInetAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the remote peer's IP address."
  8: hh3cIKETunRemoteInetAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-1 IKE Tunnel."
EDESC
#
#
#
EVENT hh3cIKEProposalAdd .1.3.6.1.4.1.25506.2.30.1.6.1.17 "Status Events" Normal
FORMAT This notification is generated when an IKE proposal is added. $*
SDESC
This notification is generated when an IKE proposal is added.
Variables:
  1: hh3cIKEProposalNumber
     Syntax="INTEGER32"
     Descr="The IKE proposal's number with a trap."
  2: hh3cIKEProposalSize
     Syntax="INTEGER32"
     Descr="The number of IKE proposals with a trap."
EDESC
#
#
#
EVENT hh3cIKEProposalDel .1.3.6.1.4.1.25506.2.30.1.6.1.18 "Status Events" Normal
FORMAT This notification is generated when an IKE proposal is deleted. $*
SDESC
This notification is generated when an IKE proposal is deleted.
Variables:
  1: hh3cIKEProposalNumber
     Syntax="INTEGER32"
     Descr="The IKE proposal's number with a trap."
  2: hh3cIKEProposalSize
     Syntax="INTEGER32"
     Descr="The number of IKE proposals with a trap."
EDESC
#
#
#
#
MIB: HH3C-INFOCENTER-MIB (file:./hh3c-infocenter.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IP-ADDRESS-MIB (file:./hh3c-ip-address.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpAddressChangeNotify .1.3.6.1.4.1.25506.2.67.2.2.0.1 "Status Events" Normal
FORMAT This notification will be generated when the IP address of interface $*
SDESC
This notification will be generated when the IP address of interface
is changed.  The change maybe originate from NMS, DHCP server or
administrator.
This notification announces useful IP address change.  So it
is triggered by significative IP address change.
Variables:
  1: hh3cIpAddrNotifyIfIndex
     Syntax="INTEGER32"
     Descr="The IP address IfIndex of specified interface on the device."
  2: hh3cIpAddrOldIpAddress
     Syntax="OCTETSTR"
     Descr="The Old IP address of specified interface on the device."
  3: hh3cIpAddrNewIpAddress
     Syntax="OCTETSTR"
     Descr="The New IP address of specified interface on the device."
  4: hh3cIpAddrFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
#
MIB: HH3C-IPA-MIB (file:./hh3c-ipa.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IP-BROADCAST-MIB (file:./hh3c-ip-broadcast.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPRAN-DCN-MIB (file:./hh3c-ipran-dcn.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpRanDcnNeOnline .1.3.6.1.4.1.25506.2.152.1.3.0.1 "Status Events" Normal
FORMAT The trap is generated when a new network element is online. $*
SDESC
The trap is generated when a new network element is online.
Variables:
  1: hh3cIpRanDcnNeInfoNeId
     Syntax="OCTETSTR"
     Descr="This is the network element ID uniquely identifying
        one network element in the routing domain."
  2: hh3cIpRanDcnNeInfoNeIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="This is the IP address type of the network element."
  3: hh3cIpRanDcnNeInfoNeIp
     Syntax="OCTETSTR"
     Descr="This is the IP address of the network element."
  4: hh3cIpRanDcnCompanyName
     Syntax="OCTETSTR"
     Descr="Company name."
  5: hh3cIpRanDcnDeviceType
     Syntax="OCTETSTR"
     Descr="Device type."
  6: hh3cIpRanDcnDeviceMac
     Syntax="OCTETSTR"
     Descr="The bridge MAC address of the network element."
EDESC
#
#
#
EVENT hh3cIpRanDcnNeOffline .1.3.6.1.4.1.25506.2.152.1.3.0.2 "Status Events" Normal
FORMAT The trap is generated when a network element is offline. $*
SDESC
The trap is generated when a network element is offline.
Variables:
  1: hh3cIpRanDcnNeInfoNeId
     Syntax="OCTETSTR"
     Descr="This is the network element ID uniquely identifying
        one network element in the routing domain."
  2: hh3cIpRanDcnNeInfoNeIpType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="This is the IP address type of the network element."
  3: hh3cIpRanDcnNeInfoNeIp
     Syntax="OCTETSTR"
     Descr="This is the IP address of the network element."
EDESC
#
#
#
#
MIB: HH3C-IPSEC-MONITOR-MIB (file:./hh3c-ipsec-monitor.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPSEC-MONITOR-V2-MIB (file:./hh3c-ipsec-monitor-v2.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIPsecTunnelStartV2 .1.3.6.1.4.1.25506.2.126.1.9.0.1 "Status Events" Normal
FORMAT This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
Tunnel is created.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  6: hh3cIPsecTunLifeTimeV2
     Syntax="INTEGER32"
     Descr="The negotiated LifeTime of the IPsec Phase-2 Tunnel in seconds.
             2147483647 is defined as invalid value."
  7: hh3cIPsecTunLifeSizeV2
     Syntax="GAUGE"
     Descr="The negotiated LifeSize of the IPsec Phase-2 Tunnel in kilobytes.
             0 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPsecTunnelStopV2 .1.3.6.1.4.1.25506.2.126.1.9.0.2 "Status Events" Normal
FORMAT This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
Tunnel is deleted.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  6: hh3cIPsecTunActiveTimeV2
     Syntax="INTEGER32"
     Descr="The duration the IPsec Phase-2 Tunnel has been active in
             hundredths of seconds.  2147483647 is defined as invalid value."
EDESC
#
#
#
EVENT hh3cIPsecNoSaFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.3 "Status Events" Normal
FORMAT This notification is generated when an IPsec Phase-2 $*
SDESC
This notification is generated when an IPsec Phase-2
non-existent SA error occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecAuthFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.4 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
authentication failure occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecEncryFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.5 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
tunnel has an encrypting failure.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecDecryFailFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.6 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
tunnel has a decrypting failure.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  3: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  4: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  5: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
EDESC
#
#
#
EVENT hh3cIPsecInvalidSaFailureV2 .1.3.6.1.4.1.25506.2.126.1.9.0.7 "Status Events" Normal
FORMAT This notification is generated when the IPsec phase-2 $*
SDESC
This notification is generated when the IPsec phase-2
invalid SA failure occurs.
Variables:
  1: hh3cIPsecTunIndexV2
     Syntax="INTEGER32"
     Descr="The index of IPsec Phase-2 Tunnel Table.  The value of
             the index is a number which begins at one and is
             incremented with each tunnel that is created.  The
             value of this object will wrap at 2147483647."
  2: hh3cIPsecSaIndexV2
     Syntax="INTEGER32"
     Descr="The number of the Sa associated with the Phase-2 Tunnel
             Table.  The value of this index is a number which begins
             at one and is incremented with each Sa associated with
             an IPsec Phase-2 Tunnel.  The value of this object will
             wrap at 2,147,483,647."
  3: hh3cIPsecTunLocalAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the local peer of the IPsec Phase-2
            Tunnel."
  4: hh3cIPsecTunLocalAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the local peer for the IPsec Phase-2 Tunnel."
  5: hh3cIPsecTunRemoteAddrTypeV2
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The type of the IP address for the remote peer of the IPsec Phase-2
             Tunnel."
  6: hh3cIPsecTunRemoteAddrV2
     Syntax="OCTETSTR"
     Descr="The IP address of the remote peer for the IPsec Phase-2 Tunnel."
  7: hh3cIPsecSaSpiValueV2
     Syntax="UNSIGNED32"
     Descr="The value of the SPI."
EDESC
#
#
#
EVENT hh3cIPsecPolicyAddV2 .1.3.6.1.4.1.25506.2.126.1.9.0.8 "Status Events" Normal
FORMAT This notification is generated when an IPsec policy is added. $*
SDESC
This notification is generated when an IPsec policy is added.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySeqNumV2
     Syntax="INTEGER32"
     Descr="The IPsec policy sequence number with a trap."
  3: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPsecPolicyDelV2 .1.3.6.1.4.1.25506.2.126.1.9.0.9 "Status Events" Normal
FORMAT This notification is generated when an IPsec policy is deleted. $*
SDESC
This notification is generated when an IPsec policy is deleted.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySeqNumV2
     Syntax="INTEGER32"
     Descr="The IPsec policy sequence number with a trap."
  3: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
EDESC
#
#
#
EVENT hh3cIPsecPolicyAttachV2 .1.3.6.1.4.1.25506.2.126.1.9.0.10 "Status Events" Normal
FORMAT This notification is generated when an IPsec policy is attached $*
SDESC
This notification is generated when an IPsec policy is attached
with one interface.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPsecPolicyDetachV2 .1.3.6.1.4.1.25506.2.126.1.9.0.11 "Status Events" Normal
FORMAT This notification is generated when an IPsec policy is detached $*
SDESC
This notification is generated when an IPsec policy is detached
with one interface.
Variables:
  1: hh3cIPsecPolicyNameV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy name with a trap."
  2: hh3cIPsecPolicySizeV2
     Syntax="INTEGER32"
     Descr="The number of IPsec policies with a trap."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cIPsecConnectionStartV2 .1.3.6.1.4.1.25506.2.126.1.9.0.12 "Status Events" Normal
FORMAT This notification is generated when an IPsec connection $*
SDESC
This notification is generated when an IPsec connection
is created.
Variables:
  1: hh3cIPsecPolicyDescripV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy's description."
EDESC
#
#
#
EVENT hh3cIPsecConnectionStopV2 .1.3.6.1.4.1.25506.2.126.1.9.0.13 "Status Events" Normal
FORMAT This notification is generated when an IPsec connection $*
SDESC
This notification is generated when an IPsec connection
is terminated.
Variables:
  1: hh3cIPsecPolicyDescripV2
     Syntax="OCTETSTR"
     Descr="The IPsec policy's description."
EDESC
#
#
#
#
MIB: HH3C-IPV6-ADDRESS-MIB (file:./hh3c-ipv6-address.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-IPX-MIB (file:./hh3c-ipx.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ISDN-MIB (file:./hh3c-isdn.mib) converted on Sat Apr  2 10:27:59 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-ISIS-MIB (file:./hh3c-isis.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIsisAdjacencyProtocolChange .1.3.6.1.4.1.25506.2.59.0.1 "Status Events" Normal
FORMAT A notification sent when the IPv4 or IPv6 protocol $*
SDESC
A notification sent when the IPv4 or IPv6 protocol
of an adjacency changes.
The first 6 bytes of the isisPduLspId are the
SystemID of the adjacent IS.
The hh3cIsisAdjProtoType is the type of adjacency protocol.
The hh3cIsisAdjProtoState is the state of adjacency protocol.
Variables:
  1: isisNotificationSysLevelIndex
     Syntax="INTEGER"
       1: level1
       2: level2
       3: level1and2
     Descr="The system level for this notification."
  2: isisNotificationCircIfIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of this circuit relevant to
             this notification."
  3: isisPduLspId
     Syntax="OCTETSTR"
     Descr="An Octet String that uniquely identifies
             a Link State PDU."
  4: hh3cIsisAdjProtoType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
     Descr="The adjacency protocol type for this notification."
  5: hh3cIsisAdjProtoState
     Syntax="INTEGER"
       1: down
       2: initializing
       3: up
     Descr="The state of the adjacency protocol."
  6: ifName
     Syntax="OCTETSTR"
     Descr="The textual name of the interface.  The value of this
            object should be the name of the interface as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name, such as `le0' or a simple port number, such as `1',
            depending on the interface naming syntax of the device.  If
            several entries in the ifTable together represent a single
            interface as named by the device, then each will have the
            same value of ifName.  Note that for an agent which responds
            to SNMP queries concerning an interface on some other
            (proxied) device, then the value of ifName for such an
            interface is the proxied device's local name for it.

            If there is no local name, or this object is otherwise not
            applicable, then this object contains a zero-length string."
EDESC
#
#
#
#
MIB: HH3C-ISSU-MIB (file:./hh3c-issu.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2ISOLATE-MIB (file:./hh3c-l2isolate.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2TP-MIB (file:./hh3c-l2tp.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L2VPN-MIB (file:./hh3c-l2vpn.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cL2vpnPwSwitchPtoB .1.3.6.1.4.1.25506.2.162.0.1 "Status Events" Normal
FORMAT This notification is generated when a primary-to-backup PW switching $*
SDESC
This notification is generated when a primary-to-backup PW switching
happens.  The first three elements show the primary PW,
and the second three elements show the backup PW.
Variables:
  1: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  2: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  3: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
  4: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  5: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  6: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
EDESC
#
#
#
EVENT hh3cL2vpnPwSwitchBtoP .1.3.6.1.4.1.25506.2.162.0.2 "Status Events" Normal
FORMAT This notification is generated when a backup-to-primary PW switching $*
SDESC
This notification is generated when a backup-to-primary PW switching
happens.  The first three elements show the backup PW,
and the second three elements show the primary PW.
Variables:
  1: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  2: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  3: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
  4: hh3cL2vpnXcgPwIndex
     Syntax="UNSIGNED32"
     Descr="A unique index for a PW."
  5: hh3cL2vpnXcgPwPeerIp
     Syntax="IPADDR"
     Descr="Peer IP address."
  6: hh3cL2vpnXcgPwPwID
     Syntax="UNSIGNED32"
     Descr="PW identifier(ID)."
EDESC
#
#
#
#
MIB: HH3C-L2VPN-PWE3-MIB (file:./hh3c-l2vpn-pwe3.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-L4RDT-MIB (file:./hh3c-l4rdt.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LAG-MIB (file:./hh3c-lag.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cAggSpeedChangedNotification .1.3.6.1.4.1.25506.8.25.2.1 "Status Events" Normal
FORMAT This event will be triggered whenever an $*
SDESC
This event will be triggered whenever an
aggregation changes its speed.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
EDESC
#
#
#
EVENT hh3cAggPortInactiveNotification .1.3.6.1.4.1.25506.8.25.2.2 "Status Events" Normal
FORMAT This event will be triggered whenever any port $*
SDESC
This event will be triggered whenever any port
in aggregator is made inactive.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
EDESC
#
#
#
EVENT hh3cAggPortInactiveNotification2 .1.3.6.1.4.1.25506.8.25.2.3 "Status Events" Normal
FORMAT This event will be triggered whenever the port $*
SDESC
This event will be triggered whenever the port
in aggregator is made inactive.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPortActiveNotification .1.3.6.1.4.1.25506.8.25.2.4 "Status Events" Normal
FORMAT This event will be triggered whenever the port $*
SDESC
This event will be triggered whenever the port
in aggregator is made active.
Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPartnerMisconnect .1.3.6.1.4.1.25506.8.25.0.5 "Status Events" Normal
FORMAT This event will be triggered whenever the peer link of the LACP $*
SDESC
This event will be triggered whenever the peer link of the LACP
member interface might be incorrectly connected.

Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
EVENT hh3cAggPartnerMisconnectResume .1.3.6.1.4.1.25506.8.25.0.6 "Status Events" Normal
FORMAT This event will be triggered whenever the peer link of the LACP $*
SDESC
This event will be triggered whenever the peer link of the LACP
member interface was correctly connected.

Variables:
  1: hh3cAggLinkNumber
     Syntax="INTEGER32"
     Descr="The serial number of aggregation group."
  2: hh3cAggPortIndex
     Syntax="GAUGE"
     Descr="Port ifindex which is according to RFC1213 MIB."
EDESC
#
#
#
#
MIB: HH3C-LB-MIB (file:./hh3c-lb.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LBV2-MIB (file:./hh3c-lbv2.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LICENSE-MIB (file:./hh3c-license.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLicenseOpCompletion .1.3.6.1.4.1.25506.2.145.3.0.1 "Status Events" Normal
FORMAT This notification is generated when a license operation completed. $*
SDESC
This notification is generated when a license operation completed.
Variables:
  1: hh3cLicenseOpIndex
     Syntax="UNSIGNED32"
     Descr="ID that can be used to uniquely identify an operation."
  2: hh3cLicenseOpPhysicalIndex
     Syntax="INTEGER32"
     Descr="This object indicates that the entPhysicalIndex of the device
        where the operation is being executed.

        The meaning of this object is associated with the management state
        from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of chassis local master.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of CPUs.

        This object must be set and can not be set to zero when
        executing an operation.
        "
  3: hh3cLicenseOpType
     Syntax="INTEGER"
       1: compress
       2: delete
       3: installActivationFile
       4: installActivationKey
       5: installLicenseKey
       6: uninstallActivationFile
       7: uninstallActivationKey
       8: uninstallLicenseKey
     Descr="The type of this operation.

        compress - Compress the license storage if the free license storage
                   is not sufficient.
        Note that:
        1) After compressing, the expired licenses and uninstalled licenses
           in the storage area will be cleared.
        2) The DID changes each time the license storage is compressed.
        3) Before performing a compression, make sure all activation files
           generated based on the old DID have been installed.
           They cannot be installed after the compression.

        delete - Compress one license storage only.

        installActivationFile   -  Install an activation file.

        installActivationKey    -  Install an activation key.

        installLicenseKey       -  Install a license key.

        uninstallActivationFile -  Uninstall an activation file.

        uninstallActivationKey  -  Uninstall an activation key.

        uninstallLicenseKey     -  Uninstall a license key."
  4: hh3cLicenseOpString
     Syntax="OCTETSTR"
     Descr="This object might be an activation file name, an activation key or
        a license key that is to be installed, uninstalled or deleted.

        The operation type is specified in hh3cLicenseOpType.

        For compressing, this object must not be bound when creating a row.

        For deletion, this object could be an activation file, an activation
        key or a license key.

        For installActivationFile and uninstallActivationFile,
        this object must be a name of an activation file, with full path.
        Such as: flash:/license/210231A1V0A1290000012013032718261184345.ak

        For installActivationKey and uninstallActivationKey,
        this object must be an activation key.

        For installLicenseKey and uninstallLicenseKey,
        this object must be a license key."
  5: hh3cLicenseOpState
     Syntax="INTEGER"
       1: opInProgress
       2: opSuccessful
       3: opFailed
     Descr="The state of this operation.

        opInProgress - This operation is in progress.
        opSuccessful - Successful to execute this operation.
        opFailed - Failed to execute this operation,
                   and 'hh3cLicenseOpFailedReason' will indicate the detailed
                   cause of the failure."
  6: hh3cLicenseOpFailedReason
     Syntax="OCTETSTR"
     Descr="This object indicates the detailed cause of the failure when this
        operation failed."
EDESC
#
#
#
EVENT hh3cLicenseActivationFileLost .1.3.6.1.4.1.25506.2.145.3.0.2 "Status Events" Normal
FORMAT This notification is generated when the activation file $*
SDESC
This notification is generated when the activation file
has been lost.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseActivationFile
     Syntax="OCTETSTR"
     Descr="The name of an installed activation file, with device name and
        file name.

        For example:
        flash:/license/210231A1V0A1290000012013032718261184345.ak
        "
EDESC
#
#
#
EVENT hh3cLicenseActivationFileRestored .1.3.6.1.4.1.25506.2.145.3.0.3 "Status Events" Normal
FORMAT This notification is generated when the activation file $*
SDESC
This notification is generated when the activation file
restored successfully.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseActivationFile
     Syntax="OCTETSTR"
     Descr="The name of an installed activation file, with device name and
        file name.

        For example:
        flash:/license/210231A1V0A1290000012013032718261184345.ak
        "
EDESC
#
#
#
EVENT hh3cLicenseExpired .1.3.6.1.4.1.25506.2.145.3.0.4 "Status Events" Normal
FORMAT This notification is generated when the license expires. $*
SDESC
This notification is generated when the license expires.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseFeatureState
     Syntax="INTEGER"
       1: notLicensed
       2: trialLicense
       3: formalLicense
       4: serverLicense
       5: preLicense
     Descr="License type by purchasing state.

        notLicensed - The feature is not licensed.
        trialLicense - The feature is using trial license.
        formalLicense - The feature is using purchased license.
        serverLicense - The feature is using license authorized by license server.
        preLicense - The feature is using pre-installed license."
EDESC
#
#
#
EVENT hh3cLicenseExpireWarning .1.3.6.1.4.1.25506.2.145.3.0.5 "Status Events" Normal
FORMAT This notification is generated when is about to expire. $*
SDESC
This notification is generated when is about to expire.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseFeatureState
     Syntax="INTEGER"
       1: notLicensed
       2: trialLicense
       3: formalLicense
       4: serverLicense
       5: preLicense
     Descr="License type by purchasing state.

        notLicensed - The feature is not licensed.
        trialLicense - The feature is using trial license.
        formalLicense - The feature is using purchased license.
        serverLicense - The feature is using license authorized by license server.
        preLicense - The feature is using pre-installed license."
  3: hh3cLicenseBindValidityPeriodRemaining
     Syntax="UNSIGNED32"
     Descr="This object indicates the remaining days before
        the feature's license expires."
EDESC
#
#
#
EVENT hh3cLicenseReconnectWithServer .1.3.6.1.4.1.25506.2.145.3.0.6 "Status Events" Normal
FORMAT This notification is generated when the license client is reconnected to the license server. $*
SDESC
This notification is generated when the license client is reconnected to the license server.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseServerIp
     Syntax="IPADDR"
     Descr="The IP address of the license server."
  3: hh3cLicenseServerPort
     Syntax="UNSIGNED32"
     Descr="The port number of the license server."
EDESC
#
#
#
EVENT hh3cLicenseDisconnectWithServer .1.3.6.1.4.1.25506.2.145.3.0.7 "Status Events" Normal
FORMAT  This notification is generated when the license client is disconnected from the license server. $*
SDESC
 This notification is generated when the license client is disconnected from the license server.
Variables:
  1: hh3cLicensePhysicalIndex
     Syntax="INTEGER32"
     Descr="The entPhysicalIndex of the device.

        The meaning of this object is associated with the management state
        which from hh3cLicenseInstallType.

        Note that:
        1) hh3cLicenseInstallType is installInChassis.
           This object represents the entPhysicalIndex of the local active MPU.

        2) hh3cLicenseInstallType is installInSlot.
           This object represents the entPhysicalIndex of MPU boards.

        3) hh3cLicenseInstallType is installInCPU.
           This object represents the entPhysicalIndex of the CPUs on an MPU board.
        "
  2: hh3cLicenseServerIp
     Syntax="IPADDR"
     Descr="The IP address of the license server."
  3: hh3cLicenseServerPort
     Syntax="UNSIGNED32"
     Descr="The port number of the license server."
EDESC
#
#
#
EVENT hh3cLicenseBelowUsageThreshold .1.3.6.1.4.1.25506.2.145.3.0.8 "Status Events" Normal
FORMAT This notification is generated when the license usage drops below warning threshold. $*
SDESC
This notification is generated when the license usage drops below warning threshold.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseLowerUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the lower warning threshold of usage."
  3: hh3cLicenseUpperUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the upper warning threshold of usage."
  4: hh3cLicenseCurrentUsageRate
     Syntax="UNSIGNED32"
     Descr="This object indicates the license current usage rate."
EDESC
#
#
#
EVENT hh3cLicenseOverUsageThreshold .1.3.6.1.4.1.25506.2.145.3.0.9 "Status Events" Normal
FORMAT This notification is generated when the license usage is over warning threshold. $*
SDESC
This notification is generated when the license usage is over warning threshold.
Variables:
  1: hh3cLicenseFeatureName
     Syntax="OCTETSTR"
     Descr="Feature that must be licensed before being used."
  2: hh3cLicenseLowerUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the lower warning threshold of usage."
  3: hh3cLicenseUpperUsageThreshold
     Syntax="UNSIGNED32"
     Descr="This object indicates the upper warning threshold of usage."
  4: hh3cLicenseCurrentUsageRate
     Syntax="UNSIGNED32"
     Descr="This object indicates the license current usage rate."
EDESC
#
#
#
#
MIB: HH3C-LI-MIB (file:./hh3c-li.mib) converted on Sat Apr  2 10:28:00 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLIActive .1.3.6.1.4.1.25506.2.111.1.2.0.1 "Status Events" Normal
FORMAT This Notification is sent when a type of intercepting configuration $*
SDESC
This Notification is sent when a type of intercepting configuration
is changed from inactive to active.
The value of the hh3cLIStreamtype which identify the actual intercept
stream is included in this notification.
Variables:
  1: hh3cLIStreamtype
     Syntax="INTEGER"
       1: ip
       2: mac
       3: userConnection
     Descr="Identifies the type of stream, and according to it uses filter table.
        It can not be changed after a filter table is attached to it.
        The following types of streams are supported:
         ip:             IP filter.  The exact definition is a row in
                         hh3cLIIPStreamTable.
         mac:            MAC filter.  The exact definition is a row in
                         hh3cLIMACStreamTable.
         userConnecton:  User connection filter.  The exact definition
                         is a row in hh3cLIUserStreamTable."
EDESC
#
#
#
EVENT hh3cLITimeOut .1.3.6.1.4.1.25506.2.111.1.2.0.2 "Status Events" Normal
FORMAT When the time specified in hh3cLIMediationTimeout arrives, $*
SDESC
When the time specified in hh3cLIMediationTimeout arrives,
the device notifies the manager corresponding intercept is removed.
Variables:
  1: hh3cLIMediationRowStatus
     Syntax="INTEGER"
       1: active
       2: notInService
       3: notReady
       4: createAndGo
       5: createAndWait
       6: destroy
     Descr="Operation status of this table entry."
EDESC
#
#
#
EVENT hh3cLIFailureInformation .1.3.6.1.4.1.25506.2.111.1.2.0.3 "Status Events" Normal
FORMAT When interception is configured on distributed device, $*
SDESC
When interception is configured on distributed device,
the configuration perhaps failed on some board.
If this happened, this notification will occur.
Variables:
  1: hh3cLIStreamtype
     Syntax="INTEGER"
       1: ip
       2: mac
       3: userConnection
     Descr="Identifies the type of stream, and according to it uses filter table.
        It can not be changed after a filter table is attached to it.
        The following types of streams are supported:
         ip:             IP filter.  The exact definition is a row in
                         hh3cLIIPStreamTable.
         mac:            MAC filter.  The exact definition is a row in
                         hh3cLIMACStreamTable.
         userConnecton:  User connection filter.  The exact definition
                         is a row in hh3cLIUserStreamTable."
  2: hh3cLIBoardInformation
     Syntax="UNSIGNED32"
     Descr="It is a slot number."
EDESC
#
#
#
#
MIB: HH3C-LLDP-EXT-MIB (file:./hh3c-lldp-ext.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3clldpValidationStatusChange .1.3.6.1.4.1.25506.2.100.2.0.1 "Status Events" Normal
FORMAT This notification will be sent when the neighbor validation $*
SDESC
This notification will be sent when the neighbor validation
protection status of a port is changed.
Variables:
  1: hh3clldpPortStatusPortNum
     Syntax="INTEGER32"
     Descr="Port number."
  2: hh3clldpPortValidationStatus
     Syntax="INTEGER32"
     Descr="Neighbor validation protection status of the port.  The default value
         is 0."
EDESC
#
#
#
EVENT hh3clldpAgingStatusChange .1.3.6.1.4.1.25506.2.100.2.0.2 "Status Events" Normal
FORMAT This notification will be sent when the neighbor aging protection $*
SDESC
This notification will be sent when the neighbor aging protection
status of a port is changed.
Variables:
  1: hh3clldpPortStatusPortNum
     Syntax="INTEGER32"
     Descr="Port number."
  2: hh3clldpPortAgingStatus
     Syntax="INTEGER32"
     Descr="Neighbor aging protection status of the port.  The default value is
         0."
EDESC
#
#
#
#
MIB: HH3C-LOCAL-AAA-SERVER-MIB (file:./hh3c-local-aaa-server.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LOGIC-VOLUME-MIB (file:./hh3c-logic-volume.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LPBKDT-MIB (file:./hh3c-lpbkdt.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cLpbkdtTrapLoopbacked .1.3.6.1.4.1.25506.2.95.1.0.1 "Status Events" Normal
FORMAT Trap message is generated when the interface is looped. $*
SDESC
Trap message is generated when the interface is looped.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapRecovered .1.3.6.1.4.1.25506.2.95.1.0.2 "Status Events" Normal
FORMAT Trap message is generated when the loops on the interface $*
SDESC
Trap message is generated when the loops on the interface
are eliminated.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapPerVlanLoopbacked .1.3.6.1.4.1.25506.2.95.1.0.3 "Status Events" Normal
FORMAT Trap message is generated when the interface is looped in the VLAN. $*
SDESC
Trap message is generated when the interface is looped in the VLAN.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cLpbkdtVlanID
     Syntax="INTEGER32"
     Descr="The ID of VLAN."
EDESC
#
#
#
EVENT hh3cLpbkdtTrapPerVlanRecovered .1.3.6.1.4.1.25506.2.95.1.0.4 "Status Events" Normal
FORMAT Trap message is generated when the loop on the interface $*
SDESC
Trap message is generated when the loop on the interface
is eliminated in the VLAN.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cLpbkdtVlanID
     Syntax="INTEGER32"
     Descr="The ID of VLAN."
EDESC
#
#
#
#
MIB: HH3C-LSW-DEV-ADM-MIB (file:./hh3c-lsw-dev-adm.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LTE-MEC-MIB (file:./hh3c-lte-mec.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMecTunnelCacheFullTrap .1.3.6.1.4.1.25506.2.185.2.0.1 "Status Events" Normal
FORMAT Send this trap when the MEC tunnel table is full. $*
SDESC
Send this trap when the MEC tunnel table is full.
Variables:
  1: hh3cMecTunnelCacheNumber
     Syntax="INTEGER32"
     Descr="The number of MEC tunnel tables."
EDESC
#
#
#
EVENT hh3cMecTunnelCacheRecoverTrap .1.3.6.1.4.1.25506.2.185.2.0.2 "Status Events" Normal
FORMAT Send this trap when the MEC tunnel table entry falls below the normal value. $*
SDESC
Send this trap when the MEC tunnel table entry falls below the normal value.
Variables:
  1: hh3cMecTunnelCacheNumber
     Syntax="INTEGER32"
     Descr="The number of MEC tunnel tables."
EDESC
#
#
#
#
MIB: HH3C-MAC-INFORMATION-MIB (file:./hh3c-mac-information.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMACInformationChangedTrap .1.3.6.1.4.1.25506.2.87.1.3.0.1 "Status Events" Normal
FORMAT When the cached number of MAC address information is reached the $*
SDESC
When the cached number of MAC address information is reached the
value specified by hh3cMACInformationCacheLen, trap is generated
and is sent to the remote monitoring device.  The trap is also
generated when the amount of time elapsed since the previous
notification is greater than the interval value specified by
hh3cMACInformationcSendInterval and there is at least one cached
MAC address information learnt or removed. The object is valid
only when hh3cMACInfomationWorkMode is set to trap(1).  When the
hh3cMACInfomationWorkMode is set to syslog(2), No trap will be
generated even hh3cMACInformationEnabled is set to enabled(1) and
the feature is enabled on interface.
Variables:
  1: hh3cMACInfoTrapIndex
     Syntax="UNSIGNED32"
     Descr="The sequence number of trap information. When it reaches the
        maximum value, it should be set to 1."
  2: hh3cMACInfoTrapCount
     Syntax="UNSIGNED32"
     Descr="The cell number of the current trap information.  The trap
        message may consists of more than one MAC address information.
        Each of the one MAC address information in one trap is called cell."
  3: hh3cMACInfoTrapMsg
     Syntax="OCTETSTR"
     Descr="This object is the MAC information that learnt or removed
        in the monitored device. It can consists of more than
        one MAC information in the object.
        This object is in the format of '<cell1><cell2>...'. Each
        cell consists of 12 octets in the format of
        '<operationType><VLAN><MAC><MACtype><ifIndex>'.

        <operationType> is the reason type of MAC address changed and have
        size of 1 octet. It only supports the following values.
        1 - MAC learnt.
        2 - MAC removed.

        <VLAN> is the vlan number that correspond to the MAC address in
        MAC address table and has size of 2 octet.

        <MAC> is the MAC address and has size of 6 octets.

        <MACtype> is the MAC address type and has size of 1 octet. It only
        supports the following values.
        0 - Unknown
        1 - Learnt
        2 - Config dynamic
        3 - Config static
        4 - Blackhole
        5 - Security
        6 - 802.1x
        7 - MAC authentication
        8 - Voice VLAN
        9 - Reserved

        <ifIndex> is the index of the interface where the MAC
        address is learnt or removed and has size of 2 octets."
EDESC
#
#
#
EVENT hh3cMACInformationChangedTrapExt .1.3.6.1.4.1.25506.2.87.1.4.0.1 "Status Events" Normal
FORMAT When the cached number of MAC address information is reached the $*
SDESC
When the cached number of MAC address information is reached the
value specified by hh3cMACInformationCacheLen, trap is generated
and is sent to the remote monitoring device.  The trap is also
generated when the amount of time elapsed since the previous
notification is greater than the interval value specified by
hh3cMACInformationcSendInterval and there is at least one cached
MAC address information learnt or removed.  The object is valid
only when hh3cMACInfomationWorkMode is set to trap(1).  When the
hh3cMACInfomationWorkMode is set to syslog(2), No trap will be
generated even hh3cMACInformationEnabled is set to enabled(1) and
the feature is enabled on interface.
Variables:
  1: hh3cMACInfoTrapVerExt
     Syntax="UNSIGNED32"
     Descr="The version of trap information."
  2: hh3cMACInfoTrapIndexExt
     Syntax="UNSIGNED32"
     Descr="The sequence number of trap information.  When it reaches the
        maximum value, it should be set to 1."
  3: hh3cMACInfoTrapCountExt
     Syntax="UNSIGNED32"
     Descr="The cell number of the current trap information.  The trap
        message may consists of more than one MAC address information.
        Each of the one MAC address information in one trap is called cell."
  4: hh3cMACInfoTrapMsgExt
     Syntax="OCTETSTR"
     Descr="This object is the MAC information that learnt or removed
        in the monitored device.  It can consists of more than
        one MAC information in the object.
        This object is in the format of '<cell1><cell2>...'.  Each
        cell consists of 14 octets in the format of
        '<operationType><VLAN><MAC><MACtype><ifIndex>'.

        <operationType> is the reason type of MAC address changed and have
        size of 1 octet.  It only supports the following values.
        1 - MAC learnt.
        2 - MAC removed.

        <VLAN> is the vlan number that correspond to the MAC address in
        MAC address table and has size of 2 octet.

        <MAC> is the MAC address and has size of 6 octets.

        <MACtype> is the MAC address type and has size of 1 octet.  It only
        supports the following values.
        0 - Unknown
        1 - Learnt
        2 - Config dynamic
        3 - Config static
        4 - Blackhole
        5 - Security
        6 - 802.1x
        7 - MAC authentication
        8 - Voice VLAN
        9 - Reserved

        <ifIndex> is the index of the interface where the MAC
        address is learnt or removed and has size of 4 octets."
EDESC
#
#
#
EVENT hh3cMACInformationMovedTrap .1.3.6.1.4.1.25506.2.87.1.4.0.2 "Status Events" Normal
FORMAT When the MAC address has been moved to another interface, trap $*
SDESC
When the MAC address has been moved to another interface, trap
is generated and is sent to the remote monitoring device.
Variables:
  1: hh3cMACInfoTrapMsgMovedAddress
     Syntax="OCTETSTR"
     Descr="The MAC address that is moved between interfaces."
  2: hh3cMACInfoTrapMsgMovedVlan
     Syntax="INTEGER32"
     Descr="The VLAN number in which the MAC address is moved."
  3: hh3cMACInfoTrapMsgMovedFromIf
     Syntax="INTEGER32"
     Descr="The index of the interface from which the MAC address is moved."
  4: hh3cMACInfoTrapMsgMovedToIf
     Syntax="INTEGER32"
     Descr="The index of the interface to which the MAC address is moved."
  5: hh3cMACInfoTrapMsgMovedCount
     Syntax="COUNTER"
     Descr="The times for which the MAC address has been moved between the
        interfaces."
EDESC
#
#
#
#
MIB: HH3C-MACSEC-MIB (file:./hh3c-macsec.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MCDR-MIB (file:./hh3c-mcdr.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MDC-MIB (file:./hh3c-mdc.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMDCStateChangeToActive .1.3.6.1.4.1.25506.2.136.3.0.1 "Status Events" Normal
FORMAT The hh3cMDCStateChangeToActive trap indicates that the MDC status has changed to active. $*
SDESC
The hh3cMDCStateChangeToActive trap indicates that the MDC status has changed to active.
Variables:
  1: hh3cMDCIndex
     Syntax="INTEGER32"
     Descr="MDC ID is used as MDCIndex, the value range of MDC ID depends on the device model.
         MDCIndex cannot be modified after creation."
  2: hh3cMDCName
     Syntax="OCTETSTR"
     Descr="Specifies the MDC name, a case-sensitive string of 1 to 15 characters.
        The MDC name cannot be modified after creation."
EDESC
#
#
#
EVENT hh3cMDCStateChangeToInactive .1.3.6.1.4.1.25506.2.136.3.0.2 "Status Events" Normal
FORMAT The hh3cMDCStateChangeToInactive trap indicates that the MDC status has changed to inactive. $*
SDESC
The hh3cMDCStateChangeToInactive trap indicates that the MDC status has changed to inactive.
Variables:
  1: hh3cMDCIndex
     Syntax="INTEGER32"
     Descr="MDC ID is used as MDCIndex, the value range of MDC ID depends on the device model.
         MDCIndex cannot be modified after creation."
  2: hh3cMDCName
     Syntax="OCTETSTR"
     Descr="Specifies the MDC name, a case-sensitive string of 1 to 15 characters.
        The MDC name cannot be modified after creation."
EDESC
#
#
#
#
MIB: HH3C-MINM-MIB (file:./hh3c-minm.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MIRRORGROUP-MIB (file:./hh3c-mirrorgroup.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSEXT-MIB (file:./hh3c-mplsext.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-LDP-MIB (file:./hh3c-mpls-ldp.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-LSR-MIB (file:./hh3c-mpls-lsr.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cmplsXCUp .1.3.6.1.4.1.25506.8.12.1.2.0.1 "Status Events" Normal
FORMAT This notification is generated when a $*
SDESC
This notification is generated when a
hh3cmplsXCOperStatus object for one of the configured
cross-connect entries is about to leave the down
state and transition into some other state (but not
into the notPresent state).  This other state is
indicated by the included value of
hh3cmplsXCOperStatus.
Variables:
  1: hh3cmplsXCIndex
     Syntax="INTEGER32"
     Descr="Primary index for the conceptual row identifying 
        a group of cross-connect segments."
  2: hh3cmplsInSegmentIfIndex
     Syntax="INTEGER32"
     Descr="This is a unique index for an entry in the
        hh3cmplsInSegmentTable.  This value represents the
        interface index for the incoming MPLS interface.  A
        value of zero represents an incoming label from the
        per-platform label space.  In this case, the
        hh3cmplsInSegmentLabel is interpreted to be an MPLS-type
        label."
  3: hh3cmplsInSegmentLabel
     Syntax="UNSIGNED32"
     Descr="The incoming label for this segment."
  4: hh3cmplsOutSegmentIndex
     Syntax="INTEGER32"
     Descr="This value contains a unique index for this row.
        While a value of 0 is not valid as an index for this
        row it can be supplied as a valid value to index
        hh3cmplsXCTable to access entries for which no out-
        segment has been configured."
  5: hh3cmplsXCAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired operational status of this segment."
  6: hh3cmplsXCOperStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
       4: unknown
       5: dormant
       6: notPresent
       7: lowerLayerDown
     Descr="The actual operational status of this cross-
        connect."
EDESC
#
#
#
EVENT hh3cmplsXCDown .1.3.6.1.4.1.25506.8.12.1.2.0.2 "Status Events" Normal
FORMAT This notification is generated when a $*
SDESC
This notification is generated when a
hh3cmplsXCOperStatus object for one of the configured
cross-connect entries is about to enter the down
state from some other state (but not from the
notPresent state).  This other state is indicated by
the included value of hh3cmplsXCOperStatus.
Variables:
  1: hh3cmplsXCIndex
     Syntax="INTEGER32"
     Descr="Primary index for the conceptual row identifying 
        a group of cross-connect segments."
  2: hh3cmplsInSegmentIfIndex
     Syntax="INTEGER32"
     Descr="This is a unique index for an entry in the
        hh3cmplsInSegmentTable.  This value represents the
        interface index for the incoming MPLS interface.  A
        value of zero represents an incoming label from the
        per-platform label space.  In this case, the
        hh3cmplsInSegmentLabel is interpreted to be an MPLS-type
        label."
  3: hh3cmplsInSegmentLabel
     Syntax="UNSIGNED32"
     Descr="The incoming label for this segment."
  4: hh3cmplsOutSegmentIndex
     Syntax="INTEGER32"
     Descr="This value contains a unique index for this row.
        While a value of 0 is not valid as an index for this
        row it can be supplied as a valid value to index
        hh3cmplsXCTable to access entries for which no out-
        segment has been configured."
  5: hh3cmplsXCAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired operational status of this segment."
  6: hh3cmplsXCOperStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
       4: unknown
       5: dormant
       6: notPresent
       7: lowerLayerDown
     Descr="The actual operational status of this cross-
        connect."
EDESC
#
#
#
#
MIB: HH3C-MPLSOAM-MIB (file:./hh3c-mplsoam.mib) converted on Sat Apr  2 10:28:01 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSOAM-PS-MIB (file:./hh3c-mplsoam-ps.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLSTE-MIB (file:./hh3c-mplste.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-VPN-BGP-MIB (file:./hh3c-mpls-vpn-bgp.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPLS-BGP-VPN-MIB (file:./hh3c-mpls-vpn.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MP-MIB (file:./hh3c-mp.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MPM-MIB (file:./hh3c-mpm.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MP-V2-MIB (file:./hh3c-mp-v2.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MS-MAN-MIB (file:./hh3c-ms-man.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMSManVODConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.1 "Status Events" Normal
FORMAT Current VOD connection exceeds the threshold. $*
SDESC
Current VOD connection exceeds the threshold.
Variables:
  1: hh3cMSVODIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentVODConnection
     Syntax="UNSIGNED32"
     Descr="Number of VOD connections the entity provided
        in this time."
  3: hh3cMSVODConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of VOD connections."
EDESC
#
#
#
EVENT hh3cMSManVODConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.2 "Status Events" Normal
FORMAT Current VOD connection recovers under the threshold. $*
SDESC
Current VOD connection recovers under the threshold.
Variables:
  1: hh3cMSVODIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentVODConnection
     Syntax="UNSIGNED32"
     Descr="Number of VOD connections the entity provided
        in this time."
  3: hh3cMSVODConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of VOD connections."
EDESC
#
#
#
EVENT hh3cMSManForwardConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.3 "Status Events" Normal
FORMAT Current forward connection exceeds the threshold. $*
SDESC
Current forward connection exceeds the threshold.
Variables:
  1: hh3cMSForwardIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
         depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentForwardConnection
     Syntax="UNSIGNED32"
     Descr="Number of forward connections the entity provided
        in this time."
  3: hh3cMSForwardConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of forward connections."
EDESC
#
#
#
EVENT hh3cMSManForwardConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.4 "Status Events" Normal
FORMAT Current forward connection recovers under the threshold. $*
SDESC
Current forward connection recovers under the threshold.
Variables:
  1: hh3cMSForwardIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
         depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentForwardConnection
     Syntax="UNSIGNED32"
     Descr="Number of forward connections the entity provided
        in this time."
  3: hh3cMSForwardConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of forward connections."
EDESC
#
#
#
EVENT hh3cMSManRecordConnectionThresholdTrap .1.3.6.1.4.1.25506.9.3.3.0.5 "Status Events" Normal
FORMAT Current record connection exceeds the threshold. $*
SDESC
Current record connection exceeds the threshold.
Variables:
  1: hh3cMSRecordIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentRecordConnection
     Syntax="UNSIGNED32"
     Descr="Number of record connections the entity provided in
        this time."
  3: hh3cMSRecordConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of record connections ."
EDESC
#
#
#
EVENT hh3cMSManRecordConnectionRecoverTrap .1.3.6.1.4.1.25506.9.3.3.0.6 "Status Events" Normal
FORMAT Current record connection recovers under the threshold. $*
SDESC
Current record connection recovers under the threshold.
Variables:
  1: hh3cMSRecordIndex
     Syntax="INTEGER32"
     Descr="The value of this object is the entity index, which
        depends on the implementation of ENTITY-MIB. "
  2: hh3cMSCurrentRecordConnection
     Syntax="UNSIGNED32"
     Descr="Number of record connections the entity provided in
        this time."
  3: hh3cMSRecordConnectionThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold of record connections ."
EDESC
#
#
#
#
MIB: HH3C-MULTICAST-MIB (file:./hh3c-multicast.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-MULTICAST-SNOOPING-MIB (file:./hh3c-multicast-snooping.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NAT-MIB (file:./hh3c-nat.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNATBandwidthTrap .1.3.6.1.4.1.25506.2.18.2.15.0.1 "Status Events" Normal
FORMAT Send trap when the bandwidth usage of a CGN card has reached the hh3cNATBandwidthRatio. $*
SDESC
Send trap when the bandwidth usage of a CGN card has reached the hh3cNATBandwidthRatio.
Variables:
  1: hh3cNATBandwidthRatio
     Syntax="UNSIGNED32"
     Descr="The usage of CGN card bandwidth."
  2: hh3cNATChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  3: hh3cNATSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  4: hh3cNATCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cNATBandwidthRecoveryTrap .1.3.6.1.4.1.25506.2.18.2.15.0.2 "Status Events" Normal
FORMAT Send trap when the CGN card bandwidth usage has dropped below the threshold. $*
SDESC
Send trap when the CGN card bandwidth usage has dropped below the threshold.
Variables:
  1: hh3cNATChassis
     Syntax="UNSIGNED32"
     Descr="An IRF member device ID."
  2: hh3cNATSlot
     Syntax="UNSIGNED32"
     Descr="The slot where the card resides."
  3: hh3cNATCpu
     Syntax="UNSIGNED32"
     Descr="CPU ID."
EDESC
#
#
#
EVENT hh3cInstAddrGrpUsageTrap .1.3.6.1.4.1.25506.2.18.2.18.0.1 "Status Events" Normal
FORMAT Send trap when hh3cInstAddrUsgGrpUsage reached the threshold. $*
SDESC
Send trap when hh3cInstAddrUsgGrpUsage reached the threshold.
Variables:
  1: hh3cInstAddrTrapInstName
     Syntax="OCTETSTR"
     Descr="NAT instance name."
  2: hh3cInstAddrTrapGrpIndex
     Syntax="UNSIGNED32"
     Descr="NAT address group ID."
  3: hh3cInstAddrTrapInstIndex
     Syntax="UNSIGNED32"
     Descr="NAT instance index."
  4: hh3cInstAddrTrapUsgThreshold
     Syntax="UNSIGNED32"
     Descr="NAT address group usage reached the threshold."
EDESC
#
#
#
EVENT hh3cInstAddrGrpUsageRecovTrap .1.3.6.1.4.1.25506.2.18.2.18.0.2 "Status Events" Normal
FORMAT Send trap when dropped below the threshold. $*
SDESC
Send trap when dropped below the threshold.
Variables:
  1: hh3cInstAddrTrapInstName
     Syntax="OCTETSTR"
     Descr="NAT instance name."
  2: hh3cInstAddrTrapGrpIndex
     Syntax="UNSIGNED32"
     Descr="NAT address group ID."
  3: hh3cInstAddrTrapInstIndex
     Syntax="UNSIGNED32"
     Descr="NAT instance index."
EDESC
#
#
#
EVENT hh3cNatIPPoolAddrUsageExceedTrap .1.3.6.1.4.1.25506.2.18.2.20.0.1 "Status Events" Normal
FORMAT Send trap when NatIPPoolAddrUsageExceed reached the threshold. $*
SDESC
Send trap when NatIPPoolAddrUsageExceed reached the threshold.
Variables:
  1: hh3cNatTrapIPPoolName
     Syntax="OCTETSTR"
     Descr="NAT IP pool name."
  2: hh3cNatTrapIPPoolAddrUsage
     Syntax="UNSIGNED32"
     Descr="NAT IP pool address usage."
EDESC
#
#
#
EVENT hh3cNatIPPoolAddrUsageRecoveryTrap .1.3.6.1.4.1.25506.2.18.2.20.0.2 "Status Events" Normal
FORMAT Send trap when dropped below the threshold. $*
SDESC
Send trap when dropped below the threshold.
Variables:
  1: hh3cNatTrapIPPoolName
     Syntax="OCTETSTR"
     Descr="NAT IP pool name."
  2: hh3cNatTrapIPPoolAddrUsage
     Syntax="UNSIGNED32"
     Descr="NAT IP pool address usage."
EDESC
#
#
#
#
MIB: HH3C-NCM-MIB (file:./hh3c-ncm.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNcmCUConnDisconnected .1.3.6.1.4.1.25506.2.201.3.0.1 "Status Events" Normal
FORMAT The NETCONF connection with a peer device was torn down. $*
SDESC
The NETCONF connection with a peer device was torn down.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapConnFailedReason
     Syntax="OCTETSTR"
     Descr="The Connection Fail Reason."
EDESC
#
#
#
EVENT hh3cNcmCUConnReconnected .1.3.6.1.4.1.25506.2.201.3.0.2 "Status Events" Normal
FORMAT The NETCONF connection with a peer device is resumed. $*
SDESC
The NETCONF connection with a peer device is resumed.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
EDESC
#
#
#
EVENT hh3cNcmCUConnectFailed .1.3.6.1.4.1.25506.2.201.3.0.3 "Status Events" Normal
FORMAT Failed to establish a NETCONF connection with a peer device. $*
SDESC
Failed to establish a NETCONF connection with a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapConnFailedReason
     Syntax="OCTETSTR"
     Descr="The Connection Fail Reason."
EDESC
#
#
#
EVENT hh3cNcmCUConnectSuccess .1.3.6.1.4.1.25506.2.201.3.0.4 "Status Events" Normal
FORMAT Successed in establishing a NETCONF connection with a peer device. $*
SDESC
Successed in establishing a NETCONF connection with a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
EDESC
#
#
#
EVENT hh3cNcmCUConfigFailed .1.3.6.1.4.1.25506.2.201.3.0.5 "Status Events" Normal
FORMAT Failed to deliver configurations to a peer device. $*
SDESC
Failed to deliver configurations to a peer device.
Variables:
  1: hh3cNcmTrapUpId
     Syntax="INTEGER32"
     Descr="UP id of Connection."
  2: hh3cNcmTrapConnIpAndPort
     Syntax="OCTETSTR"
     Descr="The IP and Port.  For example 127.0.0.1:830."
  3: hh3cNcmTrapConnUserName
     Syntax="OCTETSTR"
     Descr="The connection user name."
  4: hh3cNcmTrapFeatureName
     Syntax="OCTETSTR"
     Descr="The name of module that sent the configuration request."
EDESC
#
#
#
#
MIB: HH3C-NDEC-MIB (file:./hh3c-ndec.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NETCONF-MIB (file:./hh3c-netconf.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNetconfServerSessionStart .1.3.6.1.4.1.25506.2.206.2.0.1 "Status Events" Normal
FORMAT The NETCONF server created a session. $*
SDESC
The NETCONF server created a session.
Variables:
  1: hh3cNetconfSessionId
     Syntax="INTEGER32"
     Descr="The ID of NETCONF session ."
  2: hh3cNetconfSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of NETCONF session."
  3: hh3cNetconfSessionPeerIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The peer IP address of NETCONF session."
  4: hh3cNetconfSessionPeerIPAddress
     Syntax="OCTETSTR"
     Descr="The peer IP address of NETCONF session."
EDESC
#
#
#
EVENT hh3cNetconfServerSessionEnd .1.3.6.1.4.1.25506.2.206.2.0.2 "Status Events" Normal
FORMAT A NETCONF server session ended. $*
SDESC
A NETCONF server session ended.
Variables:
  1: hh3cNetconfSessionId
     Syntax="INTEGER32"
     Descr="The ID of NETCONF session ."
  2: hh3cNetconfSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of NETCONF session."
  3: hh3cNetconfSessionPeerIPAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The peer IP address of NETCONF session."
  4: hh3cNetconfSessionPeerIPAddress
     Syntax="OCTETSTR"
     Descr="The peer IP address of NETCONF session."
  5: hh3cNetconfSessionTerminationReason
     Syntax="INTEGER"
       1: other
       2: closed
       3: linkDown
       4: idleTimeout
     Descr="The termination reason of NETCONF session.
        other(1)        --Other reason
        closed(2)       --Session was closed
        linkDown(3)     --Link is down
        idleTimeout(4)  --Session time out."
EDESC
#
#
#
#
MIB: HH3C-NET-MAN-MIB (file:./hh3c-net-man.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cIpAddrChangeNotify .1.3.6.1.4.1.25506.2.90.3.2.0.1 "Status Events" Normal
FORMAT This notification will be generated when the IP address of active $*
SDESC
This notification will be generated when the IP address of active
management interface is changed.  The change maybe originate from NMS,
DHCP server or administrator.
The management interfaces are the interfaces that assigned by
administrator, which can be used to manage device, but may be inactive
for link fault or IP address (IPv4 or IPv6) missing.
The active management interface means an active interface, the IP
address of which can be used for network management.
This notification announces useful management IP address change.  So it
is triggered by significative IP address change.
Suppose that two management interfaces on a device, Interface-A and
Interface-B.  Initially both interfaces are down and assigned no IP
address. Configure Interface-A as the primary monitored interface,
Interface-B as the secondary.
Significative IP address change in following cases:
1. If Interface-A is assigned an IP address primarily, and it is linking
up, then Interface-B will be ignored.  A notification will be triggered,
appending IP address of Interface-A.
2. If Interface-B is assigned an IP address primarily, and it is linking
up, then Interface-A will be ignored.  A notification will be triggered,
appending IP address of Interface-B.
3. If IP address of that interface, which had its IP address announced
to NMS, is changed since last notification triggered, then another
notification will be sent to NMS.
4. Suppore that Interface-A was linked up and assigned an IP address
primarily.  If for some unknown reason, Interface-A is down or loses IP
address, and Interface-B is assigned an IP address which is different
with that announced to NMS before, then a notification will be
triggered, appending the new IP address that Interface-B assigned.
5. A notification appending new IP address that Interface-A assigned
will be triggered, if 4 occurs to Interface-B.
Variables:
  1: hh3cNMIpAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of specified interface on the device."
  2: hh3cNMIpAddress
     Syntax="OCTETSTR"
     Descr="The IP address of specified interface on the device."
  3: hh3cNMCustomBuildInfo
     Syntax="OCTETSTR"
     Descr="The customer-required information of devices, for example,
        OUI (Organizational Unique Identifier)."
  4: hh3cNMSerialNum
     Syntax="OCTETSTR"
     Descr="The serial number used by NMS (Network Management Station) for
        mapping IP address and device."
EDESC
#
#
#
#
MIB: HH3C-NPV-MIB (file:./hh3c-npv.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NQA-MIB (file:./hh3c-nqa.mib) converted on Sat Apr  2 10:28:02 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cNqaProbeTimeOverThreshold .1.3.6.1.4.1.25506.8.3.3.1 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. Probe time(equals to RTT for some type of tests) is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterRTTOverThreshold .1.3.6.1.4.1.25506.8.3.3.2 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average NQA round-trip-time (RTT) of jitter packets
is not in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
2. The RTT of jitter packets is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum in one test.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaProbeFailure .1.3.6.1.4.1.25506.8.3.3.3 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the probe test accumulatively failed for a
number of times specified in hh3cNqaReactThresholdAccumNum in one
test while the value of hh3cNqaReactThresholdType is 'accumulative'.
2. When the probe test consecutively failed for
a number of times specified in hh3cNqaReactThresholdConsecNum in one
test while the value of hh3cNqaReactThresholdType is 'consecutive'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterPacketLoss .1.3.6.1.4.1.25506.8.3.3.4 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the jitter packets accumulatively lost for a
number of times specified in hh3cNqaReactThresholdAccumNum in one
test while the value of hh3cNqaReactThresholdType is 'accumulative'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterSDOverThreshold .1.3.6.1.4.1.25506.8.3.3.5 "Status Events" Normal
FORMAT The SD means the jitter values from source to destination. $*
SDESC
The SD means the jitter values from source to destination.
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average of SD in one jitter test is not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The average of SD in one jitter test is accumulatively
not in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterDSOverThreshold .1.3.6.1.4.1.25506.8.3.3.6 "Status Events" Normal
FORMAT The DS means the jitter values from destination to source. $*
SDESC
The DS means the jitter values from destination to source.
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. The average of DS in one jitter test is not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The average of DS in one jitter test is accumulatively not
in the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times specified
in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaICPIFOverThreshold .1.3.6.1.4.1.25506.8.3.3.7 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the ICPIF value in one jitter test is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger', pingCtlType of the test
is hh3cNqajitter and hh3cNqaCtlCodecType is 'g711Alaw' or 'g711Ulaw'
or 'g729A'.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaMOSOverThreshold .1.3.6.1.4.1.25506.8.3.3.8 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is over threshold
or below threshold.
The over threshold situations is specified as below.
1. When the MOS value in one jitter test is not in
the range hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger', pingCtlType of the test
is hh3cNqajitter and hh3cNqaCtlCodecType is 'g711Alaw' or 'g711Ulaw'
or 'g729A'.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaJitterOverThreshold .1.3.6.1.4.1.25506.8.3.3.9 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes.
The change may occur when the watched condition is above threshold
or below threshold.
1. The average jitter value is not in the range of
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit and the
hh3cNqaReactThresholdType is specified as 'average' type.
2. The total number of times that the average jitter value is not
in the range of hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit reaches or exceeds
the value specified in hh3cNqaReactThresholdAccumNum and the
hh3cNqaReactThresholdType is specified as 'accumulative' type.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is hh3cNqajitter or hh3cNqaTwampLight.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
  9: hh3cNqaReactCurrentStatus
     Syntax="INTEGER"
       1: invalid
       2: overThreshold
       3: belowThreshold
       4: overUpperThreshold
       5: belowLowerThreshold
     Descr="Specifies the current status of this reaction entry:

        invalid  - The status of the reaction entry is unknown.

        overThreshold       - The status of the reaction entry is overThreshold
                              when the monitored result exceeds the threshold
                              value for the hh3cNqaReactThresholdType.

        belowThreshold      - The status of the reaction entry is belowThreshold
                              when the monitored result is under the threshold
                              value for the hh3cNqaReactThresholdType.

        overUpperThreshold  - The status of the reaction entry is overThreshold
                              when the monitored result is exceeds the
                              upper-threshold value for the
                              hh3cNqaReactThresholdType.

        belowLowerThreshold - The status of the reaction entry is belowThreshold
                              when the monitored result is under the
                              lower-threshold value for
                              hh3cNqaReactThresholdType."
EDESC
#
#
#
EVENT hh3cNqaProbeTimeAboveThreshold .1.3.6.1.4.1.25506.8.3.3.10 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'overThreshold', 'invalid' or 'overUpperThreshold'.
The change may occur when the monitored condition exceeds the
threshold (or upper threshold) or When NQA operation is stopped.
The above threshold situations are specified as below.
1. Probe time is not in the range hh3cNqaReactThresholdLowerLimit
through hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively not in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
4. When NQA operation is stopped.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeTimeBelowThreshold .1.3.6.1.4.1.25506.8.3.3.11 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'belowThreshold' or 'belowLowerThreshold' from a
threshold-crossing state.
The below threshold situations are specified as below.
1. Probe time is in the range hh3cNqaReactThresholdLowerLimit
through hh3cNqaReactThresholdUpperLimit.
2. The probe time is accumulatively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdAccumNum.
3. The probe time is consecutively in the range
hh3cNqaReactThresholdLowerLimit through
hh3cNqaReactThresholdUpperLimit for a number of times
specified in hh3cNqaReactThresholdConsecNum.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeFailAboveThreshold .1.3.6.1.4.1.25506.8.3.3.12 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'overThreshold', 'invalid' or 'overUpperThreshold'.
The change may occur when the monitored condition exceeds the
threshold (or upper threshold) or When NQA operation is stopped.
The threshold-crossing situations are specified as below.
1. When the number of accumulative failed probes reaches the specified
value in hh3cNqaReactThresholdAccumNum in one test while the value
of hh3cNqaReactThresholdType is 'accumulative'.
2. When the number of consecutive failed probes reaches the specified
value in hh3cNqaReactThresholdConsecNum in one test while the value
of hh3cNqaReactThresholdType is 'consecutive'.
3. When NQA operation is stopped.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
EVENT hh3cNqaProbeFailBelowThreshold .1.3.6.1.4.1.25506.8.3.3.13 "Status Events" Normal
FORMAT It is generated when the value of hh3cNqaReactCurrentStatus $*
SDESC
It is generated when the value of hh3cNqaReactCurrentStatus
changes to 'belowThreshold' or 'belowLowerThreshold' from a
threshold-crossing state.
The below threshold situations are specified as below.
1. When the number of accumulative successful probes reaches the specified
value in hh3cNqaReactThresholdAccumNum in one test while the value
of hh3cNqaReactThresholdType is 'accumulative'.
2. When the number of consecutive successful probes reaches the specified
value in hh3cNqaReactThresholdConsecNum in one test while the value
of hh3cNqaReactThresholdType is 'consecutive'.
This notification is valid only when hh3cNqaReactActionType
is 'trapOnly' or 'trapAndTrigger' and pingCtlType of the test
is not hh3cNqajitter.
Variables:
  1: hh3cNqaReactOwnerIndex
     Syntax="OCTETSTR"
     Descr="The first index of hh3cNqaReactionTable, it is the same as
        pingCtlOwnerIndex in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  2: hh3cNqaReactTestName
     Syntax="OCTETSTR"
     Descr="The second index of hh3cNqaReactionTable, it is the same as
        pingCtlTestName in pingCtlTable. hh3cNqaReactOwnerIndex and
        hh3cNqaReactTestName identify an existed test."
  3: hh3cNqaReactItemIndex
     Syntax="UNSIGNED32"
     Descr="The third index of hh3cNqaReactionTable, it definitely
        identifies one of the reaction configurations for a test."
  4: pingCtlTargetAddressType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
     Descr="Specifies the type of host address to be used at a remote
        host for performing a ping operation."
  5: pingCtlTargetAddress
     Syntax="OCTETSTR"
     Descr="Specifies the host address to be used at a remote host for
        performing a ping operation.  The host address type is
        determined by the object value of corresponding
        pingCtlTargetAddressType.
        A value for this object MUST be set prior to transitioning
        its corresponding pingCtlEntry to active(1) via
        pingCtlRowStatus."
  6: pingCtlType
     Syntax="OBJECTID"
     Descr="The value of this object is used to either report or
        select the implementation method to be used for
        calculating a ping response time.  The value of this
        object MAY be selected from pingImplementationTypeDomains.

        Additional implementation types SHOULD be allocated as
        required by implementers of the DISMAN-PING-MIB under
        their enterprise specific registration point and not
        beneath pingImplementationTypeDomains."
  7: pingCtlDescr
     Syntax="OCTETSTR"
     Descr="The purpose of this object is to provide a
        descriptive name of the remote ping test."
  8: hh3cNqaReactThresholdType
     Syntax="INTEGER"
       0: invalid
       1: average
       2: consecutive
       3: accumulative
     Descr="This object defines the reaction threshold types.

        invalid(0):     Invalid value.

        average(1):     If reaction threshold type is average and the average
                        value of watched operation exceeds threshold limit,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        consecutive(2): If reaction threshold type is consecutive and
                        the times of watched operation consecutively exceeds
                        the limit specified by hh3cNqaReactThresholdConsecNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        accumulative(3): If reaction threshold type is accumulative and
                        the times of watched operation accumulatively exceeds
                        the limit specified by hh3cNqaReactThresholdAccumNum,
                        an action specified in hh3cNqaReactActionType is
                        generated when hh3cNqaReactCurrentStatus changes.

        If reaction threshold type is not configured, the value of this
        object is 'invalid'."
EDESC
#
#
#
#
MIB: HH3C-NS-MIB (file:./hh3c-ns.mib) converted on Sat Apr  2 10:28:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NTP-MIB (file:./hh3c-ntp.mib) converted on Sat Apr  2 10:28:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-NVGRE-MIB (file:./hh3c-nvgre.mib) converted on Sat Apr  2 10:28:03 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OBJECT-INFO-MIB (file:./hh3c-object-info.mib) converted on Sat Apr  2 10:28:05 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OBJP-MIB (file:./hh3c-objp.mib) converted on Sat Apr  2 10:28:05 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OFP-MIB (file:./hh3c-ofp.mib) converted on Sat Apr  2 10:28:05 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cOfpControllerDisconnect .1.3.6.1.4.1.25506.2.167.2.2.0.1 "Status Events" Normal
FORMAT This trap is generated when the instance is disconnected $*
SDESC
This trap is generated when the instance is disconnected
from the controller.  The disconnection reason is
hh3cOfpTrapDisconnectReason.
Variables:
  1: hh3cOfpInstanceID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow instance"
  2: hh3cOfpInstanceControllerID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow controller."
  3: hh3cOfpTrapDisconnectReason
     Syntax="INTEGER32"
     Descr="Reason why this instance is disconnected from a controller
             0: Unknown reason.
             1: Undo commands executed
             2: Echo timeout.
             3: Hello failed.
             4: Receiving Hello packets timed out.
             5: Receiving messages failed.
             6: Epoll error.
             7: VRF deleted.
             8: VRF global port down.
             9: Failed to recycle the buffer.
             10: AP down."
EDESC
#
#
#
EVENT hh3cOfpControllerConnect .1.3.6.1.4.1.25506.2.167.2.2.0.2 "Status Events" Normal
FORMAT This trap is generated when the instance is connected $*
SDESC
This trap is generated when the instance is connected
to the controller.
Variables:
  1: hh3cOfpInstanceID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow instance"
  2: hh3cOfpInstanceControllerID
     Syntax="INTEGER32"
     Descr="Index of an OpenFlow controller."
EDESC
#
#
#
#
MIB: HH3C-OID-MIB (file:./hh3c-oid.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-OSPF-MIB (file:./hh3c-ospf.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PBR-MIB (file:./hh3c-pbr.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPBRNexthopFailedTrap .1.3.6.1.4.1.25506.2.113.1.2.2.0.1 "Status Events" Normal
FORMAT When the next hop of PBR apply clause became $*
SDESC
When the next hop of PBR apply clause became
unreachable according to routing information, trap is generated
and is sent to the remote monitoring device.
Variables:
  1: hh3cPBRNexthopAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="Indicating address type of hh3cPBRNexthopAddr, which can be IPv4
        or IPv6."
  2: hh3cPBRNexthopAddr
     Syntax="OCTETSTR"
     Descr="The involved next hop IP address of trap information."
EDESC
#
#
#
#
MIB: HH3C-PEX-MIB (file:./hh3c-pex.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPexPortOnline .1.3.6.1.4.1.25506.2.129.3.0.1 "Status Events" Normal
FORMAT An hh3cPexPortOnline trap is sent when the PEX transitions to $*
SDESC
An hh3cPexPortOnline trap is sent when the PEX transitions to
online state.
Variables:
  1: hh3cPexPortId
     Syntax="INTEGER32"
     Descr="ID that can be used to uniquely identify a PEX port.  The value range
        is hh3cPexPortMinId to hh3cPexPortMaxId."
  2: hh3cPexPortDescr
     Syntax="OCTETSTR"
     Descr="Description for the PEX port.  The default value is
        'pex-port XXXX', where 'XXXX' is hh3cPexPortId.
        Writing a zero-length string to this object resets the value to the
        default."
EDESC
#
#
#
EVENT hh3cPexPortOffline .1.3.6.1.4.1.25506.2.129.3.0.2 "Status Events" Normal
FORMAT An hh3cPexPortOnline trap is sent when the PEX transitions to $*
SDESC
An hh3cPexPortOnline trap is sent when the PEX transitions to
offline state.
Variables:
  1: hh3cPexPortId
     Syntax="INTEGER32"
     Descr="ID that can be used to uniquely identify a PEX port.  The value range
        is hh3cPexPortMinId to hh3cPexPortMaxId."
  2: hh3cPexPortDescr
     Syntax="OCTETSTR"
     Descr="Description for the PEX port.  The default value is
        'pex-port XXXX', where 'XXXX' is hh3cPexPortId.
        Writing a zero-length string to this object resets the value to the
        default."
EDESC
#
#
#
EVENT hh3cPexPhyPortForwarding .1.3.6.1.4.1.25506.2.129.3.0.3 "Status Events" Normal
FORMAT An hh3cPexPhyPortForwarding trap is sent when the PEX physical port $*
SDESC
An hh3cPexPhyPortForwarding trap is sent when the PEX physical port
transitions to forwarding state.
Variables:
  1: hh3cPexEntPhysicalIndexBind
     Syntax="INTEGER32"
     Descr="This index is identical to entPhysicalIndex in ENTITY-MIB."
  2: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
EVENT hh3cPexPhyPortBlocked .1.3.6.1.4.1.25506.2.129.3.0.4 "Status Events" Normal
FORMAT An hh3cPexPhyPortBlocked trap is sent when the PEX physical port $*
SDESC
An hh3cPexPhyPortBlocked trap is sent when the PEX physical port
transitions from forwarding state to blocked state.
Variables:
  1: hh3cPexEntPhysicalIndexBind
     Syntax="INTEGER32"
     Descr="This index is identical to entPhysicalIndex in ENTITY-MIB."
  2: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
#
MIB: HH3C-PORTAL-MIB (file:./hh3c-portal.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPortalServerLost .1.3.6.1.4.1.25506.2.99.3.0.1 "Status Events" Normal
FORMAT This trap is generated when the device finds that the portal server $*
SDESC
This trap is generated when the device finds that the portal server
is unreachable, the portal server's name is hh3cPortalServerName, and
the portal server's IP is hh3cPortalServerIP, and the portal server's
port is hh3cPortalServerPort, and the portal server has been enabled.
Variables:
  1: hh3cPortalServerName
     Syntax="OCTETSTR"
     Descr="It is the index of the table of hh3cPortalServerTable, it shows
        the name of the portal server."
  2: hh3cPortalFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  3: hh3cPortalServerIP
     Syntax="OCTETSTR"
     Descr="The portal server's IP."
  4: hh3cPortalServerPort
     Syntax="INTEGER32"
     Descr="It shows the UDP port of the portal server.

        The port will be used when client sends packets to portal server.
        Default value is 50100.

        It is not configurable when the portal server has been enabled."
EDESC
#
#
#
EVENT hh3cPortalServerGet .1.3.6.1.4.1.25506.2.99.3.0.2 "Status Events" Normal
FORMAT This trap is generated when the device finds that the state of portal $*
SDESC
This trap is generated when the device finds that the state of portal
server changes from unreachable state to reachable,
the portal server's name is hh3cPortalServerName, and the portal server's
IP is hh3cPortalServerIP, and the portal server's port is hh3cPortalServerPort,
and the portal server has been enabled.
Variables:
  1: hh3cPortalServerName
     Syntax="OCTETSTR"
     Descr="It is the index of the table of hh3cPortalServerTable, it shows
        the name of the portal server."
  2: hh3cPortalFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
  3: hh3cPortalServerIP
     Syntax="OCTETSTR"
     Descr="The portal server's IP."
  4: hh3cPortalServerPort
     Syntax="INTEGER32"
     Descr="It shows the UDP port of the portal server.

        The port will be used when client sends packets to portal server.
        Default value is 50100.

        It is not configurable when the portal server has been enabled."
EDESC
#
#
#
#
MIB: HH3C-PORT-SECURITY-MIB (file:./hh3c-port-security.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSecureAddressLearned .1.3.6.1.4.1.25506.2.26.1.3.1 "Status Events" Normal
FORMAT This trap is sent when a new station has been learned.  The $*
SDESC
This trap is sent when a new station has been learned.  The
port on which the address was received is the first object,
and the MAC address of the learned station is in the second object.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
EDESC
#
#
#
EVENT hh3cSecureViolation .1.3.6.1.4.1.25506.2.26.1.3.2 "Status Events" Normal
FORMAT This trap is sent whenever a security violation has occurred. $*
SDESC
This trap is sent whenever a security violation has occurred.
The port on which the violation occured is the first object,
and the MAC address of the offending station is in the second object.
ifAdminStatus indicates if the port has been disabled because of the violation.
The implementation may not send violation traps from the same port
at intervals of less than 5 seconds.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: ifAdminStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: testing
     Descr="The desired state of the interface.  The testing(3) state
            indicates that no operational packets can be passed.  When a
            managed system initializes, all interfaces start with
            ifAdminStatus in the down(2) state.  As a result of either
            explicit management action or per configuration information
            retained by the managed system, ifAdminStatus is then
            changed to either the up(1) or testing(3) states (or remains
            in the down(2) state)."
EDESC
#
#
#
EVENT hh3cSecureLoginFailure .1.3.6.1.4.1.25506.2.26.1.3.3 "Status Events" Normal
FORMAT This trap is sent whenever a user network access $*
SDESC
This trap is sent whenever a user network access
authentication has failed.  The port on which the violation occured is
the first object, and the MAC address of the offending station is in
the second object.  The dot1xAuthSessionUserName is the identity supplied
during the user authentication.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax="OCTETSTR"
     Descr="The User-Name representing the identity of the
        Supplicant PAE."
EDESC
#
#
#
EVENT hh3cSecureLogon .1.3.6.1.4.1.25506.2.26.1.3.4 "Status Events" Normal
FORMAT This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation occured is
the first object, and the MAC address of the offending station is in
the second object.
The dot1xAuthSessionUserName is the identity supplied during the user
authentication.  The dot1xAuthSessionAuthenticMethod indicates how the
user was authorised.  The hh3cSecurePortVlanMembershipList object
identifies the VLAN membership assigned to the port on session
activation.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax="OCTETSTR"
     Descr="The User-Name representing the identity of the
        Supplicant PAE."
  4: dot1xAuthSessionAuthenticMethod
     Syntax="INTEGER"
       1: remoteAuthServer
       2: localAuthServer
     Descr="The authentication method used to establish the
        session."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureLogoff .1.3.6.1.4.1.25506.2.26.1.3.5 "Status Events" Normal
FORMAT This trap is sent when a user session is terminated. $*
SDESC
This trap is sent when a user session is terminated.
The port on which the violation occured is the first object,
and the MAC address of the offending station is in the second object.
The dot1xAuthSessionUserName is the identity supplied during the user
authentication.  The dot1xAuthSessionTerminateCause indicates the
reason why the session was terminated.
The hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session termination.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: dot1xAuthSessionUserName
     Syntax="OCTETSTR"
     Descr="The User-Name representing the identity of the
        Supplicant PAE."
  4: dot1xAuthSessionTerminateCause
     Syntax="INTEGER"
       1: supplicantLogoff
       2: portFailure
       3: supplicantRestart
       4: reauthFailed
       5: authControlForceUnauth
       6: portReInit
       7: portAdminDisabled
       999: notTerminatedYet
     Descr="The reason for the session termination."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureRalmLoginFailure .1.3.6.1.4.1.25506.2.26.1.3.6 "Status Events" Normal
FORMAT This trap is sent whenever a user network access $*
SDESC
This trap is sent whenever a user network access
authentication has failed.  The port on which the violation
occured is the first object, and the MAC address of the
offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername
is the identity supplied during the user authentication.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
EDESC
#
#
#
EVENT hh3cSecureRalmLogon .1.3.6.1.4.1.25506.2.26.1.3.7 "Status Events" Normal
FORMAT This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation
occured is the first object, and the MAC address of
the offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername is
the identity supplied during the user authentication. The
hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session activation.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
EVENT hh3cSecureRalmLogoff .1.3.6.1.4.1.25506.2.26.1.3.8 "Status Events" Normal
FORMAT This trap is sent when a new session is started for $*
SDESC
This trap is sent when a new session is started for
an authorised port user.  The port on which the violation
occured is the first object, and the MAC address of the
offending station is in the second object. The authentication mode
indicates how the user was authorised. The hh3cSecureRalmAuthUsername is
the identity supplied during the user authentication. The
hh3cSecurePortVlanMembershipList object identifies the VLAN
membership assigned to the port on session activation.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cSecureAddrMAC
     Syntax="OCTETSTR"
     Descr="The MAC address of a station assigned to this port.
        This is the second index into the hh3cSecureAddressTable."
  3: hh3cSecureRalmAuthMode
     Syntax="INTEGER"
       1: papUsernameAsMacAddress
       2: papUsernameFixed
     Descr="This controls how MAC addresses are authenticated.

        papUsernameAsMacAddress(1)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password both equal to the MAC address being
            authenticated.  This is the default.

        papUsernameFixed(2)
            Authentication uses the RADIUS server by
            sending a PAP request with Username and
            Password coming from the hh3cSecureRalmAuthUsername and
            hh3cSecureRalmAuthPassword MIB objects.  In this mode
            the RADIUS server would normally take into account
            the request's calling-station-id attribute, which is
            the MAC address of the host being authenticated."
  4: hh3cSecureRalmAuthUsername
     Syntax="OCTETSTR"
     Descr="This is the username used for authentication requests
        where hh3cSecureRalmAuthMode is papUsernameFixed.
        Default shall be 'mac'."
  5: hh3cSecurePortVlanMembershipList
     Syntax="OCTETSTR"
     Descr="This is a dummy MIB object referenced by the hh3csecureLogon and
        hh3csecureLogoff traps.  This object contains a comma separated list of
        the VLAN identifiers (0-4095) assigned to a port.  A tagged VLAN has a
        'T' suffix after the VLAN number and an untagged VLAN may have an
        optional 'U' suffix."
EDESC
#
#
#
#
MIB: HH3C-POSA-MIB (file:./hh3c-posa.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPosaServerStatusChange .1.3.6.1.4.1.25506.2.92.3.0.1 "Status Events" Normal
FORMAT This trap is generated when the POS function is started or stopped. $*
SDESC
This trap is generated when the POS function is started or stopped.
Variables:
  1: hh3cPosaServerEnable
     Syntax="INTEGER"
       1: disabled
       2: enabled
     Descr="This attribute controls the starting or stoppage of POS access function.
        The defalut value is disabled(1)."
EDESC
#
#
#
EVENT hh3cPosaAppStateChange .1.3.6.1.4.1.25506.2.92.3.0.2 "Status Events" Normal
FORMAT This trap is generated whenever the availability of application server $*
SDESC
This trap is generated whenever the availability of application server
changes.
Variables:
  1: hh3cPosaAppID
     Syntax="INTEGER32"
     Descr="The identification of a POS application."
  2: hh3cPosaAppStateChangeObject
     Syntax="INTEGER"
       1: available
       2: unavailable
     Descr="This is a dummy MIB object referenced by the hh3cPosaAppStateChange trap.
        This object shows the availability changing of corresponding application
        server."
EDESC
#
#
#
EVENT hh3cPosaTerminalHangUp .1.3.6.1.4.1.25506.2.92.3.0.3 "Status Events" Normal
FORMAT This trap is generated whenever the POS connection through a FCM (Fast $*
SDESC
This trap is generated whenever the POS connection through a FCM (Fast
Connection Modem) interface is hanged up by POS terminal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaFcmLinkNegoFailed .1.3.6.1.4.1.25506.2.92.3.0.4 "Status Events" Normal
FORMAT This trap is generated whenever the link layer negotiation is failed $*
SDESC
This trap is generated whenever the link layer negotiation is failed
between the POS terminal and router through a FCM (Fast Connection
Modem) interface.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaFcmPhyNegoFailed .1.3.6.1.4.1.25506.2.92.3.0.5 "Status Events" Normal
FORMAT This trap is generated whenever the physical layer negotiation is failed $*
SDESC
This trap is generated whenever the physical layer negotiation is failed
between the POS terminal and router through a FCM (Fast Connection
Modem) interface.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
EVENT hh3cPosaTcpConnectionExceed .1.3.6.1.4.1.25506.2.92.3.0.6 "Status Events" Normal
FORMAT This trap is generated whenever the number of connections exceeds the threshold. $*
SDESC
This trap is generated whenever the number of connections exceeds the threshold.
Variables:
  1: hh3cPosaTcpConnectionThreshold
     Syntax="INTEGER32"
     Descr="The threshold of TCP connections."
EDESC
#
#
#
EVENT hh3cPosaFcmConnectionExceed .1.3.6.1.4.1.25506.2.92.3.0.7 "Status Events" Normal
FORMAT This trap is generated whenever the number of connections exceeds the threshold. $*
SDESC
This trap is generated whenever the number of connections exceeds the threshold.
Variables:
  1: hh3cPosaFcmConnectionThreshold
     Syntax="INTEGER32"
     Descr="The threshold of FCM connections."
EDESC
#
#
#
EVENT hh3cPosaTcpTradeExceed .1.3.6.1.4.1.25506.2.92.3.0.8 "Status Events" Normal
FORMAT This trap is generated whenever the number of trades in any TCP connect exceeds $*
SDESC
This trap is generated whenever the number of trades in any TCP connect exceeds
the limit.
Variables:
  1: hh3cPosaTcpTradeLimit
     Syntax="INTEGER32"
     Descr="The limit of concurrent trades in one TCP connection.  The value 0
        means unlimited."
  2: hh3cPosaTerminalID
     Syntax="INTEGER32"
     Descr="The identification of a POS terminal."
EDESC
#
#
#
EVENT hh3cPosaTradeSuccessFalling .1.3.6.1.4.1.25506.2.92.3.0.9 "Status Events" Normal
FORMAT This trap is generated whenever the transaction success rate of bank server is smaller than or equal to the threshold. $*
SDESC
This trap is generated whenever the transaction success rate of bank server is smaller than or equal to the threshold.
Variables:
  1: hh3cPosaNiiStatIndex
     Syntax="OCTETSTR"
     Descr="The index of entity."
  2: hh3cPosaTradeSuccessFallingThreshold
     Syntax="INTEGER32"
     Descr="The threshold of transaction success rate ."
EDESC
#
#
#
EVENT hh3cPosaE1DialFalling .1.3.6.1.4.1.25506.2.92.3.0.10 "Status Events" Normal
FORMAT This trap is generated whenever the dialing success rate of E1-controller is smaller than or equal to the threshold. $*
SDESC
This trap is generated whenever the dialing success rate of E1-controller is smaller than or equal to the threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaE1DialFallingThreshold
     Syntax="INTEGER32"
     Descr="The threshold of dialing success rate ."
EDESC
#
#
#
EVENT hh3cPosaFcmTradeAbnormal .1.3.6.1.4.1.25506.2.92.3.0.11 "Status Events" Normal
FORMAT This trap is generated whenever the dialing link is abnormal. $*
SDESC
This trap is generated whenever the dialing link is abnormal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cPosaCallerStatCallerID
     Syntax="OCTETSTR"
     Descr="The caller number."
EDESC
#
#
#
#
MIB: HH3C-POS-MIB (file:./hh3c-pos.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-POWER-ETH-EXT-MIB (file:./hh3c-power-eth-ext.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpsePDChangeNotification .1.3.6.1.4.1.25506.2.14.6.1 "Status Events" Normal
FORMAT This notification indicates if PD has been inserted or pulled out. $*
SDESC
This notification indicates if PD has been inserted or pulled out.
Variables:
  1: pethPsePortDetectionStatus
     Syntax="INTEGER"
       1: disabled
       2: searching
       3: deliveringPower
       4: fault
       5: test
       6: otherFault
     Descr="Describes the operational status of the port PD detection.
         A value of disabled(1)- indicates that the PSE State diagram
         is in the state DISABLED.
         A value of deliveringPower(3) - indicates that the PSE State
         diagram is in the state POWER_ON for a duration greater than
         tlim max (see IEEE Std 802.3af Table 33-5 tlim).
         A value of fault(4) - indicates that the PSE State diagram is
         in the state TEST_ERROR.
         A value of test(5) - indicates that the PSE State diagram is
         in the state TEST_MODE.
         A value of otherFault(6) - indicates that the PSE State
         diagram is in the state IDLE due to the variable
         error_conditions.
         A value of searching(2)- indicates the PSE State diagram is
         in a state other than those listed above."
EDESC
#
#
#
EVENT hh3cPOEDisconnectNotification .1.3.6.1.4.1.25506.2.14.6.2 "Status Events" Normal
FORMAT This notification indicates the POE power module does not disconnect. $*
SDESC
This notification indicates the POE power module does not disconnect.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleDisconnect
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
             The module does not link.
             The value of this node is one of the following values:
                              normal (1),
                              alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEInputErrorNotification .1.3.6.1.4.1.25506.2.14.6.3 "Status Events" Normal
FORMAT This notification indicates the POE power module input error. $*
SDESC
This notification indicates the POE power module input error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleInputError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 Input error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOutputErrorNotification .1.3.6.1.4.1.25506.2.14.6.4 "Status Events" Normal
FORMAT This notification indicates the POE power module output error. $*
SDESC
This notification indicates the POE power module output error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOutputError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 Output error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOverVoltageNotification .1.3.6.1.4.1.25506.2.14.6.5 "Status Events" Normal
FORMAT This notification indicates the POE power module overruns the $*
SDESC
This notification indicates the POE power module overruns the
voltage limit.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOverVoltage
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The voltage is too high.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEOverTempNotification .1.3.6.1.4.1.25506.2.14.6.6 "Status Events" Normal
FORMAT This notification indicates the POE power module overruns the $*
SDESC
This notification indicates the POE power module overruns the
temperature limit.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleOverTemp
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The temperature is too high.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEFanErrorNotification .1.3.6.1.4.1.25506.2.14.6.7 "Status Events" Normal
FORMAT This notification indicates the POE power module fan error. $*
SDESC
This notification indicates the POE power module fan error.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleFanError
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The fan error.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEModuleShutdownNotification .1.3.6.1.4.1.25506.2.14.6.8 "Status Events" Normal
FORMAT This notification indicates the POE power module is closed. $*
SDESC
This notification indicates the POE power module is closed.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleShutdown
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The module is shutdown.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOECurRestrictedNotification .1.3.6.1.4.1.25506.2.14.6.9 "Status Events" Normal
FORMAT This notification indicates the POE power module current is restricted. $*
SDESC
This notification indicates the POE power module current is restricted.
Variables:
  1: hh3cPOEAlarmModuleInfoIndex
     Syntax="INTEGER32"
     Descr="The index specifies the index of the Hh3cPOEAlarmStateInfoEntry table.
             The range of this node is from 1 to hh3cPOEAlarmStateModuleNum."
  2: hh3cPOEModuleCurRestricted
     Syntax="INTEGER"
       1: normal
       2: alarm
     Descr="The node specifies the alarm state:
                                 The module limit the current.
             The value of this node is one of the following values:
                                 normal (1),
                                 alarm  (2)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchNotification .1.3.6.1.4.1.25506.2.14.6.10 "Status Events" Normal
FORMAT This notification indicates the AC input switch alarm of this POE power. $*
SDESC
This notification indicates the AC input switch alarm of this POE power.
Variables:
  1: hh3cPOEACSwitchStateIndex
     Syntax="INTEGER32"
     Descr="The index of the AC switch state on this POE power.
             The range of this node is from 1 to hh3cPOEACSwitchStateModuleNum."
  2: hh3cPOEACSwitchState
     Syntax="INTEGER"
       1: on
       2: off
       3: highVoltInput
       4: lowVoltInput
     Descr="The AC switch state on this POE power.
             The value of this node will be one of the following values:
                                 on             (1),
                                 off            (2),
                                 highVoltInput  (3),
                                 lowVoltInput   (4)"
EDESC
#
#
#
EVENT hh3cPOEACInCurANotification .1.3.6.1.4.1.25506.2.14.6.11 "Status Events" Normal
FORMAT This notification indicates the AC input current A alarm state of $*
SDESC
This notification indicates the AC input current A alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurAState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current A state in the DC input on this POE power.
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACInCurBNotification .1.3.6.1.4.1.25506.2.14.6.12 "Status Events" Normal
FORMAT This notification indicates the AC input current B alarm state of $*
SDESC
This notification indicates the AC input current B alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurBState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current B state in the DC input on this POE power.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACInCurCNotification .1.3.6.1.4.1.25506.2.14.6.13 "Status Events" Normal
FORMAT This notification indicates the AC input current C alarm state of $*
SDESC
This notification indicates the AC input current C alarm state of
this POE power.
Variables:
  1: hh3cPOEInCurCState
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The current C state in the DC input on this POE power.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolABNotification .1.3.6.1.4.1.25506.2.14.6.14 "Status Events" Normal
FORMAT This notification indicates the AC input voltage AB alarm state of $*
SDESC
This notification indicates the AC input voltage AB alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolAB
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL AB alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolBCNotification .1.3.6.1.4.1.25506.2.14.6.15 "Status Events" Normal
FORMAT This notification indicates the AC input voltage BC alarm state of $*
SDESC
This notification indicates the AC input voltage BC alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolBC
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL BC alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEACSwitchVolCANotification .1.3.6.1.4.1.25506.2.14.6.16 "Status Events" Normal
FORMAT This notification indicates the AC input voltage CA alarm state of $*
SDESC
This notification indicates the AC input voltage CA alarm state of
this POE power.
Variables:
  1: hh3cPOESwitchStateVolExIndex
     Syntax="INTEGER32"
     Descr="The object species the index of the VOL status.
             The range of this node is from 1 to hh3cPOEInCurStateModuleNum."
  2: hh3cPOESwitchStateInVolCA
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: lackPhrase
       5: fuseBroken
       6: switchOff
       7: otherError
     Descr="The object specifies the VOL CA alarm in each VOL status.
             The value of this node will be one of the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 lackPhrase (4),
                                 fuseBroken (5),
                                 switchOff  (6),
                                 otherError (7)."
EDESC
#
#
#
EVENT hh3cPOEDCOutVolNotification .1.3.6.1.4.1.25506.2.14.6.17 "Status Events" Normal
FORMAT This notification indicates the DC output alarm of this POE power. $*
SDESC
This notification indicates the DC output alarm of this POE power.
Variables:
  1: hh3cPOEDCOutStateIndex
     Syntax="INTEGER32"
     Descr="The index of the DC output power state on this POE power.
             The range of this node is from 1 to hh3cPOEDCOutStateModuleNum."
  2: hh3cPOEDCOutDCVolAlarm
     Syntax="INTEGER"
       1: normal
       2: underLimit
       3: aboveLimit
       4: fuseBroken
       5: switchOff
       6: otherError
     Descr="The DC output alarm of the DC output power state on this POE power.
             The value of this node will be the following values:
                                 normal     (1),
                                 underLimit (2),
                                 aboveLimit (3),
                                 fuseBroken (4),
                                 switchOff  (5),
                                 otherError (6)."
EDESC
#
#
#
EVENT hh3cPOEShutdownNotification .1.3.6.1.4.1.25506.2.14.6.18 "Status Events" Normal
FORMAT This notification indicates the whole POE power has been shutdown. $*
SDESC
This notification indicates the whole POE power has been shutdown.
EDESC
#
#
#
EVENT hh3cPsePDDisableNotification .1.3.6.1.4.1.25506.2.14.11.0.1 "Status Events" Normal
FORMAT The PD has been powered off. $*
SDESC
The PD has been powered off.
Variables:
  1: hh3cPsePortGroupIndex
     Syntax="INTEGER32"
     Descr="This variable uniquely identifies the group
            containing the port to which a power Ethernet PSE is
            connected."
  2: hh3cPsePortIndex
     Syntax="INTEGER32"
     Descr="This variable uniquely identifies the power Ethernet PSE
            port within group pethPsePortGroupIndex to which the
            power Ethernet PSE entry is connected."
  3: hh3cPsePortDisableInfo
     Syntax="INTEGER"
       0: unknown
       1: overInrush
       2: lessMPSCurrent
       3: peakPower
       4: overVoltage
       5: underVoltage
       6: overTemperature
       7: shortCircuit
     Descr="
              Reason that caused PSE port power failure.
              The calue of this node is one of the following values:
              unknown(0),
              overInrush(1),
              lessMPSCurrent(2),
              peakPower(3),
              overVoltage(4),
              underVoltage(5),
              overTemperature(6),
              shortCircuit(7).
              "
EDESC
#
#
#
#
MIB: HH3C-REDUNDANCY-POWER-MIB (file:./hh3c-power.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPP-MIB (file:./hh3c-ppp.mib) converted on Sat Apr  2 10:28:06 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPPOE-SERVER-MIB (file:./hh3c-pppoe-server.mib) converted on Sat Apr  2 10:28:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PPP-OVER-SONET-MIB (file:./hh3c-ppp-over-sonet.mib) converted on Sat Apr  2 10:28:07 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cPosLOSAlarm .1.3.6.1.4.1.25506.2.19.2.0.1 "Status Events" Normal
FORMAT Alarm indicates loss of signal $*
SDESC
Alarm indicates loss of signal
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLOFAlarm .1.3.6.1.4.1.25506.2.19.2.0.2 "Status Events" Normal
FORMAT Alarm indicates loss of frame $*
SDESC
Alarm indicates loss of frame
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosOOFAlarm .1.3.6.1.4.1.25506.2.19.2.0.3 "Status Events" Normal
FORMAT Alarm indicates out of frame $*
SDESC
Alarm indicates out of frame
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLAISAlarm .1.3.6.1.4.1.25506.2.19.2.0.4 "Status Events" Normal
FORMAT Alarm when LAIS(Line  Alarm  Indication  Signal) arrives $*
SDESC
Alarm when LAIS(Line  Alarm  Indication  Signal) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLRDIAlarm .1.3.6.1.4.1.25506.2.19.2.0.5 "Status Events" Normal
FORMAT Alarm when LRDI(Line  Remote  Defect  Indication) arrives $*
SDESC
Alarm when LRDI(Line  Remote  Defect  Indication) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPRDIAlarm .1.3.6.1.4.1.25506.2.19.2.0.6 "Status Events" Normal
FORMAT Alarm when PRDI(Path  Remote  Defect  Indication) arrives $*
SDESC
Alarm when PRDI(Path  Remote  Defect  Indication) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPAISAlarm .1.3.6.1.4.1.25506.2.19.2.0.7 "Status Events" Normal
FORMAT Alarm when PAIS(Path  Alarm  Indication  Signal) arrives $*
SDESC
Alarm when PAIS(Path  Alarm  Indication  Signal) arrives
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLOPAlarm .1.3.6.1.4.1.25506.2.19.2.0.8 "Status Events" Normal
FORMAT Alarm indicates loss of pointer $*
SDESC
Alarm indicates loss of pointer
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosSTIMAlarm .1.3.6.1.4.1.25506.2.19.2.0.9 "Status Events" Normal
FORMAT Alarm indicates inconsistency between sent and received J0 bytes. $*
SDESC
Alarm indicates inconsistency between sent and received J0 bytes.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPTIMAlarm .1.3.6.1.4.1.25506.2.19.2.0.10 "Status Events" Normal
FORMAT Alarm indicates inconsistency between sent and received J1 bytes. $*
SDESC
Alarm indicates inconsistency between sent and received J1 bytes.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosPSLMAlarm .1.3.6.1.4.1.25506.2.19.2.0.11 "Status Events" Normal
FORMAT Alarm indicates a mismatched C2 byte. $*
SDESC
Alarm indicates a mismatched C2 byte.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLSDAlarm .1.3.6.1.4.1.25506.2.19.2.0.12 "Status Events" Normal
FORMAT Alarm indicates that the B2 bit-error rate exceeds SD threshold. $*
SDESC
Alarm indicates that the B2 bit-error rate exceeds SD threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosLSFAlarm .1.3.6.1.4.1.25506.2.19.2.0.13 "Status Events" Normal
FORMAT Alarm indicates that the B2 bit-error rate exceeds SF threshold. $*
SDESC
Alarm indicates that the B2 bit-error rate exceeds SF threshold.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosNormalAlarm .1.3.6.1.4.1.25506.2.19.2.0.14 "Status Events" Normal
FORMAT Alarm indicates that the Pos interface state returns normal. $*
SDESC
Alarm indicates that the Pos interface state returns normal.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
EDESC
#
#
#
EVENT hh3cPosB1TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.15 "Status Events" Normal
FORMAT Threshold crossing alarms for B1. $*
SDESC
Threshold crossing alarms for B1.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cPosB2TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.16 "Status Events" Normal
FORMAT Threshold crossing alarms for B2. $*
SDESC
Threshold crossing alarms for B2.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cPosB3TCAlarm .1.3.6.1.4.1.25506.2.19.2.0.17 "Status Events" Normal
FORMAT Threshold crossing alarms for B3. $*
SDESC
Threshold crossing alarms for B3.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-PRODUCT-ID-MIB (file:./hh3c-product-id.mib) converted on Sat Apr  2 10:28:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PROTOCOL-VLAN-MIB (file:./hh3c-protocol-vlan.mib) converted on Sat Apr  2 10:28:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PROT-PRIORITY-MIB (file:./hh3c-prot-priority.mib) converted on Sat Apr  2 10:28:07 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PU-MAN-MIB (file:./hh3c-pu-man.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-PVST-MIB (file:./hh3c-pvst.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QINQ-MIB (file:./hh3c-qinq.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QINQV2-MIB (file:./hh3c-qinqv2.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QOS-CAPABILITY-MIB (file:./hh3c-qos-capability.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-QOS-PROFILE-MIB (file:./hh3c-qos-profile.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RADIUS-MIB (file:./hh3c-radius.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRadiusAuthServerDownTrap .1.3.6.1.4.1.25506.2.13.3.1 "Status Events" Normal
FORMAT This trap is generated when the authentication RADIUS server $*
SDESC
This trap is generated when the authentication RADIUS server
does not respond to the client's requests for a period of time.
This node is replaced by hh3cRadiusAuthenticationServerDownTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccServerDownTrap .1.3.6.1.4.1.25506.2.13.3.2 "Status Events" Normal
FORMAT This trap is generated when the accounting RADIUS server $*
SDESC
This trap is generated when the accounting RADIUS server
does not respond to the client's requests for a period of time.
This node is replaced by hh3cRadiusAccountingServerDownTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.1 "Status Events" Normal
FORMAT This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS authentication server changes from unreachable to reachable.
This node is replaced by hh3cRadiusAuthenticationServerUpTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.2 "Status Events" Normal
FORMAT This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS accounting server changes from unreachable to unreachable.
This node is replaced by hh3cRadiusAccountingServerUpTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthErrTrap .1.3.6.1.4.1.25506.2.13.3.0.3 "Status Events" Normal
FORMAT This trap is generated when the device finds that the percent of $*
SDESC
This trap is generated when the device finds that the percent of
unsuccessful authentication exceeds a threshold, and the threshold
is the value of node hh3cRadiusAuthErrThreshold.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
EDESC
#
#
#
EVENT hh3cRadiusAuthenticationServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.4 "Status Events" Normal
FORMAT This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS authentication server changes from unreachable to reachable.
The node replaces hh3cRadiusAuthServerUpTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccountingServerUpTrap .1.3.6.1.4.1.25506.2.13.3.0.5 "Status Events" Normal
FORMAT This trap is generated when the device finds that the state of the $*
SDESC
This trap is generated when the device finds that the state of the
RADIUS accounting server changes from unreachable to reachable.
The node replaces hh3cRadiusAccServerUpTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAuthenticationServerDownTrap .1.3.6.1.4.1.25506.2.13.3.0.6 "Status Events" Normal
FORMAT This trap is generated when the authentication RADIUS server $*
SDESC
This trap is generated when the authentication RADIUS server
does not respond to the client's requests for a period of time.
The node replaces hh3cRadiusAuthServerDownTrap.
Variables:
  1: radiusAuthServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS authentication server
             referred to in this table entry."
  2: radiusAuthClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cRadiusAccountingServerDownTrap .1.3.6.1.4.1.25506.2.13.3.0.7 "Status Events" Normal
FORMAT This trap is generated when the accounting RADIUS server $*
SDESC
This trap is generated when the accounting RADIUS server
does not respond to the client's requests for a period of time.
The node replaces hh3cRadiusAccServerDownTrap.
Variables:
  1: radiusAccServerAddress
     Syntax="IPADDR"
     Descr="The IP address of the RADIUS accounting server
             referred to in this table entry."
  2: radiusAccClientServerPortNumber
     Syntax="INTEGER32"
     Descr="The UDP port the client is using to send requests to
             this server."
  3: hh3cRadiusServerFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
#
MIB: HH3C-RAID-MIB (file:./hh3c-raid.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RBAC-MIB (file:./hh3c-rbac.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RBM-MIB (file:./hh3c-rbm.mib) converted on Sat Apr  2 10:28:08 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RCP-MIB (file:./hh3c-rcp.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RCR-MIB (file:./hh3c-rcr.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RDDC-MIB (file:./hh3c-rddc.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRddcSwitchoverTrap .1.3.6.1.4.1.25506.2.151.0.1 "Status Events" Normal
FORMAT Notification to signal switchover/failover. $*
SDESC
Notification to signal switchover/failover.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: hh3cRddcNodeInfo
     Syntax="OCTETSTR"
     Descr="This object contains node identification information
        where the switchover occurred."
  4: hh3cRddcSwitchReason
     Syntax="OCTETSTR"
     Descr="This object contains the cause for switchover."
EDESC
#
#
#
EVENT hh3cRddcFailIfRecoverTrap .1.3.6.1.4.1.25506.2.151.0.2 "Status Events" Normal
FORMAT Notification to signal the failed interface recovered. $*
SDESC
Notification to signal the failed interface recovered.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  4: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cRddcFailIfGenerateTrap .1.3.6.1.4.1.25506.2.151.0.3 "Status Events" Normal
FORMAT Notification to signal the failed interface generated. $*
SDESC
Notification to signal the failed interface generated.
Variables:
  1: hh3cRddcGroupIdx
     Syntax="UNSIGNED32"
     Descr="Unique identifier of this redundancy group.  0 is an invalid value."
  2: hh3cRddcGroupName
     Syntax="OCTETSTR"
     Descr="Unique identifier of this redundancy group."
  3: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  4: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-RES-MON-MIB (file:./hh3c-res-mon.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RMON-EXT2-MIB (file:./hh3c-rmon-ext2.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRmonExtRisingAlarm .1.3.6.1.4.1.25506.2.125.0.1 "Status Events" Normal
FORMAT The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cRmonExtAlarmIndex
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the
        alarm table.  Each such entry defines a
        diagnostic sample at a particular interval
        for an object on the device."
  2: hh3cRmonExtAlarmSympol
     Syntax="OCTETSTR"
     Descr="A comment describing this alarm entry.
        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  3: hh3cRmonExtAlarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
        calculating the value to be compared against the
        thresholds.  If the value of this object is
        absoluteValue, the value of the selected variable
        will be compared directly with the thresholds at the
        end of the sampling interval.  If the value of this
        object is deltaValue, the value of the selected
        variable at the last sample will be subtracted from
        the current value, and the difference compared with
        the thresholds.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  4: hh3cRmonExtAlarmValue
     Syntax="INTEGER32"
     Descr="The value of the statistic during the last sampling
        period.  For example, if the sample type is deltaValue,
        this value will be the difference between the samples
        at the beginning and end of the period.  If the sample
        type is absoluteValue, this value will be the sampled
        value at the end of the period.
        This is the value that is compared with the rising and
        falling thresholds.

        The value during the current sampling period is not
        made available until the period is completed and will
        remain available until the next period completes."
  5: hh3cRmonExtAlarmRisingThreshold
     Syntax="INTEGER32"
     Descr="A threshold for the sampled statistic.  When the current
        sampled value is greater than or equal to this threshold,
        and the value at the last sampling interval was less than
        this threshold, a single event will be generated.
        A single event will also be generated if the first
        sample after this entry becomes valid is greater than or
        equal to this threshold and the associated
        alarmStartupAlarm is equal to risingAlarm or
        risingOrFallingAlarm.

        After a rising event is generated, another such event
        will not be generated until the sampled value
        falls below this threshold and reaches the
        alarmFallingThreshold.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
EDESC
#
#
#
EVENT hh3cRmonExtFallingAlarm .1.3.6.1.4.1.25506.2.125.0.2 "Status Events" Normal
FORMAT The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cRmonExtAlarmIndex
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the
        alarm table.  Each such entry defines a
        diagnostic sample at a particular interval
        for an object on the device."
  2: hh3cRmonExtAlarmSympol
     Syntax="OCTETSTR"
     Descr="A comment describing this alarm entry.
        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  3: hh3cRmonExtAlarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
        calculating the value to be compared against the
        thresholds.  If the value of this object is
        absoluteValue, the value of the selected variable
        will be compared directly with the thresholds at the
        end of the sampling interval.  If the value of this
        object is deltaValue, the value of the selected
        variable at the last sample will be subtracted from
        the current value, and the difference compared with
        the thresholds.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
  4: hh3cRmonExtAlarmValue
     Syntax="INTEGER32"
     Descr="The value of the statistic during the last sampling
        period.  For example, if the sample type is deltaValue,
        this value will be the difference between the samples
        at the beginning and end of the period.  If the sample
        type is absoluteValue, this value will be the sampled
        value at the end of the period.
        This is the value that is compared with the rising and
        falling thresholds.

        The value during the current sampling period is not
        made available until the period is completed and will
        remain available until the next period completes."
  5: hh3cRmonExtAlarmFallingThreshold
     Syntax="INTEGER32"
     Descr="A threshold for the sampled statistic.  When the current
        sampled value is less than or equal to this threshold,
        and the value at the last sampling interval was greater than
        this threshold, a single event will be generated.
        A single event will also be generated if the first
        sample after this entry becomes valid is less than or
        equal to this threshold and the associated
        alarmStartupAlarm is equal to fallingAlarm or
        risingOrFallingAlarm.

        After a falling event is generated, another such event
        will not be generated until the sampled value
        rises above this threshold and reaches the
        alarmRisingThreshold.

        This object may not be modified if the associated
        alarmStatus object is equal to valid."
EDESC
#
#
#
#
MIB: HH3C-RMON-EXT-MIB (file:./hh3c-rmon-ext.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpririsingAlarm .1.3.6.1.4.1.25506.8.4.0.1 "Status Events" Normal
FORMAT The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its rising threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cprialarmIndex
     Syntax="INTEGER"
     Descr="An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
  2: hh3cprialarmSympol
     Syntax="OCTETSTR"
  3: hh3cprialarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
  4: hh3cprialarmValue
     Syntax="INTEGER"
     Descr="The value of the statistic during the last sampling
                  period.  For example, if the sample type is deltaValue,
                  this value will be the difference between the samples
                  at the beginning and end of the period.  If the sample
                  type is absoluteValue, this value will be the sampled
                  value at the end of the period.
                  This is the value that is compared with the rising and
                  falling thresholds.

                  The value during the current sampling period is not
                  made available until the period is completed and will
                  remain available until the next period completes."
  5: hh3cprialarmRisingThreshold
     Syntax="INTEGER"
     Descr="A threshold for the sampled statistic.  When the current
                  sampled value is greater than or equal to this threshold,
                  and the value at the last sampling interval was less than
                  this threshold, a single event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is greater than or
                  equal to this threshold and the associated
                  alarmStartupAlarm is equal to risingAlarm(1) or
                  risingOrFallingAlarm(3).

                  After a rising event is generated, another such event
                  will not be generated until the sampled value
                  falls below this threshold and reaches the
                  alarmFallingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
EDESC
#
#
#
EVENT hh3cprifallingAlarm .1.3.6.1.4.1.25506.8.4.0.2 "Status Events" Normal
FORMAT The SNMP trap that is generated when an alarm $*
SDESC
The SNMP trap that is generated when an alarm
entry crosses its falling threshold and generates
an event that is configured for sending SNMP
traps.
Variables:
  1: hh3cprialarmIndex
     Syntax="INTEGER"
     Descr="An index that uniquely identifies an entry in the
                  alarm table.  Each such entry defines a
                  diagnostic sample at a particular interval
                  for an object on the device."
  2: hh3cprialarmSympol
     Syntax="OCTETSTR"
  3: hh3cprialarmSampleType
     Syntax="INTEGER"
       1: absoluteValue
       2: deltaValue
       3: speedValue
     Descr="The method of sampling the selected variable and
                  calculating the value to be compared against the
                  thresholds.  If the value of this object is
                  absoluteValue(1), the value of the selected variable
                  will be compared directly with the thresholds at the
                  end of the sampling interval.  If the value of this
                  object is deltaValue(2), the value of the selected
                  variable at the last sample will be subtracted from
                  the current value, and the difference compared with
                  the thresholds.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
  4: hh3cprialarmValue
     Syntax="INTEGER"
     Descr="The value of the statistic during the last sampling
                  period.  For example, if the sample type is deltaValue,
                  this value will be the difference between the samples
                  at the beginning and end of the period.  If the sample
                  type is absoluteValue, this value will be the sampled
                  value at the end of the period.
                  This is the value that is compared with the rising and
                  falling thresholds.

                  The value during the current sampling period is not
                  made available until the period is completed and will
                  remain available until the next period completes."
  5: hh3cprialarmFallingThreshold
     Syntax="INTEGER"
     Descr="A threshold for the sampled statistic.  When the current
                  sampled value is less than or equal to this threshold,
                  and the value at the last sampling interval was greater than
                  this threshold, a single event will be generated.
                  A single event will also be generated if the first
                  sample after this entry becomes valid is less than or
                  equal to this threshold and the associated
                  alarmStartupAlarm is equal to fallingAlarm(2) or
                  risingOrFallingAlarm(3).

                  After a falling event is generated, another such event
                  will not be generated until the sampled value
                  rises above this threshold and reaches the
                  alarmRisingThreshold.

                  This object may not be modified if the associated
                  alarmStatus object is equal to valid(1)."
EDESC
#
#
#
#
MIB: HH3C-RPR-MIB (file:./hh3c-rpr.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cRprTopologyOpenRing .1.3.6.1.4.1.25506.2.60.1.10.1 "Status Events" Normal
FORMAT The topology openRing trap indicates that the RPR ring is opened. $*
SDESC
The topology openRing trap indicates that the RPR ring is opened.
REFERENCE
IEEE 802.17 Subclause 3.2.77 open ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyCloseRing .1.3.6.1.4.1.25506.2.60.1.10.2 "Status Events" Normal
FORMAT The topology openRing trap indicates that the RPR ring is closed. $*
SDESC
The topology openRing trap indicates that the RPR ring is closed.
REFERENCE
IEEE 802.17 Subclause 3.2.77 close ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyInconsistent .1.3.6.1.4.1.25506.2.60.1.10.3 "Status Events" Normal
FORMAT The topology inconsistent trap indicates that the topology of $*
SDESC
The topology inconsistent trap indicates that the topology of
RPR is inconsistent.
REFERENCE
IEEE 802.17 Subclause 11.6.6.1 topology consistency.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprTopologyInstability .1.3.6.1.4.1.25506.2.60.1.10.4 "Status Events" Normal
FORMAT The topology instability trap indicates that the topology of $*
SDESC
The topology instability trap indicates that the topology of
RPR is instability.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprDuplicateMacAddress .1.3.6.1.4.1.25506.2.60.1.10.5 "Status Events" Normal
FORMAT The duplicate MAC address trap indicates that the mac address $*
SDESC
The duplicate MAC address trap indicates that the mac address
of the station on the ring is dulplicate. That means there is the
same MAC address between two stations on the ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapTopoMacAddress
     Syntax="OCTETSTR"
     Descr="The MAC address of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprDulplicateIPAddress .1.3.6.1.4.1.25506.2.60.1.10.6 "Status Events" Normal
FORMAT The dulplicate IP address trap indicates that the IP address of $*
SDESC
The dulplicate IP address trap indicates that the IP address of
the station on the ring is dulplicate. That means there is the same
IP address between two stations on the ring.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapIpAddress
     Syntax="OCTETSTR"
     Descr="The IP address of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprIncompleteLRTT .1.3.6.1.4.1.25506.2.60.1.10.7 "Status Events" Normal
FORMAT The incomplete LRTT trap indicates that LRTT is not completed. $*
SDESC
The incomplete LRTT trap indicates that LRTT is not completed.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprProtecConfigInconsistent .1.3.6.1.4.1.25506.2.60.1.10.8 "Status Events" Normal
FORMAT The protection configuration inconsistent trap indicates that $*
SDESC
The protection configuration inconsistent trap indicates that
the configuration of protection mode on the ring is inconsistent.
That is one station is configured steer mode while the other is
configured wrap mode.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprJumboConfigInconsistent .1.3.6.1.4.1.25506.2.60.1.10.9 "Status Events" Normal
FORMAT The jumbo configuration inconsistent trap indicates that the $*
SDESC
The jumbo configuration inconsistent trap indicates that the
configuration of jumbo mode on the ring is inconsistent.
That is one station supports jumbo frame while the other
doesn't support jumbo frame.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprExceedMaxReservRate .1.3.6.1.4.1.25506.2.60.1.10.10 "Status Events" Normal
FORMAT The exceeded max reserved rate trap indicates that the rate $*
SDESC
The exceeded max reserved rate trap indicates that the rate
on the ringlet exceeded the max reserved rate. The operator can
configure reserved rate for every station, but the sum of all
stations' reserved rate of each RPR ringlet can't exceed maximum.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprExceedMaxStationNum .1.3.6.1.4.1.25506.2.60.1.10.11 "Status Events" Normal
FORMAT The exceeded max station number trap indicates that the number $*
SDESC
The exceeded max station number trap indicates that the number
of the stations on the ring exceeded the max station number.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprMiscabling .1.3.6.1.4.1.25506.2.60.1.10.12 "Status Events" Normal
FORMAT The miscabling trap indicates that the miscabling event occurred. $*
SDESC
The miscabling trap indicates that the miscabling event occurred.
REFERENCE
IEEE 802.17 V3.0 Subclause 11.9.2.1 miscabling defect.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
EDESC
#
#
#
EVENT hh3cRprBackPressure .1.3.6.1.4.1.25506.2.60.1.10.13 "Status Events" Normal
FORMAT The back pressure trap indicates that the backpressure is generated $*
SDESC
The back pressure trap indicates that the backpressure is generated
on the ringlet. That is the data flow on the ringlet exceeded
the range of rate-limit configured.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
  3: hh3cRprPriority2ClassMap
     Syntax="INTEGER"
       1: classC
       2: classB
       3: classA1
       4: classA0
     Descr="The RPR service class."
EDESC
#
#
#
EVENT hh3cRprBackPressureOver .1.3.6.1.4.1.25506.2.60.1.10.14 "Status Events" Normal
FORMAT The back pressure over trap indicates that the backpressure is $*
SDESC
The back pressure over trap indicates that the backpressure is
disappeared on the ringlet.
Variables:
  1: hh3cRprTrapIfIndex
     Syntax="INTEGER32"
     Descr="The ifIndex of RPR interface. It is only used for trap to bind."
  2: hh3cRprTrapRinglet
     Syntax="INTEGER"
       1: ringlet0
       2: ringlet1
     Descr="The span of RPR station. It is only used for trap to bind."
  3: hh3cRprPriority2ClassMap
     Syntax="INTEGER"
       1: classC
       2: classB
       3: classA1
       4: classA0
     Descr="The RPR service class."
EDESC
#
#
#
#
MIB: HH3C-RRPP-MIB (file:./hh3c-rrpp.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RS485-MIB (file:./hh3c-rs485.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-RSA-MIB (file:./hh3c-rsa.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SAN-AGG-MIB (file:./hh3c-san-agg.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSanAggGroupSpeedChange .1.3.6.1.4.1.25506.2.127.2.4.0.1 "Status Events" Normal
FORMAT This event will be triggered whenever a SAN $*
SDESC
This event will be triggered whenever a SAN
aggregation group changes its speed.
Variables:
  1: hh3cSanAggGroupNumber
     Syntax="INTEGER32"
     Descr="The serial number of the current SAN aggregation group."
  2: hh3cSanAggGroupPreviousSpeed
     Syntax="INTEGER32"
     Descr="The previous speed of the SAN aggregation group."
  3: hh3cSanAggGroupCurrentSpeed
     Syntax="INTEGER32"
     Descr="The current speed of the SAN aggregation group."
EDESC
#
#
#
EVENT hh3cSanAggMemberInactive .1.3.6.1.4.1.25506.2.127.2.4.0.2 "Status Events" Normal
FORMAT This event will be triggered whenever any member $*
SDESC
This event will be triggered whenever any member
in a SAN aggregation group is made inactive.
Variables:
  1: hh3cSanAggGroupNumber
     Syntax="INTEGER32"
     Descr="The serial number of the current SAN aggregation group."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cSanAggMemberActive .1.3.6.1.4.1.25506.2.127.2.4.0.3 "Status Events" Normal
FORMAT This event will be triggered whenever any member $*
SDESC
This event will be triggered whenever any member
in a SAN aggregation group is made active.
Variables:
  1: hh3cSanAggGroupNumber
     Syntax="INTEGER32"
     Descr="The serial number of the current SAN aggregation group."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
#
MIB: HH3C-SAVA-MIB (file:./hh3c-sava.mib) converted on Sat Apr  2 10:28:10 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SECHIGH-MIB (file:./hh3c-sechigh.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SECP-MIB (file:./hh3c-secp.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SESSION-MIB (file:./hh3c-session.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SLBG-MIB (file:./hh3c-slbg.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SMLK-MIB (file:./hh3c-smlk.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSmlkGroupLinkActive .1.3.6.1.4.1.25506.2.147.2.0.1 "Status Events" Normal
FORMAT A trap message is generated when the status of a port $*
SDESC
A trap message is generated when the status of a port
in a smart link group changes to active.
Variables:
  1: hh3cSmlkGroupID
     Syntax="INTEGER32"
     Descr="An index that uniquely identifies an entry in the smart link
        group table."
  2: hh3cSmlkPortIfIndex
     Syntax="INTEGER32"
     Descr="IfIndex of a port in a smart link group."
EDESC
#
#
#
#
MIB: HH3C-SNA-DLSW-EXT-MIB (file:./hh3c-sna-dlsw-ext.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SNA-DLSW-MIB (file:./hh3c-sna-dlsw.mib) converted on Sat Apr  2 10:28:11 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SNMP-EXT-MIB (file:./hh3c-snmp-ext.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SPB-MIB (file:./hh3c-spb.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSpbSPSourceConflictTrap .1.3.6.1.4.1.25506.2.128.1.3.0.1 "Status Events" Normal
FORMAT This notification will be generated when the SPSourceID is conflict $*
SDESC
This notification will be generated when the SPSourceID is conflict
with another bridge.
Variables:
  1: hh3cSpbConflictSysID
     Syntax="OCTETSTR"
     Descr="The bridge's SPSourceID is conflict with this bridge."
  2: hh3cSpbConflictSPSourceID
     Syntax="OCTETSTR"
     Descr="The Shortest Path Source Identifier which is conflict."
EDESC
#
#
#
EVENT hh3cSpbBMacConflictTrap .1.3.6.1.4.1.25506.2.128.1.3.0.2 "Status Events" Normal
FORMAT This notification will be generated when the BMAC is conflict $*
SDESC
This notification will be generated when the BMAC is conflict
with another bridge.
Variables:
  1: hh3cSpbConflictSysID
     Syntax="OCTETSTR"
     Descr="The bridge's SPSourceID is conflict with this bridge."
  2: hh3cSpbConflictBMac
     Syntax="OCTETSTR"
     Descr="The BMAC which is conflict."
EDESC
#
#
#
#
MIB: HH3C-LswARP-MIB (file:./hh3c-splat-arp.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswDEVM-MIB (file:./hh3c-splat-devm.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswDHCP-MIB (file:./hh3c-splat-dhcp.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswIGSP-MIB (file:./hh3c-splat-igsp.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswINF-MIB (file:./hh3c-splat-inf.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswMAM-MIB (file:./hh3c-splat-mam.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswMix-MIB (file:./hh3c-splat-mix.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSlaveSwitchOver .1.3.6.1.4.1.25506.8.35.17.10.1 "Status Events" Normal
FORMAT An hh3cSlaveSwitchOver trap signifies that the action of $*
SDESC
An hh3cSlaveSwitchOver trap signifies that the action of
standby mpu switching to master has completed. 
EDESC
#
#
#
#
MIB: HH3C-LswMSTP-MIB (file:./hh3c-splat-mstp.mib) converted on Sat Apr  2 10:28:12 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswQos-MIB (file:./hh3c-splat-qos.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswRSTP-MIB (file:./hh3c-splat-rstp.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswSMON-MIB (file:./hh3c-splat-smonext.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-LswTRAP-MIB (file:./hh3c-splat-trap.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cpowerfailure .1.3.6.1.4.1.25506.8.35.12.1.1 "Status Events" Normal
FORMAT Power supply failure $*
SDESC
Power supply failure
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
  2: hh3cDevMFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cPowerNormal .1.3.6.1.4.1.25506.8.35.12.1.2 "Status Events" Normal
FORMAT Power supply normal $*
SDESC
Power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
  2: hh3cDevMFirstTrapTime
     Syntax="TICKS"
     Descr="Represents the first trap time."
EDESC
#
#
#
EVENT hh3cMasterPowerNormal .1.3.6.1.4.1.25506.8.35.12.1.3 "Status Events" Normal
FORMAT Master power supply normal $*
SDESC
Master power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cSlavePowerNormal .1.3.6.1.4.1.25506.8.35.12.1.4 "Status Events" Normal
FORMAT Slave power supply normal $*
SDESC
Slave power supply normal
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cPowerRemoved .1.3.6.1.4.1.25506.8.35.12.1.5 "Status Events" Normal
FORMAT Power removed $*
SDESC
Power removed
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cfanfailure .1.3.6.1.4.1.25506.8.35.12.1.6 "Status Events" Normal
FORMAT Fan failure $*
SDESC
Fan failure
Variables:
  1: hh3cDevMFanNum
     Syntax="INTEGER32"
     Descr=" Fan number "
EDESC
#
#
#
EVENT hh3cFanNormal .1.3.6.1.4.1.25506.8.35.12.1.7 "Status Events" Normal
FORMAT Fan normal $*
SDESC
Fan normal
Variables:
  1: hh3cDevMFanNum
     Syntax="INTEGER32"
     Descr=" Fan number "
EDESC
#
#
#
EVENT hh3cBoardRemoved .1.3.6.1.4.1.25506.8.35.12.1.8 "Status Events" Normal
FORMAT Board removed $*
SDESC
Board removed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardInserted .1.3.6.1.4.1.25506.8.35.12.1.9 "Status Events" Normal
FORMAT Board inserted $*
SDESC
Board inserted
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardFailure .1.3.6.1.4.1.25506.8.35.12.1.10 "Status Events" Normal
FORMAT Board failed $*
SDESC
Board failed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardNormal .1.3.6.1.4.1.25506.8.35.12.1.11 "Status Events" Normal
FORMAT Board normal $*
SDESC
Board normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cSubcardRemove .1.3.6.1.4.1.25506.8.35.12.1.12 "Status Events" Normal
FORMAT Sub card removed $*
SDESC
Sub card removed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswSubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
EDESC
#
#
#
EVENT hh3cSubcardInsert .1.3.6.1.4.1.25506.8.35.12.1.13 "Status Events" Normal
FORMAT Sub card inserted $*
SDESC
Sub card inserted
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswSubslotIndex
     Syntax="INTEGER32"
     Descr="Subslot index."
EDESC
#
#
#
EVENT hh3cBoardTemperatureLower .1.3.6.1.4.1.25506.8.35.12.1.14 "Status Events" Normal
FORMAT Board temperature low $*
SDESC
Board temperature low
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardTemperatureFromLowerToNormal .1.3.6.1.4.1.25506.8.35.12.1.15 "Status Events" Normal
FORMAT Board temperature form lower to normal $*
SDESC
Board temperature form lower to normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardTemperatureHigher .1.3.6.1.4.1.25506.8.35.12.1.16 "Status Events" Normal
FORMAT Board temperature high $*
SDESC
Board temperature high
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBoardTemperatureFormHigherToNormal .1.3.6.1.4.1.25506.8.35.12.1.17 "Status Events" Normal
FORMAT Board temperature from higher to normal $*
SDESC
Board temperature from higher to normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cRequestLoading .1.3.6.1.4.1.25506.8.35.12.1.18 "Status Events" Normal
FORMAT Board request load $*
SDESC
Board request load
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cLoadFailure .1.3.6.1.4.1.25506.8.35.12.1.19 "Status Events" Normal
FORMAT Board load failure $*
SDESC
Board load failure
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cLoadFinished .1.3.6.1.4.1.25506.8.35.12.1.20 "Status Events" Normal
FORMAT Board load finished $*
SDESC
Board load finished
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cBackBoardModeSetFuilure .1.3.6.1.4.1.25506.8.35.12.1.21 "Status Events" Normal
FORMAT Back board mode set failure $*
SDESC
Back board mode set failure
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
EDESC
#
#
#
EVENT hh3cBackBoardModeSetOK .1.3.6.1.4.1.25506.8.35.12.1.22 "Status Events" Normal
FORMAT Back board mode set OK $*
SDESC
Back board mode set OK
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
EDESC
#
#
#
EVENT hh3cPowerInserted .1.3.6.1.4.1.25506.8.35.12.1.23 "Status Events" Normal
FORMAT Power inserted $*
SDESC
Power inserted
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cBootImageUpdated .1.3.6.1.4.1.25506.8.35.12.1.24 "Status Events" Normal
FORMAT This trap node indicates that the boot image of specified board $*
SDESC
This trap node indicates that the boot image of specified board
is updated.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
EDESC
#
#
#
EVENT hh3cCpuRemoved .1.3.6.1.4.1.25506.8.35.12.1.25 "Status Events" Normal
FORMAT Node removed $*
SDESC
Node removed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
EDESC
#
#
#
EVENT hh3cCpuFailure .1.3.6.1.4.1.25506.8.35.12.1.26 "Status Events" Normal
FORMAT Node failed $*
SDESC
Node failed
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
EDESC
#
#
#
EVENT hh3cCpuNormal .1.3.6.1.4.1.25506.8.35.12.1.27 "Status Events" Normal
FORMAT Node normal $*
SDESC
Node normal
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
EDESC
#
#
#
EVENT hh3cPowerIncompatible .1.3.6.1.4.1.25506.8.35.12.1.28 "Status Events" Normal
FORMAT Power module is incompatible with the device $*
SDESC
Power module is incompatible with the device
Variables:
  1: hh3cDevMPowerNum
     Syntax="INTEGER32"
     Descr="Power number "
EDESC
#
#
#
EVENT hh3cCpuUsageSevereNotification .1.3.6.1.4.1.25506.8.35.12.1.29 "Status Events" Normal
FORMAT The trap indicates that the CPU usage increased to or above $*
SDESC
The trap indicates that the CPU usage increased to or above
the hh3cLswCpuUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageSevereRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.30 "Status Events" Normal
FORMAT $*
SDESC

When the product does not support hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageSevereThreshold.
When the product supports hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageMinorThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.1.31 "Status Events" Normal
FORMAT The trap indicates that the CPU usage increased to or above $*
SDESC
The trap indicates that the CPU usage increased to or above
the hh3cLswCpuUsageMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cCpuUsageMinorRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.32 "Status Events" Normal
FORMAT $*
SDESC

When the product dose not support hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageMinorThreshold.
When the product supports hh3cLswCpuUsageRecoverThreshold,
the trap indicates that the CPU usage decreased to or below
the hh3cLswCpuUsageRecoverThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuRatio
     Syntax="UNSIGNED32"
     Descr="CPU usage in accuracy of 1%"
  5: hh3cLswCpuUsageMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        The hh3cLswCpuUsageMinorThreshold must be less than or equal to
        the hh3cLswCpuUsageSevereThreshold.
        "
  6: hh3cLswCpuUsageSevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe threshold for CPU usage on the node.

        When the CPU usage exceeds this threshold, a notification will be sent.
        "
  7: hh3cLswCpuUsageRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The recovery threshold for CPU usage.

        When the CPU usage falls down to this threshold, a notification is sent.
        The hh3cLswCpuUsageRecoverThreshold must be less than or equal to
        the hh3cLswCpuUsageMinorThreshold.
        "
  8: hh3csLswTrapCpuCoreInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswCpuCoreIndex,hh3cLswCpuCoreUsage,hh3cLswCpuCoreUsr,
             hh3cLswCpuCoreSys,hh3cLswCpuCoreIrq,hh3cLswCpuCoreIdle.

            Each line contains the following comma-separated values:

            hh3cLswCpuCoreIndex(Integer32):CPU core index.
            hh3cLswCpuCoreUsage(Unsigned32): Percentage of CPU core usage ,0~100
            hh3cLswCpuCoreUsr(Unsigned32): Percentage of CPU core user usage ,0~100
            hh3cLswCpuCoreSys(Unsigned32): Percentage of CPU core system usage ,0~100
            hh3cLswCpuCoreIrq(Unsigned32): Percentage of CPU core interrupt usage ,0~100
            hh3cLswCpuCoreIdle(Unsigned32): Percentage of CPU core idle usage ,0~100
            "
  9: hh3csLswTrapProcessCpuInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessPid,hh3cLswProcessName,
            hh3cLswProcessState,hh3cLswProcessPriority,hh3cLswProcessFDs,
            hh3cLswProcessRunTime,hh3cLswProcessCpuRatio5Secs,hh3cLswProcessCpuRatio1Min,
            hh3cLswProcessCpuRatio5Mins.

            Each line contains the following comma-separated values:

            hh3cLswProcessName: Process name
            hh3cLswProcessJobId:Job ID
            hh3cLswProcessPid: Process ID
            hh3cLswProcessPriority: Process priority
            hh3cLswProcessState: Process state
                {
                R(1):running,
                S(2):sleeping,
                T(3):tracedorStopped,
                D(4):uninterruptibleSleep,
                Z(5):zombie
                }
            hh3cLswProcessFDs: Process FDs
            hh3cLswProcessRunTime: Process run time
            hh3cLswProcessCpuRatio: CPU ratio for the process.
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageEarlyWarningNotification .1.3.6.1.4.1.25506.8.35.12.1.33 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageEarlyWarningThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageEarlyWarningRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.34 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageSecureThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.1.35 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cLswCpuMemoryMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageMinorRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.36 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cLswCpuMemoryNormalThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageSevereNotification .1.3.6.1.4.1.25506.8.35.12.1.37 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageSevereRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.38 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageCriticalNotification .1.3.6.1.4.1.25506.8.35.12.1.39 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory decreased to or below $*
SDESC
The trap indicates that the amount of free memory decreased to or below
the hh3cMemoryUsageCriticalThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cMemoryUsageCriticalRecoverNotification .1.3.6.1.4.1.25506.8.35.12.1.40 "Status Events" Normal
FORMAT The trap indicates that the amount of free memory usage increased to or above $*
SDESC
The trap indicates that the amount of free memory usage increased to or above
the hh3cMemoryUsageSevereThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCpuMemory
     Syntax="COUNTER64"
     Descr="The system memory on the node.

        Note that the system memory means the memory that can be used by
        the software platform."
  5: hh3cLswCpuMemoryFree
     Syntax="COUNTER64"
     Descr="The amount of free memory on the node."
  6: hh3cLswCpuMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free memory on the node."
  7: hh3cLswCpuMemoryHighTotal
     Syntax="COUNTER64"
     Descr="The total high-memory on the node "
  8: hh3cLswCpuMemoryHighFree
     Syntax="COUNTER64"
     Descr="The free high-memory on the node "
  9: hh3cLswCpuMemoryLowTotal
     Syntax="COUNTER64"
     Descr="The total low-memory on the node "
 10: hh3cLswCpuMemoryLowFree
     Syntax="COUNTER64"
     Descr="The free low-memory on the node "
 11: hh3cLswCpuMemorySecureThreshold
     Syntax="UNSIGNED32"
     Descr="The sufficient-memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory exceeds this threshold, a notification will be sent.
        The hh3cLswCpuMemorySecureThreshold must be more than
        or equal to the hh3cLswCpuMemoryEarlywarningThreshold.
        "
 12: hh3cLswCpuMemoryEarlyWarningThreshold
     Syntax="UNSIGNED32"
     Descr="The early-warning threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryEarlyWarningThreshold must be more than
        or equal to the hh3cLswCpuMemoryNormalThreshold.
        "
 13: hh3cLswCpuMemoryNormalThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryNormalThreshold must be more than or equal to
        the hh3cLswCpuMemoryMinorThreshold.
        "
 14: hh3cLswCpuMemoryMinorThreshold
     Syntax="UNSIGNED32"
     Descr="The minor alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When the free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemoryMinorThreshold must be more than or equal to
        the hh3cLswCpuMemorySevereThreshold.
        "
 15: hh3cLswCpuMemorySevereThreshold
     Syntax="UNSIGNED32"
     Descr="The severe alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        The hh3cLswCpuMemorySevereThreshold must be less than or equal to
        the hh3cLswCpuMemoryCriticalThreshold.
        "
 16: hh3cLswCpuMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free memory.
        The unit is set by hh3cLswCpuMemoryThresholdUnit, MB or percentage.

        When free memory decreases to or below this threshold, a notification will be sent.
        "
 17: hh3cLswCpuMemoryCurrentState
     Syntax="INTEGER"
       1: secure
       2: earlywarning
       3: normal
       4: minor
       5: severe
       6: critical
     Descr="Current status of free memory.

        secure
        earlywarning
        normal
        minor
        severe
        critical
        "
 18: hh3csLswTrapProcessMemoryInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswProcessJobId,hh3cLswProcessName,hh3cLswProcessMemoryUsed.

            Each line contains the following comma-separated values:

            hh3cLswProcessJobId: Job ID
            hh3cLswProcessName: Process name
            hh3cLswProcessMemoryUsed:
            Memory be used by the process(text + data + stack + dynamic)in KB.
            "
 19: hh3csLswTrapSlubInfo
     Syntax="OCTETSTR"
     Descr="hh3cLswSlubInfoUsed + hh3cLswSlubInfoName.

            Each line contains the following comma-separated values:

            hh3cLswSlubInfoName: Name of slubinfo
            hh3cLswSlubInfoUsed: Memory be used by the slub(num*size)
            "
EDESC
#
#
#
EVENT hh3cCoreUsageNotification .1.3.6.1.4.1.25506.8.35.12.3.0.1 "Status Events" Normal
FORMAT The trap indicates that the amount of core usage increased to or above $*
SDESC
The trap indicates that the amount of core usage increased to or above
the hh3cLswCoreThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cBoardPowerNotEnough .1.3.6.1.4.1.25506.8.35.12.3.0.2 "Status Events" Normal
FORMAT Not enough power for the board. $*
SDESC
Not enough power for the board.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cBoardAvailablePower
     Syntax="INTEGER32"
     Descr="Available power of power supply."
  4: hh3cBoardRequiredPower
     Syntax="INTEGER32"
     Descr="Power required for a single board."
EDESC
#
#
#
EVENT hh3cAlarmInPortIn .1.3.6.1.4.1.25506.8.35.12.3.0.3 "Status Events" Normal
FORMAT Alarm reported on the alarm-in port. $*
SDESC
Alarm reported on the alarm-in port.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswAlarmInPortInNum
     Syntax="UNSIGNED32"
     Descr="Alarm-in port-in num."
EDESC
#
#
#
EVENT hh3cAlarmInPortRecover .1.3.6.1.4.1.25506.8.35.12.3.0.4 "Status Events" Normal
FORMAT Alarm removed on the alarm-in port. $*
SDESC
Alarm removed on the alarm-in port.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswAlarmInPortInNum
     Syntax="UNSIGNED32"
     Descr="Alarm-in port-in num."
EDESC
#
#
#
EVENT hh3cCoreUsageSevereRecoveryNotification .1.3.6.1.4.1.25506.8.35.12.3.0.10 "Status Events" Normal
FORMAT $*
SDESC

When the product does not support hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreThreshold.
When the product supports hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreMinorThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cCoreUsageMinorNotification .1.3.6.1.4.1.25506.8.35.12.3.0.11 "Status Events" Normal
FORMAT The trap indicates that the core usage increased to or above $*
SDESC
The trap indicates that the core usage increased to or above
the hh3cLswCoreMinorThreshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cCoreUsageMinorRecoveryNotification .1.3.6.1.4.1.25506.8.35.12.3.0.12 "Status Events" Normal
FORMAT $*
SDESC

When the product does not support hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreMinorThreshold.
When the product supports hh3cLswCoreRecoveryThreshold,
the trap indicates that the core usage decreased to or below
the hh3cLswCoreRecoveryThreshold.

Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cLswCoreIndex
     Syntax="INTEGER32"
     Descr="Core index."
  5: hh3cLswCoreTrapUsage
     Syntax="UNSIGNED32"
     Descr="Core usage in last 30 minutes."
  6: hh3cLswCoreThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage threshold.
        When the core usage decreases to or below this threshold, a notification is sent.
        "
  7: hh3cLswTrapCpuUsage
     Syntax="OCTETSTR"
     Descr="Cpu usage in 5sec 1min 5min."
  8: hh3cLswTrapCoreProcessInfo
     Syntax="OCTETSTR"
     Descr="
            Each line contains the following values:
            JID PID PPID CPU State Memory 5Sec 1Min 5Min Name.
            "
  9: hh3cLswCoreMinorThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage minor threshold.
        When the core usage exceeds this threshold, a notification is sent.
        "
 10: hh3cLswCoreRecoveryThreshold
     Syntax="UNSIGNED32"
     Descr="Core usage recovery threshold.
        When the core usage falls down to this threshold, a notification is sent.
        "
EDESC
#
#
#
EVENT hh3cDMAMemoryUsageCriticalNotification .1.3.6.1.4.1.25506.8.35.12.3.0.41 "Status Events" Normal
FORMAT The trap indicates that the free DMA-memory space decreased to or below $*
SDESC
The trap indicates that the free DMA-memory space decreased to or below
the critical alarm threshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cDMAMemoryTotal
     Syntax="COUNTER64"
     Descr="The total DMA-memory space on the node."
  5: hh3cDMAMemoryUsed
     Syntax="COUNTER64"
     Descr="The used DMA-memory space on the node."
  6: hh3cDMAMemoryFree
     Syntax="COUNTER64"
     Descr="The free memory space on the node."
  7: hh3cDMAMemoryCurrentState
     Syntax="INTEGER"
       1: normal
       2: critical
     Descr="Current status of free DMA-memory.

             Normal
             Critical"
  8: hh3cDMAMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free DMA-memory space on the node."
  9: hh3cDMAMemoryCriticalThreshold
     Syntax="UNSIGNED32"
     Descr="The critical alarm threshold for free DMA-memory,
             MB or percentage."
EDESC
#
#
#
EVENT hh3cDMAMemoryUsageRecoverNotification .1.3.6.1.4.1.25506.8.35.12.3.0.42 "Status Events" Normal
FORMAT The trap indicates that the of free DMA-memory space increased to or above $*
SDESC
The trap indicates that the of free DMA-memory space increased to or above
the normal state threshold.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cLswSlotIndex
     Syntax="INTEGER32"
     Descr="Slot index.  When the slot is empty, listed as vacant slot."
  3: hh3cLswCpuIndex
     Syntax="INTEGER32"
     Descr="CPU index."
  4: hh3cDMAMemoryTotal
     Syntax="COUNTER64"
     Descr="The total DMA-memory space on the node."
  5: hh3cDMAMemoryUsed
     Syntax="COUNTER64"
     Descr="The used DMA-memory space on the node."
  6: hh3cDMAMemoryFree
     Syntax="COUNTER64"
     Descr="The free memory space on the node."
  7: hh3cDMAMemoryCurrentState
     Syntax="INTEGER"
       1: normal
       2: critical
     Descr="Current status of free DMA-memory.

             Normal
             Critical"
  8: hh3cDMAMemoryFreeRatio
     Syntax="UNSIGNED32"
     Descr="The percentage of free DMA-memory space on the node."
  9: hh3cDMAMemoryRecoverThreshold
     Syntax="UNSIGNED32"
     Descr="The normal state threshold for free DMA-memory,
             MB or percentage.

             When the free DMA-memory space exceeds this threshold, a recovery notification will be sent.
             The normal state threshold cannot be smaller than the critical alarm threshold."
EDESC
#
#
#
EVENT hh3cRemainingPowerNotEnough .1.3.6.1.4.1.25506.8.35.12.3.0.43 "Status Events" Normal
FORMAT The trap indicates that the remaining power of the chassis is not enouth. $*
SDESC
The trap indicates that the remaining power of the chassis is not enouth.
Variables:
  1: hh3cLswFrameIndex
     Syntax="INTEGER32"
     Descr="The unique index of frame."
  2: hh3cFrameRemainingPower
     Syntax="UNSIGNED32"
     Descr="Remaining power of the frame."
EDESC
#
#
#
#
MIB: HH3C-LswVLAN-MIB (file:./hh3c-splat-vlan.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SRPOLICY-MIB (file:./hh3c-srpolicy.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrpolicyStatusChange .1.3.6.1.4.1.25506.2.186.0.1 "Status Events" Normal
FORMAT An hh3cSrpolicyStatusChange trap signifies that there $*
SDESC
An hh3cSrpolicyStatusChange trap signifies that there
has been a change in the state of a policy.
This trap should be generated when the policy
state regresses (e.g., goes from active to Down)
or progresses to a terminal state
(i.e., down).
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyStatus
     Syntax="OCTETSTR"
     Descr="Status of the SR-TE policy."
  4: hh3cSrpolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicyBsidConflict .1.3.6.1.4.1.25506.2.186.0.2 "Status Events" Normal
FORMAT BSID conflicts. $*
SDESC
BSID conflicts.
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyBsid
     Syntax="INTEGER32"
     Descr="Bound segment ID value of the SR policy."
  4: hh3cSrpolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrpolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrpolicyBsidConflictClear .1.3.6.1.4.1.25506.2.186.0.3 "Status Events" Normal
FORMAT BSID conflicts resolved $*
SDESC
BSID conflicts resolved
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyBsid
     Syntax="INTEGER32"
     Descr="Bound segment ID value of the SR policy."
  4: hh3cSrpolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrpolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrpolicyDown .1.3.6.1.4.1.25506.2.186.0.4 "Status Events" Normal
FORMAT Policy down $*
SDESC
Policy down
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicyDownClear .1.3.6.1.4.1.25506.2.186.0.5 "Status Events" Normal
FORMAT Policy down cleared $*
SDESC
Policy down cleared
Variables:
  1: hh3cSrpolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpolicyEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
EDESC
#
#
#
EVENT hh3cSrpolicyPathDown .1.3.6.1.4.1.25506.2.186.0.6 "Status Events" Normal
FORMAT An hh3cSrpolicyPathDown trap signifies that there $*
SDESC
An hh3cSrpolicyPathDown trap signifies that there
has been a change in the state of a policy primary
or backup path.
Variables:
  1: hh3cSrpolicyPathColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE policy with certain intent."
  2: hh3cSrpolicyPathEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpolicyPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpolicyPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpolicyPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrpolicyPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpolicyPathPref
     Syntax="UNSIGNED32"
     Descr="The preference of the SR-TE policy candidate path."
  8: hh3cSrpolicyPathPreviousRole
     Syntax="OCTETSTR"
     Descr="The previous role of an SR-TE policy candidate path.
         The value may be primary or backup."
  9: hh3cSrpolicyPathDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SR-TE policy candidate path
         is operationally down."
EDESC
#
#
#
EVENT hh3cSrpolicySeglistDown .1.3.6.1.4.1.25506.2.186.0.7 "Status Events" Normal
FORMAT An hh3cSrpSeglistDown trap signifies that there $*
SDESC
An hh3cSrpSeglistDown trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrpSeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpSeglistEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpSeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpSeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpSeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or signalled
         the candidate path on the headend."
  6: hh3cSrpSeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpSeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrpSeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
  9: hh3cSrpSeglistDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why segment list is down."
EDESC
#
#
#
EVENT hh3cSrpolicySeglistDownClear .1.3.6.1.4.1.25506.2.186.0.8 "Status Events" Normal
FORMAT An hh3cSrSeglistDownClear trap signifies that there $*
SDESC
An hh3cSrSeglistDownClear trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrpSeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SR-TE Policy with certain intent."
  2: hh3cSrpSeglistEndPoint
     Syntax="IPADDR"
     Descr="The endpoint is the destination of the SR-TE policy."
  3: hh3cSrpSeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrpSeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrpSeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or signalled
         the candidate path on the headend."
  6: hh3cSrpSeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrpSeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrpSeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
EDESC
#
#
#
#
MIB: HH3C-SRV6-MIB (file:./hh3c-srv6.mib) converted on Sat Apr  2 10:28:13 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrv6SidRouteConflict .1.3.6.1.4.1.25506.2.197.0.1 "Status Events" Normal
FORMAT A hh3cSrv6SidRouteConflict notification signifies that an $*
SDESC
A hh3cSrv6SidRouteConflict notification signifies that an
local SRv6 SID is conflicted with routes in routing table.
Variables:
  1: hh3cSrv6NotificationSid
     Syntax="OCTETSTR"
     Descr="The local SRv6 SID."
  2: hh3cSrv6NotificationSidPrefixLen
     Syntax="UNSIGNED32"
     Descr="The prefix length of the local SRv6 SID."
EDESC
#
#
#
EVENT hh3cSrv6SidRouteConflictClear .1.3.6.1.4.1.25506.2.197.0.2 "Status Events" Normal
FORMAT A hh3cSrv6SidRouteConflictClear notification signifies that $*
SDESC
A hh3cSrv6SidRouteConflictClear notification signifies that
the conflict between the local SRv6 SID and routes in routing table
has been resolved.
Variables:
  1: hh3cSrv6NotificationSid
     Syntax="OCTETSTR"
     Descr="The local SRv6 SID."
  2: hh3cSrv6NotificationSidPrefixLen
     Syntax="UNSIGNED32"
     Descr="The prefix length of the local SRv6 SID."
EDESC
#
#
#
#
MIB: HH3C-SRV6POLICY-MIB (file:./hh3c-srv6policy.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSrv6PolicyStatusChange .1.3.6.1.4.1.25506.2.189.0.1 "Status Events" Normal
FORMAT An hh3cSrv6PolicyStatusChange trap signifies that there $*
SDESC
An hh3cSrv6PolicyStatusChange trap signifies that there
has been a change in the state of a policy.
This trap should be generated when the policy
state regresses (e.g., goes from active to Down)
or progresses to a terminal state
(i.e., down).
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyStatus
     Syntax="OCTETSTR"
     Descr="Status of the SRv6-TE policy."
  4: hh3cSrv6PolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicyBsidConflict .1.3.6.1.4.1.25506.2.189.0.2 "Status Events" Normal
FORMAT BSID conflicts. $*
SDESC
BSID conflicts.
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyBsid
     Syntax="OCTETSTR"
     Descr="Binding segment ID value of the SRv6-TE policy."
  4: hh3cSrv6PolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrv6PolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrv6PolicyBsidConflictClear .1.3.6.1.4.1.25506.2.189.0.3 "Status Events" Normal
FORMAT BSID conflicts resolved $*
SDESC
BSID conflicts resolved
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyBsid
     Syntax="OCTETSTR"
     Descr="Binding segment ID value of the SRv6-TE policy."
  4: hh3cSrv6PolicyBsidFailReason
     Syntax="OCTETSTR"
     Descr="Reason why the binding SID is unavailable."
  5: hh3cSrv6PolicyBsidConflictState
     Syntax="INTEGER"
       1: inConflict
       2: conflictResolved
     Descr="The conflict state of the binding SID."
EDESC
#
#
#
EVENT hh3cSrv6PolicyDown .1.3.6.1.4.1.25506.2.189.0.4 "Status Events" Normal
FORMAT Policy down $*
SDESC
Policy down
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicyDownClear .1.3.6.1.4.1.25506.2.189.0.5 "Status Events" Normal
FORMAT Policy down cleared $*
SDESC
Policy down cleared
Variables:
  1: hh3cSrv6PolicyColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
EDESC
#
#
#
EVENT hh3cSrv6PolicyResExdUppLimit .1.3.6.1.4.1.25506.2.189.0.6 "Status Events" Normal
FORMAT The number of used SRv6-TE policy resources exceeded the upper $*
SDESC
The number of used SRv6-TE policy resources exceeded the upper
threshold.
Variables:
  1: hh3cSrv6PolicyResourceType
     Syntax="INTEGER"
       1: unknown
       2: srv6Policy
       3: srv6PolicySegmentList
       4: srv6PolicyGroup
       5: srv6PolicyFwdPath
     Descr="SRv6-TE policy resource type."
  2: hh3cSrv6PolicyResCurrentCnt
     Syntax="UNSIGNED32"
     Descr="Number of used SRv6-TE policy resources."
  3: hh3cSrv6PolicyResUpperLimit
     Syntax="UNSIGNED32"
     Descr="The upper threshold of SRv6-TE policy resources."
  4: hh3cSrv6PolicyResLowerLimit
     Syntax="UNSIGNED32"
     Descr="The lower threshold of SRv6-TE policy resources."
  5: hh3cSrv6PolicyResourceTotalCnt
     Syntax="UNSIGNED32"
     Descr="The maximum number of SRv6-TE policy resources
         that can be used."
EDESC
#
#
#
EVENT hh3cSrv6PolicyResExceedClear .1.3.6.1.4.1.25506.2.189.0.7 "Status Events" Normal
FORMAT The number of used SRv6-TE policy resources fell below the lower $*
SDESC
The number of used SRv6-TE policy resources fell below the lower
threshold.
Variables:
  1: hh3cSrv6PolicyResourceType
     Syntax="INTEGER"
       1: unknown
       2: srv6Policy
       3: srv6PolicySegmentList
       4: srv6PolicyGroup
       5: srv6PolicyFwdPath
     Descr="SRv6-TE policy resource type."
  2: hh3cSrv6PolicyResCurrentCnt
     Syntax="UNSIGNED32"
     Descr="Number of used SRv6-TE policy resources."
  3: hh3cSrv6PolicyResUpperLimit
     Syntax="UNSIGNED32"
     Descr="The upper threshold of SRv6-TE policy resources."
  4: hh3cSrv6PolicyResLowerLimit
     Syntax="UNSIGNED32"
     Descr="The lower threshold of SRv6-TE policy resources."
  5: hh3cSrv6PolicyResourceTotalCnt
     Syntax="UNSIGNED32"
     Descr="The maximum number of SRv6-TE policy resources
         that can be used."
EDESC
#
#
#
EVENT hh3cSrv6PathDown .1.3.6.1.4.1.25506.2.189.0.8 "Status Events" Normal
FORMAT An hh3cSrv6PathDown trap signifies that there $*
SDESC
An hh3cSrv6PathDown trap signifies that there
has been a change in the state of a policy primary
or backup path.
Variables:
  1: hh3cSrv6PolicyPathColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicyPathEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicyPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicyPathInst
     Syntax="INTEGER32"
     Descr="The instance is a value of BGP instance number, when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicyPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicyPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicyPathPref
     Syntax="UNSIGNED32"
     Descr="The preference of the SRv6-TE policy candidate path."
  8: hh3cSrv6PolicyPathPreviousRole
     Syntax="OCTETSTR"
     Descr="The previous role of an SRv6-TE policy candidate path.
         The value may be primary or backup."
  9: hh3cSrv6PolicyPathDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why SRv6-TE policy candidate path
         is operationally down."
EDESC
#
#
#
EVENT hh3cSrv6PolicySeglistDown .1.3.6.1.4.1.25506.2.189.0.9 "Status Events" Normal
FORMAT An hh3cSrv6PolicySeglistDown trap signifies that there $*
SDESC
An hh3cSrv6PolicySeglistDown trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrv6PolicySeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicySeglistEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicySeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicySeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a BGP instance number when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicySeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicySeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicySeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrv6PolicySeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
  9: hh3cSrv6PolicySeglistDownReason
     Syntax="OCTETSTR"
     Descr="Base identity for the reasons why segment list is down."
EDESC
#
#
#
EVENT hh3cSrv6SeglistDownClear .1.3.6.1.4.1.25506.2.189.0.10 "Status Events" Normal
FORMAT An hh3cSrv6SeglistDownClear trap signifies that there $*
SDESC
An hh3cSrv6SeglistDownClear trap signifies that there
has been a change in the state of a segment list.
Variables:
  1: hh3cSrv6PolicySeglistColor
     Syntax="UNSIGNED32"
     Descr="The color associates the SRv6-TE policy with certain intent."
  2: hh3cSrv6PolicySeglistEndPoint
     Syntax="OCTETSTR"
     Descr="The endpoint is the destination of the SRv6-TE policy."
  3: hh3cSrv6PolicySeglistPathProto
     Syntax="INTEGER"
       10: pcep
       20: bgp
       30: cli
     Descr="Protocol-Origin of a candidate path identifies the protocol that
         originates or signals the candidate path."
  4: hh3cSrv6PolicySeglistPathInst
     Syntax="INTEGER32"
     Descr="The instance is a BGP instance number when
         the candidate path is originated by BGP."
  5: hh3cSrv6PolicySeglistPathOri
     Syntax="OCTETSTR"
     Descr="Originator is the identifier of the node that instantiated or
         signalled the candidate path on the headend."
  6: hh3cSrv6PolicySeglistPathDis
     Syntax="UNSIGNED32"
     Descr="The discriminator uniquely identifies a candidate path from a
         specific Protocol-Origin."
  7: hh3cSrv6PolicySeglistId
     Syntax="UNSIGNED32"
     Descr="The ID uniquely identifies the segment list."
  8: hh3cSrv6PolicySeglistStatus
     Syntax="OCTETSTR"
     Descr="The status of segment list."
EDESC
#
#
#
#
MIB: HH3C-SSH-MIB (file:./hh3c-ssh.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSSHUserAuthFailure .1.3.6.1.4.1.25506.2.22.1.3.0.1 "Status Events" Normal
FORMAT The trap is generated when a user fails to authentication. $*
SDESC
The trap is generated when a user fails to authentication.
Variables:
  1: hh3cSSHAttemptUserName
     Syntax="OCTETSTR"
     Descr="The user name of the attacker who attempted to log in."
  2: hh3cSSHAttemptIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the attacker who attempted to log in."
  3: hh3cSSHAttemptIpAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the attacker who attempted to log in."
  4: hh3cSSHUserAuthFailureReason
     Syntax="INTEGER"
       1: exceedRetries
       2: authTimeout
       3: otherReason
     Descr="The reason for that a user failed to log in."
EDESC
#
#
#
EVENT hh3cSSHVersionNegotiationFailure .1.3.6.1.4.1.25506.2.22.1.3.0.2 "Status Events" Normal
FORMAT The trap is generated when a user fails to negotiate SSH $*
SDESC
The trap is generated when a user fails to negotiate SSH
protocol version.
Variables:
  1: hh3cSSHAttemptIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the attacker who attempted to log in."
  2: hh3cSSHAttemptIpAddr
     Syntax="OCTETSTR"
     Descr="The IP address of the attacker who attempted to log in."
EDESC
#
#
#
EVENT hh3cSSHUserLogin .1.3.6.1.4.1.25506.2.22.1.3.0.3 "Status Events" Normal
FORMAT The trap is generated when a user logs in successfully. $*
SDESC
The trap is generated when a user logs in successfully.
Variables:
  1: hh3cSSHSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of SSH session."
  2: hh3cSSHSessionUserIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The user IP address type of SSH session."
  3: hh3cSSHSessionUserIpAddr
     Syntax="OCTETSTR"
     Descr="The user IP address of SSH session."
EDESC
#
#
#
EVENT hh3cSSHUserLogoff .1.3.6.1.4.1.25506.2.22.1.3.0.4 "Status Events" Normal
FORMAT The trap is generated when a user logs off. $*
SDESC
The trap is generated when a user logs off.
Variables:
  1: hh3cSSHSessionUserName
     Syntax="OCTETSTR"
     Descr="The user name of SSH session."
  2: hh3cSSHSessionUserIpAddrType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The user IP address type of SSH session."
  3: hh3cSSHSessionUserIpAddr
     Syntax="OCTETSTR"
     Descr="The user IP address of SSH session."
EDESC
#
#
#
#
MIB: HH3C-SSLVPN-MIB (file:./hh3c-sslvpn.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STACK-MIB (file:./hh3c-stack.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStackPortLinkStatusChange .1.3.6.1.4.1.25506.2.91.6.0.1 "Status Events" Normal
FORMAT The hh3cStackPortLinkStatusChange trap indicates that the link status $*
SDESC
The hh3cStackPortLinkStatusChange trap indicates that the link status
of the stack port has changed.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPortStatus
     Syntax="INTEGER"
       1: up
       2: down
       3: silent
       4: disabled
     Descr="The link status of a stack port on the device.

        up: A physical link is present on the stack port.
        down: No physical link is present on the stack port.
        silent: The link state of the stack port is up,
                but the port can't transmit or receive traffic.
        disabled: The stack port doesn't contain physical links."
EDESC
#
#
#
EVENT hh3cStackTopologyChange .1.3.6.1.4.1.25506.2.91.6.0.2 "Status Events" Normal
FORMAT The hh3cStackTopologyChange trap indicates that the topology type of $*
SDESC
The hh3cStackTopologyChange trap indicates that the topology type of
the IRF stack has changed.
Variables:
  1: hh3cStackTopology
     Syntax="INTEGER"
       1: chainConn
       2: ringConn
     Descr="Stack topology.

        chainConn: daisy-chain connection
        ringConn: ring connection"
EDESC
#
#
#
EVENT hh3cStackMadBfdChangeNormal .1.3.6.1.4.1.25506.2.91.6.0.3 "Status Events" Normal
FORMAT The hh3cStackMadBfdChangeNormal trap indicates that the BFD MAD function $*
SDESC
The hh3cStackMadBfdChangeNormal trap indicates that the BFD MAD function
changed to the normal state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadBfdChangeFailure .1.3.6.1.4.1.25506.2.91.6.0.4 "Status Events" Normal
FORMAT The hh3cStackMadBfdChangeFailure trap indicates that the BFD MAD function $*
SDESC
The hh3cStackMadBfdChangeFailure trap indicates that the BFD MAD function
changed to the failure state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadLacpChangeNormal .1.3.6.1.4.1.25506.2.91.6.0.5 "Status Events" Normal
FORMAT The hh3cStackMadLacpChangeNormal trap indicates that the LACP MAD function $*
SDESC
The hh3cStackMadLacpChangeNormal trap indicates that the LACP MAD function
changed to the normal state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackMadLacpChangeFailure .1.3.6.1.4.1.25506.2.91.6.0.6 "Status Events" Normal
FORMAT The hh3cStackMadLacpChangeFailure trap indicates that the LACP MAD function $*
SDESC
The hh3cStackMadLacpChangeFailure trap indicates that the LACP MAD function
changed to the failure state.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfLinkUp .1.3.6.1.4.1.25506.2.91.6.0.7 "Status Events" Normal
FORMAT The hh3cStackPhysicalIntfLinkUp trap indicates that the status $*
SDESC
The hh3cStackPhysicalIntfLinkUp trap indicates that the status
of the stack physical interface has changed to the up state.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfLinkDown .1.3.6.1.4.1.25506.2.91.6.0.8 "Status Events" Normal
FORMAT The hh3cStackPhysicalIntfLinkDown trap indicates that the status $*
SDESC
The hh3cStackPhysicalIntfLinkDown trap indicates that the status
of the stack physical interface has changed to the down state.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
EVENT hh3cStackPhysicalIntfRxTimeout .1.3.6.1.4.1.25506.2.91.6.0.9 "Status Events" Normal
FORMAT The hh3cStackPhysicalIntfRxTimeout trap indicates that the timer for the stack $*
SDESC
The hh3cStackPhysicalIntfRxTimeout trap indicates that the timer for the stack
physical interface to receive packets has timed out.
Variables:
  1: hh3cStackMemberID
     Syntax="INTEGER32"
     Descr="The member ID of the device in a stack."
  2: hh3cStackPortIndex
     Syntax="INTEGER32"
     Descr="The index of a stack port of the device."
  3: hh3cStackPhysicalIntfName
     Syntax="OCTETSTR"
     Descr="The textual name of the stack physical interface."
EDESC
#
#
#
#
MIB: HH3C-STORAGE-MIB (file:./hh3c-storage.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStorCriticalLowerTemperatureThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.1 "Status Events" Normal
FORMAT The hh3cStorCriticalLowerTemperatureThresholdNotification indicates $*
SDESC
The hh3cStorCriticalLowerTemperatureThresholdNotification indicates
the temperature is lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity will halt.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtCriticalLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the critical Temperature.  When temperature
            exceeds the critical lower temperature, a notification will be sent."
EDESC
#
#
#
EVENT hh3cStorTemperatureTooLow .1.3.6.1.4.1.25506.10.1.1.3.0.2 "Status Events" Normal
FORMAT The hh3cStorTemperatureTooLow indicates the temperature is $*
SDESC
The hh3cStorTemperatureTooLow indicates the temperature is
lower than the threshold.
If the temperature is lower too much than the entity needs,
the entity halts now.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity."
  4: hh3cEntityExtShutdownLowerTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the shutdown Temperature.  When temperature
            exceeds the lower threshold, a notification will be sent and the entity
            will be shutdown."
EDESC
#
#
#
EVENT hh3cExtVoltageLowThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.3 "Status Events" Normal
FORMAT The hh3cExtVoltageLowThresholdNotification indicates $*
SDESC
The hh3cExtVoltageLowThresholdNotification indicates
the Voltage is lower than the low-threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
EDESC
#
#
#
EVENT hh3cExtVoltageHighThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.4 "Status Events" Normal
FORMAT The hh3cExtVoltageHighThresholdNotification indicates $*
SDESC
The hh3cExtVoltageHighThresholdNotification indicates
the Voltage is lower than the high-threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage is higher than high-threshold, a notification will be
            sent."
EDESC
#
#
#
EVENT hh3cExtCriticalVoltageLowThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.5 "Status Events" Normal
FORMAT The hh3cExtCriticalVoltageLowThresholdNotification indicates $*
SDESC
The hh3cExtCriticalVoltageLowThresholdNotification indicates
the Voltage is lower than the critical low threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtCriticalVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The critical low threshold for voltage.
            If the voltage is lower too much than the entity needs,
            the entity will halt."
EDESC
#
#
#
EVENT hh3cExtCriticalVoltageHighThresholdNotification .1.3.6.1.4.1.25506.10.1.1.3.0.6 "Status Events" Normal
FORMAT The hh3cExtCriticalVoltageHighThresholdNotification indicates $*
SDESC
The hh3cExtCriticalVoltageHighThresholdNotification indicates
the Voltage is higher than the critical high threshold.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtCriticalVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The critical high threshold for voltage.
            If the voltage is higher too much than the entity needs,
            the entity will halt."
EDESC
#
#
#
EVENT hh3cExtVoltageTooLow .1.3.6.1.4.1.25506.10.1.1.3.0.7 "Status Events" Normal
FORMAT The hh3cExtVoltageTooLowNotification indicates $*
SDESC
The hh3cExtVoltageTooLowNotification indicates
the Voltage is lower than the critical low threshold,
and the entity halt now!
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtShutdownVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The voltage is lower than the critical low threshold.
            If the voltage is lower too much than the entity needs,
            the entity halts now."
EDESC
#
#
#
EVENT hh3cExtVoltageTooHigh .1.3.6.1.4.1.25506.10.1.1.3.0.8 "Status Events" Normal
FORMAT The hh3cExtVoltageTooHighNotification indicates $*
SDESC
The hh3cExtVoltageTooHighNotification indicates
the Voltage is higher than the critical high threshold,
and the entity halt now!
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtShutdownVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The voltage is higher than the critical high threshold.
            If the voltage is higher too much than the entity needs,
            the entity halts now."
EDESC
#
#
#
EVENT hh3cExtBatteryStateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.9 "Status Events" Normal
FORMAT The hh3cExtBatteryStateNotification indicates $*
SDESC
The hh3cExtBatteryStateNotification indicates
the raid battery entity's state changes.
Variables:
  1: hh3cEntityExtPhysicalIndex
     Syntax="INTEGER32"
     Descr="The index of hh3cEntityExtStateTable.
            This index is identical to entPhysicalIndex in ENTITY-MIB"
  2: entPhysicalName
     Syntax="OCTETSTR"
     Descr="The textual name of the physical entity.  The value of this
            object should be the name of the component as assigned by
            the local device and should be suitable for use in commands
            entered at the device's `console'.  This might be a text
            name (e.g., `console') or a simple component number (e.g.,
            port or module number, such as `1'), depending on the
            physical component naming syntax of the device.

            If there is no local name, or if this object is otherwise
            not applicable, then this object contains a zero-length
            string.

            Note that the value of entPhysicalName for two physical
            entities will be the same in the event that the console
            interface does not distinguish between them, e.g., slot-1
            and the card in slot-1."
  3: hh3cEntityExtOperStatus
     Syntax="INTEGER"
       1: notSupported
       2: disabled
       3: enabled
       4: dangerous
     Descr="The operate state for this object."
EDESC
#
#
#
EVENT hh3cDiskIOErrorNotification .1.3.6.1.4.1.25506.10.1.1.3.0.10 "Status Events" Normal
FORMAT The hh3cDiskIOErrorNotification indicates that a disk occurred I/O error. $*
SDESC
The hh3cDiskIOErrorNotification indicates that a disk occurred I/O error.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
EVENT hh3cRaidCreateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.11 "Status Events" Normal
FORMAT The hh3cRaidCreateNotification indicates that a array is created. $*
SDESC
The hh3cRaidCreateNotification indicates that a array is created.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidDeleteNotification .1.3.6.1.4.1.25506.10.1.1.3.0.12 "Status Events" Normal
FORMAT The hh3cRaidDeleteStateNotification indicates that a array is deleted. $*
SDESC
The hh3cRaidDeleteStateNotification indicates that a array is deleted.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidHideStateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.13 "Status Events" Normal
FORMAT The hh3cRaidFailedNotification indicates that a array hide or unhide. $*
SDESC
The hh3cRaidFailedNotification indicates that a array hide or unhide.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
  3: hh3cRaidHideState
     Syntax="INTEGER"
       1: enable
       2: disable
     Descr="This object identifies if the array is hided. When the value of
        this object is equal to 'enable', the array will be hided and the
        files on it can not be accessed by any user."
EDESC
#
#
#
EVENT hh3cRaidRunStateNotification .1.3.6.1.4.1.25506.10.1.1.3.0.14 "Status Events" Normal
FORMAT The hh3cRaidDegradeNotification indicates that a array state change. $*
SDESC
The hh3cRaidDegradeNotification indicates that a array state change.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
  3: hh3cRaidRunState
     Syntax="INTEGER"
       1: normal
       2: degraded
       3: failed
     Descr="This object identifies the state of the array.
        The value 'normal' means array works well.
        The value 'degraded' means array has degraded.
        The value 'failed' means some disks met failure and array has failed."
EDESC
#
#
#
EVENT hh3cRaidImportNotification .1.3.6.1.4.1.25506.10.1.1.3.0.15 "Status Events" Normal
FORMAT The hh3cRaidFailedNotification indicates that a thrid array is imported. $*
SDESC
The hh3cRaidFailedNotification indicates that a thrid array is imported.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildStartNotification .1.3.6.1.4.1.25506.10.1.1.3.0.16 "Status Events" Normal
FORMAT The hh3cRaidRebuildStartNotification indicates that $*
SDESC
The hh3cRaidRebuildStartNotification indicates that
a array start to rebuild.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildFinishNotification .1.3.6.1.4.1.25506.10.1.1.3.0.17 "Status Events" Normal
FORMAT The hh3cRaidRebuildStartNotification indicates that $*
SDESC
The hh3cRaidRebuildStartNotification indicates that
a array fininsh rebuild.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildPauseNotification .1.3.6.1.4.1.25506.10.1.1.3.0.18 "Status Events" Normal
FORMAT The hh3cRaidRebuildPauseNotification indicates that $*
SDESC
The hh3cRaidRebuildPauseNotification indicates that
pause a array rebuilding.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRebuildInterruptNotification .1.3.6.1.4.1.25506.10.1.1.3.0.19 "Status Events" Normal
FORMAT The hh3cRaidRebuildInterruptNotification indicates that $*
SDESC
The hh3cRaidRebuildInterruptNotification indicates that
interrupt a array rebuilding.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cSoftwareModuleFailNotification .1.3.6.1.4.1.25506.10.1.1.3.0.20 "Status Events" Normal
FORMAT The hh3cSoftwareModuleFailNotification indicates that software module(s) fail. $*
SDESC
The hh3cSoftwareModuleFailNotification indicates that software module(s) fail.
Variables:
  1: hh3cSoftwareInfoString
     Syntax="OCTETSTR"
     Descr="This object identifies if the software's information."
EDESC
#
#
#
EVENT hh3cRaidBatteryExpiredNotification .1.3.6.1.4.1.25506.10.1.1.3.0.21 "Status Events" Normal
FORMAT The hh3cRaidBatteryExpiredNotification indicates $*
SDESC
The hh3cRaidBatteryExpiredNotification indicates
RAID Battery lifetime had expired.
EDESC
#
#
#
EVENT hh3cRaidBatteryWillExpireNotification .1.3.6.1.4.1.25506.10.1.1.3.0.22 "Status Events" Normal
FORMAT The hh3cRaidBatteryWillExpireNotification indicates $*
SDESC
The hh3cRaidBatteryWillExpireNotification indicates
RAID Battery lifetime will expire.
EDESC
#
#
#
EVENT hh3cLvOnlineFailNotification .1.3.6.1.4.1.25506.10.1.1.3.0.23 "Status Events" Normal
FORMAT The hh3cLvOnlineFailNotification indicates lv(s) on vd fail to online. $*
SDESC
The hh3cLvOnlineFailNotification indicates lv(s) on vd fail to online.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cLvOfflineFailNotification .1.3.6.1.4.1.25506.10.1.1.3.0.24 "Status Events" Normal
FORMAT The hh3cLvOfflineFailNotification indicates lv(s) on vd fail to offline. $*
SDESC
The hh3cLvOfflineFailNotification indicates lv(s) on vd fail to offline.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cRaidRunNotification .1.3.6.1.4.1.25506.10.1.1.3.0.25 "Status Events" Normal
FORMAT The hh3cRaidRunNotification indicates that a array is running. $*
SDESC
The hh3cRaidRunNotification indicates that a array is running.
Variables:
  1: hh3cRaidUuid
     Syntax="OCTETSTR"
     Descr="This object describes the UUID of the array."
  2: hh3cRaidName
     Syntax="OCTETSTR"
     Descr="This object identifies the name of the array."
EDESC
#
#
#
EVENT hh3cExtVoltageNormal .1.3.6.1.4.1.25506.10.1.1.3.0.26 "Status Events" Normal
FORMAT The hh3cStorVoltageRecoveryNotification indicates $*
SDESC
The hh3cStorVoltageRecoveryNotification indicates
the Voltage has recovered in reference.
Variables:
  1: hh3cExtVoltagePhysicalIndex
     Syntax="INTEGER32"
     Descr="This object identifies the entity index of voltage."
  2: hh3cExtVoltagePhysicalName
     Syntax="OCTETSTR"
     Descr="This object identifies the entity name of voltage."
  3: hh3cExtVoltage
     Syntax="INTEGER32"
     Descr="The voltage for the entity."
  4: hh3cExtVoltageLowThreshold
     Syntax="INTEGER32"
     Descr="The low-threshold for the voltage.
            When voltage is lower than low-threshold, a notification will be
            sent."
  5: hh3cExtVoltageHighThreshold
     Syntax="INTEGER32"
     Descr="The high-threshold for the voltage.
            When voltage is higher than high-threshold, a notification will be
            sent."
EDESC
#
#
#
EVENT hh3cDiskPowerOnNotification .1.3.6.1.4.1.25506.10.1.1.3.0.27 "Status Events" Normal
FORMAT The hh3cDiskPowerOnNotification indicates that $*
SDESC
The hh3cDiskPowerOnNotification indicates that
a disk is power on.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
EDESC
#
#
#
EVENT hh3cDiskPowerOffNotification .1.3.6.1.4.1.25506.10.1.1.3.0.28 "Status Events" Normal
FORMAT The hh3cDiskPowerOffNotification indicates that $*
SDESC
The hh3cDiskPowerOffNotification indicates that
a disk is power off.
Variables:
  1: entPhysicalDescr
     Syntax="OCTETSTR"
     Descr="A textual description of physical entity.  This object
            should contain a string that identifies the manufacturer's
            name for the physical entity, and should be set to a
            distinct value for each version or model of the physical
            entity."
  2: hh3cDiskPowerOffReason
     Syntax="INTEGER"
       1: environmentUnstable
       2: mediumError
       3: smartCheckError
       4: generalError
     Descr="This object describes the reason of disk poweroff.
        The value 'environmentUnstable' means disk poweroff and may poweron again.
        The value 'mediumError' means disk poweroff and never poweron.
        The value 'smartCheckError' means disk's SMART check failed and poweroff.
        The value 'generalError' means disk poweroff because of general error."
EDESC
#
#
#
#
MIB: HH3C-STORAGE-REF-MIB (file:./hh3c-storage-ref.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORAGE-SNAP-MIB (file:./hh3c-storage-snap.mib) converted on Sat Apr  2 10:28:14 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-STORM-CONSTRAIN-MIB (file:./hh3c-storm-constrain.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cStormRising .1.3.6.1.4.1.25506.2.66.3.1 "Status Events" Normal
FORMAT This trap message is generated when any type of the $*
SDESC
This trap message is generated when any type of the
flux exceeds its upper limit on a port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cStormTrapType
     Syntax="INTEGER"
       1: broadcast
       2: multicast
       3: unicast
       4: knownUnicast
     Descr="This value is used to identify the type of trap.
         broadcast: Trap message generated when broadcast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         multicast: Trap message generated when multicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         unicast  : Trap message generated when unknown unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         knownUnicast: Trap message generated when known unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port."
  3: hh3cStormTrapThreshold
     Syntax="INTEGER32"
     Descr="This value is used to figure the threshold of flux in
         trap message.
         For example, when the trap is generated for broadcast
         flux exceeds upper limit on a port, this value is
         equal to upper limit value configured.  And when the
         trap is generated for broadcast flux fell under lower
         limit, this value is equal to lower limit value configured."
  4: hh3cStormCtrlPortStatus
     Syntax="INTEGER"
       1: controlled
       2: normal
     Descr="Status of the port:
         controlled: indicate that the port is in controlled status.
                     Port which is in this status will not forward some type
                     of packet.
         normal    : indicate that the port is in normal status."
EDESC
#
#
#
EVENT hh3cStormFalling .1.3.6.1.4.1.25506.2.66.3.2 "Status Events" Normal
FORMAT This trap message is generated when a flux which used $*
SDESC
This trap message is generated when a flux which used
to overflow its upper limit, falls below its lower
limit on a port.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: hh3cStormTrapType
     Syntax="INTEGER"
       1: broadcast
       2: multicast
       3: unicast
       4: knownUnicast
     Descr="This value is used to identify the type of trap.
         broadcast: Trap message generated when broadcast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         multicast: Trap message generated when multicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         unicast  : Trap message generated when unknown unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port.
         knownUnicast: Trap message generated when known unicast traffic exceeds
                    the upper limit or falls below the lower limit on a port."
  3: hh3cStormTrapThreshold
     Syntax="INTEGER32"
     Descr="This value is used to figure the threshold of flux in
         trap message.
         For example, when the trap is generated for broadcast
         flux exceeds upper limit on a port, this value is
         equal to upper limit value configured.  And when the
         trap is generated for broadcast flux fell under lower
         limit, this value is equal to lower limit value configured."
  4: hh3cStormCtrlPortStatus
     Syntax="INTEGER"
       1: controlled
       2: normal
     Descr="Status of the port:
         controlled: indicate that the port is in controlled status.
                     Port which is in this status will not forward some type
                     of packet.
         normal    : indicate that the port is in normal status."
EDESC
#
#
#
#
MIB: HH3C-STRUNK-MIB (file:./hh3c-strunk.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SUBNET-VLAN-MIB (file:./hh3c-subnet-vlan.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SYSLOG-MIB (file:./hh3c-syslog.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-SYS-MAN-MIB (file:./hh3c-sys-man.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cSysClockChangedNotification .1.3.6.1.4.1.25506.2.3.2.1 "Status Events" Normal
FORMAT $*
SDESC

A clock changed notification is generated when the current
local date and time for the system has been manually changed.
The value of hh3cSysLocalClock reflects new date and time.

Variables:
  1: hh3cSysLocalClock
     Syntax="OCTETSTR"
     Descr="
        This node gives the current local time of the system.
        The unit of it is DateAndTime.
        "
EDESC
#
#
#
EVENT hh3cSysReloadNotification .1.3.6.1.4.1.25506.2.3.2.2 "Status Events" Normal
FORMAT $*
SDESC

A hh3cSysReloadNotification will be sent before the corresponding entity is
rebooted. It will also be sent if the entity fails to reboot because the clock
has changed.

Variables:
  1: hh3cSysReloadImage
     Syntax="INTEGER32"
     Descr="
        The value indicates an entry in hh3cSysImageTable.
        It defines an image file for reload action.
        It is the value of corresponding hh3cSysImageIndex in hh3cSysImageTable.

        If dual image is supported, the main image attribute can be
        set through this object or by hh3cSysImageType of hh3cSysImageTable
        of the entity. It is strongly suggested to set this attribute by
        the latter.

        If main image attribute is set here, the hh3cSysImageType in hh3cSysImageTable
        of the corresponding entity will be updated, and vice versa.

        Before reboot, the device will check the validation of the entry. If the file does
        not exist, the device will not reboot and a trap will be send to NMS.
        "
  2: hh3cSysReloadCfgFile
     Syntax="INTEGER32"
     Descr="
        The value indicates an entry in hh3cSysCFGFileTable.
        It defines a configuration file for reload action.
        It is the value of corresponding hh3cSysCFGFileIndex in hh3cSysCFGFileTable.
        The zero value means no configuration file has been set for this entry, and
        no configuration file is used during system reloading.
        "
  3: hh3cSysReloadReason
     Syntax="OCTETSTR"
     Descr="
        The reason of system's reloading.
        It is a zero length octet string when not set.
        "
  4: hh3cSysReloadScheduleTime
     Syntax="OCTETSTR"
     Descr="
        Specify the local time at which the reload action will
        occur. we will only take octet strings
        with length 8 for this object which indicates the
        local time of the switch. The maximum scheduled
        interval between the specified time and the current
        system clock time is 24 days .

            field  octets  contents                  range
            -----  ------  --------                  -----
              1      1-2   year                      0..65536
              2       3    month                     1..12
              3       4    day                       1..31
              4       5    hour                      0..23
              5       6    minutes                   0..59
              6       7    seconds                   0..60

         For example, Tuesday May 26, 1992 at 1:30:15 PM would be
         displayed as:

                    1992-5-26,13:30:15

        If the set value is less than the value of hh3cSysLocalClock
        or beyond the maximum scheduled time limit, a bad value error
        occurred.
        The value of all-zero octet strings indicates system reload
        at once if the reload action is reloadOnSchedule(2).
        "
  5: hh3cSysReloadAction
     Syntax="INTEGER"
       1: reloadUnavailable
       2: reloadOnSchedule
       3: reloadAtOnce
       4: reloadCancel
     Descr="
        Writing reloadOnSchedule(2) to this object performs the reload operation on schedule.
        If hh3cSysReloadScheduleTime is not set, the value of hh3cSysReloadAction can't be set to
        'reloadOnSchedule(2)'.

        Writing reloadAtOnce(3)to this object performs the reload operation at once,
        regardless of the hh3cSysReloadScheduleTime.

        When reloadCancel(4)is set, the scheduled reload action will be cancelled and the value of
        hh3cSysReloadAction will be 'reloadUnavailable(1)',the value of hh3cSysReloadSchedule will be
        0, hh3cSysReloadTag will be given a value of zero length, but the content of
        hh3cSysReloadScheduleTable will remain.


        The hh3cSysReloadSchedule and hh3cSysReloadTag  determine the reload entity(ies) in mutually
        exclusive way. And the hh3cSysReloadSchedule will be handled at first. If the value of
        hh3cSysReloadSchedule is invalid, then the hh3cSysReloadTag will be handled.

        If the value of hh3cSysReloadSchedule is valid, the value of hh3cSysReloadTag is ignored and a
        reload action will be implemented to the entity specified by hh3cSysReloadEntity in the entry
        pointed by hh3cSysReloadSchedule.

        If hh3cSysReloadSchedule is valid, but the entry hh3cSysReloadSchedule pointing to is not active,
        the reload action will be ignored , and an inconsistent value will be returned.


        If multiple entities are required to be reloaded at the same time, the value of hh3cSysReloadTag
        must be specified to select the reload parameters in the hh3cSysReloadSceduelTable, and
        hh3cSysReloadSchedule must have the value of '0'.

        If the whole fabric is to be reloaded in an XRN device, all the units in the fabric must
        have at least one entry in the hh3cSysReloadSceduelTable with the same tag in hh3cSysReloadSceduelTagList.

        When a reload action is done, or there is no reload action, the value
        should be reloadUnavailable(1).
        "
EDESC
#
#
#
EVENT hh3cSysStartUpNotification .1.3.6.1.4.1.25506.2.3.2.3 "Status Events" Normal
FORMAT $*
SDESC

a hh3cSysStartUpNotification trap will be sent when the system starts up with 'main' image file failed,
a trap will be sent to indicate which type the current image file (I.e backup or secure)is.

Variables:
  1: hh3cSysImageType
     Syntax="INTEGER"
       1: main
       2: backup
       3: none
       4: secure
       5: main-backup
       6: main-secure
       7: backup-secure
       8: main-backup-secure
     Descr="
        It indicates the reloading sequence attribute of the image.

        For devices which support dual image:

        If the value is 'main(1)',the image will be the first image
        in the next reloading procedure. If the value is 'backup(2)',
        the image will be used if the main image fails. If the value
        is 'secure(4)', the image will be used if the main image and
        backup image both fail. If the value is 'none(3)',the image will
        not be used in the next reloading procedure.

        At the same time,you also can specify the main image by
        hh3cSysReloadImage in hh3cSysReloadScheduleTable. If the
        image is different from previous main image, the previous main image
        will not be main image again. And the image table will update with
        this variation. Vice versa, if you have defined the reload schedule,
        and then you define a new main image through hh3cSysImageType when you
        are waiting the reload schedule to be executed, the real main image
        will be the latest one.


        It is strongly suggested to define the main image here, not by hh3cSysReloadImage
        in hh3cSysReloadScheduleTable.

        There are some rules for setting the value of hh3cSysImageType:

        a)When a new image file is defined as 'main' or 'backup' file,the hh3cSysImageType
          of old 'main' or 'backup' file will automatically be 'none'.
        b)It is forbidden to set 'none' attribute manually.
        c)It is forbidden to set 'secure' attribute manually.
        d)If 'main' image is set to 'backup', the file keeps 'main'. And vice versa.
          At this time, the file has 'main-backup' property.
        e)If the secure image is set to 'main' or 'backup', the file has 'main-secure' or 'backup-secure'property.
        f)If the secure image is set to 'main' and 'backup', the file has the 'main-backup-secure' property.
        g)If the none image is set to 'main' or 'backup', the file has the 'main' or 'backup' property.

        The following table describes whether it is ok to set to another state
        directly from original state.

                        +--------------+-----------+-------------+-------------+
                        |   set to     | set to    |  set to     |   set to    |
                        |              |           |             |             |
             original   |    'main'    | 'backup'  |  'none'     |  'secure'   |
             state      |              |           |             |             |
          --------------+--------------+-----------+-------------+-------------+
                        |              |           |             |             |
             main       |     ---      |   yes     |   no        |   no        |
                        |              |           |             |             |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------|-------------+
                        |              |           |             |             |
             backup     |     yes      |   ---     |   no        |   no        |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------|-------------+
                        |              |           |             |             |
                        |              |           |             |             |
              none      |     yes      |   yes     |   ---       |   no        |
                        |              |           |             |             |
          --------------+--------------+-----------+-------------+-------------+
                        |              |           |             |             |
              secure    |     yes      |   yes     |   no        |   ---       |
                        |              |           |             |             |
                        |              |           |             |             |
    "
EDESC
#
#
#
#
MIB: HH3C-T1-MIB (file:./hh3c-t1.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TE-TUNNEL-MIB (file:./hh3c-te-tunnel.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cTeTunnelPsSwitchWtoP .1.3.6.1.4.1.25506.2.115.3.0.1 "Status Events" Normal
FORMAT This notification is generated when protect workgroup switch from $*
SDESC
This notification is generated when protect workgroup switch from
work tunnel to protect tunnel.
Variables:
  1: hh3cTeTunnelPsWorkPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates work path status.  none, noDefect, inDefect
        will be used."
  2: hh3cTeTunnelPsProtectPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates protect path status.  none, noDefect,
        inDefect(3) will be used."
EDESC
#
#
#
EVENT hh3cTeTunnelPsSwitchPtoW .1.3.6.1.4.1.25506.2.115.3.0.2 "Status Events" Normal
FORMAT This notification is generated when protect workgroup switch from $*
SDESC
This notification is generated when protect workgroup switch from
protect tunnel to work tunnel.
Variables:
  1: hh3cTeTunnelPsWorkPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates work path status.  none, noDefect, inDefect
        will be used."
  2: hh3cTeTunnelPsProtectPathStatus
     Syntax="INTEGER"
       1: none
       2: noDefect
       3: inDefect
     Descr="This value indicates protect path status.  none, noDefect,
        inDefect(3) will be used."
EDESC
#
#
#
#
MIB: HH3C-TRANSCEIVER-INFO-MIB (file:./hh3c-transceiver-info.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TRAP-MIB (file:./hh3c-trap.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cMacTabFullTrap .1.3.6.1.4.1.25506.2.38.1.1.4.1 "Status Events" Normal
FORMAT Send this trap when the MAC table is filled.  The $*
SDESC
Send this trap when the MAC table is filled.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval.
Variables:
  1: hh3cMacTabLen
     Syntax="INTEGER32"
     Descr="The length of the MAC table."
EDESC
#
#
#
EVENT hh3cMacTabAlmostFullTrap .1.3.6.1.4.1.25506.2.38.1.1.4.2 "Status Events" Normal
FORMAT Send this trap when the MAC table is almost full.  The $*
SDESC
Send this trap when the MAC table is almost full.  The
interval between two traps generated should be longer
than hh3cMacTabTrapInterval.
EDESC
#
#
#
EVENT hh3cArpTabFullTrap .1.3.6.1.4.1.25506.2.38.1.2.4.1 "Status Events" Normal
FORMAT Send this trap when the ARP table is filled.  The $*
SDESC
Send this trap when the ARP table is filled.  The
interval between two traps generated should be longer
than hh3cArpTabTrapInterval.
Variables:
  1: hh3cArpTabLen
     Syntax="INTEGER32"
     Descr="The length of the ARP table."
EDESC
#
#
#
EVENT hh3cArpPortDynamicEntryFullTrap .1.3.6.1.4.1.25506.2.38.1.2.4.2 "Status Events" Normal
FORMAT Send this trap when the dynamic ARP number of the $*
SDESC
Send this trap when the dynamic ARP number of the
port exceeds the limitation. The object hh3cArpTabLen
describes the limitation of the max dynamic ARP number
of this port. The interval between two traps should be
longer than hh3cArpTabTrapInterval.
Variables:
  1: hh3cArpTabLen
     Syntax="INTEGER32"
     Descr="The length of the ARP table."
  2: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  3: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
EDESC
#
#
#
EVENT hh3cRtTabFullTrap .1.3.6.1.4.1.25506.2.38.1.3.5.1 "Status Events" Normal
FORMAT Send this trap when the routing table is filled.  The $*
SDESC
Send this trap when the routing table is filled.  The
interval between two traps generated should be longer
than hh3cRtTabTrapInterval.
Variables:
  1: hh3cRtTabLen
     Syntax="INTEGER32"
     Descr="The length of the routing table.  The detail
            routing tables also use the same object."
EDESC
#
#
#
EVENT hh3cDetailRtTabFullTrap .1.3.6.1.4.1.25506.2.38.1.3.5.2 "Status Events" Normal
FORMAT Send this trap when the detail routing table is filled.  The $*
SDESC
Send this trap when the detail routing table is filled.  The
interval between two traps generated should be longer than
hh3cRtTabTrapInterval.
Variables:
  1: hh3cDetailRtProType
     Syntax="INTEGER"
       1: other
       2: local
       3: rip
       4: isis
       5: ospf
       6: bgp
     Descr="The index value which uniquely identifies an entry
            in the hh3cDetailRtTrapTable."
  2: hh3cRtTabLen
     Syntax="INTEGER32"
     Descr="The length of the routing table.  The detail
            routing tables also use the same object."
EDESC
#
#
#
EVENT hh3cDefaultRtDelTrap .1.3.6.1.4.1.25506.2.38.1.3.5.3 "Status Events" Normal
FORMAT Send this trap when the default route is deleted. $*
SDESC
Send this trap when the default route is deleted.
Variables:
  1: hh3cDetailRtProType
     Syntax="INTEGER"
       1: other
       2: local
       3: rip
       4: isis
       5: ospf
       6: bgp
     Descr="The index value which uniquely identifies an entry
            in the hh3cDetailRtTrapTable."
  2: hh3cDefaultRtNextHopType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="The IP address type of the next hop of the default route.
            The value must be ipv4 or ipv6"
  3: hh3cDefaultRtNextHop
     Syntax="OCTETSTR"
     Descr="The IP address of the next hop of the default route."
  4: hh3cDefaultRtOutIf
     Syntax="INTEGER32"
     Descr="The index value which uniquely identifies the
             local interface through which the next hop of this
             route should be reached.  The interface identified
             by a particular value of this index is the same
             interface as identified by the same value of
             ifIndex."
EDESC
#
#
#
EVENT hh3cMulticastTabFullTrap .1.3.6.1.4.1.25506.2.38.1.4.4.1 "Status Events" Normal
FORMAT Send this trap when the multicast table is filled.  The $*
SDESC
Send this trap when the multicast table is filled.  The
interval between two traps generated should be longer
than hh3cMulticastTabTrapInterval.
Variables:
  1: hh3cMulticastTabType
     Syntax="INTEGER"
       1: lay2
       2: lay3
     Descr="Defining the type of the multicast table, layer2 or layer3."
  2: hh3cMulticastTabLen
     Syntax="INTEGER32"
     Descr="The length of the multicast table."
EDESC
#
#
#
EVENT hh3cNdTabFullTrap .1.3.6.1.4.1.25506.2.38.1.5.4.1 "Status Events" Normal
FORMAT Send this trap when the ND table is filled.  The $*
SDESC
Send this trap when the ND table is filled.  The
interval between two traps generated should be longer
than hh3cNdTabTrapInterval.
Variables:
  1: hh3cNdTabLen
     Syntax="INTEGER32"
     Descr="The length of the ND table."
EDESC
#
#
#
EVENT hh3cPeriodicalTrap .1.3.6.1.4.1.25506.2.38.1.6.3.0.1 "Status Events" Normal
FORMAT If no trap occurs during the interval spicified by $*
SDESC
If no trap occurs during the interval spicified by
hh3cPeriodicalTrapInterval, an hh3cPeriodicalTrap
will be generated. If the interval is set to 0, no
hh3cPeriodicalTrap will be generated.
EDESC
#
#
#
#
MIB: HH3C-TRNG2-MIB (file:./hh3c-trng2.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TRNG-MIB (file:./hh3c-trng.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TUNNEL-MIB (file:./hh3c-tunnel.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-TWAMP-MIB (file:./hh3c-twamp.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UI-MAN-MIB (file:./hh3c-ui-man.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UNICAST-MIB (file:./hh3c-unicast.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-UPS-MIB (file:./hh3c-ups.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-USERLOG-MIB (file:./hh3c-userlog.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-USER-MIB (file:./hh3c-user.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VBR-MIB (file:./hh3c-vbr.mib) converted on Sat Apr  2 10:28:15 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VLANGROUP-MIB (file:./hh3c-vlangroup.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VLANTERM-MIB (file:./hh3c-vlanterm.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VMAP-MIB (file:./hh3c-vmap.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VM-MAN-MIB (file:./hh3c-vm-man.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVMManDeviceOnlineTrap .1.3.6.1.4.1.25506.9.1.2.0.1 "Status Events" Normal
FORMAT Send a trap about the device having been registered to VM. $*
SDESC
Send a trap about the device having been registered to VM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
EDESC
#
#
#
EVENT hh3cVMManDeviceOfflineTrap .1.3.6.1.4.1.25506.9.1.2.0.2 "Status Events" Normal
FORMAT Send a trap about the device having been unregistered to VM. $*
SDESC
Send a trap about the device having been unregistered to VM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceExternalSemaphoreTrap .1.3.6.1.4.1.25506.9.1.2.0.3 "Status Events" Normal
FORMAT Forward a trap about external semaphore alarm, which is created $*
SDESC
Forward a trap about external semaphore alarm, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUExternalInputAlarmChannelID
     Syntax="UNSIGNED32"
     Descr="The ID of the external input alarm channel."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceVideoLossTrap .1.3.6.1.4.1.25506.9.1.2.0.4 "Status Events" Normal
FORMAT Forward a trap about video loss, which is created by the third $*
SDESC
Forward a trap about video loss, which is created by the third
party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceVideoRecoverTrap .1.3.6.1.4.1.25506.9.1.2.0.5 "Status Events" Normal
FORMAT Forward a trap about video recovery after loss, which is created $*
SDESC
Forward a trap about video recovery after loss, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceMotionDetectTrap .1.3.6.1.4.1.25506.9.1.2.0.6 "Status Events" Normal
FORMAT Forward a trap about motion detection, which is created by the $*
SDESC
Forward a trap about motion detection, which is created by the
third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  5: hh3cVMManRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion detection region."
  6: hh3cVMManRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion detection region."
  7: hh3cVMManRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
  8: hh3cVMManRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceCoverTrap .1.3.6.1.4.1.25506.9.1.2.0.7 "Status Events" Normal
FORMAT Forward a trap about video cover, which is created by the third $*
SDESC
Forward a trap about video cover, which is created by the third
party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  5: hh3cVMManRegionCoordinateX1
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of top left point of the motion detection region."
  6: hh3cVMManRegionCoordinateY1
     Syntax="UNSIGNED32"
     Descr="The vertical coordinate of top left point of the motion detection region."
  7: hh3cVMManRegionCoordinateX2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
  8: hh3cVMManRegionCoordinateY2
     Syntax="UNSIGNED32"
     Descr="The horizontal coordinate of botton right point of the motion detection region."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceCpuUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.8 "Status Events" Normal
FORMAT Forward a trap about cpu usage exceeding its threshold, which is $*
SDESC
Forward a trap about cpu usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManCpuUsage
     Syntax="UNSIGNED32"
     Descr="The CPU usage for this entity. Generally, the CPU usage
        will caculate the overall CPU usage on the entity, and it
        is not sensible with the number of CPU on the entity. "
  5: hh3cVMManCpuUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the CPU usage. When the CPU usage exceeds
        the threshold, a notification will be sent."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceMemUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.9 "Status Events" Normal
FORMAT Forward a trap about memory usage exceeding its threshold, which is $*
SDESC
Forward a trap about memory usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManMemUsage
     Syntax="UNSIGNED32"
     Descr="The memory usage for the entity. This object indicates what
        percent of memory are used. "
  5: hh3cVMManMemUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the Memory usage. When the memory usage
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceHardDiskUsageThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.10 "Status Events" Normal
FORMAT Forward a trap about harddisk usage exceeding its threshold, which is $*
SDESC
Forward a trap about harddisk usage exceeding its threshold, which is
created by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManHardDiskUsage
     Syntax="UNSIGNED32"
     Descr="The hard disk usage for the entity. This object indicates what
        percent of hard disk are used. "
  5: hh3cVMManHardDiskUsageThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the hard disk usage. When the hard disk usage
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceTemperatureThresholdTrap .1.3.6.1.4.1.25506.9.1.2.0.11 "Status Events" Normal
FORMAT Forward a trap about temperature exceeding its threshold, which is created $*
SDESC
Forward a trap about temperature exceeding its threshold, which is created
by the third party device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManTemperature
     Syntax="INTEGER32"
     Descr="The temperature for the entity. "
  5: hh3cVMManTemperatureThreshold
     Syntax="INTEGER32"
     Descr="The threshold for the temperature. When the temperature
        exceeds the threshold, a notification will be sent. "
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceStartKinescopeTrap .1.3.6.1.4.1.25506.9.1.2.0.12 "Status Events" Normal
FORMAT Forward a trap about starting kinescope, which is created by the third party $*
SDESC
Forward a trap about starting kinescope, which is created by the third party
device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManForwardDeviceStopKinescopeTrap .1.3.6.1.4.1.25506.9.1.2.0.13 "Status Events" Normal
FORMAT Forward a trap about stopping kinescope, which is created by the third party $*
SDESC
Forward a trap about stopping kinescope, which is created by the third party
device.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  4: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManClientReportTrap .1.3.6.1.4.1.25506.9.1.2.0.14 "Status Events" Normal
FORMAT Send a trap about the fault which is reported by clients. $*
SDESC
Send a trap about the fault which is reported by clients.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManReportContent
     Syntax="OCTETSTR"
     Descr="The details of the fault which reported by clients"
EDESC
#
#
#
EVENT hh3cVMManClientRealtimeSurveillanceNoVideoTrap .1.3.6.1.4.1.25506.9.1.2.0.15 "Status Events" Normal
FORMAT Send a trap about no realtime surveillance video stream which is reported by clients. $*
SDESC
Send a trap about no realtime surveillance video stream which is reported by clients.
hh3cVMManRegDevIP, entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName
describe an EC's relative information. 
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManClientVODNoVideoTrap .1.3.6.1.4.1.25506.9.1.2.0.16 "Status Events" Normal
FORMAT Send a trap about no VOD video stream which is reported by clients. hh3cVMManRegDevIP, $*
SDESC
Send a trap about no VOD video stream which is reported by clients. hh3cVMManRegDevIP,
entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName describe an EC's relative information.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVODStart
     Syntax="OCTETSTR"
     Descr="The start time for VOD."
  8: hh3cVMManClientVODEnd
     Syntax="OCTETSTR"
     Descr="The end time for VOD."
  9: hh3cVMManIPSANDevIP
     Syntax="IPADDR"
     Descr="IP address of IPSAN Device which can store video data."
EDESC
#
#
#
EVENT hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap .1.3.6.1.4.1.25506.9.1.2.0.17 "Status Events" Normal
FORMAT Send a trap about the realtime surveillance video stream discontinuity which is reported by clients. $*
SDESC
Send a trap about the realtime surveillance video stream discontinuity which is reported by clients.
entPhysicalAssetID, hh3cVMManRegDevIP, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName describe an EC's relative
information.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVideoStreamDiscontinuityInterval
     Syntax="UNSIGNED32"
     Descr="Video stream discontinuity interval. "
  8: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the video stream discontinuity interval. When the
        discontinuity interval exceeds the threshold, a notification will be sent. "
  9: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientVODVideoStreamDiscontinuityTrap .1.3.6.1.4.1.25506.9.1.2.0.18 "Status Events" Normal
FORMAT Send a trap about the VOD video stream discontinuity which is reported by clients. $*
SDESC
Send a trap about the VOD video stream discontinuity which is reported by clients.
hh3cVMManRegDevIP, entPhysicalAssetID, hh3cVMManRegDevName and hh3cVMManPUECVideoChannelName
describe an EC's relative information.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  5: hh3cVMManRegDevName
     Syntax="OCTETSTR"
     Descr="Name of devices which can registered or unregistered to VM."
  6: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
  7: hh3cVMManClientVODStart
     Syntax="OCTETSTR"
     Descr="The start time for VOD."
  8: hh3cVMManClientVODEnd
     Syntax="OCTETSTR"
     Descr="The end time for VOD."
  9: hh3cVMManIPSANDevIP
     Syntax="IPADDR"
     Descr="IP address of IPSAN Device which can store video data."
 10: hh3cVMManClientVideoStreamDiscontinuityInterval
     Syntax="UNSIGNED32"
     Descr="Video stream discontinuity interval. "
 11: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the video stream discontinuity interval. When the
        discontinuity interval exceeds the threshold, a notification will be sent. "
 12: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientCtlConnExceptionTerminationTrap .1.3.6.1.4.1.25506.9.1.2.0.19 "Status Events" Normal
FORMAT Send a trap about the exceptional termination for control connection.  $*
SDESC
Send a trap about the exceptional termination for control connection. 
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
EDESC
#
#
#
EVENT hh3cVMManClientFrequencyLoginFailTrap .1.3.6.1.4.1.25506.9.1.2.0.20 "Status Events" Normal
FORMAT Send a trap about the frequency of client login failure. $*
SDESC
Send a trap about the frequency of client login failure.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManClientLoginFailNum
     Syntax="UNSIGNED32"
     Descr="The total number of client login failure in last statistic period which is
        defined by hh3cVMManClientStatPeriod entity."
  5: hh3cVMManClientLoginFailNumThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the total number of client login failure in last statistic
        period. When the number exceeds the threshold, a notification will be sent. "
  6: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManClientFrequencyVODFailTrap .1.3.6.1.4.1.25506.9.1.2.0.21 "Status Events" Normal
FORMAT Send a trap about the frequency of client VOD failure. $*
SDESC
Send a trap about the frequency of client VOD failure.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManClientIP
     Syntax="IPADDR"
     Descr="The client device IP address."
  3: hh3cVMManUserName
     Syntax="OCTETSTR"
     Descr="The client user name."
  4: hh3cVMManClientVODFailNum
     Syntax="UNSIGNED32"
     Descr="The total number of client VOD failure in last statistic period which is
        defined by hh3cVMManClientStatPeriod entity."
  5: hh3cVMManClientVODFailNumThreshold
     Syntax="UNSIGNED32"
     Descr="The threshold for the total number of client VOD failure in last statistic
        period. When the number exceeds the threshold, a notification will be sent. "
  6: hh3cVMManClientStatPeriod
     Syntax="UNSIGNED32"
     Descr="The client statistic period. "
EDESC
#
#
#
EVENT hh3cVMManDMECDisobeyStorageScheduleTrap .1.3.6.1.4.1.25506.9.1.2.0.22 "Status Events" Normal
FORMAT Send a trap about EC disobeying storage schedule created by DM. $*
SDESC
Send a trap about EC disobeying storage schedule created by DM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
EVENT hh3cVMManDMECDisobeyStorageScheduleRecoverTrap .1.3.6.1.4.1.25506.9.1.2.0.23 "Status Events" Normal
FORMAT Send a trap about recovery after EC disobeying storage schedule created by DM. $*
SDESC
Send a trap about recovery after EC disobeying storage schedule created by DM.
Variables:
  1: entPhysicalAssetID
     Syntax="OCTETSTR"
     Descr="This object is a user-assigned asset tracking identifier
            (as specified by a network manager) for the physical entity,
            and provides non-volatile storage of this information.

            On the first instantiation of a physical entity, the value
            of entPhysicalAssetID associated with that entity is set to
            the zero-length string.

            Not every physical component will have an asset tracking
            identifier, or even need one.  Physical entities for which
            the associated value of the entPhysicalIsFRU object is equal
            to 'false(2)' (e.g., the repeater ports within a repeater
            module), do not need their own unique asset tracking
            identifier.  An agent does not have to provide write access
            for such entities, and may instead return a zero-length
            string.

            If write access is implemented for an instance of
            entPhysicalAssetID, and a value is written into the
            instance, the agent must retain the supplied value in the
            entPhysicalAssetID instance (associated with the same
            physical entity) for as long as that entity remains
            instantiated.  This includes instantiations across all
            re-initializations/reboots of the network management system,
            including those resulting in a change of the physical
            entity's entPhysicalIndex value.

            If no asset tracking information is associated with the
            physical component, then this object will contain a
            zero-length string."
  2: hh3cVMManRegDevIP
     Syntax="IPADDR"
     Descr="IP address of devices which can registered or unregistered to VM."
  3: hh3cVMManPUECVideoChannelName
     Syntax="OCTETSTR"
     Descr="The name of the video channel. It is suggested that the name includes
        the channel ID information."
EDESC
#
#
#
#
MIB: HH3C-VNF-DEVICE-MIB (file:./hh3c-vnf-device.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVnfmConnectionFault .1.3.6.1.4.1.25506.2.196.2.0.1 "Status Events" Normal
FORMAT Cp and so communication failure. $*
SDESC
Cp and so communication failure.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVnfmConnectionFaultResume .1.3.6.1.4.1.25506.2.196.2.0.2 "Status Events" Normal
FORMAT Cp and so communication recovery. $*
SDESC
Cp and so communication recovery.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVnvmAuthenFault .1.3.6.1.4.1.25506.2.196.2.0.3 "Status Events" Normal
FORMAT Cp and so authentication failed. $*
SDESC
Cp and so authentication failed.
Variables:
  1: hh3cVnfmIPType
     Syntax="INTEGER"
       0: unknown
       1: ipv4
       16: dns
       2: ipv6
       3: ipv4z
       4: ipv6z
     Descr="VNFM ip address."
  2: hh3cVnfmIP
     Syntax="OCTETSTR"
     Descr="VNFM ip address."
  3: hh3cVnfmPort
     Syntax="UNSIGNED32"
     Descr="VNFM port number."
EDESC
#
#
#
EVENT hh3cVmCreate .1.3.6.1.4.1.25506.2.196.3.0.1 "Status Events" Normal
FORMAT The event of create VM. $*
SDESC
The event of create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmDelete .1.3.6.1.4.1.25506.2.196.3.0.2 "Status Events" Normal
FORMAT The event of delete VM. $*
SDESC
The event of delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmCreateSuccess .1.3.6.1.4.1.25506.2.196.3.0.3 "Status Events" Normal
FORMAT Success to create VM. $*
SDESC
Success to create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
EDESC
#
#
#
EVENT hh3cVmCreateFail .1.3.6.1.4.1.25506.2.196.3.0.4 "Status Events" Normal
FORMAT Failed to create VM. $*
SDESC
Failed to create VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
  6: hh3cVmCreateFailReason
     Syntax="OCTETSTR"
     Descr="The VM create failed reason."
EDESC
#
#
#
EVENT hh3cVmDeleteSuccess .1.3.6.1.4.1.25506.2.196.3.0.5 "Status Events" Normal
FORMAT Success to delete VM. $*
SDESC
Success to delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
EDESC
#
#
#
EVENT hh3cVmDeleteFail .1.3.6.1.4.1.25506.2.196.3.0.6 "Status Events" Normal
FORMAT Failed to delete VM. $*
SDESC
Failed to delete VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmAttr
     Syntax="INTEGER"
       1: initDeploy
       2: manu
       3: auto
       4: autoAccept
     Descr="VM attribute."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  5: hh3cVmRetryTimes
     Syntax="UNSIGNED32"
     Descr="Number of retries."
  6: hh3cVmDeleteFailReason
     Syntax="OCTETSTR"
     Descr="The VM delete failed reason."
EDESC
#
#
#
EVENT hh3cVmInconsist .1.3.6.1.4.1.25506.2.196.3.0.7 "Status Events" Normal
FORMAT The local virtual machine resources are inconsistent with the resources on vnf. $*
SDESC
The local virtual machine resources are inconsistent with the resources on vnf.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmStatusOnVnfm
     Syntax="INTEGER"
       1: building
       2: active
       3: error
       4: unknown
     Descr="The status of the virtual machine on VNFM(virtualized network function managers)."
  4: hh3cVmInconsistFaultReason
     Syntax="INTEGER"
       1: exisitOnLocal
       2: existOnVnfm
     Descr="Reasons for VM inconsistency."
EDESC
#
#
#
EVENT hh3cVmInconsistResume .1.3.6.1.4.1.25506.2.196.3.0.8 "Status Events" Normal
FORMAT The local virtual machine resources are the same as those on vnf. $*
SDESC
The local virtual machine resources are the same as those on vnf.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmStatusOnVnfm
     Syntax="INTEGER"
       1: building
       2: active
       3: error
       4: unknown
     Descr="The status of the virtual machine on VNFM(virtualized network function managers)."
  4: hh3cVmInconsistFaultReason
     Syntax="INTEGER"
       1: exisitOnLocal
       2: existOnVnfm
     Descr="Reasons for VM inconsistency."
EDESC
#
#
#
EVENT hh3cVmAcceptInconsistVm .1.3.6.1.4.1.25506.2.196.3.0.9 "Status Events" Normal
FORMAT Unconfigured VM claimed on vbras-cp. $*
SDESC
Unconfigured VM claimed on vbras-cp.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmReset .1.3.6.1.4.1.25506.2.196.3.0.10 "Status Events" Normal
FORMAT VM restarts via VNFM. $*
SDESC
VM restarts via VNFM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
  4: hh3cVmResetResult
     Syntax="OCTETSTR"
     Descr="Reasons for the failure to restart the virtual machine."
EDESC
#
#
#
EVENT hh3cVmUnregisterLongtime .1.3.6.1.4.1.25506.2.196.3.0.11 "Status Events" Normal
FORMAT VNFM has been allocated but will not be online for a long time. $*
SDESC
VNFM has been allocated but will not be online for a long time.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmName
     Syntax="OCTETSTR"
     Descr="VM name."
  3: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  4: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmIsolate .1.3.6.1.4.1.25506.2.196.3.0.12 "Status Events" Normal
FORMAT During the shrinking operation, it does not communicate with VNFM, VNFM isolates VM. $*
SDESC
During the shrinking operation, it does not communicate with VNFM, VNFM isolates VM.
Variables:
  1: hh3cVmSlot
     Syntax="INTEGER32"
     Descr="VM slot."
  2: hh3cVmType
     Syntax="INTEGER"
       1: other
       2: ctrlvm
       3: brasvm
       4: fwdvm
       5: mpuvm
       6: lpuvm
     Descr="VM type."
  3: hh3cVmGroup
     Syntax="INTEGER32"
     Descr="VM belong to group.
        the Default is a invalid value 65535."
EDESC
#
#
#
EVENT hh3cVmChannelHealthNormal .1.3.6.1.4.1.25506.2.196.4.0.1 "Status Events" Normal
FORMAT The health check result of the control channel or data channel on the specified VM is normal. $*
SDESC
The health check result of the control channel or data channel on the specified VM is normal.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelHealthMinor .1.3.6.1.4.1.25506.2.196.4.0.2 "Status Events" Normal
FORMAT The control channel or data channel on the specified VM is in the minor sub-health state. $*
SDESC
The control channel or data channel on the specified VM is in the minor sub-health state.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelHealthSevere .1.3.6.1.4.1.25506.2.196.4.0.3 "Status Events" Normal
FORMAT The control channel or data channel on the specified VM is in the severe sub-health state. $*
SDESC
The control channel or data channel on the specified VM is in the severe sub-health state.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmPeerSlot
     Syntax="UNSIGNED32"
     Descr="VM opposite slot number."
  3: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  4: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
EDESC
#
#
#
EVENT hh3cVmChannelLinkSwitch .1.3.6.1.4.1.25506.2.196.4.0.4 "Status Events" Normal
FORMAT Link switching event. $*
SDESC
Link switching event.
Variables:
  1: hh3cVmSelfSlot
     Syntax="UNSIGNED32"
     Descr="VM local slot number."
  2: hh3cVmChannelType
     Syntax="INTEGER"
       1: controlchannel
       2: datachannel
     Descr="VM channel type."
  3: hh3cVmChannelVlan
     Syntax="UNSIGNED32"
     Descr="VM channel vlan."
  4: hh3cVmChannelLinkMacAddress
     Syntax="OCTETSTR"
     Descr="The mac address of the fault port."
EDESC
#
#
#
#
MIB: HH3C-VOICE-CALL-ACTIVE-MIB (file:./hh3c-voice-call-active.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-CALL-HISTORY-MIB (file:./hh3c-voice-call-history.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-DIAL-CONTROL-MIB (file:./hh3c-voice-dial-control.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-IF-MIB (file:./hh3c-voice-if.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VOICE-VLAN-MIB (file:./hh3c-voice-vlan.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VPN-PEER-MIB (file:./hh3c-vpn-peer.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VRRP-EXT-MIB (file:./hh3c-vrrp-ext.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVrrpExtStateChange .1.3.6.1.4.1.25506.2.24.2.0.1 "Status Events" Normal
FORMAT This trap indicates that the sending agent VRRP state has changed. $*
SDESC
This trap indicates that the sending agent VRRP state has changed.
Variables:
  1: hh3cVrrpExtVrId
     Syntax="INTEGER32"
     Descr="This object contains the Virtual Router Identifier (VRID)."
  2: hh3cVrrpExtIpAddressType
     Syntax="INTEGER"
       1: ipv4
       2: ipv6
     Descr="IP address type of VRRP.
         ipv4: IPv4 type.
         ipv6: IPv6 type."
  3: hh3cVrrpExtIfIndex
     Syntax="INTEGER32"
     Descr="This value is the ifIndex that identifies the interface configured for
         the virtual router."
  4: hh3cVrrpExtIfDescr
     Syntax="OCTETSTR"
     Descr="This value is the interface decription that identifies the interface
        configured for the virtual router."
  5: hh3cVrrpExtOldState
     Syntax="INTEGER"
       1: initialize
       2: backup
       3: master
     Descr="The current state of the virtual router. This object has
        three defined values:

        - `initialize', which indicates that the
         virtual router is waiting for a startup event.

        - `backup', which indicates the virtual router is
         monitoring the availability of the master router.

        - `master', which indicates that the virtual router
         is forwarding packets for IP addresses that are
         associated with this router."
  6: hh3cVrrpExtNewState
     Syntax="INTEGER"
       1: initialize
       2: backup
       3: master
     Descr="The current state of the virtual router. This object has
        three defined values:

        - `initialize', which indicates that the
         virtual router is waiting for a startup event.

        - `backup', which indicates the virtual router is
         monitoring the availability of the master router.

        - `master', which indicates that the virtual router
         is forwarding packets for IP addresses that are
         associated with this router."
  7: hh3cVrrpExtStateChangeReason
     Syntax="INTEGER32"
     Descr="Reason why VRRP state changed,
         0: other reason.
         1: Timer expired.
         2: Adding virtual MAC address failed.
         3: Interface event received.
         4: IP address deleted.
         5: The status of the tracked object changed.
         6: VRRP packet received.
         7: Current device has changed to IP address owner.
         8: Insufficient hardware resources.
         9: Master-down-timer expired.
         10: Zero priority packet received.
         11: Preempt.
         12: Master group drove."
EDESC
#
#
#
#
MIB: HH3C-VSAN-MIB (file:./hh3c-vsan.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cVsanDmDomainIdNotAssignedNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.1 "Status Events" Normal
FORMAT This event will be triggered if a Domain ID is not $*
SDESC
This event will be triggered if a Domain ID is not
assigned or configured, then the E_ports may be isolated
in the VSAN. The conditions are listed as follows:
1. If the switch has enabled the fabric configuration and
a request for a configured static Domain ID is rejected
or no other Domain ID is assigned, the E_ports will be
isolated in the particular VSAN.
2. If the switch does not enable the fabric configuration
and a Domain ID is not configured, all of its E_ports
will be isolated in the particular VSAN.
The notification contains the WWN of the Switch and
the index of the VSAN in which the event occurred.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmNewPrincipalSwitchNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.2 "Status Events" Normal
FORMAT If a switch becomes the new Principal Switch in a VSAN, this $*
SDESC
If a switch becomes the new Principal Switch in a VSAN, this
notification is sent immediately after the election.
The notification contains the WWN of the new Principal Switch
and the index of the VSAN in which the transition occurred.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmFabricChangeNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.3 "Status Events" Normal
FORMAT This event will be triggered if a switch sends or receives a $*
SDESC
This event will be triggered if a switch sends or receives a
Build Fabric (BF) or a Reconfigure Fabric (RCF) message in a
VSAN.
The conditions a switch can receive or send a BF or a RCF are
listed as follows:
1. Two isolated fabrics in a VSAN merge into one fabric.  If
the Domain ID lists do not overlap, the sent or received
message is BF, other cases, it is RCF.
2. If an upstream principal link which connects to principal
switch and other switches become disconnected, the sent or
received message is BF.
3. A BF or RCF process is triggered manually by configuration.
The notification contains the index of the VSAN in which a BF
or a RCF was sent or received.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
EDESC
#
#
#
EVENT hh3cVsanDmDomainIdChangeNotify .1.3.6.1.4.1.25506.2.127.1.1.3.0.4 "Status Events" Normal
FORMAT This event will be triggered if the Domain ID of the local switch $*
SDESC
This event will be triggered if the Domain ID of the local switch
changed in a VSAN.
Variables:
  1: hh3cVsanIndex
     Syntax="UNSIGNED32"
     Descr="The identifier of the VSAN."
  2: hh3cVsanDmDomainIdAssigned
     Syntax="INTEGER32"
     Descr="Indicates the Domain ID of the local switch in this
         VSAN or zero if no Domain ID has been assigned."
  3: hh3cVsanDmLocalSwitchWWN
     Syntax="OCTETSTR"
     Descr="Indicates the WWN of the local switch in this VSAN."
EDESC
#
#
#
#
MIB: HH3C-VSI-MIB (file:./hh3c-vsi.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-VXLAN-MIB (file:./hh3c-vxlan.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WAPI-MIB (file:./hh3c-wapi.mib) converted on Sat Apr  2 10:28:16 2022 using snmpttconvertmib v1.4.2
#
#
#
EVENT hh3cwapiUserwithInvalidCertificate .1.3.6.1.4.1.25506.2.77.4.0.1 "Status Events" Normal
FORMAT This trap is sent when a user intrudes upon network with invalid $*
SDESC
This trap is sent when a user intrudes upon network with invalid
certificate.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiStationReplayAttack .1.3.6.1.4.1.25506.2.77.4.0.2 "Status Events" Normal
FORMAT This trap is sent when an attacker records and replays network $*
SDESC
This trap is sent when an attacker records and replays network
transactions.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiTamperAttack .1.3.6.1.4.1.25506.2.77.4.0.3 "Status Events" Normal
FORMAT This trap is sent when an attacker monitors network traffic and $*
SDESC
This trap is sent when an attacker monitors network traffic and
maliciously changes data in transit(for example, an attacker may
modify the contents of a WAI message).
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiLowSafeLevelAttack .1.3.6.1.4.1.25506.2.77.4.0.4 "Status Events" Normal
FORMAT This trap is sent when a station associates AP(Access Point), $*
SDESC
This trap is sent when a station associates AP(Access Point),
creates packet of Unicast Key Negotiation Response with wrong
WIE(WAPI Information Element) of ASUE(Authentication Supplicant
Entity).
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
EVENT hh3cwapiAddressRedirectionAttack .1.3.6.1.4.1.25506.2.77.4.0.5 "Status Events" Normal
FORMAT This trap is sent when an attacker maliciously changes destination $*
SDESC
This trap is sent when an attacker maliciously changes destination
MAC address of WPI(WLAN Privacy Infrastructure) frame.
Variables:
  1: ifIndex
     Syntax="INTEGER32"
     Descr="A unique value, greater than zero, for each interface.  It
            is recommended that values are assigned contiguously
            starting from 1.  The value for each interface sub-layer
            must remain constant at least from one re-initialization of
            the entity's network management system to the next re-
            initialization."
  2: ifDescr
     Syntax="OCTETSTR"
     Descr="A textual string containing information about the
            interface.  This string should include the name of the
            manufacturer, the product name and the version of the
            interface hardware/software."
  3: hh3cwapiTrapInfoMacAddr
     Syntax="OCTETSTR"
     Descr="The MAC address of the WAPI user."
  4: hh3cwapiTrapInfoAPId
     Syntax="INTEGER32"
     Descr="To uniquely identify each AP."
  5: hh3cwapiTrapInfoRadioId
     Syntax="INTEGER32"
     Descr="Represents each radio."
  6: hh3cwapiTrapInfoBSSId
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify BSS."
  7: hh3cwapiTrapInfoAPMacAddr
     Syntax="OCTETSTR"
     Descr="As MAC Address format, it is to identify AP"
EDESC
#
#
#
#
MIB: HH3C-WEB-AUTHENTICATION-MIB (file:./hh3c-web-authentication.mib) converted on Sat Apr  2 10:28:17 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WIPS-MIB (file:./hh3c-wips.mib) converted on Sat Apr  2 10:28:17 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WLAN-FLEXAPP-CFG-MIB (file:./hh3c-wlan-flexapp-cfg.mib) converted on Sat Apr  2 10:28:17 2022 using snmpttconvertmib v1.4.2
#
#
#
#
MIB: HH3C-WLANMT-MIB (file:./hh3c-wlanmt.mib) converted on Sat Apr  2 10:28:17 2022 using snmpttconvertmib v1.4.2
